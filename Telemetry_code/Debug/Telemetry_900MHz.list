
Telemetry_900MHz.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000140ac  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004ac  08014240  08014240  00024240  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080146ec  080146ec  000302e8  2**0
                  CONTENTS
  4 .ARM          00000008  080146ec  080146ec  000246ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080146f4  080146f4  000302e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080146f4  080146f4  000246f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080146f8  080146f8  000246f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000002e8  20000000  080146fc  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000302e8  2**0
                  CONTENTS
 10 .bss          000026b4  200002e8  200002e8  000302e8  2**3
                  ALLOC
 11 ._user_heap_stack 00000604  2000299c  2000299c  000302e8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000302e8  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00030318  2**0
                  CONTENTS, READONLY
 14 .debug_info   0001f1b6  00000000  00000000  0003035b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 000046ba  00000000  00000000  0004f511  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001410  00000000  00000000  00053bd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000f37  00000000  00000000  00054fe0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00025ab8  00000000  00000000  00055f17  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0001c422  00000000  00000000  0007b9cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000d1e7d  00000000  00000000  00097df1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000067bc  00000000  00000000  00169c70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006f  00000000  00000000  0017042c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200002e8 	.word	0x200002e8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08014224 	.word	0x08014224

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200002ec 	.word	0x200002ec
 80001cc:	08014224 	.word	0x08014224

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b9a6 	b.w	8000fec <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f83c 	bl	8000d24 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_d2lz>:
 8000cb8:	b538      	push	{r3, r4, r5, lr}
 8000cba:	2200      	movs	r2, #0
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	f7ff ff0b 	bl	8000adc <__aeabi_dcmplt>
 8000cc6:	b928      	cbnz	r0, 8000cd4 <__aeabi_d2lz+0x1c>
 8000cc8:	4620      	mov	r0, r4
 8000cca:	4629      	mov	r1, r5
 8000ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cd0:	f000 b80a 	b.w	8000ce8 <__aeabi_d2ulz>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cda:	f000 f805 	bl	8000ce8 <__aeabi_d2ulz>
 8000cde:	4240      	negs	r0, r0
 8000ce0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop

08000ce8 <__aeabi_d2ulz>:
 8000ce8:	b5d0      	push	{r4, r6, r7, lr}
 8000cea:	4b0c      	ldr	r3, [pc, #48]	; (8000d1c <__aeabi_d2ulz+0x34>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	4606      	mov	r6, r0
 8000cf0:	460f      	mov	r7, r1
 8000cf2:	f7ff fc81 	bl	80005f8 <__aeabi_dmul>
 8000cf6:	f7ff ff57 	bl	8000ba8 <__aeabi_d2uiz>
 8000cfa:	4604      	mov	r4, r0
 8000cfc:	f7ff fc02 	bl	8000504 <__aeabi_ui2d>
 8000d00:	4b07      	ldr	r3, [pc, #28]	; (8000d20 <__aeabi_d2ulz+0x38>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	f7ff fc78 	bl	80005f8 <__aeabi_dmul>
 8000d08:	4602      	mov	r2, r0
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	4639      	mov	r1, r7
 8000d10:	f7ff faba 	bl	8000288 <__aeabi_dsub>
 8000d14:	f7ff ff48 	bl	8000ba8 <__aeabi_d2uiz>
 8000d18:	4621      	mov	r1, r4
 8000d1a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d1c:	3df00000 	.word	0x3df00000
 8000d20:	41f00000 	.word	0x41f00000

08000d24 <__udivmoddi4>:
 8000d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d28:	9e08      	ldr	r6, [sp, #32]
 8000d2a:	460d      	mov	r5, r1
 8000d2c:	4604      	mov	r4, r0
 8000d2e:	460f      	mov	r7, r1
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	d14a      	bne.n	8000dca <__udivmoddi4+0xa6>
 8000d34:	428a      	cmp	r2, r1
 8000d36:	4694      	mov	ip, r2
 8000d38:	d965      	bls.n	8000e06 <__udivmoddi4+0xe2>
 8000d3a:	fab2 f382 	clz	r3, r2
 8000d3e:	b143      	cbz	r3, 8000d52 <__udivmoddi4+0x2e>
 8000d40:	fa02 fc03 	lsl.w	ip, r2, r3
 8000d44:	f1c3 0220 	rsb	r2, r3, #32
 8000d48:	409f      	lsls	r7, r3
 8000d4a:	fa20 f202 	lsr.w	r2, r0, r2
 8000d4e:	4317      	orrs	r7, r2
 8000d50:	409c      	lsls	r4, r3
 8000d52:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000d56:	fa1f f58c 	uxth.w	r5, ip
 8000d5a:	fbb7 f1fe 	udiv	r1, r7, lr
 8000d5e:	0c22      	lsrs	r2, r4, #16
 8000d60:	fb0e 7711 	mls	r7, lr, r1, r7
 8000d64:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000d68:	fb01 f005 	mul.w	r0, r1, r5
 8000d6c:	4290      	cmp	r0, r2
 8000d6e:	d90a      	bls.n	8000d86 <__udivmoddi4+0x62>
 8000d70:	eb1c 0202 	adds.w	r2, ip, r2
 8000d74:	f101 37ff 	add.w	r7, r1, #4294967295
 8000d78:	f080 811c 	bcs.w	8000fb4 <__udivmoddi4+0x290>
 8000d7c:	4290      	cmp	r0, r2
 8000d7e:	f240 8119 	bls.w	8000fb4 <__udivmoddi4+0x290>
 8000d82:	3902      	subs	r1, #2
 8000d84:	4462      	add	r2, ip
 8000d86:	1a12      	subs	r2, r2, r0
 8000d88:	b2a4      	uxth	r4, r4
 8000d8a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d8e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d92:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d96:	fb00 f505 	mul.w	r5, r0, r5
 8000d9a:	42a5      	cmp	r5, r4
 8000d9c:	d90a      	bls.n	8000db4 <__udivmoddi4+0x90>
 8000d9e:	eb1c 0404 	adds.w	r4, ip, r4
 8000da2:	f100 32ff 	add.w	r2, r0, #4294967295
 8000da6:	f080 8107 	bcs.w	8000fb8 <__udivmoddi4+0x294>
 8000daa:	42a5      	cmp	r5, r4
 8000dac:	f240 8104 	bls.w	8000fb8 <__udivmoddi4+0x294>
 8000db0:	4464      	add	r4, ip
 8000db2:	3802      	subs	r0, #2
 8000db4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000db8:	1b64      	subs	r4, r4, r5
 8000dba:	2100      	movs	r1, #0
 8000dbc:	b11e      	cbz	r6, 8000dc6 <__udivmoddi4+0xa2>
 8000dbe:	40dc      	lsrs	r4, r3
 8000dc0:	2300      	movs	r3, #0
 8000dc2:	e9c6 4300 	strd	r4, r3, [r6]
 8000dc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dca:	428b      	cmp	r3, r1
 8000dcc:	d908      	bls.n	8000de0 <__udivmoddi4+0xbc>
 8000dce:	2e00      	cmp	r6, #0
 8000dd0:	f000 80ed 	beq.w	8000fae <__udivmoddi4+0x28a>
 8000dd4:	2100      	movs	r1, #0
 8000dd6:	e9c6 0500 	strd	r0, r5, [r6]
 8000dda:	4608      	mov	r0, r1
 8000ddc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000de0:	fab3 f183 	clz	r1, r3
 8000de4:	2900      	cmp	r1, #0
 8000de6:	d149      	bne.n	8000e7c <__udivmoddi4+0x158>
 8000de8:	42ab      	cmp	r3, r5
 8000dea:	d302      	bcc.n	8000df2 <__udivmoddi4+0xce>
 8000dec:	4282      	cmp	r2, r0
 8000dee:	f200 80f8 	bhi.w	8000fe2 <__udivmoddi4+0x2be>
 8000df2:	1a84      	subs	r4, r0, r2
 8000df4:	eb65 0203 	sbc.w	r2, r5, r3
 8000df8:	2001      	movs	r0, #1
 8000dfa:	4617      	mov	r7, r2
 8000dfc:	2e00      	cmp	r6, #0
 8000dfe:	d0e2      	beq.n	8000dc6 <__udivmoddi4+0xa2>
 8000e00:	e9c6 4700 	strd	r4, r7, [r6]
 8000e04:	e7df      	b.n	8000dc6 <__udivmoddi4+0xa2>
 8000e06:	b902      	cbnz	r2, 8000e0a <__udivmoddi4+0xe6>
 8000e08:	deff      	udf	#255	; 0xff
 8000e0a:	fab2 f382 	clz	r3, r2
 8000e0e:	2b00      	cmp	r3, #0
 8000e10:	f040 8090 	bne.w	8000f34 <__udivmoddi4+0x210>
 8000e14:	1a8a      	subs	r2, r1, r2
 8000e16:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e1a:	fa1f fe8c 	uxth.w	lr, ip
 8000e1e:	2101      	movs	r1, #1
 8000e20:	fbb2 f5f7 	udiv	r5, r2, r7
 8000e24:	fb07 2015 	mls	r0, r7, r5, r2
 8000e28:	0c22      	lsrs	r2, r4, #16
 8000e2a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000e2e:	fb0e f005 	mul.w	r0, lr, r5
 8000e32:	4290      	cmp	r0, r2
 8000e34:	d908      	bls.n	8000e48 <__udivmoddi4+0x124>
 8000e36:	eb1c 0202 	adds.w	r2, ip, r2
 8000e3a:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0x122>
 8000e40:	4290      	cmp	r0, r2
 8000e42:	f200 80cb 	bhi.w	8000fdc <__udivmoddi4+0x2b8>
 8000e46:	4645      	mov	r5, r8
 8000e48:	1a12      	subs	r2, r2, r0
 8000e4a:	b2a4      	uxth	r4, r4
 8000e4c:	fbb2 f0f7 	udiv	r0, r2, r7
 8000e50:	fb07 2210 	mls	r2, r7, r0, r2
 8000e54:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000e58:	fb0e fe00 	mul.w	lr, lr, r0
 8000e5c:	45a6      	cmp	lr, r4
 8000e5e:	d908      	bls.n	8000e72 <__udivmoddi4+0x14e>
 8000e60:	eb1c 0404 	adds.w	r4, ip, r4
 8000e64:	f100 32ff 	add.w	r2, r0, #4294967295
 8000e68:	d202      	bcs.n	8000e70 <__udivmoddi4+0x14c>
 8000e6a:	45a6      	cmp	lr, r4
 8000e6c:	f200 80bb 	bhi.w	8000fe6 <__udivmoddi4+0x2c2>
 8000e70:	4610      	mov	r0, r2
 8000e72:	eba4 040e 	sub.w	r4, r4, lr
 8000e76:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000e7a:	e79f      	b.n	8000dbc <__udivmoddi4+0x98>
 8000e7c:	f1c1 0720 	rsb	r7, r1, #32
 8000e80:	408b      	lsls	r3, r1
 8000e82:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e86:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e8a:	fa05 f401 	lsl.w	r4, r5, r1
 8000e8e:	fa20 f307 	lsr.w	r3, r0, r7
 8000e92:	40fd      	lsrs	r5, r7
 8000e94:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e98:	4323      	orrs	r3, r4
 8000e9a:	fbb5 f8f9 	udiv	r8, r5, r9
 8000e9e:	fa1f fe8c 	uxth.w	lr, ip
 8000ea2:	fb09 5518 	mls	r5, r9, r8, r5
 8000ea6:	0c1c      	lsrs	r4, r3, #16
 8000ea8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000eac:	fb08 f50e 	mul.w	r5, r8, lr
 8000eb0:	42a5      	cmp	r5, r4
 8000eb2:	fa02 f201 	lsl.w	r2, r2, r1
 8000eb6:	fa00 f001 	lsl.w	r0, r0, r1
 8000eba:	d90b      	bls.n	8000ed4 <__udivmoddi4+0x1b0>
 8000ebc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ec0:	f108 3aff 	add.w	sl, r8, #4294967295
 8000ec4:	f080 8088 	bcs.w	8000fd8 <__udivmoddi4+0x2b4>
 8000ec8:	42a5      	cmp	r5, r4
 8000eca:	f240 8085 	bls.w	8000fd8 <__udivmoddi4+0x2b4>
 8000ece:	f1a8 0802 	sub.w	r8, r8, #2
 8000ed2:	4464      	add	r4, ip
 8000ed4:	1b64      	subs	r4, r4, r5
 8000ed6:	b29d      	uxth	r5, r3
 8000ed8:	fbb4 f3f9 	udiv	r3, r4, r9
 8000edc:	fb09 4413 	mls	r4, r9, r3, r4
 8000ee0:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000ee4:	fb03 fe0e 	mul.w	lr, r3, lr
 8000ee8:	45a6      	cmp	lr, r4
 8000eea:	d908      	bls.n	8000efe <__udivmoddi4+0x1da>
 8000eec:	eb1c 0404 	adds.w	r4, ip, r4
 8000ef0:	f103 35ff 	add.w	r5, r3, #4294967295
 8000ef4:	d26c      	bcs.n	8000fd0 <__udivmoddi4+0x2ac>
 8000ef6:	45a6      	cmp	lr, r4
 8000ef8:	d96a      	bls.n	8000fd0 <__udivmoddi4+0x2ac>
 8000efa:	3b02      	subs	r3, #2
 8000efc:	4464      	add	r4, ip
 8000efe:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000f02:	fba3 9502 	umull	r9, r5, r3, r2
 8000f06:	eba4 040e 	sub.w	r4, r4, lr
 8000f0a:	42ac      	cmp	r4, r5
 8000f0c:	46c8      	mov	r8, r9
 8000f0e:	46ae      	mov	lr, r5
 8000f10:	d356      	bcc.n	8000fc0 <__udivmoddi4+0x29c>
 8000f12:	d053      	beq.n	8000fbc <__udivmoddi4+0x298>
 8000f14:	b156      	cbz	r6, 8000f2c <__udivmoddi4+0x208>
 8000f16:	ebb0 0208 	subs.w	r2, r0, r8
 8000f1a:	eb64 040e 	sbc.w	r4, r4, lr
 8000f1e:	fa04 f707 	lsl.w	r7, r4, r7
 8000f22:	40ca      	lsrs	r2, r1
 8000f24:	40cc      	lsrs	r4, r1
 8000f26:	4317      	orrs	r7, r2
 8000f28:	e9c6 7400 	strd	r7, r4, [r6]
 8000f2c:	4618      	mov	r0, r3
 8000f2e:	2100      	movs	r1, #0
 8000f30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f34:	f1c3 0120 	rsb	r1, r3, #32
 8000f38:	fa02 fc03 	lsl.w	ip, r2, r3
 8000f3c:	fa20 f201 	lsr.w	r2, r0, r1
 8000f40:	fa25 f101 	lsr.w	r1, r5, r1
 8000f44:	409d      	lsls	r5, r3
 8000f46:	432a      	orrs	r2, r5
 8000f48:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f4c:	fa1f fe8c 	uxth.w	lr, ip
 8000f50:	fbb1 f0f7 	udiv	r0, r1, r7
 8000f54:	fb07 1510 	mls	r5, r7, r0, r1
 8000f58:	0c11      	lsrs	r1, r2, #16
 8000f5a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000f5e:	fb00 f50e 	mul.w	r5, r0, lr
 8000f62:	428d      	cmp	r5, r1
 8000f64:	fa04 f403 	lsl.w	r4, r4, r3
 8000f68:	d908      	bls.n	8000f7c <__udivmoddi4+0x258>
 8000f6a:	eb1c 0101 	adds.w	r1, ip, r1
 8000f6e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f72:	d22f      	bcs.n	8000fd4 <__udivmoddi4+0x2b0>
 8000f74:	428d      	cmp	r5, r1
 8000f76:	d92d      	bls.n	8000fd4 <__udivmoddi4+0x2b0>
 8000f78:	3802      	subs	r0, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	1b49      	subs	r1, r1, r5
 8000f7e:	b292      	uxth	r2, r2
 8000f80:	fbb1 f5f7 	udiv	r5, r1, r7
 8000f84:	fb07 1115 	mls	r1, r7, r5, r1
 8000f88:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f8c:	fb05 f10e 	mul.w	r1, r5, lr
 8000f90:	4291      	cmp	r1, r2
 8000f92:	d908      	bls.n	8000fa6 <__udivmoddi4+0x282>
 8000f94:	eb1c 0202 	adds.w	r2, ip, r2
 8000f98:	f105 38ff 	add.w	r8, r5, #4294967295
 8000f9c:	d216      	bcs.n	8000fcc <__udivmoddi4+0x2a8>
 8000f9e:	4291      	cmp	r1, r2
 8000fa0:	d914      	bls.n	8000fcc <__udivmoddi4+0x2a8>
 8000fa2:	3d02      	subs	r5, #2
 8000fa4:	4462      	add	r2, ip
 8000fa6:	1a52      	subs	r2, r2, r1
 8000fa8:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000fac:	e738      	b.n	8000e20 <__udivmoddi4+0xfc>
 8000fae:	4631      	mov	r1, r6
 8000fb0:	4630      	mov	r0, r6
 8000fb2:	e708      	b.n	8000dc6 <__udivmoddi4+0xa2>
 8000fb4:	4639      	mov	r1, r7
 8000fb6:	e6e6      	b.n	8000d86 <__udivmoddi4+0x62>
 8000fb8:	4610      	mov	r0, r2
 8000fba:	e6fb      	b.n	8000db4 <__udivmoddi4+0x90>
 8000fbc:	4548      	cmp	r0, r9
 8000fbe:	d2a9      	bcs.n	8000f14 <__udivmoddi4+0x1f0>
 8000fc0:	ebb9 0802 	subs.w	r8, r9, r2
 8000fc4:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000fc8:	3b01      	subs	r3, #1
 8000fca:	e7a3      	b.n	8000f14 <__udivmoddi4+0x1f0>
 8000fcc:	4645      	mov	r5, r8
 8000fce:	e7ea      	b.n	8000fa6 <__udivmoddi4+0x282>
 8000fd0:	462b      	mov	r3, r5
 8000fd2:	e794      	b.n	8000efe <__udivmoddi4+0x1da>
 8000fd4:	4640      	mov	r0, r8
 8000fd6:	e7d1      	b.n	8000f7c <__udivmoddi4+0x258>
 8000fd8:	46d0      	mov	r8, sl
 8000fda:	e77b      	b.n	8000ed4 <__udivmoddi4+0x1b0>
 8000fdc:	3d02      	subs	r5, #2
 8000fde:	4462      	add	r2, ip
 8000fe0:	e732      	b.n	8000e48 <__udivmoddi4+0x124>
 8000fe2:	4608      	mov	r0, r1
 8000fe4:	e70a      	b.n	8000dfc <__udivmoddi4+0xd8>
 8000fe6:	4464      	add	r4, ip
 8000fe8:	3802      	subs	r0, #2
 8000fea:	e742      	b.n	8000e72 <__udivmoddi4+0x14e>

08000fec <__aeabi_idiv0>:
 8000fec:	4770      	bx	lr
 8000fee:	bf00      	nop

08000ff0 <SX1262SetStandby>:
/*****************************************************************************
*  @Description	  Sets the Radio chip to Standby Mode. This is a mode where
*                 it awaits for further commands
******************************************************************************/
void SX1262SetStandby(MCU* mcu, Radio* radio, StandbyMode_t standby_mode)
{
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	b086      	sub	sp, #24
 8000ff4:	af02      	add	r7, sp, #8
 8000ff6:	60f8      	str	r0, [r7, #12]
 8000ff8:	60b9      	str	r1, [r7, #8]
 8000ffa:	4613      	mov	r3, r2
 8000ffc:	71fb      	strb	r3, [r7, #7]
	SX1262WriteCommand(mcu, radio, SET_STANDBY, &standby_mode, 4);
 8000ffe:	1dfb      	adds	r3, r7, #7
 8001000:	2204      	movs	r2, #4
 8001002:	9200      	str	r2, [sp, #0]
 8001004:	2280      	movs	r2, #128	; 0x80
 8001006:	68b9      	ldr	r1, [r7, #8]
 8001008:	68f8      	ldr	r0, [r7, #12]
 800100a:	f001 fbc1 	bl	8002790 <SX1262WriteCommand>

#if (FUNCTION == TPMS_RELEASE)
	radio->opMode = standby_mode;
#else
	SX1262GetStatus(mcu, radio);
 800100e:	68b9      	ldr	r1, [r7, #8]
 8001010:	68f8      	ldr	r0, [r7, #12]
 8001012:	f001 f82b 	bl	800206c <SX1262GetStatus>
#endif
}
 8001016:	bf00      	nop
 8001018:	3710      	adds	r7, #16
 800101a:	46bd      	mov	sp, r7
 800101c:	bd80      	pop	{r7, pc}

0800101e <SX1262SetPacketType>:

/*****************************************************************************
*  @Description	  Sets the protocol used for the wireless communication
******************************************************************************/
void SX1262SetPacketType(MCU *mcu, Radio* radio, PacketType_t packet_type)
{
 800101e:	b580      	push	{r7, lr}
 8001020:	b086      	sub	sp, #24
 8001022:	af02      	add	r7, sp, #8
 8001024:	60f8      	str	r0, [r7, #12]
 8001026:	60b9      	str	r1, [r7, #8]
 8001028:	4613      	mov	r3, r2
 800102a:	71fb      	strb	r3, [r7, #7]
	SX1262WriteCommand(mcu, radio, SET_PACKET_TYPE, &packet_type, 1);
 800102c:	1dfb      	adds	r3, r7, #7
 800102e:	2201      	movs	r2, #1
 8001030:	9200      	str	r2, [sp, #0]
 8001032:	228a      	movs	r2, #138	; 0x8a
 8001034:	68b9      	ldr	r1, [r7, #8]
 8001036:	68f8      	ldr	r0, [r7, #12]
 8001038:	f001 fbaa 	bl	8002790 <SX1262WriteCommand>
}
 800103c:	bf00      	nop
 800103e:	3710      	adds	r7, #16
 8001040:	46bd      	mov	sp, r7
 8001042:	bd80      	pop	{r7, pc}
 8001044:	0000      	movs	r0, r0
	...

08001048 <SX1262SetRfFrequency>:

/*****************************************************************************
*  @Description	  Sets the wireless communication frequency (430 - 928 MHz)
******************************************************************************/
void SX1262SetRfFrequency(MCU *mcu, Radio* radio, uint32_t rf_frequency)
{
 8001048:	b580      	push	{r7, lr}
 800104a:	b088      	sub	sp, #32
 800104c:	af02      	add	r7, sp, #8
 800104e:	60f8      	str	r0, [r7, #12]
 8001050:	60b9      	str	r1, [r7, #8]
 8001052:	607a      	str	r2, [r7, #4]
	uint8_t tx_msg[4];
	uint32_t rf_freq;


	SX1262CalibrateImage(mcu, radio, rf_frequency);
 8001054:	687a      	ldr	r2, [r7, #4]
 8001056:	68b9      	ldr	r1, [r7, #8]
 8001058:	68f8      	ldr	r0, [r7, #12]
 800105a:	f000 fe37 	bl	8001ccc <SX1262CalibrateImage>

	rf_freq = (uint32_t)((double)rf_frequency * FREQ_DIV / XTAL_FREQ); // can change with shifting <<25
 800105e:	6878      	ldr	r0, [r7, #4]
 8001060:	f7ff fa50 	bl	8000504 <__aeabi_ui2d>
 8001064:	f04f 0200 	mov.w	r2, #0
 8001068:	f04f 4383 	mov.w	r3, #1098907648	; 0x41800000
 800106c:	f7ff fac4 	bl	80005f8 <__aeabi_dmul>
 8001070:	4602      	mov	r2, r0
 8001072:	460b      	mov	r3, r1
 8001074:	4610      	mov	r0, r2
 8001076:	4619      	mov	r1, r3
 8001078:	a317      	add	r3, pc, #92	; (adr r3, 80010d8 <SX1262SetRfFrequency+0x90>)
 800107a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800107e:	f7ff fbe5 	bl	800084c <__aeabi_ddiv>
 8001082:	4602      	mov	r2, r0
 8001084:	460b      	mov	r3, r1
 8001086:	4610      	mov	r0, r2
 8001088:	4619      	mov	r1, r3
 800108a:	f7ff fd8d 	bl	8000ba8 <__aeabi_d2uiz>
 800108e:	4603      	mov	r3, r0
 8001090:	617b      	str	r3, [r7, #20]
	tx_msg[0] = rf_freq >> 24;
 8001092:	697b      	ldr	r3, [r7, #20]
 8001094:	0e1b      	lsrs	r3, r3, #24
 8001096:	b2db      	uxtb	r3, r3
 8001098:	743b      	strb	r3, [r7, #16]
	tx_msg[1] = rf_freq >> 16;
 800109a:	697b      	ldr	r3, [r7, #20]
 800109c:	0c1b      	lsrs	r3, r3, #16
 800109e:	b2db      	uxtb	r3, r3
 80010a0:	747b      	strb	r3, [r7, #17]
	tx_msg[2] = rf_freq >> 8;
 80010a2:	697b      	ldr	r3, [r7, #20]
 80010a4:	0a1b      	lsrs	r3, r3, #8
 80010a6:	b2db      	uxtb	r3, r3
 80010a8:	74bb      	strb	r3, [r7, #18]
	tx_msg[3] = rf_freq;
 80010aa:	697b      	ldr	r3, [r7, #20]
 80010ac:	b2db      	uxtb	r3, r3
 80010ae:	74fb      	strb	r3, [r7, #19]

	SX1262WriteCommand(mcu, radio, SET_RF_FREQUENCY, tx_msg, 4);
 80010b0:	f107 0310 	add.w	r3, r7, #16
 80010b4:	2204      	movs	r2, #4
 80010b6:	9200      	str	r2, [sp, #0]
 80010b8:	2286      	movs	r2, #134	; 0x86
 80010ba:	68b9      	ldr	r1, [r7, #8]
 80010bc:	68f8      	ldr	r0, [r7, #12]
 80010be:	f001 fb67 	bl	8002790 <SX1262WriteCommand>

	radio->rfFrequency = rf_frequency;
 80010c2:	68bb      	ldr	r3, [r7, #8]
 80010c4:	687a      	ldr	r2, [r7, #4]
 80010c6:	f8c3 23e4 	str.w	r2, [r3, #996]	; 0x3e4
}
 80010ca:	bf00      	nop
 80010cc:	3718      	adds	r7, #24
 80010ce:	46bd      	mov	sp, r7
 80010d0:	bd80      	pop	{r7, pc}
 80010d2:	bf00      	nop
 80010d4:	f3af 8000 	nop.w
 80010d8:	00000000 	.word	0x00000000
 80010dc:	417e8480 	.word	0x417e8480

080010e0 <SX1262SetPaConfig>:
 * +20 dBm				  0x03			  0x05			*
 * +17 dBm				  0x02			  0x03			*
 * +14 dBm				  0x02			  0x02			*
 */
void SX1262SetPaConfig(MCU* mcu, Radio* radio, int8_t power)
{
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b088      	sub	sp, #32
 80010e4:	af02      	add	r7, sp, #8
 80010e6:	60f8      	str	r0, [r7, #12]
 80010e8:	60b9      	str	r1, [r7, #8]
 80010ea:	4613      	mov	r3, r2
 80010ec:	71fb      	strb	r3, [r7, #7]

	uint8_t pa_duty_cycle;
	uint8_t hp_max;
	uint8_t tx_msg[4];

	if (power <= 14)
 80010ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010f2:	2b0e      	cmp	r3, #14
 80010f4:	dc04      	bgt.n	8001100 <SX1262SetPaConfig+0x20>
	{
		pa_duty_cycle = 0x02;
 80010f6:	2302      	movs	r3, #2
 80010f8:	75fb      	strb	r3, [r7, #23]
		hp_max = 0x02;
 80010fa:	2302      	movs	r3, #2
 80010fc:	75bb      	strb	r3, [r7, #22]
 80010fe:	e015      	b.n	800112c <SX1262SetPaConfig+0x4c>
	}
	else if (power <= 17)
 8001100:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001104:	2b11      	cmp	r3, #17
 8001106:	dc04      	bgt.n	8001112 <SX1262SetPaConfig+0x32>
	{
		pa_duty_cycle = 0x02;
 8001108:	2302      	movs	r3, #2
 800110a:	75fb      	strb	r3, [r7, #23]
		hp_max = 0x03;
 800110c:	2303      	movs	r3, #3
 800110e:	75bb      	strb	r3, [r7, #22]
 8001110:	e00c      	b.n	800112c <SX1262SetPaConfig+0x4c>
	}
	else if (power <= 20)
 8001112:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001116:	2b14      	cmp	r3, #20
 8001118:	dc04      	bgt.n	8001124 <SX1262SetPaConfig+0x44>
	{
		pa_duty_cycle = 0x03;
 800111a:	2303      	movs	r3, #3
 800111c:	75fb      	strb	r3, [r7, #23]
		hp_max = 0x05;
 800111e:	2305      	movs	r3, #5
 8001120:	75bb      	strb	r3, [r7, #22]
 8001122:	e003      	b.n	800112c <SX1262SetPaConfig+0x4c>
	}
	else
	{
		pa_duty_cycle = 0x04;
 8001124:	2304      	movs	r3, #4
 8001126:	75fb      	strb	r3, [r7, #23]
		hp_max = 0x07;
 8001128:	2307      	movs	r3, #7
 800112a:	75bb      	strb	r3, [r7, #22]
	}

	tx_msg[0] = pa_duty_cycle;
 800112c:	7dfb      	ldrb	r3, [r7, #23]
 800112e:	743b      	strb	r3, [r7, #16]
	tx_msg[1] = hp_max;
 8001130:	7dbb      	ldrb	r3, [r7, #22]
 8001132:	747b      	strb	r3, [r7, #17]
	tx_msg[2] = 0x00;
 8001134:	2300      	movs	r3, #0
 8001136:	74bb      	strb	r3, [r7, #18]
	tx_msg[3] = 0x01;
 8001138:	2301      	movs	r3, #1
 800113a:	74fb      	strb	r3, [r7, #19]
	SX1262WriteCommand(mcu, radio, SET_PA_CONFIG, tx_msg, 4);
 800113c:	f107 0310 	add.w	r3, r7, #16
 8001140:	2204      	movs	r2, #4
 8001142:	9200      	str	r2, [sp, #0]
 8001144:	2295      	movs	r2, #149	; 0x95
 8001146:	68b9      	ldr	r1, [r7, #8]
 8001148:	68f8      	ldr	r0, [r7, #12]
 800114a:	f001 fb21 	bl	8002790 <SX1262WriteCommand>

	radio->paDutyCycle = pa_duty_cycle;
 800114e:	68bb      	ldr	r3, [r7, #8]
 8001150:	7dfa      	ldrb	r2, [r7, #23]
 8001152:	f883 23e8 	strb.w	r2, [r3, #1000]	; 0x3e8
	radio->hpMax = hp_max;
 8001156:	68bb      	ldr	r3, [r7, #8]
 8001158:	7dba      	ldrb	r2, [r7, #22]
 800115a:	f883 23e9 	strb.w	r2, [r3, #1001]	; 0x3e9
}
 800115e:	bf00      	nop
 8001160:	3718      	adds	r7, #24
 8001162:	46bd      	mov	sp, r7
 8001164:	bd80      	pop	{r7, pc}

08001166 <SX1262SetTxParams>:

/******************************************************************************
*  @Description	  Sets the transmitted signal power in dBm and the PA ramp time
*******************************************************************************/
void SX1262SetTxParams(MCU* mcu, Radio* radio, int8_t power, RampTime_t ramp_time, bool workaround_on)
{
 8001166:	b580      	push	{r7, lr}
 8001168:	b088      	sub	sp, #32
 800116a:	af02      	add	r7, sp, #8
 800116c:	60f8      	str	r0, [r7, #12]
 800116e:	60b9      	str	r1, [r7, #8]
 8001170:	4611      	mov	r1, r2
 8001172:	461a      	mov	r2, r3
 8001174:	460b      	mov	r3, r1
 8001176:	71fb      	strb	r3, [r7, #7]
 8001178:	4613      	mov	r3, r2
 800117a:	71bb      	strb	r3, [r7, #6]
	 uint8_t tx_msg[2];
	 uint8_t reg_data[1];

	 if (workaround_on) {
 800117c:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001180:	2b00      	cmp	r3, #0
 8001182:	d01c      	beq.n	80011be <SX1262SetTxParams+0x58>
		 // WORKAROUND BEGIN - Protection of the chip against antenna mismatch - datasheet chapter 15.2
		 SX1262ReadRegister(mcu, radio, TX_CLAMP_CONFIG_REG, reg_data, 1);
 8001184:	f107 0310 	add.w	r3, r7, #16
 8001188:	2201      	movs	r2, #1
 800118a:	9200      	str	r2, [sp, #0]
 800118c:	f640 02d8 	movw	r2, #2264	; 0x8d8
 8001190:	68b9      	ldr	r1, [r7, #8]
 8001192:	68f8      	ldr	r0, [r7, #12]
 8001194:	f001 fd87 	bl	8002ca6 <SX1262ReadRegister>
		 reg_data[0] = reg_data[0] | 0x1E;
 8001198:	7c3b      	ldrb	r3, [r7, #16]
 800119a:	f043 031e 	orr.w	r3, r3, #30
 800119e:	b2db      	uxtb	r3, r3
 80011a0:	743b      	strb	r3, [r7, #16]
		 SX1262WriteRegister(mcu, radio, TX_CLAMP_CONFIG_REG, reg_data, 1);
 80011a2:	f107 0310 	add.w	r3, r7, #16
 80011a6:	2201      	movs	r2, #1
 80011a8:	9200      	str	r2, [sp, #0]
 80011aa:	f640 02d8 	movw	r2, #2264	; 0x8d8
 80011ae:	68b9      	ldr	r1, [r7, #8]
 80011b0:	68f8      	ldr	r0, [r7, #12]
 80011b2:	f001 fd09 	bl	8002bc8 <SX1262WriteRegister>
	 	 // WORKAROUND END
		 radio->workaround_on = true;
 80011b6:	68bb      	ldr	r3, [r7, #8]
 80011b8:	2201      	movs	r2, #1
 80011ba:	f883 23ec 	strb.w	r2, [r3, #1004]	; 0x3ec
	 }

	 if (power > 22)
 80011be:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011c2:	2b16      	cmp	r3, #22
 80011c4:	dd02      	ble.n	80011cc <SX1262SetTxParams+0x66>
		 power = 22;
 80011c6:	2316      	movs	r3, #22
 80011c8:	71fb      	strb	r3, [r7, #7]
 80011ca:	e006      	b.n	80011da <SX1262SetTxParams+0x74>
	 else if (power < -9)
 80011cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011d0:	f113 0f09 	cmn.w	r3, #9
 80011d4:	da01      	bge.n	80011da <SX1262SetTxParams+0x74>
		 power = -9;
 80011d6:	23f7      	movs	r3, #247	; 0xf7
 80011d8:	71fb      	strb	r3, [r7, #7]

	 tx_msg[0] = power;
 80011da:	79fb      	ldrb	r3, [r7, #7]
 80011dc:	753b      	strb	r3, [r7, #20]
	 tx_msg[1] = (uint8_t) ramp_time;
 80011de:	79bb      	ldrb	r3, [r7, #6]
 80011e0:	757b      	strb	r3, [r7, #21]
	 SX1262WriteCommand(mcu, radio, SET_TX_PARAMS, tx_msg, 2);
 80011e2:	f107 0314 	add.w	r3, r7, #20
 80011e6:	2202      	movs	r2, #2
 80011e8:	9200      	str	r2, [sp, #0]
 80011ea:	228e      	movs	r2, #142	; 0x8e
 80011ec:	68b9      	ldr	r1, [r7, #8]
 80011ee:	68f8      	ldr	r0, [r7, #12]
 80011f0:	f001 face 	bl	8002790 <SX1262WriteCommand>

	 radio->power = power;
 80011f4:	68bb      	ldr	r3, [r7, #8]
 80011f6:	79fa      	ldrb	r2, [r7, #7]
 80011f8:	f883 23ea 	strb.w	r2, [r3, #1002]	; 0x3ea
	 radio->rampTime = ramp_time;
 80011fc:	68bb      	ldr	r3, [r7, #8]
 80011fe:	79ba      	ldrb	r2, [r7, #6]
 8001200:	f883 23eb 	strb.w	r2, [r3, #1003]	; 0x3eb
}
 8001204:	bf00      	nop
 8001206:	3718      	adds	r7, #24
 8001208:	46bd      	mov	sp, r7
 800120a:	bd80      	pop	{r7, pc}

0800120c <SX1262SetBufferBaseAddress>:
/*****************************************************************************
*  @Description	  Sets the base address (offset from 0 to 255) for the
*                 transmitted / received payload. Data buffer has 256 Bytes
******************************************************************************/
void SX1262SetBufferBaseAddress(MCU* mcu, Radio* radio, uint8_t tx_base_address, uint8_t rx_base_address)
{
 800120c:	b580      	push	{r7, lr}
 800120e:	b088      	sub	sp, #32
 8001210:	af02      	add	r7, sp, #8
 8001212:	60f8      	str	r0, [r7, #12]
 8001214:	60b9      	str	r1, [r7, #8]
 8001216:	4611      	mov	r1, r2
 8001218:	461a      	mov	r2, r3
 800121a:	460b      	mov	r3, r1
 800121c:	71fb      	strb	r3, [r7, #7]
 800121e:	4613      	mov	r3, r2
 8001220:	71bb      	strb	r3, [r7, #6]
    uint8_t tx_msg[2];

    tx_msg[0] = tx_base_address;
 8001222:	79fb      	ldrb	r3, [r7, #7]
 8001224:	753b      	strb	r3, [r7, #20]
    tx_msg[1] = rx_base_address;
 8001226:	79bb      	ldrb	r3, [r7, #6]
 8001228:	757b      	strb	r3, [r7, #21]
    SX1262WriteCommand(mcu, radio, SET_BUFFER_BASE_ADDRESS, tx_msg, 2);
 800122a:	f107 0314 	add.w	r3, r7, #20
 800122e:	2202      	movs	r2, #2
 8001230:	9200      	str	r2, [sp, #0]
 8001232:	228f      	movs	r2, #143	; 0x8f
 8001234:	68b9      	ldr	r1, [r7, #8]
 8001236:	68f8      	ldr	r0, [r7, #12]
 8001238:	f001 faaa 	bl	8002790 <SX1262WriteCommand>

    radio->txBaseAddress = tx_base_address;
 800123c:	68bb      	ldr	r3, [r7, #8]
 800123e:	79fa      	ldrb	r2, [r7, #7]
 8001240:	f883 23ed 	strb.w	r2, [r3, #1005]	; 0x3ed
    radio->rxBaseAddress = rx_base_address;
 8001244:	68bb      	ldr	r3, [r7, #8]
 8001246:	79ba      	ldrb	r2, [r7, #6]
 8001248:	f883 23ee 	strb.w	r2, [r3, #1006]	; 0x3ee
}
 800124c:	bf00      	nop
 800124e:	3718      	adds	r7, #24
 8001250:	46bd      	mov	sp, r7
 8001252:	bd80      	pop	{r7, pc}

08001254 <SX1262SetPacketParams>:
/*****************************************************************************
*  @Description	  Sets the packet parameters for the protocol selected before.
*                 If the parameters correspond to a different packet
*                 type, it changes the packet type and then gives the params.
******************************************************************************/
void SX1262SetPacketParams(MCU *mcu, Radio *radio, PacketParams_t *packetParams) {
 8001254:	b580      	push	{r7, lr}
 8001256:	b08a      	sub	sp, #40	; 0x28
 8001258:	af02      	add	r7, sp, #8
 800125a:	60f8      	str	r0, [r7, #12]
 800125c:	60b9      	str	r1, [r7, #8]
 800125e:	607a      	str	r2, [r7, #4]
	uint8_t tx_msg_len;
	uint8_t crcType = 0;
 8001260:	2300      	movs	r3, #0
 8001262:	77bb      	strb	r3, [r7, #30]
	uint8_t tx_msg[9] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 8001264:	4a5c      	ldr	r2, [pc, #368]	; (80013d8 <SX1262SetPacketParams+0x184>)
 8001266:	f107 0314 	add.w	r3, r7, #20
 800126a:	ca07      	ldmia	r2, {r0, r1, r2}
 800126c:	c303      	stmia	r3!, {r0, r1}
 800126e:	701a      	strb	r2, [r3, #0]

	/* Check if required configuration corresponds to the stored packet type
	   If not, silently update radio packet type     */
	if (radio->packetType != packetParams->PacketType) {
 8001270:	68bb      	ldr	r3, [r7, #8]
 8001272:	f893 23e0 	ldrb.w	r2, [r3, #992]	; 0x3e0
 8001276:	687b      	ldr	r3, [r7, #4]
 8001278:	781b      	ldrb	r3, [r3, #0]
 800127a:	429a      	cmp	r2, r3
 800127c:	d00b      	beq.n	8001296 <SX1262SetPacketParams+0x42>
		SX1262SetPacketType(mcu, radio, packetParams->PacketType);
 800127e:	687b      	ldr	r3, [r7, #4]
 8001280:	781b      	ldrb	r3, [r3, #0]
 8001282:	461a      	mov	r2, r3
 8001284:	68b9      	ldr	r1, [r7, #8]
 8001286:	68f8      	ldr	r0, [r7, #12]
 8001288:	f7ff fec9 	bl	800101e <SX1262SetPacketType>
		radio->packetType = packetParams->PacketType;
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	781a      	ldrb	r2, [r3, #0]
 8001290:	68bb      	ldr	r3, [r7, #8]
 8001292:	f883 23e0 	strb.w	r2, [r3, #992]	; 0x3e0
	}
	switch (packetParams->PacketType)
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	781b      	ldrb	r3, [r3, #0]
 800129a:	2b03      	cmp	r3, #3
 800129c:	f000 808c 	beq.w	80013b8 <SX1262SetPacketParams+0x164>
 80012a0:	2b03      	cmp	r3, #3
 80012a2:	f300 808a 	bgt.w	80013ba <SX1262SetPacketParams+0x166>
 80012a6:	2b00      	cmp	r3, #0
 80012a8:	d002      	beq.n	80012b0 <SX1262SetPacketParams+0x5c>
 80012aa:	2b01      	cmp	r3, #1
 80012ac:	d052      	beq.n	8001354 <SX1262SetPacketParams+0x100>
 80012ae:	e084      	b.n	80013ba <SX1262SetPacketParams+0x166>
	{
	case PACKET_TYPE_GFSK:
		crcType = packetParams->Params.Gfsk.CrcType;
 80012b0:	687b      	ldr	r3, [r7, #4]
 80012b2:	7a5b      	ldrb	r3, [r3, #9]
 80012b4:	77bb      	strb	r3, [r7, #30]
		if (packetParams->Params.Gfsk.SyncWordLength > 0x40)
 80012b6:	687b      	ldr	r3, [r7, #4]
 80012b8:	795b      	ldrb	r3, [r3, #5]
 80012ba:	2b40      	cmp	r3, #64	; 0x40
 80012bc:	d902      	bls.n	80012c4 <SX1262SetPacketParams+0x70>
			packetParams->Params.Gfsk.SyncWordLength = 0x40;
 80012be:	687b      	ldr	r3, [r7, #4]
 80012c0:	2240      	movs	r2, #64	; 0x40
 80012c2:	715a      	strb	r2, [r3, #5]

		tx_msg_len = 9;
 80012c4:	2309      	movs	r3, #9
 80012c6:	77fb      	strb	r3, [r7, #31]
		tx_msg[0] = packetParams->Params.Gfsk.PreambleLength >> 8;
 80012c8:	687b      	ldr	r3, [r7, #4]
 80012ca:	885b      	ldrh	r3, [r3, #2]
 80012cc:	0a1b      	lsrs	r3, r3, #8
 80012ce:	b29b      	uxth	r3, r3
 80012d0:	b2db      	uxtb	r3, r3
 80012d2:	753b      	strb	r3, [r7, #20]
		tx_msg[1] = packetParams->Params.Gfsk.PreambleLength;
 80012d4:	687b      	ldr	r3, [r7, #4]
 80012d6:	885b      	ldrh	r3, [r3, #2]
 80012d8:	b2db      	uxtb	r3, r3
 80012da:	757b      	strb	r3, [r7, #21]
		tx_msg[2] = packetParams->Params.Gfsk.PreambleMinDetect;
 80012dc:	687b      	ldr	r3, [r7, #4]
 80012de:	791b      	ldrb	r3, [r3, #4]
 80012e0:	75bb      	strb	r3, [r7, #22]
		tx_msg[3] = packetParams->Params.Gfsk.SyncWordLength;
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	795b      	ldrb	r3, [r3, #5]
 80012e6:	75fb      	strb	r3, [r7, #23]
		tx_msg[4] = packetParams->Params.Gfsk.AddrComp;
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	799b      	ldrb	r3, [r3, #6]
 80012ec:	763b      	strb	r3, [r7, #24]
		tx_msg[5] = packetParams->Params.Gfsk.HeaderType;
 80012ee:	687b      	ldr	r3, [r7, #4]
 80012f0:	79db      	ldrb	r3, [r3, #7]
 80012f2:	767b      	strb	r3, [r7, #25]
		tx_msg[6] = packetParams->Params.Gfsk.PayloadLength;
 80012f4:	687b      	ldr	r3, [r7, #4]
 80012f6:	7a1b      	ldrb	r3, [r3, #8]
 80012f8:	76bb      	strb	r3, [r7, #26]
		tx_msg[7] = crcType;
 80012fa:	7fbb      	ldrb	r3, [r7, #30]
 80012fc:	76fb      	strb	r3, [r7, #27]
		tx_msg[8] = packetParams->Params.Gfsk.DcFree;
 80012fe:	687b      	ldr	r3, [r7, #4]
 8001300:	7a9b      	ldrb	r3, [r3, #10]
 8001302:	773b      	strb	r3, [r7, #28]
		radio->packetParams.Params.Gfsk.PreambleLength = packetParams->Params.Gfsk.PreambleLength;
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	885a      	ldrh	r2, [r3, #2]
 8001308:	68bb      	ldr	r3, [r7, #8]
 800130a:	f8a3 2406 	strh.w	r2, [r3, #1030]	; 0x406
		radio->packetParams.Params.Gfsk.PreambleMinDetect = packetParams->Params.Gfsk.PreambleMinDetect;
 800130e:	687b      	ldr	r3, [r7, #4]
 8001310:	791a      	ldrb	r2, [r3, #4]
 8001312:	68bb      	ldr	r3, [r7, #8]
 8001314:	f883 2408 	strb.w	r2, [r3, #1032]	; 0x408
		radio->packetParams.Params.Gfsk.SyncWordLength = packetParams->Params.Gfsk.SyncWordLength;
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	795a      	ldrb	r2, [r3, #5]
 800131c:	68bb      	ldr	r3, [r7, #8]
 800131e:	f883 2409 	strb.w	r2, [r3, #1033]	; 0x409
		radio->packetParams.Params.Gfsk.AddrComp = packetParams->Params.Gfsk.AddrComp;
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	799a      	ldrb	r2, [r3, #6]
 8001326:	68bb      	ldr	r3, [r7, #8]
 8001328:	f883 240a 	strb.w	r2, [r3, #1034]	; 0x40a
		radio->packetParams.Params.Gfsk.HeaderType = packetParams->Params.Gfsk.HeaderType;
 800132c:	687b      	ldr	r3, [r7, #4]
 800132e:	79da      	ldrb	r2, [r3, #7]
 8001330:	68bb      	ldr	r3, [r7, #8]
 8001332:	f883 240b 	strb.w	r2, [r3, #1035]	; 0x40b
		radio->packetParams.Params.Gfsk.PayloadLength = packetParams->Params.Gfsk.PayloadLength;
 8001336:	687b      	ldr	r3, [r7, #4]
 8001338:	7a1a      	ldrb	r2, [r3, #8]
 800133a:	68bb      	ldr	r3, [r7, #8]
 800133c:	f883 240c 	strb.w	r2, [r3, #1036]	; 0x40c
		radio->packetParams.Params.Gfsk.CrcType = crcType;
 8001340:	68bb      	ldr	r3, [r7, #8]
 8001342:	7fba      	ldrb	r2, [r7, #30]
 8001344:	f883 240d 	strb.w	r2, [r3, #1037]	; 0x40d
		radio->packetParams.Params.Gfsk.DcFree = packetParams->Params.Gfsk.DcFree;
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	7a9a      	ldrb	r2, [r3, #10]
 800134c:	68bb      	ldr	r3, [r7, #8]
 800134e:	f883 240e 	strb.w	r2, [r3, #1038]	; 0x40e
		break;
 8001352:	e032      	b.n	80013ba <SX1262SetPacketParams+0x166>

	case PACKET_TYPE_LORA:
		tx_msg_len = 6;
 8001354:	2306      	movs	r3, #6
 8001356:	77fb      	strb	r3, [r7, #31]
		tx_msg[0] = packetParams->Params.LoRa.PreambleLength >> 8;
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	899b      	ldrh	r3, [r3, #12]
 800135c:	0a1b      	lsrs	r3, r3, #8
 800135e:	b29b      	uxth	r3, r3
 8001360:	b2db      	uxtb	r3, r3
 8001362:	753b      	strb	r3, [r7, #20]
		tx_msg[1] = packetParams->Params.LoRa.PreambleLength;
 8001364:	687b      	ldr	r3, [r7, #4]
 8001366:	899b      	ldrh	r3, [r3, #12]
 8001368:	b2db      	uxtb	r3, r3
 800136a:	757b      	strb	r3, [r7, #21]
		tx_msg[2] = packetParams->Params.LoRa.HeaderType;
 800136c:	687b      	ldr	r3, [r7, #4]
 800136e:	7b9b      	ldrb	r3, [r3, #14]
 8001370:	75bb      	strb	r3, [r7, #22]
		tx_msg[3] = packetParams->Params.LoRa.PayloadLength;
 8001372:	687b      	ldr	r3, [r7, #4]
 8001374:	7bdb      	ldrb	r3, [r3, #15]
 8001376:	75fb      	strb	r3, [r7, #23]
		tx_msg[4] = packetParams->Params.LoRa.CrcMode;
 8001378:	687b      	ldr	r3, [r7, #4]
 800137a:	7c1b      	ldrb	r3, [r3, #16]
 800137c:	763b      	strb	r3, [r7, #24]
		tx_msg[5] = packetParams->Params.LoRa.InvertIQ;
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	7c5b      	ldrb	r3, [r3, #17]
 8001382:	767b      	strb	r3, [r7, #25]
		radio->packetParams.Params.LoRa.PreambleLength = packetParams->Params.LoRa.PreambleLength;
 8001384:	687b      	ldr	r3, [r7, #4]
 8001386:	899a      	ldrh	r2, [r3, #12]
 8001388:	68bb      	ldr	r3, [r7, #8]
 800138a:	f8a3 2410 	strh.w	r2, [r3, #1040]	; 0x410
		radio->packetParams.Params.LoRa.HeaderType = packetParams->Params.LoRa.HeaderType;
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	7b9a      	ldrb	r2, [r3, #14]
 8001392:	68bb      	ldr	r3, [r7, #8]
 8001394:	f883 2412 	strb.w	r2, [r3, #1042]	; 0x412
		radio->packetParams.Params.LoRa.PayloadLength = packetParams->Params.LoRa.PayloadLength;
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	7bda      	ldrb	r2, [r3, #15]
 800139c:	68bb      	ldr	r3, [r7, #8]
 800139e:	f883 2413 	strb.w	r2, [r3, #1043]	; 0x413
		radio->packetParams.Params.LoRa.CrcMode = packetParams->Params.LoRa.CrcMode;
 80013a2:	687b      	ldr	r3, [r7, #4]
 80013a4:	7c1a      	ldrb	r2, [r3, #16]
 80013a6:	68bb      	ldr	r3, [r7, #8]
 80013a8:	f883 2414 	strb.w	r2, [r3, #1044]	; 0x414
		radio->packetParams.Params.LoRa.InvertIQ = packetParams->Params.LoRa.InvertIQ;
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	7c5a      	ldrb	r2, [r3, #17]
 80013b0:	68bb      	ldr	r3, [r7, #8]
 80013b2:	f883 2415 	strb.w	r2, [r3, #1045]	; 0x415
		break;
 80013b6:	e000      	b.n	80013ba <SX1262SetPacketParams+0x166>

	case PACKET_TYPE_LR_FHSS:
		// Not implemented
		break;
 80013b8:	bf00      	nop
	}

	SX1262WriteCommand(mcu, radio, SET_PACKET_PARAMS, tx_msg, tx_msg_len);
 80013ba:	f107 0214 	add.w	r2, r7, #20
 80013be:	7ffb      	ldrb	r3, [r7, #31]
 80013c0:	9300      	str	r3, [sp, #0]
 80013c2:	4613      	mov	r3, r2
 80013c4:	228c      	movs	r2, #140	; 0x8c
 80013c6:	68b9      	ldr	r1, [r7, #8]
 80013c8:	68f8      	ldr	r0, [r7, #12]
 80013ca:	f001 f9e1 	bl	8002790 <SX1262WriteCommand>
}
 80013ce:	bf00      	nop
 80013d0:	3720      	adds	r7, #32
 80013d2:	46bd      	mov	sp, r7
 80013d4:	bd80      	pop	{r7, pc}
 80013d6:	bf00      	nop
 80013d8:	08014240 	.word	0x08014240
 80013dc:	00000000 	.word	0x00000000

080013e0 <SX1262SetModulationParams>:
*  @Description	  Sets the modulation parameters for the protocol selected
*                 before. If the parameters correspond to a different packet
*                 type, it changes the packet type and then gives the params.
******************************************************************************/
void SX1262SetModulationParams(MCU* mcu, Radio* radio, ModulationParams_t *modulationParams)
{
 80013e0:	b580      	push	{r7, lr}
 80013e2:	b08c      	sub	sp, #48	; 0x30
 80013e4:	af02      	add	r7, sp, #8
 80013e6:	60f8      	str	r0, [r7, #12]
 80013e8:	60b9      	str	r1, [r7, #8]
 80013ea:	607a      	str	r2, [r7, #4]
    uint8_t tx_msg_len;
    uint32_t bitrate;
    uint8_t tx_msg[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 80013ec:	4a66      	ldr	r2, [pc, #408]	; (8001588 <SX1262SetModulationParams+0x1a8>)
 80013ee:	f107 0314 	add.w	r3, r7, #20
 80013f2:	e892 0003 	ldmia.w	r2, {r0, r1}
 80013f6:	e883 0003 	stmia.w	r3, {r0, r1}

    // Check if required configuration corresponds to the stored packet type
    // If not, silently update radio packet type
    if(radio->packetType != modulationParams->PacketType)
 80013fa:	68bb      	ldr	r3, [r7, #8]
 80013fc:	f893 23e0 	ldrb.w	r2, [r3, #992]	; 0x3e0
 8001400:	687b      	ldr	r3, [r7, #4]
 8001402:	781b      	ldrb	r3, [r3, #0]
 8001404:	429a      	cmp	r2, r3
 8001406:	d00b      	beq.n	8001420 <SX1262SetModulationParams+0x40>
    {
       SX1262SetPacketType(mcu, radio, modulationParams->PacketType);
 8001408:	687b      	ldr	r3, [r7, #4]
 800140a:	781b      	ldrb	r3, [r3, #0]
 800140c:	461a      	mov	r2, r3
 800140e:	68b9      	ldr	r1, [r7, #8]
 8001410:	68f8      	ldr	r0, [r7, #12]
 8001412:	f7ff fe04 	bl	800101e <SX1262SetPacketType>
       radio->packetType = modulationParams->PacketType;
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	781a      	ldrb	r2, [r3, #0]
 800141a:	68bb      	ldr	r3, [r7, #8]
 800141c:	f883 23e0 	strb.w	r2, [r3, #992]	; 0x3e0
    }


    switch(modulationParams->PacketType)
 8001420:	687b      	ldr	r3, [r7, #4]
 8001422:	781b      	ldrb	r3, [r3, #0]
 8001424:	2b03      	cmp	r3, #3
 8001426:	f000 80a1 	beq.w	800156c <SX1262SetModulationParams+0x18c>
 800142a:	2b03      	cmp	r3, #3
 800142c:	f300 8092 	bgt.w	8001554 <SX1262SetModulationParams+0x174>
 8001430:	2b00      	cmp	r3, #0
 8001432:	d002      	beq.n	800143a <SX1262SetModulationParams+0x5a>
 8001434:	2b01      	cmp	r3, #1
 8001436:	d069      	beq.n	800150c <SX1262SetModulationParams+0x12c>
 8001438:	e08c      	b.n	8001554 <SX1262SetModulationParams+0x174>
    {
    case PACKET_TYPE_GFSK:

        tx_msg_len = 8;
 800143a:	2308      	movs	r3, #8
 800143c:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        bitrate = (uint32_t)(32 * XTAL_FREQ / modulationParams->Params.Gfsk.BitRate);
 8001440:	687b      	ldr	r3, [r7, #4]
 8001442:	685b      	ldr	r3, [r3, #4]
 8001444:	4618      	mov	r0, r3
 8001446:	f7ff f85d 	bl	8000504 <__aeabi_ui2d>
 800144a:	4602      	mov	r2, r0
 800144c:	460b      	mov	r3, r1
 800144e:	a14a      	add	r1, pc, #296	; (adr r1, 8001578 <SX1262SetModulationParams+0x198>)
 8001450:	e9d1 0100 	ldrd	r0, r1, [r1]
 8001454:	f7ff f9fa 	bl	800084c <__aeabi_ddiv>
 8001458:	4602      	mov	r2, r0
 800145a:	460b      	mov	r3, r1
 800145c:	4610      	mov	r0, r2
 800145e:	4619      	mov	r1, r3
 8001460:	f7ff fba2 	bl	8000ba8 <__aeabi_d2uiz>
 8001464:	4603      	mov	r3, r0
 8001466:	623b      	str	r3, [r7, #32]
        tx_msg[0] = bitrate >> 16;
 8001468:	6a3b      	ldr	r3, [r7, #32]
 800146a:	0c1b      	lsrs	r3, r3, #16
 800146c:	b2db      	uxtb	r3, r3
 800146e:	753b      	strb	r3, [r7, #20]
        tx_msg[1] = bitrate >> 8;
 8001470:	6a3b      	ldr	r3, [r7, #32]
 8001472:	0a1b      	lsrs	r3, r3, #8
 8001474:	b2db      	uxtb	r3, r3
 8001476:	757b      	strb	r3, [r7, #21]
        tx_msg[2] = bitrate;
 8001478:	6a3b      	ldr	r3, [r7, #32]
 800147a:	b2db      	uxtb	r3, r3
 800147c:	75bb      	strb	r3, [r7, #22]
        tx_msg[3] = modulationParams->Params.Gfsk.ModulationShaping;
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	7b1b      	ldrb	r3, [r3, #12]
 8001482:	75fb      	strb	r3, [r7, #23]
        tx_msg[4] = modulationParams->Params.Gfsk.Bandwidth;
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	7b5b      	ldrb	r3, [r3, #13]
 8001488:	763b      	strb	r3, [r7, #24]
        uint32_t fdev = (uint32_t) ((float)(modulationParams->Params.Gfsk.FdevHz) * FREQ_DIV / XTAL_FREQ);
 800148a:	687b      	ldr	r3, [r7, #4]
 800148c:	689b      	ldr	r3, [r3, #8]
 800148e:	ee07 3a90 	vmov	s15, r3
 8001492:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001496:	ee17 0a90 	vmov	r0, s15
 800149a:	f7ff f855 	bl	8000548 <__aeabi_f2d>
 800149e:	f04f 0200 	mov.w	r2, #0
 80014a2:	f04f 4383 	mov.w	r3, #1098907648	; 0x41800000
 80014a6:	f7ff f8a7 	bl	80005f8 <__aeabi_dmul>
 80014aa:	4602      	mov	r2, r0
 80014ac:	460b      	mov	r3, r1
 80014ae:	4610      	mov	r0, r2
 80014b0:	4619      	mov	r1, r3
 80014b2:	a333      	add	r3, pc, #204	; (adr r3, 8001580 <SX1262SetModulationParams+0x1a0>)
 80014b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80014b8:	f7ff f9c8 	bl	800084c <__aeabi_ddiv>
 80014bc:	4602      	mov	r2, r0
 80014be:	460b      	mov	r3, r1
 80014c0:	4610      	mov	r0, r2
 80014c2:	4619      	mov	r1, r3
 80014c4:	f7ff fb70 	bl	8000ba8 <__aeabi_d2uiz>
 80014c8:	4603      	mov	r3, r0
 80014ca:	61fb      	str	r3, [r7, #28]
        tx_msg[5] = fdev >> 16;
 80014cc:	69fb      	ldr	r3, [r7, #28]
 80014ce:	0c1b      	lsrs	r3, r3, #16
 80014d0:	b2db      	uxtb	r3, r3
 80014d2:	767b      	strb	r3, [r7, #25]
        tx_msg[6] = fdev >> 8;
 80014d4:	69fb      	ldr	r3, [r7, #28]
 80014d6:	0a1b      	lsrs	r3, r3, #8
 80014d8:	b2db      	uxtb	r3, r3
 80014da:	76bb      	strb	r3, [r7, #26]
        tx_msg[7] = fdev;
 80014dc:	69fb      	ldr	r3, [r7, #28]
 80014de:	b2db      	uxtb	r3, r3
 80014e0:	76fb      	strb	r3, [r7, #27]

        radio->modulationParams.Params.Gfsk.BitRate = modulationParams->Params.Gfsk.BitRate;
 80014e2:	687b      	ldr	r3, [r7, #4]
 80014e4:	685a      	ldr	r2, [r3, #4]
 80014e6:	68bb      	ldr	r3, [r7, #8]
 80014e8:	f8c3 23f4 	str.w	r2, [r3, #1012]	; 0x3f4
        radio->modulationParams.Params.Gfsk.ModulationShaping = modulationParams->Params.Gfsk.ModulationShaping;
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	7b1a      	ldrb	r2, [r3, #12]
 80014f0:	68bb      	ldr	r3, [r7, #8]
 80014f2:	f883 23fc 	strb.w	r2, [r3, #1020]	; 0x3fc
        radio->modulationParams.Params.Gfsk.Bandwidth = modulationParams->Params.Gfsk.Bandwidth;
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	7b5a      	ldrb	r2, [r3, #13]
 80014fa:	68bb      	ldr	r3, [r7, #8]
 80014fc:	f883 23fd 	strb.w	r2, [r3, #1021]	; 0x3fd
        radio->modulationParams.Params.Gfsk.FdevHz = modulationParams->Params.Gfsk.FdevHz;
 8001500:	687b      	ldr	r3, [r7, #4]
 8001502:	689a      	ldr	r2, [r3, #8]
 8001504:	68bb      	ldr	r3, [r7, #8]
 8001506:	f8c3 23f8 	str.w	r2, [r3, #1016]	; 0x3f8
        break;
 800150a:	e023      	b.n	8001554 <SX1262SetModulationParams+0x174>

    case PACKET_TYPE_LORA:
        tx_msg_len = 4;
 800150c:	2304      	movs	r3, #4
 800150e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
        tx_msg[0] = modulationParams->Params.LoRa.SpreadingFactor;
 8001512:	687b      	ldr	r3, [r7, #4]
 8001514:	7c1b      	ldrb	r3, [r3, #16]
 8001516:	753b      	strb	r3, [r7, #20]
        tx_msg[1] = modulationParams->Params.LoRa.Bandwidth;
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	7c5b      	ldrb	r3, [r3, #17]
 800151c:	757b      	strb	r3, [r7, #21]
        tx_msg[2] = modulationParams->Params.LoRa.CodingRate;
 800151e:	687b      	ldr	r3, [r7, #4]
 8001520:	7c9b      	ldrb	r3, [r3, #18]
 8001522:	75bb      	strb	r3, [r7, #22]
        tx_msg[3] = modulationParams->Params.LoRa.LowDatarateOptimize;
 8001524:	687b      	ldr	r3, [r7, #4]
 8001526:	7cdb      	ldrb	r3, [r3, #19]
 8001528:	75fb      	strb	r3, [r7, #23]

        radio->modulationParams.Params.LoRa.SpreadingFactor = modulationParams->Params.LoRa.SpreadingFactor;
 800152a:	687b      	ldr	r3, [r7, #4]
 800152c:	7c1a      	ldrb	r2, [r3, #16]
 800152e:	68bb      	ldr	r3, [r7, #8]
 8001530:	f883 2400 	strb.w	r2, [r3, #1024]	; 0x400
        radio->modulationParams.Params.LoRa.Bandwidth = modulationParams->Params.LoRa.Bandwidth;
 8001534:	687b      	ldr	r3, [r7, #4]
 8001536:	7c5a      	ldrb	r2, [r3, #17]
 8001538:	68bb      	ldr	r3, [r7, #8]
 800153a:	f883 2401 	strb.w	r2, [r3, #1025]	; 0x401
        radio->modulationParams.Params.LoRa.CodingRate = modulationParams->Params.LoRa.CodingRate;
 800153e:	687b      	ldr	r3, [r7, #4]
 8001540:	7c9a      	ldrb	r2, [r3, #18]
 8001542:	68bb      	ldr	r3, [r7, #8]
 8001544:	f883 2402 	strb.w	r2, [r3, #1026]	; 0x402
        radio->modulationParams.Params.LoRa.LowDatarateOptimize = modulationParams->Params.LoRa.LowDatarateOptimize;
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	7cda      	ldrb	r2, [r3, #19]
 800154c:	68bb      	ldr	r3, [r7, #8]
 800154e:	f883 2403 	strb.w	r2, [r3, #1027]	; 0x403
        break;
 8001552:	bf00      	nop
    case PACKET_TYPE_LR_FHSS:
    	/* NOT IMPLEMENTED */
        return;
    }

    SX1262WriteCommand(mcu, radio, SET_MODULATION_PARAMS, tx_msg, tx_msg_len);
 8001554:	f107 0214 	add.w	r2, r7, #20
 8001558:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800155c:	9300      	str	r3, [sp, #0]
 800155e:	4613      	mov	r3, r2
 8001560:	228b      	movs	r2, #139	; 0x8b
 8001562:	68b9      	ldr	r1, [r7, #8]
 8001564:	68f8      	ldr	r0, [r7, #12]
 8001566:	f001 f913 	bl	8002790 <SX1262WriteCommand>
 800156a:	e000      	b.n	800156e <SX1262SetModulationParams+0x18e>
        return;
 800156c:	bf00      	nop
}
 800156e:	3728      	adds	r7, #40	; 0x28
 8001570:	46bd      	mov	sp, r7
 8001572:	bd80      	pop	{r7, pc}
 8001574:	f3af 8000 	nop.w
 8001578:	00000000 	.word	0x00000000
 800157c:	41ce8480 	.word	0x41ce8480
 8001580:	00000000 	.word	0x00000000
 8001584:	417e8480 	.word	0x417e8480
 8001588:	0801424c 	.word	0x0801424c

0800158c <SX1262SetDioIrqParams>:
*                 be created and stored in the device registers. dio_Mask
*                 determines which of these interrupts will create an interrupt
*                 on this specific DIO (set pin).
******************************************************************************/
void SX1262SetDioIrqParams(MCU* mcu, Radio* radio, Irq_t irqMask, Irq_t dio1Mask, Irq_t dio2Mask, Irq_t dio3Mask)
{
 800158c:	b580      	push	{r7, lr}
 800158e:	b088      	sub	sp, #32
 8001590:	af02      	add	r7, sp, #8
 8001592:	60f8      	str	r0, [r7, #12]
 8001594:	60b9      	str	r1, [r7, #8]
 8001596:	4611      	mov	r1, r2
 8001598:	461a      	mov	r2, r3
 800159a:	460b      	mov	r3, r1
 800159c:	80fb      	strh	r3, [r7, #6]
 800159e:	4613      	mov	r3, r2
 80015a0:	80bb      	strh	r3, [r7, #4]
    uint8_t tx_msg[8];

    tx_msg[0] = irqMask  >> 8;
 80015a2:	88fb      	ldrh	r3, [r7, #6]
 80015a4:	0a1b      	lsrs	r3, r3, #8
 80015a6:	b29b      	uxth	r3, r3
 80015a8:	b2db      	uxtb	r3, r3
 80015aa:	743b      	strb	r3, [r7, #16]
    tx_msg[1] = irqMask;
 80015ac:	88fb      	ldrh	r3, [r7, #6]
 80015ae:	b2db      	uxtb	r3, r3
 80015b0:	747b      	strb	r3, [r7, #17]
    tx_msg[2] = dio1Mask >> 8;
 80015b2:	88bb      	ldrh	r3, [r7, #4]
 80015b4:	0a1b      	lsrs	r3, r3, #8
 80015b6:	b29b      	uxth	r3, r3
 80015b8:	b2db      	uxtb	r3, r3
 80015ba:	74bb      	strb	r3, [r7, #18]
    tx_msg[3] = dio1Mask;
 80015bc:	88bb      	ldrh	r3, [r7, #4]
 80015be:	b2db      	uxtb	r3, r3
 80015c0:	74fb      	strb	r3, [r7, #19]
    tx_msg[4] = dio2Mask >> 8;
 80015c2:	8c3b      	ldrh	r3, [r7, #32]
 80015c4:	0a1b      	lsrs	r3, r3, #8
 80015c6:	b29b      	uxth	r3, r3
 80015c8:	b2db      	uxtb	r3, r3
 80015ca:	753b      	strb	r3, [r7, #20]
    tx_msg[5] = dio2Mask;
 80015cc:	8c3b      	ldrh	r3, [r7, #32]
 80015ce:	b2db      	uxtb	r3, r3
 80015d0:	757b      	strb	r3, [r7, #21]
    tx_msg[6] = dio3Mask >> 8;
 80015d2:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80015d4:	0a1b      	lsrs	r3, r3, #8
 80015d6:	b29b      	uxth	r3, r3
 80015d8:	b2db      	uxtb	r3, r3
 80015da:	75bb      	strb	r3, [r7, #22]
    tx_msg[7] = dio3Mask;
 80015dc:	8cbb      	ldrh	r3, [r7, #36]	; 0x24
 80015de:	b2db      	uxtb	r3, r3
 80015e0:	75fb      	strb	r3, [r7, #23]

    SX1262WriteCommand(mcu, radio, SET_DIO_IRQ_PARAMS, tx_msg, 8);
 80015e2:	f107 0310 	add.w	r3, r7, #16
 80015e6:	2208      	movs	r2, #8
 80015e8:	9200      	str	r2, [sp, #0]
 80015ea:	2208      	movs	r2, #8
 80015ec:	68b9      	ldr	r1, [r7, #8]
 80015ee:	68f8      	ldr	r0, [r7, #12]
 80015f0:	f001 f8ce 	bl	8002790 <SX1262WriteCommand>

    radio->irqMask  = irqMask;
 80015f4:	68bb      	ldr	r3, [r7, #8]
 80015f6:	88fa      	ldrh	r2, [r7, #6]
 80015f8:	f8a3 2438 	strh.w	r2, [r3, #1080]	; 0x438
    radio->dio1Mask = dio1Mask;
 80015fc:	68bb      	ldr	r3, [r7, #8]
 80015fe:	88ba      	ldrh	r2, [r7, #4]
 8001600:	f8a3 243a 	strh.w	r2, [r3, #1082]	; 0x43a
    radio->dio2Mask = dio2Mask;
 8001604:	68bb      	ldr	r3, [r7, #8]
 8001606:	8c3a      	ldrh	r2, [r7, #32]
 8001608:	f8a3 243c 	strh.w	r2, [r3, #1084]	; 0x43c
    radio->dio3Mask = dio3Mask;
 800160c:	68bb      	ldr	r3, [r7, #8]
 800160e:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8001610:	f8a3 243e 	strh.w	r2, [r3, #1086]	; 0x43e
}
 8001614:	bf00      	nop
 8001616:	3718      	adds	r7, #24
 8001618:	46bd      	mov	sp, r7
 800161a:	bd80      	pop	{r7, pc}

0800161c <SX1262SetGfskSyncWord>:

/*****************************************************************************
*  @Description	  Sets the syncWord by accessing the register in GFSK
******************************************************************************/
RadioState_t SX1262SetGfskSyncWord(MCU* mcu, Radio* radio, uint8_t *GfskSyncWord, uint8_t len)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	b086      	sub	sp, #24
 8001620:	af02      	add	r7, sp, #8
 8001622:	60f8      	str	r0, [r7, #12]
 8001624:	60b9      	str	r1, [r7, #8]
 8001626:	607a      	str	r2, [r7, #4]
 8001628:	70fb      	strb	r3, [r7, #3]
	return SX1262SafeWriteRegister(mcu, radio, SYNC_WORD_0_REG, GfskSyncWord, len);
 800162a:	78fb      	ldrb	r3, [r7, #3]
 800162c:	9300      	str	r3, [sp, #0]
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	f44f 62d8 	mov.w	r2, #1728	; 0x6c0
 8001634:	68b9      	ldr	r1, [r7, #8]
 8001636:	68f8      	ldr	r0, [r7, #12]
 8001638:	f001 fc37 	bl	8002eaa <SX1262SafeWriteRegister>
 800163c:	4603      	mov	r3, r0
}
 800163e:	4618      	mov	r0, r3
 8001640:	3710      	adds	r7, #16
 8001642:	46bd      	mov	sp, r7
 8001644:	bd80      	pop	{r7, pc}
	...

08001648 <SX1262SetTx>:
*                 whatever is present in the Buffer starting from the txBufBaseAddr
*                 until the TxLength has been completed. After the Tx it will get
*                 information of the status and return to fallback mode
***********************************************************************************/
void SX1262SetTx(MCU* mcu, Radio* radio, uint16_t timeout_duration /* [msec] */, bool wait)
{
 8001648:	b580      	push	{r7, lr}
 800164a:	b08a      	sub	sp, #40	; 0x28
 800164c:	af02      	add	r7, sp, #8
 800164e:	60f8      	str	r0, [r7, #12]
 8001650:	60b9      	str	r1, [r7, #8]
 8001652:	4611      	mov	r1, r2
 8001654:	461a      	mov	r2, r3
 8001656:	460b      	mov	r3, r1
 8001658:	80fb      	strh	r3, [r7, #6]
 800165a:	4613      	mov	r3, r2
 800165c:	717b      	strb	r3, [r7, #5]

#if ((FUNCTION != TPMS_DEBUG) && (FUNCTION != TPMS_RELEASE))
	uint8_t reg_data;
	if ((radio->packetType == PACKET_TYPE_LORA) && (radio->modulationParams.Params.LoRa.Bandwidth == LORA_BW_500))
 800165e:	68bb      	ldr	r3, [r7, #8]
 8001660:	f893 33e0 	ldrb.w	r3, [r3, #992]	; 0x3e0
 8001664:	2b01      	cmp	r3, #1
 8001666:	d11e      	bne.n	80016a6 <SX1262SetTx+0x5e>
 8001668:	68bb      	ldr	r3, [r7, #8]
 800166a:	f893 3401 	ldrb.w	r3, [r3, #1025]	; 0x401
 800166e:	2b06      	cmp	r3, #6
 8001670:	d119      	bne.n	80016a6 <SX1262SetTx+0x5e>
	{
		SX1262ReadRegister(mcu, radio, TX_MODULATION_REG, &reg_data, 1);
 8001672:	f107 0317 	add.w	r3, r7, #23
 8001676:	2201      	movs	r2, #1
 8001678:	9200      	str	r2, [sp, #0]
 800167a:	f640 0289 	movw	r2, #2185	; 0x889
 800167e:	68b9      	ldr	r1, [r7, #8]
 8001680:	68f8      	ldr	r0, [r7, #12]
 8001682:	f001 fb10 	bl	8002ca6 <SX1262ReadRegister>
		reg_data = reg_data & 0xFB;
 8001686:	7dfb      	ldrb	r3, [r7, #23]
 8001688:	f023 0304 	bic.w	r3, r3, #4
 800168c:	b2db      	uxtb	r3, r3
 800168e:	75fb      	strb	r3, [r7, #23]
		SX1262SafeWriteRegister(mcu, radio, TX_MODULATION_REG, &reg_data, 1);
 8001690:	f107 0317 	add.w	r3, r7, #23
 8001694:	2201      	movs	r2, #1
 8001696:	9200      	str	r2, [sp, #0]
 8001698:	f640 0289 	movw	r2, #2185	; 0x889
 800169c:	68b9      	ldr	r1, [r7, #8]
 800169e:	68f8      	ldr	r0, [r7, #12]
 80016a0:	f001 fc03 	bl	8002eaa <SX1262SafeWriteRegister>
 80016a4:	e018      	b.n	80016d8 <SX1262SetTx+0x90>
	}
	else
	{
		SX1262ReadRegister(mcu, radio, TX_MODULATION_REG, &reg_data, 1);
 80016a6:	f107 0317 	add.w	r3, r7, #23
 80016aa:	2201      	movs	r2, #1
 80016ac:	9200      	str	r2, [sp, #0]
 80016ae:	f640 0289 	movw	r2, #2185	; 0x889
 80016b2:	68b9      	ldr	r1, [r7, #8]
 80016b4:	68f8      	ldr	r0, [r7, #12]
 80016b6:	f001 faf6 	bl	8002ca6 <SX1262ReadRegister>
		reg_data = reg_data | 0x04;
 80016ba:	7dfb      	ldrb	r3, [r7, #23]
 80016bc:	f043 0304 	orr.w	r3, r3, #4
 80016c0:	b2db      	uxtb	r3, r3
 80016c2:	75fb      	strb	r3, [r7, #23]
		SX1262SafeWriteRegister(mcu, radio, TX_MODULATION_REG, &reg_data, 1);
 80016c4:	f107 0317 	add.w	r3, r7, #23
 80016c8:	2201      	movs	r2, #1
 80016ca:	9200      	str	r2, [sp, #0]
 80016cc:	f640 0289 	movw	r2, #2185	; 0x889
 80016d0:	68b9      	ldr	r1, [r7, #8]
 80016d2:	68f8      	ldr	r0, [r7, #12]
 80016d4:	f001 fbe9 	bl	8002eaa <SX1262SafeWriteRegister>



    uint8_t tx_msg[3];

    uint32_t timeout = timeout_duration * 1000 / 15.625;
 80016d8:	88fb      	ldrh	r3, [r7, #6]
 80016da:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80016de:	fb02 f303 	mul.w	r3, r2, r3
 80016e2:	4618      	mov	r0, r3
 80016e4:	f7fe ff1e 	bl	8000524 <__aeabi_i2d>
 80016e8:	f04f 0200 	mov.w	r2, #0
 80016ec:	4b43      	ldr	r3, [pc, #268]	; (80017fc <SX1262SetTx+0x1b4>)
 80016ee:	f7ff f8ad 	bl	800084c <__aeabi_ddiv>
 80016f2:	4602      	mov	r2, r0
 80016f4:	460b      	mov	r3, r1
 80016f6:	4610      	mov	r0, r2
 80016f8:	4619      	mov	r1, r3
 80016fa:	f7ff fa55 	bl	8000ba8 <__aeabi_d2uiz>
 80016fe:	4603      	mov	r3, r0
 8001700:	61fb      	str	r3, [r7, #28]

    if (timeout > 0xFFFFFF)
 8001702:	69fb      	ldr	r3, [r7, #28]
 8001704:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001708:	d302      	bcc.n	8001710 <SX1262SetTx+0xc8>
    	timeout = 0xFFFFFF;
 800170a:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
 800170e:	61fb      	str	r3, [r7, #28]

    tx_msg[0] = timeout >> 16;
 8001710:	69fb      	ldr	r3, [r7, #28]
 8001712:	0c1b      	lsrs	r3, r3, #16
 8001714:	b2db      	uxtb	r3, r3
 8001716:	753b      	strb	r3, [r7, #20]
    tx_msg[1] = timeout >> 8;
 8001718:	69fb      	ldr	r3, [r7, #28]
 800171a:	0a1b      	lsrs	r3, r3, #8
 800171c:	b2db      	uxtb	r3, r3
 800171e:	757b      	strb	r3, [r7, #21]
    tx_msg[2] = timeout;
 8001720:	69fb      	ldr	r3, [r7, #28]
 8001722:	b2db      	uxtb	r3, r3
 8001724:	75bb      	strb	r3, [r7, #22]

    // function returns when Tx has started
    if (!wait)
 8001726:	797b      	ldrb	r3, [r7, #5]
 8001728:	f083 0301 	eor.w	r3, r3, #1
 800172c:	b2db      	uxtb	r3, r3
 800172e:	2b00      	cmp	r3, #0
 8001730:	d027      	beq.n	8001782 <SX1262SetTx+0x13a>
    {
    	SX1262WriteCommand(mcu, radio, SET_TX, tx_msg, 3);
 8001732:	f107 0314 	add.w	r3, r7, #20
 8001736:	2203      	movs	r2, #3
 8001738:	9200      	str	r2, [sp, #0]
 800173a:	2283      	movs	r2, #131	; 0x83
 800173c:	68b9      	ldr	r1, [r7, #8]
 800173e:	68f8      	ldr	r0, [r7, #12]
 8001740:	f001 f826 	bl	8002790 <SX1262WriteCommand>
#if (FUNCTION != TPMS_RELEASE)
    	SX1262GetStatus(mcu, radio);
 8001744:	68b9      	ldr	r1, [r7, #8]
 8001746:	68f8      	ldr	r0, [r7, #12]
 8001748:	f000 fc90 	bl	800206c <SX1262GetStatus>
    	SX1262GetIrqStatus(mcu, radio);
 800174c:	68b9      	ldr	r1, [r7, #8]
 800174e:	68f8      	ldr	r0, [r7, #12]
 8001750:	f000 f922 	bl	8001998 <SX1262GetIrqStatus>

    	if (radio->irq.txDone != 1)
 8001754:	68bb      	ldr	r3, [r7, #8]
 8001756:	f893 3442 	ldrb.w	r3, [r3, #1090]	; 0x442
 800175a:	f003 0301 	and.w	r3, r3, #1
 800175e:	b2db      	uxtb	r3, r3
 8001760:	2b00      	cmp	r3, #0
 8001762:	d107      	bne.n	8001774 <SX1262SetTx+0x12c>
    		radio->tx_failures++;
 8001764:	68bb      	ldr	r3, [r7, #8]
 8001766:	f8b3 344c 	ldrh.w	r3, [r3, #1100]	; 0x44c
 800176a:	3301      	adds	r3, #1
 800176c:	b29a      	uxth	r2, r3
 800176e:	68bb      	ldr	r3, [r7, #8]
 8001770:	f8a3 244c 	strh.w	r2, [r3, #1100]	; 0x44c
#endif
    	SX1262ClearIrqStatus(mcu, radio, 0xFFFF);
 8001774:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001778:	68b9      	ldr	r1, [r7, #8]
 800177a:	68f8      	ldr	r0, [r7, #12]
 800177c:	f000 f8a6 	bl	80018cc <SX1262ClearIrqStatus>
        		radio->tx_failures++;
        		break;
        	}
    	}
    }
}
 8001780:	e038      	b.n	80017f4 <SX1262SetTx+0x1ac>
    	SX1262ClearIrqStatus(mcu, radio, 0xFFFF);
 8001782:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001786:	68b9      	ldr	r1, [r7, #8]
 8001788:	68f8      	ldr	r0, [r7, #12]
 800178a:	f000 f89f 	bl	80018cc <SX1262ClearIrqStatus>
    	SX1262WriteCommand(mcu, radio, SET_TX, tx_msg, 3);
 800178e:	f107 0314 	add.w	r3, r7, #20
 8001792:	2203      	movs	r2, #3
 8001794:	9200      	str	r2, [sp, #0]
 8001796:	2283      	movs	r2, #131	; 0x83
 8001798:	68b9      	ldr	r1, [r7, #8]
 800179a:	68f8      	ldr	r0, [r7, #12]
 800179c:	f000 fff8 	bl	8002790 <SX1262WriteCommand>
    	SX1262GetStatus(mcu, radio);
 80017a0:	68b9      	ldr	r1, [r7, #8]
 80017a2:	68f8      	ldr	r0, [r7, #12]
 80017a4:	f000 fc62 	bl	800206c <SX1262GetStatus>
    	SX1262GetIrqStatus(mcu, radio);
 80017a8:	68b9      	ldr	r1, [r7, #8]
 80017aa:	68f8      	ldr	r0, [r7, #12]
 80017ac:	f000 f8f4 	bl	8001998 <SX1262GetIrqStatus>
    	uint32_t current_tick = HAL_GetTick();
 80017b0:	f005 fd8e 	bl	80072d0 <HAL_GetTick>
 80017b4:	61b8      	str	r0, [r7, #24]
    	while(radio->irq.txDone != 1)
 80017b6:	e015      	b.n	80017e4 <SX1262SetTx+0x19c>
        	SX1262GetIrqStatus(mcu, radio);
 80017b8:	68b9      	ldr	r1, [r7, #8]
 80017ba:	68f8      	ldr	r0, [r7, #12]
 80017bc:	f000 f8ec 	bl	8001998 <SX1262GetIrqStatus>
        	if (HAL_GetTick() - current_tick > timeout_duration)
 80017c0:	f005 fd86 	bl	80072d0 <HAL_GetTick>
 80017c4:	4602      	mov	r2, r0
 80017c6:	69bb      	ldr	r3, [r7, #24]
 80017c8:	1ad2      	subs	r2, r2, r3
 80017ca:	88fb      	ldrh	r3, [r7, #6]
 80017cc:	429a      	cmp	r2, r3
 80017ce:	d909      	bls.n	80017e4 <SX1262SetTx+0x19c>
        		radio->tx_failures++;
 80017d0:	68bb      	ldr	r3, [r7, #8]
 80017d2:	f8b3 344c 	ldrh.w	r3, [r3, #1100]	; 0x44c
 80017d6:	3301      	adds	r3, #1
 80017d8:	b29a      	uxth	r2, r3
 80017da:	68bb      	ldr	r3, [r7, #8]
 80017dc:	f8a3 244c 	strh.w	r2, [r3, #1100]	; 0x44c
        		break;
 80017e0:	bf00      	nop
}
 80017e2:	e007      	b.n	80017f4 <SX1262SetTx+0x1ac>
    	while(radio->irq.txDone != 1)
 80017e4:	68bb      	ldr	r3, [r7, #8]
 80017e6:	f893 3442 	ldrb.w	r3, [r3, #1090]	; 0x442
 80017ea:	f003 0301 	and.w	r3, r3, #1
 80017ee:	b2db      	uxtb	r3, r3
 80017f0:	2b00      	cmp	r3, #0
 80017f2:	d0e1      	beq.n	80017b8 <SX1262SetTx+0x170>
}
 80017f4:	bf00      	nop
 80017f6:	3720      	adds	r7, #32
 80017f8:	46bd      	mov	sp, r7
 80017fa:	bd80      	pop	{r7, pc}
 80017fc:	402f4000 	.word	0x402f4000

08001800 <SX1262SetRxBoosted>:
/*****************************************************************************
*  @Description	  Sets the chip to Rx mode and writes to a register to increase
*                 sensitivity by ~3dB
******************************************************************************/
RadioState_t SX1262SetRxBoosted(MCU* mcu, Radio* radio, uint32_t timeout_duration)
{
 8001800:	b580      	push	{r7, lr}
 8001802:	b08a      	sub	sp, #40	; 0x28
 8001804:	af02      	add	r7, sp, #8
 8001806:	60f8      	str	r0, [r7, #12]
 8001808:	60b9      	str	r1, [r7, #8]
 800180a:	607a      	str	r2, [r7, #4]
	if ((radio->opMode != RX_MODE) && (radio->opMode != RX_DC_MODE))
 800180c:	68bb      	ldr	r3, [r7, #8]
 800180e:	f893 3444 	ldrb.w	r3, [r3, #1092]	; 0x444
 8001812:	2b04      	cmp	r3, #4
 8001814:	d008      	beq.n	8001828 <SX1262SetRxBoosted+0x28>
 8001816:	68bb      	ldr	r3, [r7, #8]
 8001818:	f893 3444 	ldrb.w	r3, [r3, #1092]	; 0x444
 800181c:	2b06      	cmp	r3, #6
 800181e:	d003      	beq.n	8001828 <SX1262SetRxBoosted+0x28>
		radio->msg_pending = false;
 8001820:	68bb      	ldr	r3, [r7, #8]
 8001822:	2200      	movs	r2, #0
 8001824:	f883 23c5 	strb.w	r2, [r3, #965]	; 0x3c5

	uint8_t tx_msg[3];

	uint32_t timeout = timeout_duration * 1000 / 15.625;
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800182e:	fb02 f303 	mul.w	r3, r2, r3
 8001832:	4618      	mov	r0, r3
 8001834:	f7fe fe66 	bl	8000504 <__aeabi_ui2d>
 8001838:	f04f 0200 	mov.w	r2, #0
 800183c:	4b22      	ldr	r3, [pc, #136]	; (80018c8 <SX1262SetRxBoosted+0xc8>)
 800183e:	f7ff f805 	bl	800084c <__aeabi_ddiv>
 8001842:	4602      	mov	r2, r0
 8001844:	460b      	mov	r3, r1
 8001846:	4610      	mov	r0, r2
 8001848:	4619      	mov	r1, r3
 800184a:	f7ff f9ad 	bl	8000ba8 <__aeabi_d2uiz>
 800184e:	4603      	mov	r3, r0
 8001850:	61fb      	str	r3, [r7, #28]
	if ((timeout_duration == 0xFFFF) || (timeout > 0xFFFFFF))
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001858:	4293      	cmp	r3, r2
 800185a:	d003      	beq.n	8001864 <SX1262SetRxBoosted+0x64>
 800185c:	69fb      	ldr	r3, [r7, #28]
 800185e:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001862:	d302      	bcc.n	800186a <SX1262SetRxBoosted+0x6a>
    	timeout = 0xFFFFFF;  // Rx Continuous Mode
 8001864:	f06f 437f 	mvn.w	r3, #4278190080	; 0xff000000
 8001868:	61fb      	str	r3, [r7, #28]

    uint8_t reg_data = 0x96;
 800186a:	2396      	movs	r3, #150	; 0x96
 800186c:	75fb      	strb	r3, [r7, #23]
    if (SX1262SafeWriteRegister(mcu, radio, RX_GAIN_REG, &reg_data, 1) != RADIO_OK) // max LNA gain, increase current by ~2mA for around ~3dB in sensitivity
 800186e:	f107 0317 	add.w	r3, r7, #23
 8001872:	2201      	movs	r2, #1
 8001874:	9200      	str	r2, [sp, #0]
 8001876:	f640 02ac 	movw	r2, #2220	; 0x8ac
 800187a:	68b9      	ldr	r1, [r7, #8]
 800187c:	68f8      	ldr	r0, [r7, #12]
 800187e:	f001 fb14 	bl	8002eaa <SX1262SafeWriteRegister>
 8001882:	4603      	mov	r3, r0
 8001884:	2b00      	cmp	r3, #0
 8001886:	d001      	beq.n	800188c <SX1262SetRxBoosted+0x8c>
    {
    	return RADIO_SAFE_WRITE_ERROR;
 8001888:	2301      	movs	r3, #1
 800188a:	e018      	b.n	80018be <SX1262SetRxBoosted+0xbe>
    }

    tx_msg[0] = timeout >> 16;
 800188c:	69fb      	ldr	r3, [r7, #28]
 800188e:	0c1b      	lsrs	r3, r3, #16
 8001890:	b2db      	uxtb	r3, r3
 8001892:	763b      	strb	r3, [r7, #24]
    tx_msg[1] = timeout >> 8;
 8001894:	69fb      	ldr	r3, [r7, #28]
 8001896:	0a1b      	lsrs	r3, r3, #8
 8001898:	b2db      	uxtb	r3, r3
 800189a:	767b      	strb	r3, [r7, #25]
    tx_msg[2] = timeout;
 800189c:	69fb      	ldr	r3, [r7, #28]
 800189e:	b2db      	uxtb	r3, r3
 80018a0:	76bb      	strb	r3, [r7, #26]
    SX1262WriteCommand(mcu, radio, SET_RX, tx_msg, 3);
 80018a2:	f107 0318 	add.w	r3, r7, #24
 80018a6:	2203      	movs	r2, #3
 80018a8:	9200      	str	r2, [sp, #0]
 80018aa:	2282      	movs	r2, #130	; 0x82
 80018ac:	68b9      	ldr	r1, [r7, #8]
 80018ae:	68f8      	ldr	r0, [r7, #12]
 80018b0:	f000 ff6e 	bl	8002790 <SX1262WriteCommand>

    SX1262GetStatus(mcu, radio);
 80018b4:	68b9      	ldr	r1, [r7, #8]
 80018b6:	68f8      	ldr	r0, [r7, #12]
 80018b8:	f000 fbd8 	bl	800206c <SX1262GetStatus>

    return RADIO_OK;
 80018bc:	2300      	movs	r3, #0
}
 80018be:	4618      	mov	r0, r3
 80018c0:	3720      	adds	r7, #32
 80018c2:	46bd      	mov	sp, r7
 80018c4:	bd80      	pop	{r7, pc}
 80018c6:	bf00      	nop
 80018c8:	402f4000 	.word	0x402f4000

080018cc <SX1262ClearIrqStatus>:
/*****************************************************************************
*  @Description	  Clears all the generated interrupts from the chip and from
*                 the radio struct
******************************************************************************/
void SX1262ClearIrqStatus(MCU* mcu, Radio* radio, uint16_t irq)
{
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b088      	sub	sp, #32
 80018d0:	af02      	add	r7, sp, #8
 80018d2:	60f8      	str	r0, [r7, #12]
 80018d4:	60b9      	str	r1, [r7, #8]
 80018d6:	4613      	mov	r3, r2
 80018d8:	80fb      	strh	r3, [r7, #6]
    uint8_t tx_msg[2];

    tx_msg[0] = irq >> 8;
 80018da:	88fb      	ldrh	r3, [r7, #6]
 80018dc:	0a1b      	lsrs	r3, r3, #8
 80018de:	b29b      	uxth	r3, r3
 80018e0:	b2db      	uxtb	r3, r3
 80018e2:	753b      	strb	r3, [r7, #20]
    tx_msg[1] = irq;
 80018e4:	88fb      	ldrh	r3, [r7, #6]
 80018e6:	b2db      	uxtb	r3, r3
 80018e8:	757b      	strb	r3, [r7, #21]
    SX1262WriteCommand(mcu, radio, CLEAR_IRQ_STATUS, tx_msg, 2);
 80018ea:	f107 0314 	add.w	r3, r7, #20
 80018ee:	2202      	movs	r2, #2
 80018f0:	9200      	str	r2, [sp, #0]
 80018f2:	2202      	movs	r2, #2
 80018f4:	68b9      	ldr	r1, [r7, #8]
 80018f6:	68f8      	ldr	r0, [r7, #12]
 80018f8:	f000 ff4a 	bl	8002790 <SX1262WriteCommand>

    radio->irq_status = 0x0000;
 80018fc:	68bb      	ldr	r3, [r7, #8]
 80018fe:	2200      	movs	r2, #0
 8001900:	f8a3 2440 	strh.w	r2, [r3, #1088]	; 0x440

	radio->irq.txDone 			= 0;
 8001904:	68ba      	ldr	r2, [r7, #8]
 8001906:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 800190a:	f36f 0300 	bfc	r3, #0, #1
 800190e:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.rxDone			= 0;
 8001912:	68ba      	ldr	r2, [r7, #8]
 8001914:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001918:	f36f 0341 	bfc	r3, #1, #1
 800191c:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.preambleDetected = 0;
 8001920:	68ba      	ldr	r2, [r7, #8]
 8001922:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001926:	f36f 0382 	bfc	r3, #2, #1
 800192a:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.syncWordValid 	= 0;
 800192e:	68ba      	ldr	r2, [r7, #8]
 8001930:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001934:	f36f 03c3 	bfc	r3, #3, #1
 8001938:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.headerValid		= 0;
 800193c:	68ba      	ldr	r2, [r7, #8]
 800193e:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001942:	f36f 1304 	bfc	r3, #4, #1
 8001946:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.headerError 		= 0;
 800194a:	68ba      	ldr	r2, [r7, #8]
 800194c:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001950:	f36f 1345 	bfc	r3, #5, #1
 8001954:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.crcError 		= 0;
 8001958:	68ba      	ldr	r2, [r7, #8]
 800195a:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 800195e:	f36f 1386 	bfc	r3, #6, #1
 8001962:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.cadDone 			= 0;
 8001966:	68ba      	ldr	r2, [r7, #8]
 8001968:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 800196c:	f36f 13c7 	bfc	r3, #7, #1
 8001970:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
	radio->irq.cadDetected 		= 0;
 8001974:	68ba      	ldr	r2, [r7, #8]
 8001976:	f892 3443 	ldrb.w	r3, [r2, #1091]	; 0x443
 800197a:	f36f 0300 	bfc	r3, #0, #1
 800197e:	f882 3443 	strb.w	r3, [r2, #1091]	; 0x443
	radio->irq.timeout 			= 0;
 8001982:	68ba      	ldr	r2, [r7, #8]
 8001984:	f892 3443 	ldrb.w	r3, [r2, #1091]	; 0x443
 8001988:	f36f 0341 	bfc	r3, #1, #1
 800198c:	f882 3443 	strb.w	r3, [r2, #1091]	; 0x443
}
 8001990:	bf00      	nop
 8001992:	3718      	adds	r7, #24
 8001994:	46bd      	mov	sp, r7
 8001996:	bd80      	pop	{r7, pc}

08001998 <SX1262GetIrqStatus>:
/*****************************************************************************
*  @Description	  Returns all the interrupts generated by the chip and updates
*                 the radio struct
******************************************************************************/
void SX1262GetIrqStatus(MCU* mcu, Radio* radio)
{
 8001998:	b580      	push	{r7, lr}
 800199a:	b084      	sub	sp, #16
 800199c:	af00      	add	r7, sp, #0
 800199e:	6078      	str	r0, [r7, #4]
 80019a0:	6039      	str	r1, [r7, #0]
    SX1262ReadCommand(mcu, radio, GET_IRQ_STATUS, 2);
 80019a2:	2302      	movs	r3, #2
 80019a4:	2212      	movs	r2, #18
 80019a6:	6839      	ldr	r1, [r7, #0]
 80019a8:	6878      	ldr	r0, [r7, #4]
 80019aa:	f001 f815 	bl	80029d8 <SX1262ReadCommand>

    uint16_t irq_status = (radio->spi_read_msg[2] << 8) | radio->spi_read_msg[3];
 80019ae:	683b      	ldr	r3, [r7, #0]
 80019b0:	789b      	ldrb	r3, [r3, #2]
 80019b2:	021b      	lsls	r3, r3, #8
 80019b4:	b21a      	sxth	r2, r3
 80019b6:	683b      	ldr	r3, [r7, #0]
 80019b8:	78db      	ldrb	r3, [r3, #3]
 80019ba:	b21b      	sxth	r3, r3
 80019bc:	4313      	orrs	r3, r2
 80019be:	b21b      	sxth	r3, r3
 80019c0:	81fb      	strh	r3, [r7, #14]

    /* Updates the struct irq */
    if ((irq_status & IRQ_TX_DONE) == IRQ_TX_DONE)
 80019c2:	89fb      	ldrh	r3, [r7, #14]
 80019c4:	f003 0301 	and.w	r3, r3, #1
 80019c8:	2b00      	cmp	r3, #0
 80019ca:	d007      	beq.n	80019dc <SX1262GetIrqStatus+0x44>
    	radio->irq.txDone = 1;
 80019cc:	683a      	ldr	r2, [r7, #0]
 80019ce:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 80019d2:	f043 0301 	orr.w	r3, r3, #1
 80019d6:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 80019da:	e006      	b.n	80019ea <SX1262GetIrqStatus+0x52>
    else
    	radio->irq.txDone = 0;
 80019dc:	683a      	ldr	r2, [r7, #0]
 80019de:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 80019e2:	f36f 0300 	bfc	r3, #0, #1
 80019e6:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_RX_DONE) == IRQ_RX_DONE)
 80019ea:	89fb      	ldrh	r3, [r7, #14]
 80019ec:	f003 0302 	and.w	r3, r3, #2
 80019f0:	2b00      	cmp	r3, #0
 80019f2:	d007      	beq.n	8001a04 <SX1262GetIrqStatus+0x6c>
    	radio->irq.rxDone = 1;
 80019f4:	683a      	ldr	r2, [r7, #0]
 80019f6:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 80019fa:	f043 0302 	orr.w	r3, r3, #2
 80019fe:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 8001a02:	e006      	b.n	8001a12 <SX1262GetIrqStatus+0x7a>
    else
    	radio->irq.rxDone = 0;
 8001a04:	683a      	ldr	r2, [r7, #0]
 8001a06:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a0a:	f36f 0341 	bfc	r3, #1, #1
 8001a0e:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_PREAMBLE_DETECTED) == IRQ_PREAMBLE_DETECTED)
 8001a12:	89fb      	ldrh	r3, [r7, #14]
 8001a14:	f003 0304 	and.w	r3, r3, #4
 8001a18:	2b00      	cmp	r3, #0
 8001a1a:	d007      	beq.n	8001a2c <SX1262GetIrqStatus+0x94>
    	radio->irq.preambleDetected = 1;
 8001a1c:	683a      	ldr	r2, [r7, #0]
 8001a1e:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a22:	f043 0304 	orr.w	r3, r3, #4
 8001a26:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 8001a2a:	e006      	b.n	8001a3a <SX1262GetIrqStatus+0xa2>
    else
    	radio->irq.preambleDetected = 0;
 8001a2c:	683a      	ldr	r2, [r7, #0]
 8001a2e:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a32:	f36f 0382 	bfc	r3, #2, #1
 8001a36:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_SYNC_WORD_VALID) == IRQ_SYNC_WORD_VALID)
 8001a3a:	89fb      	ldrh	r3, [r7, #14]
 8001a3c:	f003 0308 	and.w	r3, r3, #8
 8001a40:	2b00      	cmp	r3, #0
 8001a42:	d007      	beq.n	8001a54 <SX1262GetIrqStatus+0xbc>
    	radio->irq.syncWordValid = 1;
 8001a44:	683a      	ldr	r2, [r7, #0]
 8001a46:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a4a:	f043 0308 	orr.w	r3, r3, #8
 8001a4e:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 8001a52:	e006      	b.n	8001a62 <SX1262GetIrqStatus+0xca>
    else
    	radio->irq.syncWordValid = 0;
 8001a54:	683a      	ldr	r2, [r7, #0]
 8001a56:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a5a:	f36f 03c3 	bfc	r3, #3, #1
 8001a5e:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_HEADER_VALID) == IRQ_HEADER_VALID)
 8001a62:	89fb      	ldrh	r3, [r7, #14]
 8001a64:	f003 0310 	and.w	r3, r3, #16
 8001a68:	2b00      	cmp	r3, #0
 8001a6a:	d007      	beq.n	8001a7c <SX1262GetIrqStatus+0xe4>
    	radio->irq.headerValid = 1;
 8001a6c:	683a      	ldr	r2, [r7, #0]
 8001a6e:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a72:	f043 0310 	orr.w	r3, r3, #16
 8001a76:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 8001a7a:	e006      	b.n	8001a8a <SX1262GetIrqStatus+0xf2>
    else
    	radio->irq.headerValid = 0;
 8001a7c:	683a      	ldr	r2, [r7, #0]
 8001a7e:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a82:	f36f 1304 	bfc	r3, #4, #1
 8001a86:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_HEADER_ERROR) == IRQ_HEADER_ERROR)
 8001a8a:	89fb      	ldrh	r3, [r7, #14]
 8001a8c:	f003 0320 	and.w	r3, r3, #32
 8001a90:	2b00      	cmp	r3, #0
 8001a92:	d007      	beq.n	8001aa4 <SX1262GetIrqStatus+0x10c>
    	radio->irq.headerError = 1;
 8001a94:	683a      	ldr	r2, [r7, #0]
 8001a96:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001a9a:	f043 0320 	orr.w	r3, r3, #32
 8001a9e:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 8001aa2:	e006      	b.n	8001ab2 <SX1262GetIrqStatus+0x11a>
    else
    	radio->irq.headerError = 0;
 8001aa4:	683a      	ldr	r2, [r7, #0]
 8001aa6:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001aaa:	f36f 1345 	bfc	r3, #5, #1
 8001aae:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_CRC_ERROR) == IRQ_CRC_ERROR)
 8001ab2:	89fb      	ldrh	r3, [r7, #14]
 8001ab4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001ab8:	2b00      	cmp	r3, #0
 8001aba:	d007      	beq.n	8001acc <SX1262GetIrqStatus+0x134>
    	radio->irq.crcError = 1;
 8001abc:	683a      	ldr	r2, [r7, #0]
 8001abe:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001ac2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001ac6:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 8001aca:	e006      	b.n	8001ada <SX1262GetIrqStatus+0x142>
    else
    	radio->irq.crcError = 0;
 8001acc:	683a      	ldr	r2, [r7, #0]
 8001ace:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001ad2:	f36f 1386 	bfc	r3, #6, #1
 8001ad6:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_CAD_DONE) == IRQ_CAD_DONE)
 8001ada:	89fb      	ldrh	r3, [r7, #14]
 8001adc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	d007      	beq.n	8001af4 <SX1262GetIrqStatus+0x15c>
    	radio->irq.cadDone = 1;
 8001ae4:	683a      	ldr	r2, [r7, #0]
 8001ae6:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001aea:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001aee:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442
 8001af2:	e006      	b.n	8001b02 <SX1262GetIrqStatus+0x16a>
    else
    	radio->irq.cadDone = 0;
 8001af4:	683a      	ldr	r2, [r7, #0]
 8001af6:	f892 3442 	ldrb.w	r3, [r2, #1090]	; 0x442
 8001afa:	f36f 13c7 	bfc	r3, #7, #1
 8001afe:	f882 3442 	strb.w	r3, [r2, #1090]	; 0x442

    if ((irq_status & IRQ_CAD_DETECTED) == IRQ_CAD_DETECTED)
 8001b02:	89fb      	ldrh	r3, [r7, #14]
 8001b04:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001b08:	2b00      	cmp	r3, #0
 8001b0a:	d007      	beq.n	8001b1c <SX1262GetIrqStatus+0x184>
    	radio->irq.cadDetected = 1;
 8001b0c:	683a      	ldr	r2, [r7, #0]
 8001b0e:	f892 3443 	ldrb.w	r3, [r2, #1091]	; 0x443
 8001b12:	f043 0301 	orr.w	r3, r3, #1
 8001b16:	f882 3443 	strb.w	r3, [r2, #1091]	; 0x443
 8001b1a:	e006      	b.n	8001b2a <SX1262GetIrqStatus+0x192>
    else
    	radio->irq.cadDetected = 0;
 8001b1c:	683a      	ldr	r2, [r7, #0]
 8001b1e:	f892 3443 	ldrb.w	r3, [r2, #1091]	; 0x443
 8001b22:	f36f 0300 	bfc	r3, #0, #1
 8001b26:	f882 3443 	strb.w	r3, [r2, #1091]	; 0x443

    if ((irq_status & IRQ_TIMEOUT) == IRQ_TIMEOUT)
 8001b2a:	89fb      	ldrh	r3, [r7, #14]
 8001b2c:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001b30:	2b00      	cmp	r3, #0
 8001b32:	d007      	beq.n	8001b44 <SX1262GetIrqStatus+0x1ac>
    	radio->irq.timeout = 1;
 8001b34:	683a      	ldr	r2, [r7, #0]
 8001b36:	f892 3443 	ldrb.w	r3, [r2, #1091]	; 0x443
 8001b3a:	f043 0302 	orr.w	r3, r3, #2
 8001b3e:	f882 3443 	strb.w	r3, [r2, #1091]	; 0x443
    else
    	radio->irq.timeout = 0;
}
 8001b42:	e006      	b.n	8001b52 <SX1262GetIrqStatus+0x1ba>
    	radio->irq.timeout = 0;
 8001b44:	683a      	ldr	r2, [r7, #0]
 8001b46:	f892 3443 	ldrb.w	r3, [r2, #1091]	; 0x443
 8001b4a:	f36f 0341 	bfc	r3, #1, #1
 8001b4e:	f882 3443 	strb.w	r3, [r2, #1091]	; 0x443
}
 8001b52:	bf00      	nop
 8001b54:	3710      	adds	r7, #16
 8001b56:	46bd      	mov	sp, r7
 8001b58:	bd80      	pop	{r7, pc}

08001b5a <SX1262GetRxBufferStatus>:
/*****************************************************************************
*  @Description	  Gets the position of the first byte of the received message
*                 as well as its length in the Buffer
******************************************************************************/
void SX1262GetRxBufferStatus(MCU* mcu, Radio* radio)
{
 8001b5a:	b580      	push	{r7, lr}
 8001b5c:	b082      	sub	sp, #8
 8001b5e:	af00      	add	r7, sp, #0
 8001b60:	6078      	str	r0, [r7, #4]
 8001b62:	6039      	str	r1, [r7, #0]
    SX1262ReadCommand(mcu, radio, GET_RX_BUFFER_STATUS, 2);
 8001b64:	2302      	movs	r3, #2
 8001b66:	2213      	movs	r2, #19
 8001b68:	6839      	ldr	r1, [r7, #0]
 8001b6a:	6878      	ldr	r0, [r7, #4]
 8001b6c:	f000 ff34 	bl	80029d8 <SX1262ReadCommand>

    radio->payloadLength = radio->spi_read_msg[2];
 8001b70:	683b      	ldr	r3, [r7, #0]
 8001b72:	789a      	ldrb	r2, [r3, #2]
 8001b74:	683b      	ldr	r3, [r7, #0]
 8001b76:	f883 244e 	strb.w	r2, [r3, #1102]	; 0x44e
    radio->rxStartBufferPointer = radio->spi_read_msg[3];
 8001b7a:	683b      	ldr	r3, [r7, #0]
 8001b7c:	78da      	ldrb	r2, [r3, #3]
 8001b7e:	683b      	ldr	r3, [r7, #0]
 8001b80:	f883 244f 	strb.w	r2, [r3, #1103]	; 0x44f
}
 8001b84:	bf00      	nop
 8001b86:	3708      	adds	r7, #8
 8001b88:	46bd      	mov	sp, r7
 8001b8a:	bd80      	pop	{r7, pc}

08001b8c <SX1262Calibrate>:

/*****************************************************************************
*  @Description	  Begins the calibration of the parts declared in calibParams
******************************************************************************/
void SX1262Calibrate(MCU* mcu, Radio* radio, CalibrationParams_t calibParam)
{
 8001b8c:	b580      	push	{r7, lr}
 8001b8e:	b088      	sub	sp, #32
 8001b90:	af02      	add	r7, sp, #8
 8001b92:	60f8      	str	r0, [r7, #12]
 8001b94:	60b9      	str	r1, [r7, #8]
 8001b96:	713a      	strb	r2, [r7, #4]
    uint8_t value = (calibParam.Img << 6) 	   |
 8001b98:	793b      	ldrb	r3, [r7, #4]
 8001b9a:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8001b9e:	b2db      	uxtb	r3, r3
 8001ba0:	019b      	lsls	r3, r3, #6
 8001ba2:	b25a      	sxtb	r2, r3
    				(calibParam.ADCBulkP << 5) |
 8001ba4:	793b      	ldrb	r3, [r7, #4]
 8001ba6:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8001baa:	b2db      	uxtb	r3, r3
 8001bac:	015b      	lsls	r3, r3, #5
    uint8_t value = (calibParam.Img << 6) 	   |
 8001bae:	b25b      	sxtb	r3, r3
 8001bb0:	4313      	orrs	r3, r2
 8001bb2:	b25a      	sxtb	r2, r3
					(calibParam.ADCBulkN << 4) |
 8001bb4:	793b      	ldrb	r3, [r7, #4]
 8001bb6:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8001bba:	b2db      	uxtb	r3, r3
 8001bbc:	011b      	lsls	r3, r3, #4
    				(calibParam.ADCBulkP << 5) |
 8001bbe:	b25b      	sxtb	r3, r3
 8001bc0:	4313      	orrs	r3, r2
 8001bc2:	b25a      	sxtb	r2, r3
    		        (calibParam.ADCPulse << 3) |
 8001bc4:	793b      	ldrb	r3, [r7, #4]
 8001bc6:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8001bca:	b2db      	uxtb	r3, r3
 8001bcc:	00db      	lsls	r3, r3, #3
					(calibParam.ADCBulkN << 4) |
 8001bce:	b25b      	sxtb	r3, r3
 8001bd0:	4313      	orrs	r3, r2
 8001bd2:	b25a      	sxtb	r2, r3
					(calibParam.PLL << 2) 	   |
 8001bd4:	793b      	ldrb	r3, [r7, #4]
 8001bd6:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8001bda:	b2db      	uxtb	r3, r3
 8001bdc:	009b      	lsls	r3, r3, #2
    		        (calibParam.ADCPulse << 3) |
 8001bde:	b25b      	sxtb	r3, r3
 8001be0:	4313      	orrs	r3, r2
 8001be2:	b25a      	sxtb	r2, r3
					(calibParam.RC13M << 1)    |
 8001be4:	793b      	ldrb	r3, [r7, #4]
 8001be6:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8001bea:	b2db      	uxtb	r3, r3
 8001bec:	005b      	lsls	r3, r3, #1
					(calibParam.PLL << 2) 	   |
 8001bee:	b25b      	sxtb	r3, r3
 8001bf0:	4313      	orrs	r3, r2
 8001bf2:	b25a      	sxtb	r2, r3
					(calibParam.RC64K);
 8001bf4:	793b      	ldrb	r3, [r7, #4]
 8001bf6:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8001bfa:	b2db      	uxtb	r3, r3
 8001bfc:	b25b      	sxtb	r3, r3
					(calibParam.RC13M << 1)    |
 8001bfe:	4313      	orrs	r3, r2
 8001c00:	b25b      	sxtb	r3, r3
 8001c02:	b2db      	uxtb	r3, r3
    uint8_t value = (calibParam.Img << 6) 	   |
 8001c04:	75fb      	strb	r3, [r7, #23]

    SX1262WriteCommand(mcu, radio, CALIBRATE, &value, 1);
 8001c06:	f107 0317 	add.w	r3, r7, #23
 8001c0a:	2201      	movs	r2, #1
 8001c0c:	9200      	str	r2, [sp, #0]
 8001c0e:	2289      	movs	r2, #137	; 0x89
 8001c10:	68b9      	ldr	r1, [r7, #8]
 8001c12:	68f8      	ldr	r0, [r7, #12]
 8001c14:	f000 fdbc 	bl	8002790 <SX1262WriteCommand>
}
 8001c18:	bf00      	nop
 8001c1a:	3718      	adds	r7, #24
 8001c1c:	46bd      	mov	sp, r7
 8001c1e:	bd80      	pop	{r7, pc}

08001c20 <SX1262SetDio2AsRfSwitchCtrl>:
*  @Description	  Enables / Disables the DIO2 pin to control the RF switch.
*                 If it is enabled, it can generate no other interrupts even
*                 if they are mapped on it
******************************************************************************/
void SX1262SetDio2AsRfSwitchCtrl(MCU* mcu, Radio* radio, bool enable)
{
 8001c20:	b580      	push	{r7, lr}
 8001c22:	b088      	sub	sp, #32
 8001c24:	af02      	add	r7, sp, #8
 8001c26:	60f8      	str	r0, [r7, #12]
 8001c28:	60b9      	str	r1, [r7, #8]
 8001c2a:	4613      	mov	r3, r2
 8001c2c:	71fb      	strb	r3, [r7, #7]
	uint8_t enable_switch = 0;
 8001c2e:	2300      	movs	r3, #0
 8001c30:	75fb      	strb	r3, [r7, #23]
	if (enable)
 8001c32:	79fb      	ldrb	r3, [r7, #7]
 8001c34:	2b00      	cmp	r3, #0
 8001c36:	d001      	beq.n	8001c3c <SX1262SetDio2AsRfSwitchCtrl+0x1c>
		enable_switch = 1;
 8001c38:	2301      	movs	r3, #1
 8001c3a:	75fb      	strb	r3, [r7, #23]

    SX1262WriteCommand(mcu, radio, SET_RF_SWITCH_MODE, &enable_switch, 1);
 8001c3c:	f107 0317 	add.w	r3, r7, #23
 8001c40:	2201      	movs	r2, #1
 8001c42:	9200      	str	r2, [sp, #0]
 8001c44:	229d      	movs	r2, #157	; 0x9d
 8001c46:	68b9      	ldr	r1, [r7, #8]
 8001c48:	68f8      	ldr	r0, [r7, #12]
 8001c4a:	f000 fda1 	bl	8002790 <SX1262WriteCommand>
}
 8001c4e:	bf00      	nop
 8001c50:	3718      	adds	r7, #24
 8001c52:	46bd      	mov	sp, r7
 8001c54:	bd80      	pop	{r7, pc}

08001c56 <SX1262SetDio3AsTcxoCtrl>:
*                 If it is enabled, it can generate no interrupts even
*                 if they are mapped on it.
*                 IMAGE CALIBRATION SHOULD BE CALLED AFTER THIS COMMAND
******************************************************************************/
void SX1262SetDio3AsTcxoCtrl(MCU* mcu, Radio* radio, TcxoCtrlVoltage_t tcxoVoltage, uint8_t delay_duration)
{
 8001c56:	b580      	push	{r7, lr}
 8001c58:	b088      	sub	sp, #32
 8001c5a:	af02      	add	r7, sp, #8
 8001c5c:	60f8      	str	r0, [r7, #12]
 8001c5e:	60b9      	str	r1, [r7, #8]
 8001c60:	4611      	mov	r1, r2
 8001c62:	461a      	mov	r2, r3
 8001c64:	460b      	mov	r3, r1
 8001c66:	71fb      	strb	r3, [r7, #7]
 8001c68:	4613      	mov	r3, r2
 8001c6a:	71bb      	strb	r3, [r7, #6]
	if (radio->opMode != STDBY_RC_MODE)
 8001c6c:	68bb      	ldr	r3, [r7, #8]
 8001c6e:	f893 3444 	ldrb.w	r3, [r3, #1092]	; 0x444
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d004      	beq.n	8001c80 <SX1262SetDio3AsTcxoCtrl+0x2a>
		SX1262SetStandby(mcu, radio, STDBY_RC);
 8001c76:	2200      	movs	r2, #0
 8001c78:	68b9      	ldr	r1, [r7, #8]
 8001c7a:	68f8      	ldr	r0, [r7, #12]
 8001c7c:	f7ff f9b8 	bl	8000ff0 <SX1262SetStandby>

	uint8_t tx_msg[4];

	uint32_t delay = delay_duration << 6;
 8001c80:	79bb      	ldrb	r3, [r7, #6]
 8001c82:	019b      	lsls	r3, r3, #6
 8001c84:	617b      	str	r3, [r7, #20]

    if (tcxoVoltage > TCXO_MAX_VOLTAGE) {
 8001c86:	79fb      	ldrb	r3, [r7, #7]
 8001c88:	2b02      	cmp	r3, #2
 8001c8a:	d901      	bls.n	8001c90 <SX1262SetDio3AsTcxoCtrl+0x3a>
    	tcxoVoltage = TCXO_MAX_VOLTAGE;   // Voltage limit for protection of the TCXO
 8001c8c:	2302      	movs	r3, #2
 8001c8e:	71fb      	strb	r3, [r7, #7]
    }

    tx_msg[0] = tcxoVoltage;
 8001c90:	79fb      	ldrb	r3, [r7, #7]
 8001c92:	743b      	strb	r3, [r7, #16]
    tx_msg[1] = delay >> 16;
 8001c94:	697b      	ldr	r3, [r7, #20]
 8001c96:	0c1b      	lsrs	r3, r3, #16
 8001c98:	b2db      	uxtb	r3, r3
 8001c9a:	747b      	strb	r3, [r7, #17]
    tx_msg[2] = delay >> 8;
 8001c9c:	697b      	ldr	r3, [r7, #20]
 8001c9e:	0a1b      	lsrs	r3, r3, #8
 8001ca0:	b2db      	uxtb	r3, r3
 8001ca2:	74bb      	strb	r3, [r7, #18]
    tx_msg[3] = delay;
 8001ca4:	697b      	ldr	r3, [r7, #20]
 8001ca6:	b2db      	uxtb	r3, r3
 8001ca8:	74fb      	strb	r3, [r7, #19]

    SX1262WriteCommand(mcu, radio, SET_TCXO_MODE, tx_msg, 4);
 8001caa:	f107 0310 	add.w	r3, r7, #16
 8001cae:	2204      	movs	r2, #4
 8001cb0:	9200      	str	r2, [sp, #0]
 8001cb2:	2297      	movs	r2, #151	; 0x97
 8001cb4:	68b9      	ldr	r1, [r7, #8]
 8001cb6:	68f8      	ldr	r0, [r7, #12]
 8001cb8:	f000 fd6a 	bl	8002790 <SX1262WriteCommand>
    radio->tcxoVolt = tcxoVoltage;
 8001cbc:	68bb      	ldr	r3, [r7, #8]
 8001cbe:	79fa      	ldrb	r2, [r7, #7]
 8001cc0:	f883 2445 	strb.w	r2, [r3, #1093]	; 0x445
}
 8001cc4:	bf00      	nop
 8001cc6:	3718      	adds	r7, #24
 8001cc8:	46bd      	mov	sp, r7
 8001cca:	bd80      	pop	{r7, pc}

08001ccc <SX1262CalibrateImage>:
/*****************************************************************************
*  @Description	  It calibrates the frequency band in which the chip is
*                 about to transmit / receive
******************************************************************************/
void SX1262CalibrateImage(MCU* mcu, Radio* radio, uint32_t freq)
{
 8001ccc:	b580      	push	{r7, lr}
 8001cce:	b088      	sub	sp, #32
 8001cd0:	af02      	add	r7, sp, #8
 8001cd2:	60f8      	str	r0, [r7, #12]
 8001cd4:	60b9      	str	r1, [r7, #8]
 8001cd6:	607a      	str	r2, [r7, #4]
    uint8_t calFreq[2];

    if( freq > 900000000 )
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	4a1e      	ldr	r2, [pc, #120]	; (8001d54 <SX1262CalibrateImage+0x88>)
 8001cdc:	4293      	cmp	r3, r2
 8001cde:	d904      	bls.n	8001cea <SX1262CalibrateImage+0x1e>
    {
        calFreq[0] = 0xE1;
 8001ce0:	23e1      	movs	r3, #225	; 0xe1
 8001ce2:	753b      	strb	r3, [r7, #20]
        calFreq[1] = 0xE9;
 8001ce4:	23e9      	movs	r3, #233	; 0xe9
 8001ce6:	757b      	strb	r3, [r7, #21]
 8001ce8:	e022      	b.n	8001d30 <SX1262CalibrateImage+0x64>
    }
    else if( freq > 850000000 )
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	4a1a      	ldr	r2, [pc, #104]	; (8001d58 <SX1262CalibrateImage+0x8c>)
 8001cee:	4293      	cmp	r3, r2
 8001cf0:	d904      	bls.n	8001cfc <SX1262CalibrateImage+0x30>
    {
        calFreq[0] = 0xD7;
 8001cf2:	23d7      	movs	r3, #215	; 0xd7
 8001cf4:	753b      	strb	r3, [r7, #20]
        calFreq[1] = 0xDB;
 8001cf6:	23db      	movs	r3, #219	; 0xdb
 8001cf8:	757b      	strb	r3, [r7, #21]
 8001cfa:	e019      	b.n	8001d30 <SX1262CalibrateImage+0x64>
    }
    else if( freq > 770000000 )
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	4a17      	ldr	r2, [pc, #92]	; (8001d5c <SX1262CalibrateImage+0x90>)
 8001d00:	4293      	cmp	r3, r2
 8001d02:	d904      	bls.n	8001d0e <SX1262CalibrateImage+0x42>
    {
        calFreq[0] = 0xC1;
 8001d04:	23c1      	movs	r3, #193	; 0xc1
 8001d06:	753b      	strb	r3, [r7, #20]
        calFreq[1] = 0xC5;
 8001d08:	23c5      	movs	r3, #197	; 0xc5
 8001d0a:	757b      	strb	r3, [r7, #21]
 8001d0c:	e010      	b.n	8001d30 <SX1262CalibrateImage+0x64>
    }
    else if( freq > 460000000 )
 8001d0e:	687b      	ldr	r3, [r7, #4]
 8001d10:	4a13      	ldr	r2, [pc, #76]	; (8001d60 <SX1262CalibrateImage+0x94>)
 8001d12:	4293      	cmp	r3, r2
 8001d14:	d904      	bls.n	8001d20 <SX1262CalibrateImage+0x54>
    {
        calFreq[0] = 0x75;
 8001d16:	2375      	movs	r3, #117	; 0x75
 8001d18:	753b      	strb	r3, [r7, #20]
        calFreq[1] = 0x81;
 8001d1a:	2381      	movs	r3, #129	; 0x81
 8001d1c:	757b      	strb	r3, [r7, #21]
 8001d1e:	e007      	b.n	8001d30 <SX1262CalibrateImage+0x64>
    }
    else if( freq > 425000000 )
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	4a10      	ldr	r2, [pc, #64]	; (8001d64 <SX1262CalibrateImage+0x98>)
 8001d24:	4293      	cmp	r3, r2
 8001d26:	d903      	bls.n	8001d30 <SX1262CalibrateImage+0x64>
    {
        calFreq[0] = 0x6B;
 8001d28:	236b      	movs	r3, #107	; 0x6b
 8001d2a:	753b      	strb	r3, [r7, #20]
        calFreq[1] = 0x6F;
 8001d2c:	236f      	movs	r3, #111	; 0x6f
 8001d2e:	757b      	strb	r3, [r7, #21]
    }
    SX1262WriteCommand(mcu, radio, CALIBRATE_IMAGE, calFreq, 2);
 8001d30:	f107 0314 	add.w	r3, r7, #20
 8001d34:	2202      	movs	r2, #2
 8001d36:	9200      	str	r2, [sp, #0]
 8001d38:	2298      	movs	r2, #152	; 0x98
 8001d3a:	68b9      	ldr	r1, [r7, #8]
 8001d3c:	68f8      	ldr	r0, [r7, #12]
 8001d3e:	f000 fd27 	bl	8002790 <SX1262WriteCommand>
    radio->ImageCalibrated = true;
 8001d42:	68bb      	ldr	r3, [r7, #8]
 8001d44:	2201      	movs	r2, #1
 8001d46:	f883 23e1 	strb.w	r2, [r3, #993]	; 0x3e1
}
 8001d4a:	bf00      	nop
 8001d4c:	3718      	adds	r7, #24
 8001d4e:	46bd      	mov	sp, r7
 8001d50:	bd80      	pop	{r7, pc}
 8001d52:	bf00      	nop
 8001d54:	35a4e900 	.word	0x35a4e900
 8001d58:	32a9f880 	.word	0x32a9f880
 8001d5c:	2de54480 	.word	0x2de54480
 8001d60:	1b6b0b00 	.word	0x1b6b0b00
 8001d64:	1954fc40 	.word	0x1954fc40

08001d68 <SX1262SetRegulatorMode>:
/*****************************************************************************
*  @Description	  Used to choose between internal LDO and internal DC-DC.
*                 When using Dc-DC the consumption can be dropped to a half
******************************************************************************/
void SX1262SetRegulatorMode(MCU* mcu, Radio* radio, RegulatorMode_t mode)
{
 8001d68:	b580      	push	{r7, lr}
 8001d6a:	b086      	sub	sp, #24
 8001d6c:	af02      	add	r7, sp, #8
 8001d6e:	60f8      	str	r0, [r7, #12]
 8001d70:	60b9      	str	r1, [r7, #8]
 8001d72:	4613      	mov	r3, r2
 8001d74:	71fb      	strb	r3, [r7, #7]
    SX1262WriteCommand(mcu, radio, SET_REGULATOR_MODE, &mode, 1);
 8001d76:	1dfb      	adds	r3, r7, #7
 8001d78:	2201      	movs	r2, #1
 8001d7a:	9200      	str	r2, [sp, #0]
 8001d7c:	2296      	movs	r2, #150	; 0x96
 8001d7e:	68b9      	ldr	r1, [r7, #8]
 8001d80:	68f8      	ldr	r0, [r7, #12]
 8001d82:	f000 fd05 	bl	8002790 <SX1262WriteCommand>

    radio->regMode = mode;
 8001d86:	79fa      	ldrb	r2, [r7, #7]
 8001d88:	68bb      	ldr	r3, [r7, #8]
 8001d8a:	f883 2446 	strb.w	r2, [r3, #1094]	; 0x446
}
 8001d8e:	bf00      	nop
 8001d90:	3710      	adds	r7, #16
 8001d92:	46bd      	mov	sp, r7
 8001d94:	bd80      	pop	{r7, pc}

08001d96 <SX1262SetRxTxFallbackMode>:
/*****************************************************************************
*  @Description	  Dictates in which mode the chip will get to after a packet
*                 transmission / reception
******************************************************************************/
void SX1262SetRxTxFallbackMode(MCU* mcu, Radio* radio, FallbackMode_t fallback_mode)
{
 8001d96:	b580      	push	{r7, lr}
 8001d98:	b086      	sub	sp, #24
 8001d9a:	af02      	add	r7, sp, #8
 8001d9c:	60f8      	str	r0, [r7, #12]
 8001d9e:	60b9      	str	r1, [r7, #8]
 8001da0:	4613      	mov	r3, r2
 8001da2:	71fb      	strb	r3, [r7, #7]
	SX1262WriteCommand(mcu, radio, SET_RX_TX_FALLBACK_MODE, &fallback_mode, 1);
 8001da4:	1dfb      	adds	r3, r7, #7
 8001da6:	2201      	movs	r2, #1
 8001da8:	9200      	str	r2, [sp, #0]
 8001daa:	2293      	movs	r2, #147	; 0x93
 8001dac:	68b9      	ldr	r1, [r7, #8]
 8001dae:	68f8      	ldr	r0, [r7, #12]
 8001db0:	f000 fcee 	bl	8002790 <SX1262WriteCommand>

	radio->fallbackMode = fallback_mode;
 8001db4:	79fa      	ldrb	r2, [r7, #7]
 8001db6:	68bb      	ldr	r3, [r7, #8]
 8001db8:	f883 2447 	strb.w	r2, [r3, #1095]	; 0x447
}
 8001dbc:	bf00      	nop
 8001dbe:	3710      	adds	r7, #16
 8001dc0:	46bd      	mov	sp, r7
 8001dc2:	bd80      	pop	{r7, pc}

08001dc4 <SX1262SetPayload>:

/*****************************************************************************
*  @Description	  Writes the data to be transmitted to the Data Buffer
******************************************************************************/
void SX1262SetPayload(MCU* mcu, Radio* radio, uint8_t *payload, uint8_t size)
{
 8001dc4:	b580      	push	{r7, lr}
 8001dc6:	b086      	sub	sp, #24
 8001dc8:	af02      	add	r7, sp, #8
 8001dca:	60f8      	str	r0, [r7, #12]
 8001dcc:	60b9      	str	r1, [r7, #8]
 8001dce:	607a      	str	r2, [r7, #4]
 8001dd0:	70fb      	strb	r3, [r7, #3]
    SX1262WriteBuffer(mcu, radio, 0x00, payload, size);
 8001dd2:	78fb      	ldrb	r3, [r7, #3]
 8001dd4:	9300      	str	r3, [sp, #0]
 8001dd6:	687b      	ldr	r3, [r7, #4]
 8001dd8:	2200      	movs	r2, #0
 8001dda:	68b9      	ldr	r1, [r7, #8]
 8001ddc:	68f8      	ldr	r0, [r7, #12]
 8001dde:	f001 f8d3 	bl	8002f88 <SX1262WriteBuffer>
}
 8001de2:	bf00      	nop
 8001de4:	3710      	adds	r7, #16
 8001de6:	46bd      	mov	sp, r7
 8001de8:	bd80      	pop	{r7, pc}

08001dea <SX1262SendPayload>:
*                 sets the chip to TX mode, in order to start the transmission
*                 wait boolean defines if the function returns when the TX has
*                 started (false) or when it is completed (true)
******************************************************************************/
void SX1262SendPayload(MCU* mcu, Radio* radio, uint8_t *payload, uint8_t size, uint8_t timeout, bool wait)
{
 8001dea:	b580      	push	{r7, lr}
 8001dec:	b084      	sub	sp, #16
 8001dee:	af00      	add	r7, sp, #0
 8001df0:	60f8      	str	r0, [r7, #12]
 8001df2:	60b9      	str	r1, [r7, #8]
 8001df4:	607a      	str	r2, [r7, #4]
 8001df6:	70fb      	strb	r3, [r7, #3]
    SX1262SetPayload(mcu, radio, payload, size);
 8001df8:	78fb      	ldrb	r3, [r7, #3]
 8001dfa:	687a      	ldr	r2, [r7, #4]
 8001dfc:	68b9      	ldr	r1, [r7, #8]
 8001dfe:	68f8      	ldr	r0, [r7, #12]
 8001e00:	f7ff ffe0 	bl	8001dc4 <SX1262SetPayload>
    SX1262SetTx(mcu, radio, timeout, wait);
 8001e04:	7e3b      	ldrb	r3, [r7, #24]
 8001e06:	b29a      	uxth	r2, r3
 8001e08:	7f3b      	ldrb	r3, [r7, #28]
 8001e0a:	68b9      	ldr	r1, [r7, #8]
 8001e0c:	68f8      	ldr	r0, [r7, #12]
 8001e0e:	f7ff fc1b 	bl	8001648 <SX1262SetTx>
}
 8001e12:	bf00      	nop
 8001e14:	3710      	adds	r7, #16
 8001e16:	46bd      	mov	sp, r7
 8001e18:	bd80      	pop	{r7, pc}

08001e1a <SX1262GetPacketType>:

/*****************************************************************************
*  @Description	  Returns the packet type stored in the chip's registers
******************************************************************************/
void SX1262GetPacketType(MCU* mcu, Radio* radio)
{
 8001e1a:	b580      	push	{r7, lr}
 8001e1c:	b082      	sub	sp, #8
 8001e1e:	af00      	add	r7, sp, #0
 8001e20:	6078      	str	r0, [r7, #4]
 8001e22:	6039      	str	r1, [r7, #0]
	SX1262ReadCommand(mcu, radio, GET_PACKET_TYPE, 1);
 8001e24:	2301      	movs	r3, #1
 8001e26:	2211      	movs	r2, #17
 8001e28:	6839      	ldr	r1, [r7, #0]
 8001e2a:	6878      	ldr	r0, [r7, #4]
 8001e2c:	f000 fdd4 	bl	80029d8 <SX1262ReadCommand>

	radio->packetType = radio->spi_read_msg[2];
 8001e30:	683b      	ldr	r3, [r7, #0]
 8001e32:	789a      	ldrb	r2, [r3, #2]
 8001e34:	683b      	ldr	r3, [r7, #0]
 8001e36:	f883 23e0 	strb.w	r2, [r3, #992]	; 0x3e0
}
 8001e3a:	bf00      	nop
 8001e3c:	3708      	adds	r7, #8
 8001e3e:	46bd      	mov	sp, r7
 8001e40:	bd80      	pop	{r7, pc}

08001e42 <SX1262GetPacketStatus>:
/*****************************************************************************
*  @Description	  Returns information about the received signal power and
*                 possible errors (according to the protocol used)
******************************************************************************/
void SX1262GetPacketStatus(MCU* mcu, Radio* radio)
{
 8001e42:	b580      	push	{r7, lr}
 8001e44:	b082      	sub	sp, #8
 8001e46:	af00      	add	r7, sp, #0
 8001e48:	6078      	str	r0, [r7, #4]
 8001e4a:	6039      	str	r1, [r7, #0]
    SX1262ReadCommand(mcu, radio, GET_PACKET_STATUS, 3);
 8001e4c:	2303      	movs	r3, #3
 8001e4e:	2214      	movs	r2, #20
 8001e50:	6839      	ldr	r1, [r7, #0]
 8001e52:	6878      	ldr	r0, [r7, #4]
 8001e54:	f000 fdc0 	bl	80029d8 <SX1262ReadCommand>

    switch(radio->function)
 8001e58:	683b      	ldr	r3, [r7, #0]
 8001e5a:	f893 3468 	ldrb.w	r3, [r3, #1128]	; 0x468
 8001e5e:	2b00      	cmp	r3, #0
 8001e60:	d002      	beq.n	8001e68 <SX1262GetPacketStatus+0x26>
 8001e62:	2b01      	cmp	r3, #1
 8001e64:	d033      	beq.n	8001ece <SX1262GetPacketStatus+0x8c>

    case TPMS:
    	radio->TpmsRssiAvg = -radio->spi_read_msg[4] >> 1;
    	break;
    }
}
 8001e66:	e03b      	b.n	8001ee0 <SX1262GetPacketStatus+0x9e>
    	switch(radio->packetType)
 8001e68:	683b      	ldr	r3, [r7, #0]
 8001e6a:	f893 33e0 	ldrb.w	r3, [r3, #992]	; 0x3e0
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d002      	beq.n	8001e78 <SX1262GetPacketStatus+0x36>
 8001e72:	2b01      	cmp	r3, #1
 8001e74:	d011      	beq.n	8001e9a <SX1262GetPacketStatus+0x58>
    		break;
 8001e76:	e029      	b.n	8001ecc <SX1262GetPacketStatus+0x8a>
    		radio->packetStatus.Gfsk.RssiSync = -radio->spi_read_msg[3] >> 1;
 8001e78:	683b      	ldr	r3, [r7, #0]
 8001e7a:	78db      	ldrb	r3, [r3, #3]
 8001e7c:	425b      	negs	r3, r3
 8001e7e:	105b      	asrs	r3, r3, #1
 8001e80:	b25a      	sxtb	r2, r3
 8001e82:	683b      	ldr	r3, [r7, #0]
 8001e84:	f883 2416 	strb.w	r2, [r3, #1046]	; 0x416
    		radio->packetStatus.Gfsk.RssiAvg  = -radio->spi_read_msg[4] >> 1;
 8001e88:	683b      	ldr	r3, [r7, #0]
 8001e8a:	791b      	ldrb	r3, [r3, #4]
 8001e8c:	425b      	negs	r3, r3
 8001e8e:	105b      	asrs	r3, r3, #1
 8001e90:	b25a      	sxtb	r2, r3
 8001e92:	683b      	ldr	r3, [r7, #0]
 8001e94:	f883 2417 	strb.w	r2, [r3, #1047]	; 0x417
    		break;
 8001e98:	e018      	b.n	8001ecc <SX1262GetPacketStatus+0x8a>
    		radio->packetStatus.LoRa.RssiPacket       = -radio->spi_read_msg[2] >> 1;
 8001e9a:	683b      	ldr	r3, [r7, #0]
 8001e9c:	789b      	ldrb	r3, [r3, #2]
 8001e9e:	425b      	negs	r3, r3
 8001ea0:	105b      	asrs	r3, r3, #1
 8001ea2:	b25a      	sxtb	r2, r3
 8001ea4:	683b      	ldr	r3, [r7, #0]
 8001ea6:	f883 2418 	strb.w	r2, [r3, #1048]	; 0x418
    		radio->packetStatus.LoRa.SnrPacket        = ((int8_t)radio->spi_read_msg[3]) >> 2;   // Returns SNR value [dB] rounded to the nearest integer value
 8001eaa:	683b      	ldr	r3, [r7, #0]
 8001eac:	78db      	ldrb	r3, [r3, #3]
 8001eae:	b25b      	sxtb	r3, r3
 8001eb0:	109b      	asrs	r3, r3, #2
 8001eb2:	b25a      	sxtb	r2, r3
 8001eb4:	683b      	ldr	r3, [r7, #0]
 8001eb6:	f883 2419 	strb.w	r2, [r3, #1049]	; 0x419
    		radio->packetStatus.LoRa.SignalRssiPacket = -radio->spi_read_msg[4] >> 1;
 8001eba:	683b      	ldr	r3, [r7, #0]
 8001ebc:	791b      	ldrb	r3, [r3, #4]
 8001ebe:	425b      	negs	r3, r3
 8001ec0:	105b      	asrs	r3, r3, #1
 8001ec2:	b25a      	sxtb	r2, r3
 8001ec4:	683b      	ldr	r3, [r7, #0]
 8001ec6:	f883 241a 	strb.w	r2, [r3, #1050]	; 0x41a
    		break;
 8001eca:	bf00      	nop
    	break;
 8001ecc:	e008      	b.n	8001ee0 <SX1262GetPacketStatus+0x9e>
    	radio->TpmsRssiAvg = -radio->spi_read_msg[4] >> 1;
 8001ece:	683b      	ldr	r3, [r7, #0]
 8001ed0:	791b      	ldrb	r3, [r3, #4]
 8001ed2:	425b      	negs	r3, r3
 8001ed4:	105b      	asrs	r3, r3, #1
 8001ed6:	b25a      	sxtb	r2, r3
 8001ed8:	683b      	ldr	r3, [r7, #0]
 8001eda:	f883 23d8 	strb.w	r2, [r3, #984]	; 0x3d8
    	break;
 8001ede:	bf00      	nop
}
 8001ee0:	bf00      	nop
 8001ee2:	3708      	adds	r7, #8
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	bd80      	pop	{r7, pc}

08001ee8 <SX1262GetDeviceErrors>:
*  @Description	  Returns possible device errors during calibration. The most
*                 common is the XoscStartErr and special care must be given to
*                 the soldering of the TCXO as well as the commands order
******************************************************************************/
void SX1262GetDeviceErrors(MCU* mcu, Radio* radio)
{
 8001ee8:	b580      	push	{r7, lr}
 8001eea:	b082      	sub	sp, #8
 8001eec:	af00      	add	r7, sp, #0
 8001eee:	6078      	str	r0, [r7, #4]
 8001ef0:	6039      	str	r1, [r7, #0]
    SX1262ReadCommand(mcu, radio, GET_DEVICE_ERRORS, 2);
 8001ef2:	2302      	movs	r3, #2
 8001ef4:	2217      	movs	r2, #23
 8001ef6:	6839      	ldr	r1, [r7, #0]
 8001ef8:	6878      	ldr	r0, [r7, #4]
 8001efa:	f000 fd6d 	bl	80029d8 <SX1262ReadCommand>

    radio->errors.PaRampErr     = (radio->spi_read_msg[2] & 0x01);
 8001efe:	683b      	ldr	r3, [r7, #0]
 8001f00:	789b      	ldrb	r3, [r3, #2]
 8001f02:	f003 0301 	and.w	r3, r3, #1
 8001f06:	b2d9      	uxtb	r1, r3
 8001f08:	683a      	ldr	r2, [r7, #0]
 8001f0a:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001f0e:	f361 13c7 	bfi	r3, r1, #7, #1
 8001f12:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.PllLockErr    = (radio->spi_read_msg[3] & 0x40) >> 6;
 8001f16:	683b      	ldr	r3, [r7, #0]
 8001f18:	78db      	ldrb	r3, [r3, #3]
 8001f1a:	119b      	asrs	r3, r3, #6
 8001f1c:	f003 0301 	and.w	r3, r3, #1
 8001f20:	b2d9      	uxtb	r1, r3
 8001f22:	683a      	ldr	r2, [r7, #0]
 8001f24:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001f28:	f361 1386 	bfi	r3, r1, #6, #1
 8001f2c:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.XoscStartErr  = (radio->spi_read_msg[3] & 0x20) >> 5;
 8001f30:	683b      	ldr	r3, [r7, #0]
 8001f32:	78db      	ldrb	r3, [r3, #3]
 8001f34:	115b      	asrs	r3, r3, #5
 8001f36:	f003 0301 	and.w	r3, r3, #1
 8001f3a:	b2d9      	uxtb	r1, r3
 8001f3c:	683a      	ldr	r2, [r7, #0]
 8001f3e:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001f42:	f361 1345 	bfi	r3, r1, #5, #1
 8001f46:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.ImgCalibErr   = (radio->spi_read_msg[3] & 0x10) >> 4;
 8001f4a:	683b      	ldr	r3, [r7, #0]
 8001f4c:	78db      	ldrb	r3, [r3, #3]
 8001f4e:	111b      	asrs	r3, r3, #4
 8001f50:	f003 0301 	and.w	r3, r3, #1
 8001f54:	b2d9      	uxtb	r1, r3
 8001f56:	683a      	ldr	r2, [r7, #0]
 8001f58:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001f5c:	f361 1304 	bfi	r3, r1, #4, #1
 8001f60:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.AdcCalibErr   = (radio->spi_read_msg[3] & 0x08) >> 3;
 8001f64:	683b      	ldr	r3, [r7, #0]
 8001f66:	78db      	ldrb	r3, [r3, #3]
 8001f68:	10db      	asrs	r3, r3, #3
 8001f6a:	f003 0301 	and.w	r3, r3, #1
 8001f6e:	b2d9      	uxtb	r1, r3
 8001f70:	683a      	ldr	r2, [r7, #0]
 8001f72:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001f76:	f361 03c3 	bfi	r3, r1, #3, #1
 8001f7a:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.PllCalibErr   = (radio->spi_read_msg[3] & 0x04) >> 2;
 8001f7e:	683b      	ldr	r3, [r7, #0]
 8001f80:	78db      	ldrb	r3, [r3, #3]
 8001f82:	109b      	asrs	r3, r3, #2
 8001f84:	f003 0301 	and.w	r3, r3, #1
 8001f88:	b2d9      	uxtb	r1, r3
 8001f8a:	683a      	ldr	r2, [r7, #0]
 8001f8c:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001f90:	f361 0382 	bfi	r3, r1, #2, #1
 8001f94:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.Rc13mCalibErr = (radio->spi_read_msg[3] & 0x02) >> 1;
 8001f98:	683b      	ldr	r3, [r7, #0]
 8001f9a:	78db      	ldrb	r3, [r3, #3]
 8001f9c:	105b      	asrs	r3, r3, #1
 8001f9e:	f003 0301 	and.w	r3, r3, #1
 8001fa2:	b2d9      	uxtb	r1, r3
 8001fa4:	683a      	ldr	r2, [r7, #0]
 8001fa6:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001faa:	f361 0341 	bfi	r3, r1, #1, #1
 8001fae:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.Rc64kCalibErr = (radio->spi_read_msg[3] & 0x01);
 8001fb2:	683b      	ldr	r3, [r7, #0]
 8001fb4:	78db      	ldrb	r3, [r3, #3]
 8001fb6:	f003 0301 	and.w	r3, r3, #1
 8001fba:	b2d9      	uxtb	r1, r3
 8001fbc:	683a      	ldr	r2, [r7, #0]
 8001fbe:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001fc2:	f361 0300 	bfi	r3, r1, #0, #1
 8001fc6:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
}
 8001fca:	bf00      	nop
 8001fcc:	3708      	adds	r7, #8
 8001fce:	46bd      	mov	sp, r7
 8001fd0:	bd80      	pop	{r7, pc}

08001fd2 <SX1262ClearDeviceErrors>:
/*****************************************************************************
*  @Description	  Clears the aforementioned calibration errors from the chip's
*                 registers as well as the radio struct
******************************************************************************/
void SX1262ClearDeviceErrors(MCU* mcu, Radio* radio)
{
 8001fd2:	b580      	push	{r7, lr}
 8001fd4:	b086      	sub	sp, #24
 8001fd6:	af02      	add	r7, sp, #8
 8001fd8:	6078      	str	r0, [r7, #4]
 8001fda:	6039      	str	r1, [r7, #0]
    uint8_t tx_msg[2] = {0x00, 0x00};
 8001fdc:	2300      	movs	r3, #0
 8001fde:	81bb      	strh	r3, [r7, #12]
    SX1262WriteCommand(mcu, radio, CLEAR_DEVICE_ERRORS, tx_msg, 2);
 8001fe0:	f107 030c 	add.w	r3, r7, #12
 8001fe4:	2202      	movs	r2, #2
 8001fe6:	9200      	str	r2, [sp, #0]
 8001fe8:	2207      	movs	r2, #7
 8001fea:	6839      	ldr	r1, [r7, #0]
 8001fec:	6878      	ldr	r0, [r7, #4]
 8001fee:	f000 fbcf 	bl	8002790 <SX1262WriteCommand>

    radio->errors.PaRampErr     = 0;
 8001ff2:	683a      	ldr	r2, [r7, #0]
 8001ff4:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8001ff8:	f36f 13c7 	bfc	r3, #7, #1
 8001ffc:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.PllLockErr    = 0;
 8002000:	683a      	ldr	r2, [r7, #0]
 8002002:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8002006:	f36f 1386 	bfc	r3, #6, #1
 800200a:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.XoscStartErr  = 0;
 800200e:	683a      	ldr	r2, [r7, #0]
 8002010:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8002014:	f36f 1345 	bfc	r3, #5, #1
 8002018:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.ImgCalibErr   = 0;
 800201c:	683a      	ldr	r2, [r7, #0]
 800201e:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8002022:	f36f 1304 	bfc	r3, #4, #1
 8002026:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.AdcCalibErr   = 0;
 800202a:	683a      	ldr	r2, [r7, #0]
 800202c:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 8002030:	f36f 03c3 	bfc	r3, #3, #1
 8002034:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.PllCalibErr   = 0;
 8002038:	683a      	ldr	r2, [r7, #0]
 800203a:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 800203e:	f36f 0382 	bfc	r3, #2, #1
 8002042:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.Rc13mCalibErr = 0;
 8002046:	683a      	ldr	r2, [r7, #0]
 8002048:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 800204c:	f36f 0341 	bfc	r3, #1, #1
 8002050:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
    radio->errors.Rc64kCalibErr = 0;
 8002054:	683a      	ldr	r2, [r7, #0]
 8002056:	f892 3448 	ldrb.w	r3, [r2, #1096]	; 0x448
 800205a:	f36f 0300 	bfc	r3, #0, #1
 800205e:	f882 3448 	strb.w	r3, [r2, #1096]	; 0x448
}
 8002062:	bf00      	nop
 8002064:	3710      	adds	r7, #16
 8002066:	46bd      	mov	sp, r7
 8002068:	bd80      	pop	{r7, pc}
	...

0800206c <SX1262GetStatus>:

/*****************************************************************************
*  @Description	  Returns the operating mode of the chip
******************************************************************************/
void SX1262GetStatus(MCU* mcu, Radio* radio)
{
 800206c:	b580      	push	{r7, lr}
 800206e:	b084      	sub	sp, #16
 8002070:	af00      	add	r7, sp, #0
 8002072:	6078      	str	r0, [r7, #4]
 8002074:	6039      	str	r1, [r7, #0]
	SX1262ReadCommand(mcu, radio, GET_STATUS, 1);
 8002076:	2301      	movs	r3, #1
 8002078:	22c0      	movs	r2, #192	; 0xc0
 800207a:	6839      	ldr	r1, [r7, #0]
 800207c:	6878      	ldr	r0, [r7, #4]
 800207e:	f000 fcab 	bl	80029d8 <SX1262ReadCommand>

	uint8_t chip_mode = (radio->spi_read_msg[1] >> 4) & 0x07;
 8002082:	683b      	ldr	r3, [r7, #0]
 8002084:	785b      	ldrb	r3, [r3, #1]
 8002086:	091b      	lsrs	r3, r3, #4
 8002088:	b2db      	uxtb	r3, r3
 800208a:	f003 0307 	and.w	r3, r3, #7
 800208e:	73fb      	strb	r3, [r7, #15]

	switch (chip_mode)
 8002090:	7bfb      	ldrb	r3, [r7, #15]
 8002092:	3b02      	subs	r3, #2
 8002094:	2b04      	cmp	r3, #4
 8002096:	d826      	bhi.n	80020e6 <SX1262GetStatus+0x7a>
 8002098:	a201      	add	r2, pc, #4	; (adr r2, 80020a0 <SX1262GetStatus+0x34>)
 800209a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800209e:	bf00      	nop
 80020a0:	080020b5 	.word	0x080020b5
 80020a4:	080020bf 	.word	0x080020bf
 80020a8:	080020c9 	.word	0x080020c9
 80020ac:	080020d3 	.word	0x080020d3
 80020b0:	080020dd 	.word	0x080020dd
		{
		case 0x02:
			radio->opMode = STDBY_RC_MODE;
 80020b4:	683b      	ldr	r3, [r7, #0]
 80020b6:	2200      	movs	r2, #0
 80020b8:	f883 2444 	strb.w	r2, [r3, #1092]	; 0x444
			break;
 80020bc:	e017      	b.n	80020ee <SX1262GetStatus+0x82>
		case 0x03:
			radio->opMode = STDBY_XOSC_MODE;
 80020be:	683b      	ldr	r3, [r7, #0]
 80020c0:	2201      	movs	r2, #1
 80020c2:	f883 2444 	strb.w	r2, [r3, #1092]	; 0x444
			break;
 80020c6:	e012      	b.n	80020ee <SX1262GetStatus+0x82>
		case 0x04:
			radio->opMode = FS_MODE;
 80020c8:	683b      	ldr	r3, [r7, #0]
 80020ca:	2202      	movs	r2, #2
 80020cc:	f883 2444 	strb.w	r2, [r3, #1092]	; 0x444
			break;
 80020d0:	e00d      	b.n	80020ee <SX1262GetStatus+0x82>
		case 0x05:
			radio->opMode = RX_MODE;
 80020d2:	683b      	ldr	r3, [r7, #0]
 80020d4:	2204      	movs	r2, #4
 80020d6:	f883 2444 	strb.w	r2, [r3, #1092]	; 0x444
			break;
 80020da:	e008      	b.n	80020ee <SX1262GetStatus+0x82>
		case 0x06:
			radio->opMode = TX_MODE;
 80020dc:	683b      	ldr	r3, [r7, #0]
 80020de:	2203      	movs	r2, #3
 80020e0:	f883 2444 	strb.w	r2, [r3, #1092]	; 0x444
			break;
 80020e4:	e003      	b.n	80020ee <SX1262GetStatus+0x82>
		default:
			radio->opMode = UNDEFINED;
 80020e6:	683b      	ldr	r3, [r7, #0]
 80020e8:	2205      	movs	r2, #5
 80020ea:	f883 2444 	strb.w	r2, [r3, #1092]	; 0x444
		}

#if ((FUNCTION != TPMS_DEBUG) &&(FUNCTION != TPMS_RELEASE))
	if (radio->opMode == TX_MODE)
 80020ee:	683b      	ldr	r3, [r7, #0]
 80020f0:	f893 3444 	ldrb.w	r3, [r3, #1092]	; 0x444
 80020f4:	2b03      	cmp	r3, #3
 80020f6:	d109      	bne.n	800210c <SX1262GetStatus+0xa0>
		HAL_GPIO_WritePin(mcu->radio_tx_led.type, mcu->radio_tx_led.pin, GPIO_PIN_SET);
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
 8002102:	2201      	movs	r2, #1
 8002104:	4619      	mov	r1, r3
 8002106:	f007 f9a9 	bl	800945c <HAL_GPIO_WritePin>
	else
		HAL_GPIO_WritePin(mcu->radio_tx_led.type, mcu->radio_tx_led.pin, GPIO_PIN_RESET);
#endif
}
 800210a:	e008      	b.n	800211e <SX1262GetStatus+0xb2>
		HAL_GPIO_WritePin(mcu->radio_tx_led.type, mcu->radio_tx_led.pin, GPIO_PIN_RESET);
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
 8002116:	2200      	movs	r2, #0
 8002118:	4619      	mov	r1, r3
 800211a:	f007 f99f 	bl	800945c <HAL_GPIO_WritePin>
}
 800211e:	bf00      	nop
 8002120:	3710      	adds	r7, #16
 8002122:	46bd      	mov	sp, r7
 8002124:	bd80      	pop	{r7, pc}
 8002126:	bf00      	nop

08002128 <SX1262Reset>:
/********************************************************************************
*  @Description	  Drives the NRESET pin low, so it erases all registers / buffers
*                 and fully resets the chip, before getting it high again
*********************************************************************************/
void SX1262Reset(MCU* mcu)
{
 8002128:	b580      	push	{r7, lr}
 800212a:	b082      	sub	sp, #8
 800212c:	af00      	add	r7, sp, #0
 800212e:	6078      	str	r0, [r7, #4]
  HAL_GPIO_WritePin(mcu->nreset.type, mcu->nreset.pin, GPIO_PIN_RESET);
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	68d8      	ldr	r0, [r3, #12]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	8a1b      	ldrh	r3, [r3, #16]
 8002138:	2200      	movs	r2, #0
 800213a:	4619      	mov	r1, r3
 800213c:	f007 f98e 	bl	800945c <HAL_GPIO_WritePin>
  HAL_Delay(2);
 8002140:	2002      	movs	r0, #2
 8002142:	f005 f8d1 	bl	80072e8 <HAL_Delay>
  HAL_GPIO_WritePin(mcu->nreset.type, mcu->nreset.pin, GPIO_PIN_SET);
 8002146:	687b      	ldr	r3, [r7, #4]
 8002148:	68d8      	ldr	r0, [r3, #12]
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	8a1b      	ldrh	r3, [r3, #16]
 800214e:	2201      	movs	r2, #1
 8002150:	4619      	mov	r1, r3
 8002152:	f007 f983 	bl	800945c <HAL_GPIO_WritePin>

  while(HAL_GPIO_ReadPin(mcu->busy.type, mcu->busy.pin) != GPIO_PIN_RESET);  // Wait until BUSY pin goes LOW
 8002156:	bf00      	nop
 8002158:	687b      	ldr	r3, [r7, #4]
 800215a:	695a      	ldr	r2, [r3, #20]
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	8b1b      	ldrh	r3, [r3, #24]
 8002160:	4619      	mov	r1, r3
 8002162:	4610      	mov	r0, r2
 8002164:	f007 f962 	bl	800942c <HAL_GPIO_ReadPin>
 8002168:	4603      	mov	r3, r0
 800216a:	2b00      	cmp	r3, #0
 800216c:	d1f4      	bne.n	8002158 <SX1262Reset+0x30>
}
 800216e:	bf00      	nop
 8002170:	bf00      	nop
 8002172:	3708      	adds	r7, #8
 8002174:	46bd      	mov	sp, r7
 8002176:	bd80      	pop	{r7, pc}

08002178 <SX1262SetOCP>:
/*****************************************************************************
*  @Description	  Sets maximum draw current in the chip for overcurrent
*                 protection purposes
******************************************************************************/
void SX1262SetOCP(MCU* mcu, Radio* radio, uint16_t value /* [mA] */)
{
 8002178:	b580      	push	{r7, lr}
 800217a:	b088      	sub	sp, #32
 800217c:	af02      	add	r7, sp, #8
 800217e:	60f8      	str	r0, [r7, #12]
 8002180:	60b9      	str	r1, [r7, #8]
 8002182:	4613      	mov	r3, r2
 8002184:	80fb      	strh	r3, [r7, #6]
  uint8_t ocp_value = 0xFF;//(uint8_t)(1.0 * value / 2.5);
 8002186:	23ff      	movs	r3, #255	; 0xff
 8002188:	75fb      	strb	r3, [r7, #23]

  SX1262WriteRegister(mcu, radio, OCP_CONFIGURATION_REG, &ocp_value, 1);
 800218a:	f107 0317 	add.w	r3, r7, #23
 800218e:	2201      	movs	r2, #1
 8002190:	9200      	str	r2, [sp, #0]
 8002192:	f640 02e7 	movw	r2, #2279	; 0x8e7
 8002196:	68b9      	ldr	r1, [r7, #8]
 8002198:	68f8      	ldr	r0, [r7, #12]
 800219a:	f000 fd15 	bl	8002bc8 <SX1262WriteRegister>
}
 800219e:	bf00      	nop
 80021a0:	3718      	adds	r7, #24
 80021a2:	46bd      	mov	sp, r7
 80021a4:	bd80      	pop	{r7, pc}

080021a6 <SX1262RfSwitchInit>:
*                 it connects the antenna to the Rx path
*                 Control  LOW : Rx
*                 Control HIGH : Tx
******************************************************************************/
void SX1262RfSwitchInit(MCU* mcu)
{
 80021a6:	b580      	push	{r7, lr}
 80021a8:	b082      	sub	sp, #8
 80021aa:	af00      	add	r7, sp, #0
 80021ac:	6078      	str	r0, [r7, #4]
	HAL_GPIO_WritePin(mcu->rf_switch_supp.type, mcu->rf_switch_supp.pin, GPIO_PIN_SET);
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 80021b2:	687b      	ldr	r3, [r7, #4]
 80021b4:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 80021b8:	2201      	movs	r2, #1
 80021ba:	4619      	mov	r1, r3
 80021bc:	f007 f94e 	bl	800945c <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(mcu->rf_switch.type, mcu->rf_switch.pin, GPIO_PIN_RESET);
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	6b58      	ldr	r0, [r3, #52]	; 0x34
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 80021c8:	2200      	movs	r2, #0
 80021ca:	4619      	mov	r1, r3
 80021cc:	f007 f946 	bl	800945c <HAL_GPIO_WritePin>
}
 80021d0:	bf00      	nop
 80021d2:	3708      	adds	r7, #8
 80021d4:	46bd      	mov	sp, r7
 80021d6:	bd80      	pop	{r7, pc}

080021d8 <SX1262GfskInit>:
/*****************************************************************************
*  @Description	  Initializes the radio for the GFSK modulation. The user can
*                 define in the arguments the frequency and the power in dBm
******************************************************************************/
RadioState_t SX1262GfskInit(MCU* mcu, Radio* radio, int8_t power, uint16_t freqInMHz)
{
 80021d8:	b580      	push	{r7, lr}
 80021da:	b094      	sub	sp, #80	; 0x50
 80021dc:	af02      	add	r7, sp, #8
 80021de:	60f8      	str	r0, [r7, #12]
 80021e0:	60b9      	str	r1, [r7, #8]
 80021e2:	4611      	mov	r1, r2
 80021e4:	461a      	mov	r2, r3
 80021e6:	460b      	mov	r3, r1
 80021e8:	71fb      	strb	r3, [r7, #7]
 80021ea:	4613      	mov	r3, r2
 80021ec:	80bb      	strh	r3, [r7, #4]
	SX1262Reset(mcu);
 80021ee:	68f8      	ldr	r0, [r7, #12]
 80021f0:	f7ff ff9a 	bl	8002128 <SX1262Reset>
	SX1262RfSwitchInit(mcu);
 80021f4:	68f8      	ldr	r0, [r7, #12]
 80021f6:	f7ff ffd6 	bl	80021a6 <SX1262RfSwitchInit>
	SX1262GetStatus(mcu, radio);
 80021fa:	68b9      	ldr	r1, [r7, #8]
 80021fc:	68f8      	ldr	r0, [r7, #12]
 80021fe:	f7ff ff35 	bl	800206c <SX1262GetStatus>

	SX1262SetStandby(mcu, radio, STDBY_RC);
 8002202:	2200      	movs	r2, #0
 8002204:	68b9      	ldr	r1, [r7, #8]
 8002206:	68f8      	ldr	r0, [r7, #12]
 8002208:	f7fe fef2 	bl	8000ff0 <SX1262SetStandby>
	SX1262SetDio3AsTcxoCtrl(mcu, radio, TCXO_1_8V, TCXO_SETUP_TIME);
 800220c:	2332      	movs	r3, #50	; 0x32
 800220e:	2202      	movs	r2, #2
 8002210:	68b9      	ldr	r1, [r7, #8]
 8002212:	68f8      	ldr	r0, [r7, #12]
 8002214:	f7ff fd1f 	bl	8001c56 <SX1262SetDio3AsTcxoCtrl>

 	SX1262ClearDeviceErrors(mcu, radio);
 8002218:	68b9      	ldr	r1, [r7, #8]
 800221a:	68f8      	ldr	r0, [r7, #12]
 800221c:	f7ff fed9 	bl	8001fd2 <SX1262ClearDeviceErrors>
	CalibrationParams_t calib;
	calib.ADCBulkN = 1;
 8002220:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8002224:	f043 0310 	orr.w	r3, r3, #16
 8002228:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
	calib.ADCBulkP = 1;
 800222c:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8002230:	f043 0320 	orr.w	r3, r3, #32
 8002234:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
	calib.ADCPulse = 1;
 8002238:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800223c:	f043 0308 	orr.w	r3, r3, #8
 8002240:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
	calib.Img = 1;
 8002244:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8002248:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800224c:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
	calib.PLL = 1;
 8002250:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8002254:	f043 0304 	orr.w	r3, r3, #4
 8002258:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
	calib.RC13M = 1;
 800225c:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 8002260:	f043 0302 	orr.w	r3, r3, #2
 8002264:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
	calib.RC64K = 1;
 8002268:	f897 3044 	ldrb.w	r3, [r7, #68]	; 0x44
 800226c:	f043 0301 	orr.w	r3, r3, #1
 8002270:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
	SX1262Calibrate(mcu, radio, calib);
 8002274:	f897 2044 	ldrb.w	r2, [r7, #68]	; 0x44
 8002278:	68b9      	ldr	r1, [r7, #8]
 800227a:	68f8      	ldr	r0, [r7, #12]
 800227c:	f7ff fc86 	bl	8001b8c <SX1262Calibrate>
 	SX1262GetDeviceErrors(mcu, radio);
 8002280:	68b9      	ldr	r1, [r7, #8]
 8002282:	68f8      	ldr	r0, [r7, #12]
 8002284:	f7ff fe30 	bl	8001ee8 <SX1262GetDeviceErrors>

	SX1262SetDio2AsRfSwitchCtrl(mcu, radio, true);  // STM32 controls the RF switch through interrupts from DIO2
 8002288:	2201      	movs	r2, #1
 800228a:	68b9      	ldr	r1, [r7, #8]
 800228c:	68f8      	ldr	r0, [r7, #12]
 800228e:	f7ff fcc7 	bl	8001c20 <SX1262SetDio2AsRfSwitchCtrl>

	SX1262SetStandby(mcu, radio, STDBY_RC);
 8002292:	2200      	movs	r2, #0
 8002294:	68b9      	ldr	r1, [r7, #8]
 8002296:	68f8      	ldr	r0, [r7, #12]
 8002298:	f7fe feaa 	bl	8000ff0 <SX1262SetStandby>
	SX1262SetRegulatorMode(mcu, radio, USE_DCDC);
 800229c:	2201      	movs	r2, #1
 800229e:	68b9      	ldr	r1, [r7, #8]
 80022a0:	68f8      	ldr	r0, [r7, #12]
 80022a2:	f7ff fd61 	bl	8001d68 <SX1262SetRegulatorMode>
	SX1262SetBufferBaseAddress(mcu, radio, 0, 0);
 80022a6:	2300      	movs	r3, #0
 80022a8:	2200      	movs	r2, #0
 80022aa:	68b9      	ldr	r1, [r7, #8]
 80022ac:	68f8      	ldr	r0, [r7, #12]
 80022ae:	f7fe ffad 	bl	800120c <SX1262SetBufferBaseAddress>

	SX1262SetPaConfig(mcu, radio, power);
 80022b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80022b6:	461a      	mov	r2, r3
 80022b8:	68b9      	ldr	r1, [r7, #8]
 80022ba:	68f8      	ldr	r0, [r7, #12]
 80022bc:	f7fe ff10 	bl	80010e0 <SX1262SetPaConfig>

	SX1262SetOCP(mcu, radio, 500);
 80022c0:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
 80022c4:	68b9      	ldr	r1, [r7, #8]
 80022c6:	68f8      	ldr	r0, [r7, #12]
 80022c8:	f7ff ff56 	bl	8002178 <SX1262SetOCP>

	SX1262SetTxParams(mcu, radio, power, PA_RAMP_200_US, false);  // WORKAROUND OFF
 80022cc:	f997 2007 	ldrsb.w	r2, [r7, #7]
 80022d0:	2300      	movs	r3, #0
 80022d2:	9300      	str	r3, [sp, #0]
 80022d4:	2304      	movs	r3, #4
 80022d6:	68b9      	ldr	r1, [r7, #8]
 80022d8:	68f8      	ldr	r0, [r7, #12]
 80022da:	f7fe ff44 	bl	8001166 <SX1262SetTxParams>

	SX1262SetDioIrqParams(mcu, radio, IRQ_ALL, IRQ_RX_DONE, IRQ_NONE, IRQ_NONE);
 80022de:	2300      	movs	r3, #0
 80022e0:	9301      	str	r3, [sp, #4]
 80022e2:	2300      	movs	r3, #0
 80022e4:	9300      	str	r3, [sp, #0]
 80022e6:	2302      	movs	r3, #2
 80022e8:	f240 32ff 	movw	r2, #1023	; 0x3ff
 80022ec:	68b9      	ldr	r1, [r7, #8]
 80022ee:	68f8      	ldr	r0, [r7, #12]
 80022f0:	f7ff f94c 	bl	800158c <SX1262SetDioIrqParams>
 	SX1262ClearIrqStatus(mcu, radio,  0xFFFF);
 80022f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80022f8:	68b9      	ldr	r1, [r7, #8]
 80022fa:	68f8      	ldr	r0, [r7, #12]
 80022fc:	f7ff fae6 	bl	80018cc <SX1262ClearIrqStatus>

	SX1262SetRfFrequency(mcu, radio, freqInMHz * 1000000);
 8002300:	88bb      	ldrh	r3, [r7, #4]
 8002302:	4a35      	ldr	r2, [pc, #212]	; (80023d8 <SX1262GfskInit+0x200>)
 8002304:	fb02 f303 	mul.w	r3, r2, r3
 8002308:	461a      	mov	r2, r3
 800230a:	68b9      	ldr	r1, [r7, #8]
 800230c:	68f8      	ldr	r0, [r7, #12]
 800230e:	f7fe fe9b 	bl	8001048 <SX1262SetRfFrequency>

	SX1262SetPacketType(mcu, radio, PACKET_TYPE_GFSK);
 8002312:	2200      	movs	r2, #0
 8002314:	68b9      	ldr	r1, [r7, #8]
 8002316:	68f8      	ldr	r0, [r7, #12]
 8002318:	f7fe fe81 	bl	800101e <SX1262SetPacketType>
	SX1262GetPacketType(mcu, radio);
 800231c:	68b9      	ldr	r1, [r7, #8]
 800231e:	68f8      	ldr	r0, [r7, #12]
 8002320:	f7ff fd7b 	bl	8001e1a <SX1262GetPacketType>
#if ((FUNCTION == TPMS_DEBUG) || (FUNCTION == TPMS_RELEASE))
	uint8_t GfskSyncWord[3] = {0xF0, 0xF0, 0xF0};
	if (SX1262SetGfskSyncWord(mcu, radio, GfskSyncWord, sizeof(GfskSyncWord)) != RADIO_OK)
		return RADIO_SAFE_WRITE_ERROR;
#else
	uint8_t GfskSyncWord[8] = {0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0, 0xA0};
 8002324:	4a2d      	ldr	r2, [pc, #180]	; (80023dc <SX1262GfskInit+0x204>)
 8002326:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 800232a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800232e:	e883 0003 	stmia.w	r3, {r0, r1}
	if (SX1262SetGfskSyncWord(mcu, radio, GfskSyncWord, sizeof(GfskSyncWord)) != RADIO_OK)
 8002332:	f107 023c 	add.w	r2, r7, #60	; 0x3c
 8002336:	2308      	movs	r3, #8
 8002338:	68b9      	ldr	r1, [r7, #8]
 800233a:	68f8      	ldr	r0, [r7, #12]
 800233c:	f7ff f96e 	bl	800161c <SX1262SetGfskSyncWord>
 8002340:	4603      	mov	r3, r0
 8002342:	2b00      	cmp	r3, #0
 8002344:	d001      	beq.n	800234a <SX1262GfskInit+0x172>
		return RADIO_SAFE_WRITE_ERROR;
 8002346:	2301      	movs	r3, #1
 8002348:	e041      	b.n	80023ce <SX1262GfskInit+0x1f6>

//	if (SX1262SetCrcPolynomial(mcu, radio, 0x1021) != RADIO_OK)
//		return RADIO_SAFE_WRITE_ERROR;

	ModulationParams_t mod;
	mod.PacketType = PACKET_TYPE_GFSK;
 800234a:	2300      	movs	r3, #0
 800234c:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	mod.Params.Gfsk.BitRate = 60000;
 8002350:	f64e 2360 	movw	r3, #60000	; 0xea60
 8002354:	62fb      	str	r3, [r7, #44]	; 0x2c
	mod.Params.Gfsk.FdevHz  = 30000;
 8002356:	f247 5330 	movw	r3, #30000	; 0x7530
 800235a:	633b      	str	r3, [r7, #48]	; 0x30
	mod.Params.Gfsk.ModulationShaping = NO_FILTER; //MOD_SHAPING_G_BT_05;
 800235c:	2300      	movs	r3, #0
 800235e:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
	mod.Params.Gfsk.Bandwidth = GFSK_BW_156200;
 8002362:	231a      	movs	r3, #26
 8002364:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
	SX1262SetModulationParams(mcu, radio, &mod);
 8002368:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800236c:	461a      	mov	r2, r3
 800236e:	68b9      	ldr	r1, [r7, #8]
 8002370:	68f8      	ldr	r0, [r7, #12]
 8002372:	f7ff f835 	bl	80013e0 <SX1262SetModulationParams>

	SX1262SetStandby(mcu, radio, STDBY_RC);
	SX1262SetRxTxFallbackMode(mcu, radio, STBY_RC);
#else
	PacketParams_t packet;
	packet.PacketType = PACKET_TYPE_GFSK;
 8002376:	2300      	movs	r3, #0
 8002378:	753b      	strb	r3, [r7, #20]
	packet.Params.Gfsk.PreambleLength = 32;
 800237a:	2320      	movs	r3, #32
 800237c:	82fb      	strh	r3, [r7, #22]
	packet.Params.Gfsk.PreambleMinDetect = PREAMBLE_DETECTOR_32_BITS;
 800237e:	2307      	movs	r3, #7
 8002380:	763b      	strb	r3, [r7, #24]
	packet.Params.Gfsk.SyncWordLength = 0x40;
 8002382:	2340      	movs	r3, #64	; 0x40
 8002384:	767b      	strb	r3, [r7, #25]
	packet.Params.Gfsk.AddrComp = ADDRESSCOMP_FILT_OFF;
 8002386:	2300      	movs	r3, #0
 8002388:	76bb      	strb	r3, [r7, #26]
	packet.Params.Gfsk.HeaderType = GFSK_PACKET_FIXED_LENGTH;
 800238a:	2300      	movs	r3, #0
 800238c:	76fb      	strb	r3, [r7, #27]
	packet.Params.Gfsk.PayloadLength = 50 + 2;  // Payload plus CRC
 800238e:	2334      	movs	r3, #52	; 0x34
 8002390:	773b      	strb	r3, [r7, #28]
	packet.Params.Gfsk.CrcType = GFSK_CRC_2_BYTES;
 8002392:	2302      	movs	r3, #2
 8002394:	777b      	strb	r3, [r7, #29]
	packet.Params.Gfsk.DcFree = WHITENING_ON;
 8002396:	2301      	movs	r3, #1
 8002398:	77bb      	strb	r3, [r7, #30]
	SX1262SetPacketParams(mcu, radio, &packet);
 800239a:	f107 0314 	add.w	r3, r7, #20
 800239e:	461a      	mov	r2, r3
 80023a0:	68b9      	ldr	r1, [r7, #8]
 80023a2:	68f8      	ldr	r0, [r7, #12]
 80023a4:	f7fe ff56 	bl	8001254 <SX1262SetPacketParams>
	radio->function = TELEMETRY;
 80023a8:	68bb      	ldr	r3, [r7, #8]
 80023aa:	2200      	movs	r2, #0
 80023ac:	f883 2468 	strb.w	r2, [r3, #1128]	; 0x468

 	SX1262SetStandby(mcu, radio, STDBY_XOSC);
 80023b0:	2201      	movs	r2, #1
 80023b2:	68b9      	ldr	r1, [r7, #8]
 80023b4:	68f8      	ldr	r0, [r7, #12]
 80023b6:	f7fe fe1b 	bl	8000ff0 <SX1262SetStandby>
 	SX1262SetRxTxFallbackMode(mcu, radio, STBY_XOSC);
 80023ba:	2230      	movs	r2, #48	; 0x30
 80023bc:	68b9      	ldr	r1, [r7, #8]
 80023be:	68f8      	ldr	r0, [r7, #12]
 80023c0:	f7ff fce9 	bl	8001d96 <SX1262SetRxTxFallbackMode>
#endif

 	SX1262GetStatus(mcu, radio);
 80023c4:	68b9      	ldr	r1, [r7, #8]
 80023c6:	68f8      	ldr	r0, [r7, #12]
 80023c8:	f7ff fe50 	bl	800206c <SX1262GetStatus>

 	return RADIO_OK;
 80023cc:	2300      	movs	r3, #0
}
 80023ce:	4618      	mov	r0, r3
 80023d0:	3748      	adds	r7, #72	; 0x48
 80023d2:	46bd      	mov	sp, r7
 80023d4:	bd80      	pop	{r7, pc}
 80023d6:	bf00      	nop
 80023d8:	000f4240 	.word	0x000f4240
 80023dc:	0801425c 	.word	0x0801425c

080023e0 <SX1262ReceiveMessage>:
/*****************************************************************************
*  @Description	  Gets the received packet length and start address and then
*                 reads it from the buffer
******************************************************************************/
RadioState_t SX1262ReceiveMessage(MCU* mcu, Radio* radio)
{
 80023e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80023e4:	b089      	sub	sp, #36	; 0x24
 80023e6:	af02      	add	r7, sp, #8
 80023e8:	6078      	str	r0, [r7, #4]
 80023ea:	6039      	str	r1, [r7, #0]
 80023ec:	466b      	mov	r3, sp
 80023ee:	461e      	mov	r6, r3
	SX1262GetRxBufferStatus(mcu, radio);
 80023f0:	6839      	ldr	r1, [r7, #0]
 80023f2:	6878      	ldr	r0, [r7, #4]
 80023f4:	f7ff fbb1 	bl	8001b5a <SX1262GetRxBufferStatus>

	if (radio->payloadLength != radio->packetParams.Params.Gfsk.PayloadLength)
 80023f8:	683b      	ldr	r3, [r7, #0]
 80023fa:	f893 244e 	ldrb.w	r2, [r3, #1102]	; 0x44e
 80023fe:	683b      	ldr	r3, [r7, #0]
 8002400:	f893 340c 	ldrb.w	r3, [r3, #1036]	; 0x40c
 8002404:	429a      	cmp	r2, r3
 8002406:	d001      	beq.n	800240c <SX1262ReceiveMessage+0x2c>
		return RADIO_PAYLOAD_LENGTH_ERROR;
 8002408:	2302      	movs	r3, #2
 800240a:	e0a8      	b.n	800255e <SX1262ReceiveMessage+0x17e>

	uint8_t received_data[radio->payloadLength];
 800240c:	683b      	ldr	r3, [r7, #0]
 800240e:	f893 144e 	ldrb.w	r1, [r3, #1102]	; 0x44e
 8002412:	460b      	mov	r3, r1
 8002414:	3b01      	subs	r3, #1
 8002416:	613b      	str	r3, [r7, #16]
 8002418:	b2cb      	uxtb	r3, r1
 800241a:	2200      	movs	r2, #0
 800241c:	4698      	mov	r8, r3
 800241e:	4691      	mov	r9, r2
 8002420:	f04f 0200 	mov.w	r2, #0
 8002424:	f04f 0300 	mov.w	r3, #0
 8002428:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800242c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002430:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002434:	b2cb      	uxtb	r3, r1
 8002436:	2200      	movs	r2, #0
 8002438:	461c      	mov	r4, r3
 800243a:	4615      	mov	r5, r2
 800243c:	f04f 0200 	mov.w	r2, #0
 8002440:	f04f 0300 	mov.w	r3, #0
 8002444:	00eb      	lsls	r3, r5, #3
 8002446:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800244a:	00e2      	lsls	r2, r4, #3
 800244c:	460b      	mov	r3, r1
 800244e:	3307      	adds	r3, #7
 8002450:	08db      	lsrs	r3, r3, #3
 8002452:	00db      	lsls	r3, r3, #3
 8002454:	ebad 0d03 	sub.w	sp, sp, r3
 8002458:	ab02      	add	r3, sp, #8
 800245a:	3300      	adds	r3, #0
 800245c:	60fb      	str	r3, [r7, #12]
	SX1262ReadBuffer(mcu, radio, radio->rxStartBufferPointer, received_data, radio->payloadLength);
 800245e:	683b      	ldr	r3, [r7, #0]
 8002460:	f893 244f 	ldrb.w	r2, [r3, #1103]	; 0x44f
 8002464:	683b      	ldr	r3, [r7, #0]
 8002466:	f893 344e 	ldrb.w	r3, [r3, #1102]	; 0x44e
 800246a:	9300      	str	r3, [sp, #0]
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	6839      	ldr	r1, [r7, #0]
 8002470:	6878      	ldr	r0, [r7, #4]
 8002472:	f000 fdfb 	bl	800306c <SX1262ReadBuffer>

	if (radio->function == TELEMETRY)
 8002476:	683b      	ldr	r3, [r7, #0]
 8002478:	f893 3468 	ldrb.w	r3, [r3, #1128]	; 0x468
 800247c:	2b00      	cmp	r3, #0
 800247e:	d13a      	bne.n	80024f6 <SX1262ReceiveMessage+0x116>
	{
		if (radio->irq.crcError == 0)
 8002480:	683b      	ldr	r3, [r7, #0]
 8002482:	f893 3442 	ldrb.w	r3, [r3, #1090]	; 0x442
 8002486:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800248a:	b2db      	uxtb	r3, r3
 800248c:	2b00      	cmp	r3, #0
 800248e:	d11c      	bne.n	80024ca <SX1262ReceiveMessage+0xea>
		{
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 8002490:	2300      	movs	r3, #0
 8002492:	75fb      	strb	r3, [r7, #23]
 8002494:	e00b      	b.n	80024ae <SX1262ReceiveMessage+0xce>
				radio->rx_msg[i] = received_data[i];
 8002496:	7dfa      	ldrb	r2, [r7, #23]
 8002498:	7dfb      	ldrb	r3, [r7, #23]
 800249a:	68f9      	ldr	r1, [r7, #12]
 800249c:	5c89      	ldrb	r1, [r1, r2]
 800249e:	683a      	ldr	r2, [r7, #0]
 80024a0:	4413      	add	r3, r2
 80024a2:	460a      	mov	r2, r1
 80024a4:	f883 20c8 	strb.w	r2, [r3, #200]	; 0xc8
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 80024a8:	7dfb      	ldrb	r3, [r7, #23]
 80024aa:	3301      	adds	r3, #1
 80024ac:	75fb      	strb	r3, [r7, #23]
 80024ae:	683b      	ldr	r3, [r7, #0]
 80024b0:	f893 344e 	ldrb.w	r3, [r3, #1102]	; 0x44e
 80024b4:	7dfa      	ldrb	r2, [r7, #23]
 80024b6:	429a      	cmp	r2, r3
 80024b8:	d3ed      	bcc.n	8002496 <SX1262ReceiveMessage+0xb6>

			radio->per.received_msgs++;
 80024ba:	683b      	ldr	r3, [r7, #0]
 80024bc:	f8d3 3454 	ldr.w	r3, [r3, #1108]	; 0x454
 80024c0:	1c5a      	adds	r2, r3, #1
 80024c2:	683b      	ldr	r3, [r7, #0]
 80024c4:	f8c3 2454 	str.w	r2, [r3, #1108]	; 0x454
 80024c8:	e048      	b.n	800255c <SX1262ReceiveMessage+0x17c>
		}
		else   /* Wrong CRC telemetry message */
		{
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 80024ca:	2300      	movs	r3, #0
 80024cc:	75bb      	strb	r3, [r7, #22]
 80024ce:	e00b      	b.n	80024e8 <SX1262ReceiveMessage+0x108>
				radio->wrong_CRC_msg[i] = received_data[i];
 80024d0:	7dba      	ldrb	r2, [r7, #22]
 80024d2:	7dbb      	ldrb	r3, [r7, #22]
 80024d4:	68f9      	ldr	r1, [r7, #12]
 80024d6:	5c89      	ldrb	r1, [r1, r2]
 80024d8:	683a      	ldr	r2, [r7, #0]
 80024da:	4413      	add	r3, r2
 80024dc:	460a      	mov	r2, r1
 80024de:	f883 22c6 	strb.w	r2, [r3, #710]	; 0x2c6
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 80024e2:	7dbb      	ldrb	r3, [r7, #22]
 80024e4:	3301      	adds	r3, #1
 80024e6:	75bb      	strb	r3, [r7, #22]
 80024e8:	683b      	ldr	r3, [r7, #0]
 80024ea:	f893 344e 	ldrb.w	r3, [r3, #1102]	; 0x44e
 80024ee:	7dba      	ldrb	r2, [r7, #22]
 80024f0:	429a      	cmp	r2, r3
 80024f2:	d3ed      	bcc.n	80024d0 <SX1262ReceiveMessage+0xf0>
 80024f4:	e032      	b.n	800255c <SX1262ReceiveMessage+0x17c>
		}
	}

	else   /* radio->function == TPMS */
		if (radio->irq.crcError == 0)
 80024f6:	683b      	ldr	r3, [r7, #0]
 80024f8:	f893 3442 	ldrb.w	r3, [r3, #1090]	; 0x442
 80024fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002500:	b2db      	uxtb	r3, r3
 8002502:	2b00      	cmp	r3, #0
 8002504:	d115      	bne.n	8002532 <SX1262ReceiveMessage+0x152>
		{
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 8002506:	2300      	movs	r3, #0
 8002508:	757b      	strb	r3, [r7, #21]
 800250a:	e00b      	b.n	8002524 <SX1262ReceiveMessage+0x144>
				radio->tpms_rx_msg[i] = received_data[i];
 800250c:	7d7a      	ldrb	r2, [r7, #21]
 800250e:	7d7b      	ldrb	r3, [r7, #21]
 8002510:	68f9      	ldr	r1, [r7, #12]
 8002512:	5c89      	ldrb	r1, [r1, r2]
 8002514:	683a      	ldr	r2, [r7, #0]
 8002516:	4413      	add	r3, r2
 8002518:	460a      	mov	r2, r1
 800251a:	f883 23cc 	strb.w	r2, [r3, #972]	; 0x3cc
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 800251e:	7d7b      	ldrb	r3, [r7, #21]
 8002520:	3301      	adds	r3, #1
 8002522:	757b      	strb	r3, [r7, #21]
 8002524:	683b      	ldr	r3, [r7, #0]
 8002526:	f893 344e 	ldrb.w	r3, [r3, #1102]	; 0x44e
 800252a:	7d7a      	ldrb	r2, [r7, #21]
 800252c:	429a      	cmp	r2, r3
 800252e:	d3ed      	bcc.n	800250c <SX1262ReceiveMessage+0x12c>
 8002530:	e014      	b.n	800255c <SX1262ReceiveMessage+0x17c>
		}
		else   /* Wrong CRC TPMS message */
		{
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 8002532:	2300      	movs	r3, #0
 8002534:	753b      	strb	r3, [r7, #20]
 8002536:	e00b      	b.n	8002550 <SX1262ReceiveMessage+0x170>
				radio->tpms_wrong_CRC_msg[i] = received_data[i];
 8002538:	7d3a      	ldrb	r2, [r7, #20]
 800253a:	7d3b      	ldrb	r3, [r7, #20]
 800253c:	68f9      	ldr	r1, [r7, #12]
 800253e:	5c89      	ldrb	r1, [r1, r2]
 8002540:	683a      	ldr	r2, [r7, #0]
 8002542:	4413      	add	r3, r2
 8002544:	460a      	mov	r2, r1
 8002546:	f883 23d2 	strb.w	r2, [r3, #978]	; 0x3d2
			for (uint8_t i = 0; i < radio->payloadLength; ++i)
 800254a:	7d3b      	ldrb	r3, [r7, #20]
 800254c:	3301      	adds	r3, #1
 800254e:	753b      	strb	r3, [r7, #20]
 8002550:	683b      	ldr	r3, [r7, #0]
 8002552:	f893 344e 	ldrb.w	r3, [r3, #1102]	; 0x44e
 8002556:	7d3a      	ldrb	r2, [r7, #20]
 8002558:	429a      	cmp	r2, r3
 800255a:	d3ed      	bcc.n	8002538 <SX1262ReceiveMessage+0x158>
		}

	return RADIO_OK;
 800255c:	2300      	movs	r3, #0
 800255e:	46b5      	mov	sp, r6
}
 8002560:	4618      	mov	r0, r3
 8002562:	371c      	adds	r7, #28
 8002564:	46bd      	mov	sp, r7
 8002566:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800256a <SX1262dio1Interrupt>:
/*****************************************************************************
*  @Description	  Defines the behavior of the chip when an interrupt from the
*                 DIO1 pin has been received
******************************************************************************/
void SX1262dio1Interrupt(MCU* mcu, Radio* radio)
{
 800256a:	b580      	push	{r7, lr}
 800256c:	b082      	sub	sp, #8
 800256e:	af00      	add	r7, sp, #0
 8002570:	6078      	str	r0, [r7, #4]
 8002572:	6039      	str	r1, [r7, #0]
	SX1262GetIrqStatus(mcu, radio);
 8002574:	6839      	ldr	r1, [r7, #0]
 8002576:	6878      	ldr	r0, [r7, #4]
 8002578:	f7ff fa0e 	bl	8001998 <SX1262GetIrqStatus>
	if (radio->irq.rxDone == 1)  /* Message received */
 800257c:	683b      	ldr	r3, [r7, #0]
 800257e:	f893 3442 	ldrb.w	r3, [r3, #1090]	; 0x442
 8002582:	f003 0302 	and.w	r3, r3, #2
 8002586:	b2db      	uxtb	r3, r3
 8002588:	2b00      	cmp	r3, #0
 800258a:	d03c      	beq.n	8002606 <SX1262dio1Interrupt+0x9c>
	{
		if (radio->irq.crcError == 0)
 800258c:	683b      	ldr	r3, [r7, #0]
 800258e:	f893 3442 	ldrb.w	r3, [r3, #1090]	; 0x442
 8002592:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002596:	b2db      	uxtb	r3, r3
 8002598:	2b00      	cmp	r3, #0
 800259a:	d11a      	bne.n	80025d2 <SX1262dio1Interrupt+0x68>
		{
#if ((FUNCTION != TPMS_DEBUG) && (FUNCTION != TPMS_RELEASE))
			HAL_GPIO_WritePin(mcu->radio_rx_led.type, mcu->radio_rx_led.pin, GPIO_PIN_SET);
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80025a6:	2201      	movs	r2, #1
 80025a8:	4619      	mov	r1, r3
 80025aa:	f006 ff57 	bl	800945c <HAL_GPIO_WritePin>
#endif
			SX1262ReceiveMessage(mcu, radio);  /* Message stored in the Radio struct */
 80025ae:	6839      	ldr	r1, [r7, #0]
 80025b0:	6878      	ldr	r0, [r7, #4]
 80025b2:	f7ff ff15 	bl	80023e0 <SX1262ReceiveMessage>
			SX1262GetPacketStatus(mcu, radio);
 80025b6:	6839      	ldr	r1, [r7, #0]
 80025b8:	6878      	ldr	r0, [r7, #4]
 80025ba:	f7ff fc42 	bl	8001e42 <SX1262GetPacketStatus>
#if ((FUNCTION != TPMS_DEBUG) && (FUNCTION != TPMS_RELEASE))
			HAL_GPIO_WritePin(mcu->radio_rx_led.type, mcu->radio_rx_led.pin, GPIO_PIN_RESET);
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	f8b3 3050 	ldrh.w	r3, [r3, #80]	; 0x50
 80025c8:	2200      	movs	r2, #0
 80025ca:	4619      	mov	r1, r3
 80025cc:	f006 ff46 	bl	800945c <HAL_GPIO_WritePin>
			SX1262GetPacketStatus(mcu, radio);
		}
	}

	//SX1262ClearIrqStatus(mcu, radio, 0xFFFF);  // Clears both the SX1262 registers and the radio.irq struct
}
 80025d0:	e019      	b.n	8002606 <SX1262dio1Interrupt+0x9c>
			if (radio->function == TELEMETRY)
 80025d2:	683b      	ldr	r3, [r7, #0]
 80025d4:	f893 3468 	ldrb.w	r3, [r3, #1128]	; 0x468
 80025d8:	2b00      	cmp	r3, #0
 80025da:	d108      	bne.n	80025ee <SX1262dio1Interrupt+0x84>
				radio->wrongCRC++;
 80025dc:	683b      	ldr	r3, [r7, #0]
 80025de:	f8b3 344a 	ldrh.w	r3, [r3, #1098]	; 0x44a
 80025e2:	3301      	adds	r3, #1
 80025e4:	b29a      	uxth	r2, r3
 80025e6:	683b      	ldr	r3, [r7, #0]
 80025e8:	f8a3 244a 	strh.w	r2, [r3, #1098]	; 0x44a
 80025ec:	e003      	b.n	80025f6 <SX1262dio1Interrupt+0x8c>
				radio->tpmsWrongCRC = true;
 80025ee:	683b      	ldr	r3, [r7, #0]
 80025f0:	2201      	movs	r2, #1
 80025f2:	f883 23d9 	strb.w	r2, [r3, #985]	; 0x3d9
			SX1262ReceiveMessage(mcu, radio);  /* The message is received even if the CRC is wrong, but is stored in a different array */
 80025f6:	6839      	ldr	r1, [r7, #0]
 80025f8:	6878      	ldr	r0, [r7, #4]
 80025fa:	f7ff fef1 	bl	80023e0 <SX1262ReceiveMessage>
			SX1262GetPacketStatus(mcu, radio);
 80025fe:	6839      	ldr	r1, [r7, #0]
 8002600:	6878      	ldr	r0, [r7, #4]
 8002602:	f7ff fc1e 	bl	8001e42 <SX1262GetPacketStatus>
}
 8002606:	bf00      	nop
 8002608:	3708      	adds	r7, #8
 800260a:	46bd      	mov	sp, r7
 800260c:	bd80      	pop	{r7, pc}

0800260e <SX1262dio2Interrupt>:
*  @Description	  Defines the behavior of the chip when an interrupt from the
*                 DIO2 pin has been received. This interrupt is generated both
*                 in rising and falling edges of DIO2
******************************************************************************/
void SX1262dio2Interrupt(MCU* mcu, Radio* radio)
{
 800260e:	b580      	push	{r7, lr}
 8002610:	b082      	sub	sp, #8
 8002612:	af00      	add	r7, sp, #0
 8002614:	6078      	str	r0, [r7, #4]
 8002616:	6039      	str	r1, [r7, #0]
	if (HAL_GPIO_ReadPin(mcu->dio2.type, mcu->dio2.pin) == GPIO_PIN_SET)            // If the interrupt occured from a rising edge
 8002618:	687b      	ldr	r3, [r7, #4]
 800261a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800261c:	687b      	ldr	r3, [r7, #4]
 800261e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8002620:	4619      	mov	r1, r3
 8002622:	4610      	mov	r0, r2
 8002624:	f006 ff02 	bl	800942c <HAL_GPIO_ReadPin>
 8002628:	4603      	mov	r3, r0
 800262a:	2b01      	cmp	r3, #1
 800262c:	d108      	bne.n	8002640 <SX1262dio2Interrupt+0x32>
		HAL_GPIO_WritePin(mcu->rf_switch.type, mcu->rf_switch.pin, GPIO_PIN_SET);   // Connect the antenna to the TX path
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002632:	687b      	ldr	r3, [r7, #4]
 8002634:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 8002636:	2201      	movs	r2, #1
 8002638:	4619      	mov	r1, r3
 800263a:	f006 ff0f 	bl	800945c <HAL_GPIO_WritePin>
	else																			// If the interrupt occured from a falling edge
		HAL_GPIO_WritePin(mcu->rf_switch.type, mcu->rf_switch.pin, GPIO_PIN_RESET); // Connect the antenna to the RX path
}
 800263e:	e007      	b.n	8002650 <SX1262dio2Interrupt+0x42>
		HAL_GPIO_WritePin(mcu->rf_switch.type, mcu->rf_switch.pin, GPIO_PIN_RESET); // Connect the antenna to the RX path
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	8f1b      	ldrh	r3, [r3, #56]	; 0x38
 8002648:	2200      	movs	r2, #0
 800264a:	4619      	mov	r1, r3
 800264c:	f006 ff06 	bl	800945c <HAL_GPIO_WritePin>
}
 8002650:	bf00      	nop
 8002652:	3708      	adds	r7, #8
 8002654:	46bd      	mov	sp, r7
 8002656:	bd80      	pop	{r7, pc}

08002658 <Gpio_init>:
#include <SX1262_board.h>
#include "stm32f4xx_hal.h"
#include "SX1262.h"


void Gpio_init(Gpio_t* GPIO, GPIO_TypeDef *type, uint16_t pin) {
 8002658:	b480      	push	{r7}
 800265a:	b085      	sub	sp, #20
 800265c:	af00      	add	r7, sp, #0
 800265e:	60f8      	str	r0, [r7, #12]
 8002660:	60b9      	str	r1, [r7, #8]
 8002662:	4613      	mov	r3, r2
 8002664:	80fb      	strh	r3, [r7, #6]

	GPIO->type = type;
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	68ba      	ldr	r2, [r7, #8]
 800266a:	601a      	str	r2, [r3, #0]
	GPIO->pin  = pin;
 800266c:	68fb      	ldr	r3, [r7, #12]
 800266e:	88fa      	ldrh	r2, [r7, #6]
 8002670:	809a      	strh	r2, [r3, #4]
}
 8002672:	bf00      	nop
 8002674:	3714      	adds	r7, #20
 8002676:	46bd      	mov	sp, r7
 8002678:	f85d 7b04 	ldr.w	r7, [sp], #4
 800267c:	4770      	bx	lr

0800267e <SPI_init>:


void SPI_init(Spi_t* SPI, SPI_HandleTypeDef *handle, GPIO_TypeDef *type, uint16_t pin) {
 800267e:	b480      	push	{r7}
 8002680:	b085      	sub	sp, #20
 8002682:	af00      	add	r7, sp, #0
 8002684:	60f8      	str	r0, [r7, #12]
 8002686:	60b9      	str	r1, [r7, #8]
 8002688:	607a      	str	r2, [r7, #4]
 800268a:	807b      	strh	r3, [r7, #2]

    SPI->spiHandle = handle;
 800268c:	68fb      	ldr	r3, [r7, #12]
 800268e:	68ba      	ldr	r2, [r7, #8]
 8002690:	601a      	str	r2, [r3, #0]
    SPI->NSS.pin    = pin;
 8002692:	68fb      	ldr	r3, [r7, #12]
 8002694:	887a      	ldrh	r2, [r7, #2]
 8002696:	811a      	strh	r2, [r3, #8]
    SPI->NSS.type   = type;
 8002698:	68fb      	ldr	r3, [r7, #12]
 800269a:	687a      	ldr	r2, [r7, #4]
 800269c:	605a      	str	r2, [r3, #4]
}
 800269e:	bf00      	nop
 80026a0:	3714      	adds	r7, #20
 80026a2:	46bd      	mov	sp, r7
 80026a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026a8:	4770      	bx	lr

080026aa <MCU_init>:
			  GPIO_TypeDef *RF_SWITCH_SUPP, uint16_t RF_SWITCH_SUPP_pin,
			  GPIO_TypeDef *RADIO_TX_LED, uint16_t RADIO_TX_LED_pin,
			  GPIO_TypeDef *RADIO_RX_LED, uint16_t RADIO_RX_LED_pin,
			  GPIO_TypeDef *CAN_TX_LED, uint16_t CAN_TX_LED_pin,
			  GPIO_TypeDef *CAN_RX_LED, uint16_t CAN_RX_LED_pin)
{
 80026aa:	b580      	push	{r7, lr}
 80026ac:	b084      	sub	sp, #16
 80026ae:	af00      	add	r7, sp, #0
 80026b0:	60f8      	str	r0, [r7, #12]
 80026b2:	60b9      	str	r1, [r7, #8]
 80026b4:	607a      	str	r2, [r7, #4]
 80026b6:	807b      	strh	r3, [r7, #2]
	Gpio_init(&(mcu->spi.NSS), NSS, NSS_pin);
 80026b8:	68fb      	ldr	r3, [r7, #12]
 80026ba:	3304      	adds	r3, #4
 80026bc:	887a      	ldrh	r2, [r7, #2]
 80026be:	6879      	ldr	r1, [r7, #4]
 80026c0:	4618      	mov	r0, r3
 80026c2:	f7ff ffc9 	bl	8002658 <Gpio_init>

	SPI_init(&(mcu->spi), spiHandle, NSS, NSS_pin);
 80026c6:	68f8      	ldr	r0, [r7, #12]
 80026c8:	887b      	ldrh	r3, [r7, #2]
 80026ca:	687a      	ldr	r2, [r7, #4]
 80026cc:	68b9      	ldr	r1, [r7, #8]
 80026ce:	f7ff ffd6 	bl	800267e <SPI_init>

	Gpio_init(&(mcu->nreset), NRESET, NRESET_pin);
 80026d2:	68fb      	ldr	r3, [r7, #12]
 80026d4:	330c      	adds	r3, #12
 80026d6:	8bba      	ldrh	r2, [r7, #28]
 80026d8:	69b9      	ldr	r1, [r7, #24]
 80026da:	4618      	mov	r0, r3
 80026dc:	f7ff ffbc 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->busy), BUSY, BUSY_pin);
 80026e0:	68fb      	ldr	r3, [r7, #12]
 80026e2:	3314      	adds	r3, #20
 80026e4:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 80026e6:	6a39      	ldr	r1, [r7, #32]
 80026e8:	4618      	mov	r0, r3
 80026ea:	f7ff ffb5 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->dio1), DIO1, DIO1_pin);
 80026ee:	68fb      	ldr	r3, [r7, #12]
 80026f0:	331c      	adds	r3, #28
 80026f2:	8dba      	ldrh	r2, [r7, #44]	; 0x2c
 80026f4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80026f6:	4618      	mov	r0, r3
 80026f8:	f7ff ffae 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->dio2), DIO2, DIO2_pin);
 80026fc:	68fb      	ldr	r3, [r7, #12]
 80026fe:	3324      	adds	r3, #36	; 0x24
 8002700:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8002702:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8002704:	4618      	mov	r0, r3
 8002706:	f7ff ffa7 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->dio3), DIO3, DIO3_pin);
 800270a:	68fb      	ldr	r3, [r7, #12]
 800270c:	332c      	adds	r3, #44	; 0x2c
 800270e:	8fba      	ldrh	r2, [r7, #60]	; 0x3c
 8002710:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8002712:	4618      	mov	r0, r3
 8002714:	f7ff ffa0 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->rf_switch), RF_SWITCH, RF_SWITCH_pin);
 8002718:	68fb      	ldr	r3, [r7, #12]
 800271a:	3334      	adds	r3, #52	; 0x34
 800271c:	f8b7 2044 	ldrh.w	r2, [r7, #68]	; 0x44
 8002720:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8002722:	4618      	mov	r0, r3
 8002724:	f7ff ff98 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->rf_switch_supp), RF_SWITCH_SUPP, RF_SWITCH_SUPP_pin);
 8002728:	68fb      	ldr	r3, [r7, #12]
 800272a:	333c      	adds	r3, #60	; 0x3c
 800272c:	f8b7 204c 	ldrh.w	r2, [r7, #76]	; 0x4c
 8002730:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8002732:	4618      	mov	r0, r3
 8002734:	f7ff ff90 	bl	8002658 <Gpio_init>

	Gpio_init(&(mcu->radio_tx_led), RADIO_TX_LED, RADIO_TX_LED_pin);
 8002738:	68fb      	ldr	r3, [r7, #12]
 800273a:	3344      	adds	r3, #68	; 0x44
 800273c:	f8b7 2054 	ldrh.w	r2, [r7, #84]	; 0x54
 8002740:	6d39      	ldr	r1, [r7, #80]	; 0x50
 8002742:	4618      	mov	r0, r3
 8002744:	f7ff ff88 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->radio_rx_led), RADIO_RX_LED, RADIO_RX_LED_pin);
 8002748:	68fb      	ldr	r3, [r7, #12]
 800274a:	334c      	adds	r3, #76	; 0x4c
 800274c:	f8b7 205c 	ldrh.w	r2, [r7, #92]	; 0x5c
 8002750:	6db9      	ldr	r1, [r7, #88]	; 0x58
 8002752:	4618      	mov	r0, r3
 8002754:	f7ff ff80 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->can_tx_led), CAN_TX_LED, CAN_TX_LED_pin);
 8002758:	68fb      	ldr	r3, [r7, #12]
 800275a:	3354      	adds	r3, #84	; 0x54
 800275c:	f8b7 2064 	ldrh.w	r2, [r7, #100]	; 0x64
 8002760:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8002762:	4618      	mov	r0, r3
 8002764:	f7ff ff78 	bl	8002658 <Gpio_init>
	Gpio_init(&(mcu->can_rx_led), CAN_RX_LED, CAN_RX_LED_pin);
 8002768:	68fb      	ldr	r3, [r7, #12]
 800276a:	335c      	adds	r3, #92	; 0x5c
 800276c:	f8b7 206c 	ldrh.w	r2, [r7, #108]	; 0x6c
 8002770:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 8002772:	4618      	mov	r0, r3
 8002774:	f7ff ff70 	bl	8002658 <Gpio_init>

	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_SET);
 8002778:	68fb      	ldr	r3, [r7, #12]
 800277a:	6858      	ldr	r0, [r3, #4]
 800277c:	68fb      	ldr	r3, [r7, #12]
 800277e:	891b      	ldrh	r3, [r3, #8]
 8002780:	2201      	movs	r2, #1
 8002782:	4619      	mov	r1, r3
 8002784:	f006 fe6a 	bl	800945c <HAL_GPIO_WritePin>
}
 8002788:	bf00      	nop
 800278a:	3710      	adds	r7, #16
 800278c:	46bd      	mov	sp, r7
 800278e:	bd80      	pop	{r7, pc}

08002790 <SX1262WriteCommand>:
/*****************************************************************************
*  @Description	  Transmits through SPI the requested command and writes
*                 the data to the chip
******************************************************************************/
void SX1262WriteCommand(MCU* mcu, Radio* radio, uint8_t command, uint8_t* data, uint8_t len)
{
 8002790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002794:	b091      	sub	sp, #68	; 0x44
 8002796:	af02      	add	r7, sp, #8
 8002798:	61f8      	str	r0, [r7, #28]
 800279a:	61b9      	str	r1, [r7, #24]
 800279c:	613b      	str	r3, [r7, #16]
 800279e:	4613      	mov	r3, r2
 80027a0:	75fb      	strb	r3, [r7, #23]
 80027a2:	466b      	mov	r3, sp
 80027a4:	607b      	str	r3, [r7, #4]
	uint8_t write_msg[len + 1];
 80027a6:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80027aa:	1c5e      	adds	r6, r3, #1
 80027ac:	1e73      	subs	r3, r6, #1
 80027ae:	62fb      	str	r3, [r7, #44]	; 0x2c
 80027b0:	4632      	mov	r2, r6
 80027b2:	2300      	movs	r3, #0
 80027b4:	60ba      	str	r2, [r7, #8]
 80027b6:	60fb      	str	r3, [r7, #12]
 80027b8:	f04f 0200 	mov.w	r2, #0
 80027bc:	f04f 0300 	mov.w	r3, #0
 80027c0:	68f9      	ldr	r1, [r7, #12]
 80027c2:	00cb      	lsls	r3, r1, #3
 80027c4:	68b9      	ldr	r1, [r7, #8]
 80027c6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80027ca:	68b9      	ldr	r1, [r7, #8]
 80027cc:	00ca      	lsls	r2, r1, #3
 80027ce:	4632      	mov	r2, r6
 80027d0:	2300      	movs	r3, #0
 80027d2:	4692      	mov	sl, r2
 80027d4:	469b      	mov	fp, r3
 80027d6:	f04f 0200 	mov.w	r2, #0
 80027da:	f04f 0300 	mov.w	r3, #0
 80027de:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80027e2:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80027e6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80027ea:	4633      	mov	r3, r6
 80027ec:	3307      	adds	r3, #7
 80027ee:	08db      	lsrs	r3, r3, #3
 80027f0:	00db      	lsls	r3, r3, #3
 80027f2:	ebad 0d03 	sub.w	sp, sp, r3
 80027f6:	ab02      	add	r3, sp, #8
 80027f8:	3300      	adds	r3, #0
 80027fa:	62bb      	str	r3, [r7, #40]	; 0x28
	uint8_t read_msg[len + 1];
 80027fc:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002800:	1c59      	adds	r1, r3, #1
 8002802:	1e4b      	subs	r3, r1, #1
 8002804:	627b      	str	r3, [r7, #36]	; 0x24
 8002806:	460a      	mov	r2, r1
 8002808:	2300      	movs	r3, #0
 800280a:	4690      	mov	r8, r2
 800280c:	4699      	mov	r9, r3
 800280e:	f04f 0200 	mov.w	r2, #0
 8002812:	f04f 0300 	mov.w	r3, #0
 8002816:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800281a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800281e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002822:	460a      	mov	r2, r1
 8002824:	2300      	movs	r3, #0
 8002826:	4614      	mov	r4, r2
 8002828:	461d      	mov	r5, r3
 800282a:	f04f 0200 	mov.w	r2, #0
 800282e:	f04f 0300 	mov.w	r3, #0
 8002832:	00eb      	lsls	r3, r5, #3
 8002834:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002838:	00e2      	lsls	r2, r4, #3
 800283a:	460b      	mov	r3, r1
 800283c:	3307      	adds	r3, #7
 800283e:	08db      	lsrs	r3, r3, #3
 8002840:	00db      	lsls	r3, r3, #3
 8002842:	ebad 0d03 	sub.w	sp, sp, r3
 8002846:	ab02      	add	r3, sp, #8
 8002848:	3300      	adds	r3, #0
 800284a:	623b      	str	r3, [r7, #32]
	for (uint8_t i = 0; i < len + 1; ++i)
 800284c:	2300      	movs	r3, #0
 800284e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002852:	e00e      	b.n	8002872 <SX1262WriteCommand+0xe2>
	{
		write_msg[i] = 0;
 8002854:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002858:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800285a:	2100      	movs	r1, #0
 800285c:	54d1      	strb	r1, [r2, r3]
		read_msg[i]  = 0;
 800285e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002862:	6a3a      	ldr	r2, [r7, #32]
 8002864:	2100      	movs	r1, #0
 8002866:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < len + 1; ++i)
 8002868:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800286c:	3301      	adds	r3, #1
 800286e:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002872:	f897 2060 	ldrb.w	r2, [r7, #96]	; 0x60
 8002876:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800287a:	429a      	cmp	r2, r3
 800287c:	d2ea      	bcs.n	8002854 <SX1262WriteCommand+0xc4>
	}

	write_msg[0] = command;
 800287e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002880:	7dfa      	ldrb	r2, [r7, #23]
 8002882:	701a      	strb	r2, [r3, #0]
	for (uint8_t pos = 0; pos < len; ++pos)
 8002884:	2300      	movs	r3, #0
 8002886:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 800288a:	e00e      	b.n	80028aa <SX1262WriteCommand+0x11a>
		write_msg[pos + 1] = data[pos];
 800288c:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8002890:	693a      	ldr	r2, [r7, #16]
 8002892:	441a      	add	r2, r3
 8002894:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8002898:	3301      	adds	r3, #1
 800289a:	7811      	ldrb	r1, [r2, #0]
 800289c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800289e:	54d1      	strb	r1, [r2, r3]
	for (uint8_t pos = 0; pos < len; ++pos)
 80028a0:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80028a4:	3301      	adds	r3, #1
 80028a6:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 80028aa:	f897 2036 	ldrb.w	r2, [r7, #54]	; 0x36
 80028ae:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80028b2:	429a      	cmp	r2, r3
 80028b4:	d3ea      	bcc.n	800288c <SX1262WriteCommand+0xfc>

	if (len > 20)
 80028b6:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80028ba:	2b14      	cmp	r3, #20
 80028bc:	d905      	bls.n	80028ca <SX1262WriteCommand+0x13a>
		test++;
 80028be:	4b45      	ldr	r3, [pc, #276]	; (80029d4 <SX1262WriteCommand+0x244>)
 80028c0:	781b      	ldrb	r3, [r3, #0]
 80028c2:	3301      	adds	r3, #1
 80028c4:	b2da      	uxtb	r2, r3
 80028c6:	4b43      	ldr	r3, [pc, #268]	; (80029d4 <SX1262WriteCommand+0x244>)
 80028c8:	701a      	strb	r2, [r3, #0]

	if (radio->opMode != SLEEP_MODE || command != SET_STANDBY) // Wakeup command is sent even when Busy Pin is HIGH
 80028ca:	69bb      	ldr	r3, [r7, #24]
 80028cc:	f893 3444 	ldrb.w	r3, [r3, #1092]	; 0x444
 80028d0:	2b08      	cmp	r3, #8
 80028d2:	d102      	bne.n	80028da <SX1262WriteCommand+0x14a>
 80028d4:	7dfb      	ldrb	r3, [r7, #23]
 80028d6:	2b80      	cmp	r3, #128	; 0x80
 80028d8:	d00b      	beq.n	80028f2 <SX1262WriteCommand+0x162>
		while(HAL_GPIO_ReadPin(mcu->busy.type, mcu->busy.pin) != GPIO_PIN_RESET);  // Wait until BUSY pin goes LOW
 80028da:	bf00      	nop
 80028dc:	69fb      	ldr	r3, [r7, #28]
 80028de:	695a      	ldr	r2, [r3, #20]
 80028e0:	69fb      	ldr	r3, [r7, #28]
 80028e2:	8b1b      	ldrh	r3, [r3, #24]
 80028e4:	4619      	mov	r1, r3
 80028e6:	4610      	mov	r0, r2
 80028e8:	f006 fda0 	bl	800942c <HAL_GPIO_ReadPin>
 80028ec:	4603      	mov	r3, r0
 80028ee:	2b00      	cmp	r3, #0
 80028f0:	d1f4      	bne.n	80028dc <SX1262WriteCommand+0x14c>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_RESET);
 80028f2:	69fb      	ldr	r3, [r7, #28]
 80028f4:	6858      	ldr	r0, [r3, #4]
 80028f6:	69fb      	ldr	r3, [r7, #28]
 80028f8:	891b      	ldrh	r3, [r3, #8]
 80028fa:	2200      	movs	r2, #0
 80028fc:	4619      	mov	r1, r3
 80028fe:	f006 fdad 	bl	800945c <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(mcu->spi.spiHandle, write_msg, read_msg, sizeof(write_msg), SPI_TIMEOUT);
 8002902:	69fb      	ldr	r3, [r7, #28]
 8002904:	6818      	ldr	r0, [r3, #0]
 8002906:	b2b3      	uxth	r3, r6
 8002908:	2232      	movs	r2, #50	; 0x32
 800290a:	9200      	str	r2, [sp, #0]
 800290c:	6a3a      	ldr	r2, [r7, #32]
 800290e:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002910:	f008 fd4d 	bl	800b3ae <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_SET);
 8002914:	69fb      	ldr	r3, [r7, #28]
 8002916:	6858      	ldr	r0, [r3, #4]
 8002918:	69fb      	ldr	r3, [r7, #28]
 800291a:	891b      	ldrh	r3, [r3, #8]
 800291c:	2201      	movs	r2, #1
 800291e:	4619      	mov	r1, r3
 8002920:	f006 fd9c 	bl	800945c <HAL_GPIO_WritePin>

	// Debugging
	uint8_t limit;
	if (len + 1 <= READ_MSG_LEN)
 8002924:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002928:	2bc7      	cmp	r3, #199	; 0xc7
 800292a:	d805      	bhi.n	8002938 <SX1262WriteCommand+0x1a8>
		limit = len + 1;
 800292c:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002930:	3301      	adds	r3, #1
 8002932:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 8002936:	e002      	b.n	800293e <SX1262WriteCommand+0x1ae>
	else
		limit = READ_MSG_LEN;
 8002938:	23c8      	movs	r3, #200	; 0xc8
 800293a:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35

	for (uint8_t i = 0; i < limit; ++i)
 800293e:	2300      	movs	r3, #0
 8002940:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8002944:	e00c      	b.n	8002960 <SX1262WriteCommand+0x1d0>
		radio->spi_read_msg[i] = read_msg[i];
 8002946:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 800294a:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800294e:	6a39      	ldr	r1, [r7, #32]
 8002950:	5c89      	ldrb	r1, [r1, r2]
 8002952:	69ba      	ldr	r2, [r7, #24]
 8002954:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < limit; ++i)
 8002956:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800295a:	3301      	adds	r3, #1
 800295c:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8002960:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 8002964:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8002968:	429a      	cmp	r2, r3
 800296a:	d3ec      	bcc.n	8002946 <SX1262WriteCommand+0x1b6>
	for (uint8_t i = len + 1; i < READ_MSG_LEN; ++i)
 800296c:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002970:	3301      	adds	r3, #1
 8002972:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002976:	e009      	b.n	800298c <SX1262WriteCommand+0x1fc>
		radio->spi_read_msg[i] = 0;
 8002978:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800297c:	69ba      	ldr	r2, [r7, #24]
 800297e:	2100      	movs	r1, #0
 8002980:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = len + 1; i < READ_MSG_LEN; ++i)
 8002982:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002986:	3301      	adds	r3, #1
 8002988:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 800298c:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002990:	2bc7      	cmp	r3, #199	; 0xc7
 8002992:	d9f1      	bls.n	8002978 <SX1262WriteCommand+0x1e8>

	for (uint8_t cnt = 15; cnt < 199; ++cnt)
 8002994:	230f      	movs	r3, #15
 8002996:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
 800299a:	e010      	b.n	80029be <SX1262WriteCommand+0x22e>
		if (radio->spi_read_msg[cnt] != 0)
 800299c:	f897 3032 	ldrb.w	r3, [r7, #50]	; 0x32
 80029a0:	69ba      	ldr	r2, [r7, #24]
 80029a2:	5cd3      	ldrb	r3, [r2, r3]
 80029a4:	2b00      	cmp	r3, #0
 80029a6:	d005      	beq.n	80029b4 <SX1262WriteCommand+0x224>
			test++;
 80029a8:	4b0a      	ldr	r3, [pc, #40]	; (80029d4 <SX1262WriteCommand+0x244>)
 80029aa:	781b      	ldrb	r3, [r3, #0]
 80029ac:	3301      	adds	r3, #1
 80029ae:	b2da      	uxtb	r2, r3
 80029b0:	4b08      	ldr	r3, [pc, #32]	; (80029d4 <SX1262WriteCommand+0x244>)
 80029b2:	701a      	strb	r2, [r3, #0]
	for (uint8_t cnt = 15; cnt < 199; ++cnt)
 80029b4:	f897 3032 	ldrb.w	r3, [r7, #50]	; 0x32
 80029b8:	3301      	adds	r3, #1
 80029ba:	f887 3032 	strb.w	r3, [r7, #50]	; 0x32
 80029be:	f897 3032 	ldrb.w	r3, [r7, #50]	; 0x32
 80029c2:	2bc6      	cmp	r3, #198	; 0xc6
 80029c4:	d9ea      	bls.n	800299c <SX1262WriteCommand+0x20c>
 80029c6:	f8d7 d004 	ldr.w	sp, [r7, #4]
}
 80029ca:	bf00      	nop
 80029cc:	373c      	adds	r7, #60	; 0x3c
 80029ce:	46bd      	mov	sp, r7
 80029d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80029d4:	20000304 	.word	0x20000304

080029d8 <SX1262ReadCommand>:
/*****************************************************************************
*  @Description	  Transmits through SPI the requested command and reads the
*                 data sent from the chip
******************************************************************************/
void SX1262ReadCommand(MCU* mcu, Radio* radio, uint8_t command, uint8_t len)
{
 80029d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80029dc:	b08f      	sub	sp, #60	; 0x3c
 80029de:	af02      	add	r7, sp, #8
 80029e0:	6178      	str	r0, [r7, #20]
 80029e2:	6139      	str	r1, [r7, #16]
 80029e4:	4611      	mov	r1, r2
 80029e6:	461a      	mov	r2, r3
 80029e8:	460b      	mov	r3, r1
 80029ea:	73fb      	strb	r3, [r7, #15]
 80029ec:	4613      	mov	r3, r2
 80029ee:	73bb      	strb	r3, [r7, #14]
 80029f0:	466b      	mov	r3, sp
 80029f2:	60bb      	str	r3, [r7, #8]
	uint8_t write_msg[len + 2];
 80029f4:	7bbb      	ldrb	r3, [r7, #14]
 80029f6:	1c9e      	adds	r6, r3, #2
 80029f8:	1e73      	subs	r3, r6, #1
 80029fa:	627b      	str	r3, [r7, #36]	; 0x24
 80029fc:	4632      	mov	r2, r6
 80029fe:	2300      	movs	r3, #0
 8002a00:	603a      	str	r2, [r7, #0]
 8002a02:	607b      	str	r3, [r7, #4]
 8002a04:	f04f 0200 	mov.w	r2, #0
 8002a08:	f04f 0300 	mov.w	r3, #0
 8002a0c:	6879      	ldr	r1, [r7, #4]
 8002a0e:	00cb      	lsls	r3, r1, #3
 8002a10:	6839      	ldr	r1, [r7, #0]
 8002a12:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8002a16:	6839      	ldr	r1, [r7, #0]
 8002a18:	00ca      	lsls	r2, r1, #3
 8002a1a:	4632      	mov	r2, r6
 8002a1c:	2300      	movs	r3, #0
 8002a1e:	4692      	mov	sl, r2
 8002a20:	469b      	mov	fp, r3
 8002a22:	f04f 0200 	mov.w	r2, #0
 8002a26:	f04f 0300 	mov.w	r3, #0
 8002a2a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8002a2e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8002a32:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8002a36:	4633      	mov	r3, r6
 8002a38:	3307      	adds	r3, #7
 8002a3a:	08db      	lsrs	r3, r3, #3
 8002a3c:	00db      	lsls	r3, r3, #3
 8002a3e:	ebad 0d03 	sub.w	sp, sp, r3
 8002a42:	ab02      	add	r3, sp, #8
 8002a44:	3300      	adds	r3, #0
 8002a46:	623b      	str	r3, [r7, #32]
	uint8_t read_msg[len + 2];
 8002a48:	7bbb      	ldrb	r3, [r7, #14]
 8002a4a:	1c99      	adds	r1, r3, #2
 8002a4c:	1e4b      	subs	r3, r1, #1
 8002a4e:	61fb      	str	r3, [r7, #28]
 8002a50:	460a      	mov	r2, r1
 8002a52:	2300      	movs	r3, #0
 8002a54:	4690      	mov	r8, r2
 8002a56:	4699      	mov	r9, r3
 8002a58:	f04f 0200 	mov.w	r2, #0
 8002a5c:	f04f 0300 	mov.w	r3, #0
 8002a60:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002a64:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002a68:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002a6c:	460a      	mov	r2, r1
 8002a6e:	2300      	movs	r3, #0
 8002a70:	4614      	mov	r4, r2
 8002a72:	461d      	mov	r5, r3
 8002a74:	f04f 0200 	mov.w	r2, #0
 8002a78:	f04f 0300 	mov.w	r3, #0
 8002a7c:	00eb      	lsls	r3, r5, #3
 8002a7e:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002a82:	00e2      	lsls	r2, r4, #3
 8002a84:	460b      	mov	r3, r1
 8002a86:	3307      	adds	r3, #7
 8002a88:	08db      	lsrs	r3, r3, #3
 8002a8a:	00db      	lsls	r3, r3, #3
 8002a8c:	ebad 0d03 	sub.w	sp, sp, r3
 8002a90:	ab02      	add	r3, sp, #8
 8002a92:	3300      	adds	r3, #0
 8002a94:	61bb      	str	r3, [r7, #24]
	for (uint8_t i = 0; i < len + 2; ++i)
 8002a96:	2300      	movs	r3, #0
 8002a98:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8002a9c:	e00e      	b.n	8002abc <SX1262ReadCommand+0xe4>
	{
		write_msg[i] = 0;
 8002a9e:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8002aa2:	6a3a      	ldr	r2, [r7, #32]
 8002aa4:	2100      	movs	r1, #0
 8002aa6:	54d1      	strb	r1, [r2, r3]
		read_msg[i]  = 0;
 8002aa8:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8002aac:	69ba      	ldr	r2, [r7, #24]
 8002aae:	2100      	movs	r1, #0
 8002ab0:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < len + 2; ++i)
 8002ab2:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8002ab6:	3301      	adds	r3, #1
 8002ab8:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8002abc:	7bbb      	ldrb	r3, [r7, #14]
 8002abe:	1c5a      	adds	r2, r3, #1
 8002ac0:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8002ac4:	429a      	cmp	r2, r3
 8002ac6:	daea      	bge.n	8002a9e <SX1262ReadCommand+0xc6>
	}

	write_msg[0] = command;
 8002ac8:	6a3b      	ldr	r3, [r7, #32]
 8002aca:	7bfa      	ldrb	r2, [r7, #15]
 8002acc:	701a      	strb	r2, [r3, #0]

	while(HAL_GPIO_ReadPin(mcu->busy.type, mcu->busy.pin) != GPIO_PIN_RESET);  // Wait until BUSY pin goes LOW
 8002ace:	bf00      	nop
 8002ad0:	697b      	ldr	r3, [r7, #20]
 8002ad2:	695a      	ldr	r2, [r3, #20]
 8002ad4:	697b      	ldr	r3, [r7, #20]
 8002ad6:	8b1b      	ldrh	r3, [r3, #24]
 8002ad8:	4619      	mov	r1, r3
 8002ada:	4610      	mov	r0, r2
 8002adc:	f006 fca6 	bl	800942c <HAL_GPIO_ReadPin>
 8002ae0:	4603      	mov	r3, r0
 8002ae2:	2b00      	cmp	r3, #0
 8002ae4:	d1f4      	bne.n	8002ad0 <SX1262ReadCommand+0xf8>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_RESET);
 8002ae6:	697b      	ldr	r3, [r7, #20]
 8002ae8:	6858      	ldr	r0, [r3, #4]
 8002aea:	697b      	ldr	r3, [r7, #20]
 8002aec:	891b      	ldrh	r3, [r3, #8]
 8002aee:	2200      	movs	r2, #0
 8002af0:	4619      	mov	r1, r3
 8002af2:	f006 fcb3 	bl	800945c <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(mcu->spi.spiHandle, write_msg, read_msg, sizeof(write_msg), SPI_TIMEOUT);
 8002af6:	697b      	ldr	r3, [r7, #20]
 8002af8:	6818      	ldr	r0, [r3, #0]
 8002afa:	b2b3      	uxth	r3, r6
 8002afc:	2232      	movs	r2, #50	; 0x32
 8002afe:	9200      	str	r2, [sp, #0]
 8002b00:	69ba      	ldr	r2, [r7, #24]
 8002b02:	6a39      	ldr	r1, [r7, #32]
 8002b04:	f008 fc53 	bl	800b3ae <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_SET);
 8002b08:	697b      	ldr	r3, [r7, #20]
 8002b0a:	6858      	ldr	r0, [r3, #4]
 8002b0c:	697b      	ldr	r3, [r7, #20]
 8002b0e:	891b      	ldrh	r3, [r3, #8]
 8002b10:	2201      	movs	r2, #1
 8002b12:	4619      	mov	r1, r3
 8002b14:	f006 fca2 	bl	800945c <HAL_GPIO_WritePin>

	// Debugging
	uint8_t limit;
	if (len + 2 <= READ_MSG_LEN)
 8002b18:	7bbb      	ldrb	r3, [r7, #14]
 8002b1a:	2bc6      	cmp	r3, #198	; 0xc6
 8002b1c:	d804      	bhi.n	8002b28 <SX1262ReadCommand+0x150>
		limit = len + 2;
 8002b1e:	7bbb      	ldrb	r3, [r7, #14]
 8002b20:	3302      	adds	r3, #2
 8002b22:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e
 8002b26:	e002      	b.n	8002b2e <SX1262ReadCommand+0x156>
	else
		limit = READ_MSG_LEN;
 8002b28:	23c8      	movs	r3, #200	; 0xc8
 8002b2a:	f887 302e 	strb.w	r3, [r7, #46]	; 0x2e

	for (uint8_t i = 0; i < limit; ++i)
 8002b2e:	2300      	movs	r3, #0
 8002b30:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8002b34:	e00c      	b.n	8002b50 <SX1262ReadCommand+0x178>
		radio->spi_read_msg[i] = read_msg[i];
 8002b36:	f897 202d 	ldrb.w	r2, [r7, #45]	; 0x2d
 8002b3a:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8002b3e:	69b9      	ldr	r1, [r7, #24]
 8002b40:	5c89      	ldrb	r1, [r1, r2]
 8002b42:	693a      	ldr	r2, [r7, #16]
 8002b44:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < limit; ++i)
 8002b46:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8002b4a:	3301      	adds	r3, #1
 8002b4c:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8002b50:	f897 202d 	ldrb.w	r2, [r7, #45]	; 0x2d
 8002b54:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8002b58:	429a      	cmp	r2, r3
 8002b5a:	d3ec      	bcc.n	8002b36 <SX1262ReadCommand+0x15e>
	for (uint8_t i = len + 2; i < READ_MSG_LEN; ++i)
 8002b5c:	7bbb      	ldrb	r3, [r7, #14]
 8002b5e:	3302      	adds	r3, #2
 8002b60:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8002b64:	e009      	b.n	8002b7a <SX1262ReadCommand+0x1a2>
		radio->spi_read_msg[i] = 0;
 8002b66:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8002b6a:	693a      	ldr	r2, [r7, #16]
 8002b6c:	2100      	movs	r1, #0
 8002b6e:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = len + 2; i < READ_MSG_LEN; ++i)
 8002b70:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8002b74:	3301      	adds	r3, #1
 8002b76:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8002b7a:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8002b7e:	2bc7      	cmp	r3, #199	; 0xc7
 8002b80:	d9f1      	bls.n	8002b66 <SX1262ReadCommand+0x18e>

	for (uint8_t cnt = 15; cnt < 199; ++cnt)
 8002b82:	230f      	movs	r3, #15
 8002b84:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002b88:	e010      	b.n	8002bac <SX1262ReadCommand+0x1d4>
		if (radio->spi_read_msg[cnt] != 0)
 8002b8a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002b8e:	693a      	ldr	r2, [r7, #16]
 8002b90:	5cd3      	ldrb	r3, [r2, r3]
 8002b92:	2b00      	cmp	r3, #0
 8002b94:	d005      	beq.n	8002ba2 <SX1262ReadCommand+0x1ca>
			test++;
 8002b96:	4b0b      	ldr	r3, [pc, #44]	; (8002bc4 <SX1262ReadCommand+0x1ec>)
 8002b98:	781b      	ldrb	r3, [r3, #0]
 8002b9a:	3301      	adds	r3, #1
 8002b9c:	b2da      	uxtb	r2, r3
 8002b9e:	4b09      	ldr	r3, [pc, #36]	; (8002bc4 <SX1262ReadCommand+0x1ec>)
 8002ba0:	701a      	strb	r2, [r3, #0]
	for (uint8_t cnt = 15; cnt < 199; ++cnt)
 8002ba2:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002ba6:	3301      	adds	r3, #1
 8002ba8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8002bac:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002bb0:	2bc6      	cmp	r3, #198	; 0xc6
 8002bb2:	d9ea      	bls.n	8002b8a <SX1262ReadCommand+0x1b2>
 8002bb4:	f8d7 d008 	ldr.w	sp, [r7, #8]
}
 8002bb8:	bf00      	nop
 8002bba:	3734      	adds	r7, #52	; 0x34
 8002bbc:	46bd      	mov	sp, r7
 8002bbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002bc2:	bf00      	nop
 8002bc4:	20000304 	.word	0x20000304

08002bc8 <SX1262WriteRegister>:
*  @Description	  Writes to the requested register. Each Register address
*                 corresponds to 1 Byte memory. If data is more than
*                 1 byte, the given address is the address of the 1st Byte
******************************************************************************/
void SX1262WriteRegister(MCU* mcu, Radio* radio, uint16_t address, uint8_t* data, uint8_t len)
{
 8002bc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002bcc:	b08b      	sub	sp, #44	; 0x2c
 8002bce:	af02      	add	r7, sp, #8
 8002bd0:	60f8      	str	r0, [r7, #12]
 8002bd2:	60b9      	str	r1, [r7, #8]
 8002bd4:	603b      	str	r3, [r7, #0]
 8002bd6:	4613      	mov	r3, r2
 8002bd8:	80fb      	strh	r3, [r7, #6]
 8002bda:	466b      	mov	r3, sp
 8002bdc:	461e      	mov	r6, r3

	uint8_t write_msg[len + 2];
 8002bde:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8002be2:	1c99      	adds	r1, r3, #2
 8002be4:	1e4b      	subs	r3, r1, #1
 8002be6:	61bb      	str	r3, [r7, #24]
 8002be8:	460a      	mov	r2, r1
 8002bea:	2300      	movs	r3, #0
 8002bec:	4690      	mov	r8, r2
 8002bee:	4699      	mov	r9, r3
 8002bf0:	f04f 0200 	mov.w	r2, #0
 8002bf4:	f04f 0300 	mov.w	r3, #0
 8002bf8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002bfc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002c00:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002c04:	460a      	mov	r2, r1
 8002c06:	2300      	movs	r3, #0
 8002c08:	4614      	mov	r4, r2
 8002c0a:	461d      	mov	r5, r3
 8002c0c:	f04f 0200 	mov.w	r2, #0
 8002c10:	f04f 0300 	mov.w	r3, #0
 8002c14:	00eb      	lsls	r3, r5, #3
 8002c16:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002c1a:	00e2      	lsls	r2, r4, #3
 8002c1c:	460b      	mov	r3, r1
 8002c1e:	3307      	adds	r3, #7
 8002c20:	08db      	lsrs	r3, r3, #3
 8002c22:	00db      	lsls	r3, r3, #3
 8002c24:	ebad 0d03 	sub.w	sp, sp, r3
 8002c28:	ab02      	add	r3, sp, #8
 8002c2a:	3300      	adds	r3, #0
 8002c2c:	617b      	str	r3, [r7, #20]
	for (uint8_t i = 0; i < len + 2; ++i)
 8002c2e:	2300      	movs	r3, #0
 8002c30:	77fb      	strb	r3, [r7, #31]
 8002c32:	e006      	b.n	8002c42 <SX1262WriteRegister+0x7a>
		write_msg[i] = 0;
 8002c34:	7ffb      	ldrb	r3, [r7, #31]
 8002c36:	697a      	ldr	r2, [r7, #20]
 8002c38:	2000      	movs	r0, #0
 8002c3a:	54d0      	strb	r0, [r2, r3]
	for (uint8_t i = 0; i < len + 2; ++i)
 8002c3c:	7ffb      	ldrb	r3, [r7, #31]
 8002c3e:	3301      	adds	r3, #1
 8002c40:	77fb      	strb	r3, [r7, #31]
 8002c42:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8002c46:	1c5a      	adds	r2, r3, #1
 8002c48:	7ffb      	ldrb	r3, [r7, #31]
 8002c4a:	429a      	cmp	r2, r3
 8002c4c:	daf2      	bge.n	8002c34 <SX1262WriteRegister+0x6c>

	write_msg[0] = address >> 8;
 8002c4e:	88fb      	ldrh	r3, [r7, #6]
 8002c50:	0a1b      	lsrs	r3, r3, #8
 8002c52:	b29b      	uxth	r3, r3
 8002c54:	b2da      	uxtb	r2, r3
 8002c56:	697b      	ldr	r3, [r7, #20]
 8002c58:	701a      	strb	r2, [r3, #0]
	write_msg[1] = address;
 8002c5a:	88fb      	ldrh	r3, [r7, #6]
 8002c5c:	b2da      	uxtb	r2, r3
 8002c5e:	697b      	ldr	r3, [r7, #20]
 8002c60:	705a      	strb	r2, [r3, #1]
	for (uint8_t i = 2; i < len + 2; ++i)
 8002c62:	2302      	movs	r3, #2
 8002c64:	77bb      	strb	r3, [r7, #30]
 8002c66:	e00a      	b.n	8002c7e <SX1262WriteRegister+0xb6>
		write_msg[i] = data[i - 2];
 8002c68:	7fbb      	ldrb	r3, [r7, #30]
 8002c6a:	3b02      	subs	r3, #2
 8002c6c:	683a      	ldr	r2, [r7, #0]
 8002c6e:	441a      	add	r2, r3
 8002c70:	7fbb      	ldrb	r3, [r7, #30]
 8002c72:	7810      	ldrb	r0, [r2, #0]
 8002c74:	697a      	ldr	r2, [r7, #20]
 8002c76:	54d0      	strb	r0, [r2, r3]
	for (uint8_t i = 2; i < len + 2; ++i)
 8002c78:	7fbb      	ldrb	r3, [r7, #30]
 8002c7a:	3301      	adds	r3, #1
 8002c7c:	77bb      	strb	r3, [r7, #30]
 8002c7e:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8002c82:	1c5a      	adds	r2, r3, #1
 8002c84:	7fbb      	ldrb	r3, [r7, #30]
 8002c86:	429a      	cmp	r2, r3
 8002c88:	daee      	bge.n	8002c68 <SX1262WriteRegister+0xa0>

	SX1262WriteCommand(mcu, radio, WRITE_REGISTER, write_msg, sizeof(write_msg));
 8002c8a:	b2cb      	uxtb	r3, r1
 8002c8c:	9300      	str	r3, [sp, #0]
 8002c8e:	697b      	ldr	r3, [r7, #20]
 8002c90:	220d      	movs	r2, #13
 8002c92:	68b9      	ldr	r1, [r7, #8]
 8002c94:	68f8      	ldr	r0, [r7, #12]
 8002c96:	f7ff fd7b 	bl	8002790 <SX1262WriteCommand>
 8002c9a:	46b5      	mov	sp, r6
}
 8002c9c:	bf00      	nop
 8002c9e:	3724      	adds	r7, #36	; 0x24
 8002ca0:	46bd      	mov	sp, r7
 8002ca2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002ca6 <SX1262ReadRegister>:
*                 corresponds to 1 Byte memory. If the requested data is more
*                 than 1 byte (len > 1), the given address is the address of
*                 the 1st Byte
******************************************************************************/
void SX1262ReadRegister(MCU* mcu, Radio* radio, uint16_t address, uint8_t *data, uint8_t len) // len = # of Bytes of the received message
{
 8002ca6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002caa:	b091      	sub	sp, #68	; 0x44
 8002cac:	af02      	add	r7, sp, #8
 8002cae:	61f8      	str	r0, [r7, #28]
 8002cb0:	61b9      	str	r1, [r7, #24]
 8002cb2:	613b      	str	r3, [r7, #16]
 8002cb4:	4613      	mov	r3, r2
 8002cb6:	82fb      	strh	r3, [r7, #22]
 8002cb8:	466b      	mov	r3, sp
 8002cba:	607b      	str	r3, [r7, #4]
	uint8_t write_msg[len + 4];
 8002cbc:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002cc0:	1d1e      	adds	r6, r3, #4
 8002cc2:	1e73      	subs	r3, r6, #1
 8002cc4:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002cc6:	4632      	mov	r2, r6
 8002cc8:	2300      	movs	r3, #0
 8002cca:	60ba      	str	r2, [r7, #8]
 8002ccc:	60fb      	str	r3, [r7, #12]
 8002cce:	f04f 0200 	mov.w	r2, #0
 8002cd2:	f04f 0300 	mov.w	r3, #0
 8002cd6:	68f9      	ldr	r1, [r7, #12]
 8002cd8:	00cb      	lsls	r3, r1, #3
 8002cda:	68b9      	ldr	r1, [r7, #8]
 8002cdc:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8002ce0:	68b9      	ldr	r1, [r7, #8]
 8002ce2:	00ca      	lsls	r2, r1, #3
 8002ce4:	4632      	mov	r2, r6
 8002ce6:	2300      	movs	r3, #0
 8002ce8:	4692      	mov	sl, r2
 8002cea:	469b      	mov	fp, r3
 8002cec:	f04f 0200 	mov.w	r2, #0
 8002cf0:	f04f 0300 	mov.w	r3, #0
 8002cf4:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8002cf8:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8002cfc:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8002d00:	4633      	mov	r3, r6
 8002d02:	3307      	adds	r3, #7
 8002d04:	08db      	lsrs	r3, r3, #3
 8002d06:	00db      	lsls	r3, r3, #3
 8002d08:	ebad 0d03 	sub.w	sp, sp, r3
 8002d0c:	ab02      	add	r3, sp, #8
 8002d0e:	3300      	adds	r3, #0
 8002d10:	62bb      	str	r3, [r7, #40]	; 0x28
	uint8_t read_msg[len + 4];
 8002d12:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002d16:	1d19      	adds	r1, r3, #4
 8002d18:	1e4b      	subs	r3, r1, #1
 8002d1a:	627b      	str	r3, [r7, #36]	; 0x24
 8002d1c:	460a      	mov	r2, r1
 8002d1e:	2300      	movs	r3, #0
 8002d20:	4690      	mov	r8, r2
 8002d22:	4699      	mov	r9, r3
 8002d24:	f04f 0200 	mov.w	r2, #0
 8002d28:	f04f 0300 	mov.w	r3, #0
 8002d2c:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002d30:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002d34:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002d38:	460a      	mov	r2, r1
 8002d3a:	2300      	movs	r3, #0
 8002d3c:	4614      	mov	r4, r2
 8002d3e:	461d      	mov	r5, r3
 8002d40:	f04f 0200 	mov.w	r2, #0
 8002d44:	f04f 0300 	mov.w	r3, #0
 8002d48:	00eb      	lsls	r3, r5, #3
 8002d4a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002d4e:	00e2      	lsls	r2, r4, #3
 8002d50:	460b      	mov	r3, r1
 8002d52:	3307      	adds	r3, #7
 8002d54:	08db      	lsrs	r3, r3, #3
 8002d56:	00db      	lsls	r3, r3, #3
 8002d58:	ebad 0d03 	sub.w	sp, sp, r3
 8002d5c:	ab02      	add	r3, sp, #8
 8002d5e:	3300      	adds	r3, #0
 8002d60:	623b      	str	r3, [r7, #32]
	for (uint8_t i = 0; i < len + 4; ++i)
 8002d62:	2300      	movs	r3, #0
 8002d64:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002d68:	e00e      	b.n	8002d88 <SX1262ReadRegister+0xe2>
	{
		write_msg[i] = 0;
 8002d6a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002d6e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8002d70:	2100      	movs	r1, #0
 8002d72:	54d1      	strb	r1, [r2, r3]
		read_msg[i]  = 0;
 8002d74:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002d78:	6a3a      	ldr	r2, [r7, #32]
 8002d7a:	2100      	movs	r1, #0
 8002d7c:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < len + 4; ++i)
 8002d7e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002d82:	3301      	adds	r3, #1
 8002d84:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 8002d88:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002d8c:	1cda      	adds	r2, r3, #3
 8002d8e:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8002d92:	429a      	cmp	r2, r3
 8002d94:	dae9      	bge.n	8002d6a <SX1262ReadRegister+0xc4>
	}

	write_msg[0] = READ_REGISTER;
 8002d96:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002d98:	221d      	movs	r2, #29
 8002d9a:	701a      	strb	r2, [r3, #0]
	write_msg[1] = address >> 8;
 8002d9c:	8afb      	ldrh	r3, [r7, #22]
 8002d9e:	0a1b      	lsrs	r3, r3, #8
 8002da0:	b29b      	uxth	r3, r3
 8002da2:	b2da      	uxtb	r2, r3
 8002da4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002da6:	705a      	strb	r2, [r3, #1]
	write_msg[2] = address;
 8002da8:	8afb      	ldrh	r3, [r7, #22]
 8002daa:	b2da      	uxtb	r2, r3
 8002dac:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002dae:	709a      	strb	r2, [r3, #2]

	while(HAL_GPIO_ReadPin(mcu->busy.type, mcu->busy.pin) != GPIO_PIN_RESET);  // Wait until BUSY pin goes LOW
 8002db0:	bf00      	nop
 8002db2:	69fb      	ldr	r3, [r7, #28]
 8002db4:	695a      	ldr	r2, [r3, #20]
 8002db6:	69fb      	ldr	r3, [r7, #28]
 8002db8:	8b1b      	ldrh	r3, [r3, #24]
 8002dba:	4619      	mov	r1, r3
 8002dbc:	4610      	mov	r0, r2
 8002dbe:	f006 fb35 	bl	800942c <HAL_GPIO_ReadPin>
 8002dc2:	4603      	mov	r3, r0
 8002dc4:	2b00      	cmp	r3, #0
 8002dc6:	d1f4      	bne.n	8002db2 <SX1262ReadRegister+0x10c>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_RESET);
 8002dc8:	69fb      	ldr	r3, [r7, #28]
 8002dca:	6858      	ldr	r0, [r3, #4]
 8002dcc:	69fb      	ldr	r3, [r7, #28]
 8002dce:	891b      	ldrh	r3, [r3, #8]
 8002dd0:	2200      	movs	r2, #0
 8002dd2:	4619      	mov	r1, r3
 8002dd4:	f006 fb42 	bl	800945c <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(mcu->spi.spiHandle, write_msg, read_msg, sizeof(write_msg), SPI_TIMEOUT);
 8002dd8:	69fb      	ldr	r3, [r7, #28]
 8002dda:	6818      	ldr	r0, [r3, #0]
 8002ddc:	b2b3      	uxth	r3, r6
 8002dde:	2232      	movs	r2, #50	; 0x32
 8002de0:	9200      	str	r2, [sp, #0]
 8002de2:	6a3a      	ldr	r2, [r7, #32]
 8002de4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8002de6:	f008 fae2 	bl	800b3ae <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_SET);
 8002dea:	69fb      	ldr	r3, [r7, #28]
 8002dec:	6858      	ldr	r0, [r3, #4]
 8002dee:	69fb      	ldr	r3, [r7, #28]
 8002df0:	891b      	ldrh	r3, [r3, #8]
 8002df2:	2201      	movs	r2, #1
 8002df4:	4619      	mov	r1, r3
 8002df6:	f006 fb31 	bl	800945c <HAL_GPIO_WritePin>

	for (uint8_t i = 0; i < len; ++i)
 8002dfa:	2300      	movs	r3, #0
 8002dfc:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 8002e00:	e00e      	b.n	8002e20 <SX1262ReadRegister+0x17a>
		data[i] = read_msg[i + 4];
 8002e02:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8002e06:	1d1a      	adds	r2, r3, #4
 8002e08:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8002e0c:	6939      	ldr	r1, [r7, #16]
 8002e0e:	440b      	add	r3, r1
 8002e10:	6a39      	ldr	r1, [r7, #32]
 8002e12:	5c8a      	ldrb	r2, [r1, r2]
 8002e14:	701a      	strb	r2, [r3, #0]
	for (uint8_t i = 0; i < len; ++i)
 8002e16:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 8002e1a:	3301      	adds	r3, #1
 8002e1c:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 8002e20:	f897 2036 	ldrb.w	r2, [r7, #54]	; 0x36
 8002e24:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002e28:	429a      	cmp	r2, r3
 8002e2a:	d3ea      	bcc.n	8002e02 <SX1262ReadRegister+0x15c>

	// Debugging
	uint8_t limit;
	if (len + 4 <= READ_MSG_LEN)
 8002e2c:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002e30:	2bc4      	cmp	r3, #196	; 0xc4
 8002e32:	d805      	bhi.n	8002e40 <SX1262ReadRegister+0x19a>
		limit = len + 4;
 8002e34:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002e38:	3304      	adds	r3, #4
 8002e3a:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 8002e3e:	e002      	b.n	8002e46 <SX1262ReadRegister+0x1a0>
	else
		limit = READ_MSG_LEN;
 8002e40:	23c8      	movs	r3, #200	; 0xc8
 8002e42:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35

	for (uint8_t i = 0; i < limit; ++i)
 8002e46:	2300      	movs	r3, #0
 8002e48:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8002e4c:	e00c      	b.n	8002e68 <SX1262ReadRegister+0x1c2>
		radio->spi_read_msg[i] = read_msg[i];
 8002e4e:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 8002e52:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8002e56:	6a39      	ldr	r1, [r7, #32]
 8002e58:	5c89      	ldrb	r1, [r1, r2]
 8002e5a:	69ba      	ldr	r2, [r7, #24]
 8002e5c:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < limit; ++i)
 8002e5e:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 8002e62:	3301      	adds	r3, #1
 8002e64:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8002e68:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 8002e6c:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8002e70:	429a      	cmp	r2, r3
 8002e72:	d3ec      	bcc.n	8002e4e <SX1262ReadRegister+0x1a8>
	for (uint8_t i = len + 4; i < READ_MSG_LEN; ++i)
 8002e74:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8002e78:	3304      	adds	r3, #4
 8002e7a:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002e7e:	e009      	b.n	8002e94 <SX1262ReadRegister+0x1ee>
		radio->spi_read_msg[i] = 0;
 8002e80:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002e84:	69ba      	ldr	r2, [r7, #24]
 8002e86:	2100      	movs	r1, #0
 8002e88:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = len + 4; i < READ_MSG_LEN; ++i)
 8002e8a:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002e8e:	3301      	adds	r3, #1
 8002e90:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8002e94:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8002e98:	2bc7      	cmp	r3, #199	; 0xc7
 8002e9a:	d9f1      	bls.n	8002e80 <SX1262ReadRegister+0x1da>
 8002e9c:	f8d7 d004 	ldr.w	sp, [r7, #4]
}
 8002ea0:	bf00      	nop
 8002ea2:	373c      	adds	r7, #60	; 0x3c
 8002ea4:	46bd      	mov	sp, r7
 8002ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08002eaa <SX1262SafeWriteRegister>:
/*****************************************************************************
*  @Description	  Writes to the requested register and then reads back to
*                 ensure that the data has been written successfully.
******************************************************************************/
RadioState_t SX1262SafeWriteRegister(MCU* mcu, Radio* radio, uint16_t address, uint8_t* data, uint8_t len)
{
 8002eaa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002eae:	b08a      	sub	sp, #40	; 0x28
 8002eb0:	af02      	add	r7, sp, #8
 8002eb2:	60f8      	str	r0, [r7, #12]
 8002eb4:	60b9      	str	r1, [r7, #8]
 8002eb6:	603b      	str	r3, [r7, #0]
 8002eb8:	4613      	mov	r3, r2
 8002eba:	80fb      	strh	r3, [r7, #6]
 8002ebc:	466b      	mov	r3, sp
 8002ebe:	469a      	mov	sl, r3
	uint8_t received_data[len];
 8002ec0:	f897 6040 	ldrb.w	r6, [r7, #64]	; 0x40
 8002ec4:	4633      	mov	r3, r6
 8002ec6:	3b01      	subs	r3, #1
 8002ec8:	61bb      	str	r3, [r7, #24]
 8002eca:	b2f3      	uxtb	r3, r6
 8002ecc:	2200      	movs	r2, #0
 8002ece:	4698      	mov	r8, r3
 8002ed0:	4691      	mov	r9, r2
 8002ed2:	f04f 0200 	mov.w	r2, #0
 8002ed6:	f04f 0300 	mov.w	r3, #0
 8002eda:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002ede:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002ee2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002ee6:	b2f3      	uxtb	r3, r6
 8002ee8:	2200      	movs	r2, #0
 8002eea:	461c      	mov	r4, r3
 8002eec:	4615      	mov	r5, r2
 8002eee:	f04f 0200 	mov.w	r2, #0
 8002ef2:	f04f 0300 	mov.w	r3, #0
 8002ef6:	00eb      	lsls	r3, r5, #3
 8002ef8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002efc:	00e2      	lsls	r2, r4, #3
 8002efe:	4633      	mov	r3, r6
 8002f00:	3307      	adds	r3, #7
 8002f02:	08db      	lsrs	r3, r3, #3
 8002f04:	00db      	lsls	r3, r3, #3
 8002f06:	ebad 0d03 	sub.w	sp, sp, r3
 8002f0a:	ab02      	add	r3, sp, #8
 8002f0c:	3300      	adds	r3, #0
 8002f0e:	617b      	str	r3, [r7, #20]
	for (uint8_t i = 0; i < len; ++i)
 8002f10:	2300      	movs	r3, #0
 8002f12:	77fb      	strb	r3, [r7, #31]
 8002f14:	e006      	b.n	8002f24 <SX1262SafeWriteRegister+0x7a>
		received_data[i] = 0;
 8002f16:	7ffb      	ldrb	r3, [r7, #31]
 8002f18:	697a      	ldr	r2, [r7, #20]
 8002f1a:	2100      	movs	r1, #0
 8002f1c:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < len; ++i)
 8002f1e:	7ffb      	ldrb	r3, [r7, #31]
 8002f20:	3301      	adds	r3, #1
 8002f22:	77fb      	strb	r3, [r7, #31]
 8002f24:	7ffa      	ldrb	r2, [r7, #31]
 8002f26:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8002f2a:	429a      	cmp	r2, r3
 8002f2c:	d3f3      	bcc.n	8002f16 <SX1262SafeWriteRegister+0x6c>

	SX1262WriteRegister(mcu, radio, address, data, len);
 8002f2e:	88fa      	ldrh	r2, [r7, #6]
 8002f30:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8002f34:	9300      	str	r3, [sp, #0]
 8002f36:	683b      	ldr	r3, [r7, #0]
 8002f38:	68b9      	ldr	r1, [r7, #8]
 8002f3a:	68f8      	ldr	r0, [r7, #12]
 8002f3c:	f7ff fe44 	bl	8002bc8 <SX1262WriteRegister>
	SX1262ReadRegister(mcu, radio, address, received_data, sizeof(received_data));
 8002f40:	88fa      	ldrh	r2, [r7, #6]
 8002f42:	9600      	str	r6, [sp, #0]
 8002f44:	697b      	ldr	r3, [r7, #20]
 8002f46:	68b9      	ldr	r1, [r7, #8]
 8002f48:	68f8      	ldr	r0, [r7, #12]
 8002f4a:	f7ff feac 	bl	8002ca6 <SX1262ReadRegister>

	for (uint8_t i = 0; i < len; ++i)
 8002f4e:	2300      	movs	r3, #0
 8002f50:	77bb      	strb	r3, [r7, #30]
 8002f52:	e00d      	b.n	8002f70 <SX1262SafeWriteRegister+0xc6>
		if (data[i] != received_data[i])
 8002f54:	7fbb      	ldrb	r3, [r7, #30]
 8002f56:	683a      	ldr	r2, [r7, #0]
 8002f58:	4413      	add	r3, r2
 8002f5a:	781a      	ldrb	r2, [r3, #0]
 8002f5c:	7fbb      	ldrb	r3, [r7, #30]
 8002f5e:	6979      	ldr	r1, [r7, #20]
 8002f60:	5ccb      	ldrb	r3, [r1, r3]
 8002f62:	429a      	cmp	r2, r3
 8002f64:	d001      	beq.n	8002f6a <SX1262SafeWriteRegister+0xc0>
			return RADIO_SAFE_WRITE_ERROR;
 8002f66:	2301      	movs	r3, #1
 8002f68:	e008      	b.n	8002f7c <SX1262SafeWriteRegister+0xd2>
	for (uint8_t i = 0; i < len; ++i)
 8002f6a:	7fbb      	ldrb	r3, [r7, #30]
 8002f6c:	3301      	adds	r3, #1
 8002f6e:	77bb      	strb	r3, [r7, #30]
 8002f70:	7fba      	ldrb	r2, [r7, #30]
 8002f72:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8002f76:	429a      	cmp	r2, r3
 8002f78:	d3ec      	bcc.n	8002f54 <SX1262SafeWriteRegister+0xaa>
	return RADIO_OK;
 8002f7a:	2300      	movs	r3, #0
 8002f7c:	46d5      	mov	sp, sl
}
 8002f7e:	4618      	mov	r0, r3
 8002f80:	3720      	adds	r7, #32
 8002f82:	46bd      	mov	sp, r7
 8002f84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08002f88 <SX1262WriteBuffer>:
*  @Description	  Writes to the buffer. The buffer has 256 positions so the
*                 offset (0 - 255) has to be given. The buffer is used for
*                 transmitted / received payload
******************************************************************************/
void SX1262WriteBuffer(MCU* mcu, Radio* radio, uint8_t offset, uint8_t *data, uint8_t len)
{
 8002f88:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002f8c:	b08b      	sub	sp, #44	; 0x2c
 8002f8e:	af02      	add	r7, sp, #8
 8002f90:	60f8      	str	r0, [r7, #12]
 8002f92:	60b9      	str	r1, [r7, #8]
 8002f94:	603b      	str	r3, [r7, #0]
 8002f96:	4613      	mov	r3, r2
 8002f98:	71fb      	strb	r3, [r7, #7]
 8002f9a:	466b      	mov	r3, sp
 8002f9c:	461e      	mov	r6, r3
	uint8_t write_msg[len + 1];
 8002f9e:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8002fa2:	1c59      	adds	r1, r3, #1
 8002fa4:	1e4b      	subs	r3, r1, #1
 8002fa6:	61bb      	str	r3, [r7, #24]
 8002fa8:	460a      	mov	r2, r1
 8002faa:	2300      	movs	r3, #0
 8002fac:	4690      	mov	r8, r2
 8002fae:	4699      	mov	r9, r3
 8002fb0:	f04f 0200 	mov.w	r2, #0
 8002fb4:	f04f 0300 	mov.w	r3, #0
 8002fb8:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002fbc:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002fc0:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002fc4:	460a      	mov	r2, r1
 8002fc6:	2300      	movs	r3, #0
 8002fc8:	4614      	mov	r4, r2
 8002fca:	461d      	mov	r5, r3
 8002fcc:	f04f 0200 	mov.w	r2, #0
 8002fd0:	f04f 0300 	mov.w	r3, #0
 8002fd4:	00eb      	lsls	r3, r5, #3
 8002fd6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002fda:	00e2      	lsls	r2, r4, #3
 8002fdc:	460b      	mov	r3, r1
 8002fde:	3307      	adds	r3, #7
 8002fe0:	08db      	lsrs	r3, r3, #3
 8002fe2:	00db      	lsls	r3, r3, #3
 8002fe4:	ebad 0d03 	sub.w	sp, sp, r3
 8002fe8:	ab02      	add	r3, sp, #8
 8002fea:	3300      	adds	r3, #0
 8002fec:	617b      	str	r3, [r7, #20]
	for (uint8_t i = 0; i < len + 1; ++i)
 8002fee:	2300      	movs	r3, #0
 8002ff0:	77fb      	strb	r3, [r7, #31]
 8002ff2:	e006      	b.n	8003002 <SX1262WriteBuffer+0x7a>
		write_msg[i] = 0;
 8002ff4:	7ffb      	ldrb	r3, [r7, #31]
 8002ff6:	697a      	ldr	r2, [r7, #20]
 8002ff8:	2000      	movs	r0, #0
 8002ffa:	54d0      	strb	r0, [r2, r3]
	for (uint8_t i = 0; i < len + 1; ++i)
 8002ffc:	7ffb      	ldrb	r3, [r7, #31]
 8002ffe:	3301      	adds	r3, #1
 8003000:	77fb      	strb	r3, [r7, #31]
 8003002:	f897 2040 	ldrb.w	r2, [r7, #64]	; 0x40
 8003006:	7ffb      	ldrb	r3, [r7, #31]
 8003008:	429a      	cmp	r2, r3
 800300a:	d2f3      	bcs.n	8002ff4 <SX1262WriteBuffer+0x6c>

	write_msg[0] = offset;
 800300c:	697b      	ldr	r3, [r7, #20]
 800300e:	79fa      	ldrb	r2, [r7, #7]
 8003010:	701a      	strb	r2, [r3, #0]
	for (uint8_t i = 0; i < len; ++i)
 8003012:	2300      	movs	r3, #0
 8003014:	77bb      	strb	r3, [r7, #30]
 8003016:	e00a      	b.n	800302e <SX1262WriteBuffer+0xa6>
		write_msg[i + 1] = data[i];
 8003018:	7fbb      	ldrb	r3, [r7, #30]
 800301a:	683a      	ldr	r2, [r7, #0]
 800301c:	441a      	add	r2, r3
 800301e:	7fbb      	ldrb	r3, [r7, #30]
 8003020:	3301      	adds	r3, #1
 8003022:	7810      	ldrb	r0, [r2, #0]
 8003024:	697a      	ldr	r2, [r7, #20]
 8003026:	54d0      	strb	r0, [r2, r3]
	for (uint8_t i = 0; i < len; ++i)
 8003028:	7fbb      	ldrb	r3, [r7, #30]
 800302a:	3301      	adds	r3, #1
 800302c:	77bb      	strb	r3, [r7, #30]
 800302e:	7fba      	ldrb	r2, [r7, #30]
 8003030:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 8003034:	429a      	cmp	r2, r3
 8003036:	d3ef      	bcc.n	8003018 <SX1262WriteBuffer+0x90>

	if (len > 40)
 8003038:	f897 3040 	ldrb.w	r3, [r7, #64]	; 0x40
 800303c:	2b28      	cmp	r3, #40	; 0x28
 800303e:	d905      	bls.n	800304c <SX1262WriteBuffer+0xc4>
		test++;
 8003040:	4b09      	ldr	r3, [pc, #36]	; (8003068 <SX1262WriteBuffer+0xe0>)
 8003042:	781b      	ldrb	r3, [r3, #0]
 8003044:	3301      	adds	r3, #1
 8003046:	b2da      	uxtb	r2, r3
 8003048:	4b07      	ldr	r3, [pc, #28]	; (8003068 <SX1262WriteBuffer+0xe0>)
 800304a:	701a      	strb	r2, [r3, #0]

	SX1262WriteCommand(mcu, radio, WRITE_BUFFER, write_msg, sizeof(write_msg));
 800304c:	b2cb      	uxtb	r3, r1
 800304e:	9300      	str	r3, [sp, #0]
 8003050:	697b      	ldr	r3, [r7, #20]
 8003052:	220e      	movs	r2, #14
 8003054:	68b9      	ldr	r1, [r7, #8]
 8003056:	68f8      	ldr	r0, [r7, #12]
 8003058:	f7ff fb9a 	bl	8002790 <SX1262WriteCommand>
 800305c:	46b5      	mov	sp, r6
}
 800305e:	bf00      	nop
 8003060:	3724      	adds	r7, #36	; 0x24
 8003062:	46bd      	mov	sp, r7
 8003064:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003068:	20000304 	.word	0x20000304

0800306c <SX1262ReadBuffer>:
*  @Description	  Reads from the buffer. The buffer has 256 positions so the
*                 offset (0 - 255) has to be given. The buffer is used for
*                 transmitted / received payload
******************************************************************************/
void SX1262ReadBuffer(MCU* mcu, Radio* radio, uint8_t offset, uint8_t *received_data, uint8_t len)
{
 800306c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003070:	b091      	sub	sp, #68	; 0x44
 8003072:	af02      	add	r7, sp, #8
 8003074:	61f8      	str	r0, [r7, #28]
 8003076:	61b9      	str	r1, [r7, #24]
 8003078:	613b      	str	r3, [r7, #16]
 800307a:	4613      	mov	r3, r2
 800307c:	75fb      	strb	r3, [r7, #23]
 800307e:	466b      	mov	r3, sp
 8003080:	607b      	str	r3, [r7, #4]
	    return 1;
	}
	while(digitalRead(SX126x_BUSY));
	*/

	uint8_t write_msg[len + 3];
 8003082:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8003086:	1cde      	adds	r6, r3, #3
 8003088:	1e73      	subs	r3, r6, #1
 800308a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800308c:	4632      	mov	r2, r6
 800308e:	2300      	movs	r3, #0
 8003090:	60ba      	str	r2, [r7, #8]
 8003092:	60fb      	str	r3, [r7, #12]
 8003094:	f04f 0200 	mov.w	r2, #0
 8003098:	f04f 0300 	mov.w	r3, #0
 800309c:	68f9      	ldr	r1, [r7, #12]
 800309e:	00cb      	lsls	r3, r1, #3
 80030a0:	68b9      	ldr	r1, [r7, #8]
 80030a2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80030a6:	68b9      	ldr	r1, [r7, #8]
 80030a8:	00ca      	lsls	r2, r1, #3
 80030aa:	4632      	mov	r2, r6
 80030ac:	2300      	movs	r3, #0
 80030ae:	4692      	mov	sl, r2
 80030b0:	469b      	mov	fp, r3
 80030b2:	f04f 0200 	mov.w	r2, #0
 80030b6:	f04f 0300 	mov.w	r3, #0
 80030ba:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 80030be:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 80030c2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80030c6:	4633      	mov	r3, r6
 80030c8:	3307      	adds	r3, #7
 80030ca:	08db      	lsrs	r3, r3, #3
 80030cc:	00db      	lsls	r3, r3, #3
 80030ce:	ebad 0d03 	sub.w	sp, sp, r3
 80030d2:	ab02      	add	r3, sp, #8
 80030d4:	3300      	adds	r3, #0
 80030d6:	62bb      	str	r3, [r7, #40]	; 0x28
	uint8_t read_msg[len + 3];
 80030d8:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80030dc:	1cd9      	adds	r1, r3, #3
 80030de:	1e4b      	subs	r3, r1, #1
 80030e0:	627b      	str	r3, [r7, #36]	; 0x24
 80030e2:	460a      	mov	r2, r1
 80030e4:	2300      	movs	r3, #0
 80030e6:	4690      	mov	r8, r2
 80030e8:	4699      	mov	r9, r3
 80030ea:	f04f 0200 	mov.w	r2, #0
 80030ee:	f04f 0300 	mov.w	r3, #0
 80030f2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80030f6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80030fa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80030fe:	460a      	mov	r2, r1
 8003100:	2300      	movs	r3, #0
 8003102:	4614      	mov	r4, r2
 8003104:	461d      	mov	r5, r3
 8003106:	f04f 0200 	mov.w	r2, #0
 800310a:	f04f 0300 	mov.w	r3, #0
 800310e:	00eb      	lsls	r3, r5, #3
 8003110:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003114:	00e2      	lsls	r2, r4, #3
 8003116:	460b      	mov	r3, r1
 8003118:	3307      	adds	r3, #7
 800311a:	08db      	lsrs	r3, r3, #3
 800311c:	00db      	lsls	r3, r3, #3
 800311e:	ebad 0d03 	sub.w	sp, sp, r3
 8003122:	ab02      	add	r3, sp, #8
 8003124:	3300      	adds	r3, #0
 8003126:	623b      	str	r3, [r7, #32]
	for (uint8_t i = 0; i < len + 3; ++i)
 8003128:	2300      	movs	r3, #0
 800312a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800312e:	e00e      	b.n	800314e <SX1262ReadBuffer+0xe2>
	{
		write_msg[i] = 0;
 8003130:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003134:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003136:	2100      	movs	r1, #0
 8003138:	54d1      	strb	r1, [r2, r3]
		read_msg[i]  = 0;
 800313a:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 800313e:	6a3a      	ldr	r2, [r7, #32]
 8003140:	2100      	movs	r1, #0
 8003142:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < len + 3; ++i)
 8003144:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003148:	3301      	adds	r3, #1
 800314a:	f887 3037 	strb.w	r3, [r7, #55]	; 0x37
 800314e:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8003152:	1c9a      	adds	r2, r3, #2
 8003154:	f897 3037 	ldrb.w	r3, [r7, #55]	; 0x37
 8003158:	429a      	cmp	r2, r3
 800315a:	dae9      	bge.n	8003130 <SX1262ReadBuffer+0xc4>
	}

	write_msg[0] = READ_BUFFER;
 800315c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800315e:	221e      	movs	r2, #30
 8003160:	701a      	strb	r2, [r3, #0]
	write_msg[1] = offset;
 8003162:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003164:	7dfa      	ldrb	r2, [r7, #23]
 8003166:	705a      	strb	r2, [r3, #1]

	while(HAL_GPIO_ReadPin(mcu->busy.type, mcu->busy.pin) != GPIO_PIN_RESET);  // Wait until BUSY pin goes LOW
 8003168:	bf00      	nop
 800316a:	69fb      	ldr	r3, [r7, #28]
 800316c:	695a      	ldr	r2, [r3, #20]
 800316e:	69fb      	ldr	r3, [r7, #28]
 8003170:	8b1b      	ldrh	r3, [r3, #24]
 8003172:	4619      	mov	r1, r3
 8003174:	4610      	mov	r0, r2
 8003176:	f006 f959 	bl	800942c <HAL_GPIO_ReadPin>
 800317a:	4603      	mov	r3, r0
 800317c:	2b00      	cmp	r3, #0
 800317e:	d1f4      	bne.n	800316a <SX1262ReadBuffer+0xfe>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_RESET);
 8003180:	69fb      	ldr	r3, [r7, #28]
 8003182:	6858      	ldr	r0, [r3, #4]
 8003184:	69fb      	ldr	r3, [r7, #28]
 8003186:	891b      	ldrh	r3, [r3, #8]
 8003188:	2200      	movs	r2, #0
 800318a:	4619      	mov	r1, r3
 800318c:	f006 f966 	bl	800945c <HAL_GPIO_WritePin>
	HAL_SPI_TransmitReceive(mcu->spi.spiHandle, write_msg, read_msg, sizeof(write_msg), SPI_TIMEOUT);
 8003190:	69fb      	ldr	r3, [r7, #28]
 8003192:	6818      	ldr	r0, [r3, #0]
 8003194:	b2b3      	uxth	r3, r6
 8003196:	2232      	movs	r2, #50	; 0x32
 8003198:	9200      	str	r2, [sp, #0]
 800319a:	6a3a      	ldr	r2, [r7, #32]
 800319c:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800319e:	f008 f906 	bl	800b3ae <HAL_SPI_TransmitReceive>
	HAL_GPIO_WritePin(mcu->spi.NSS.type, mcu->spi.NSS.pin, GPIO_PIN_SET);
 80031a2:	69fb      	ldr	r3, [r7, #28]
 80031a4:	6858      	ldr	r0, [r3, #4]
 80031a6:	69fb      	ldr	r3, [r7, #28]
 80031a8:	891b      	ldrh	r3, [r3, #8]
 80031aa:	2201      	movs	r2, #1
 80031ac:	4619      	mov	r1, r3
 80031ae:	f006 f955 	bl	800945c <HAL_GPIO_WritePin>

	for (uint8_t i = 0; i < len; ++i)
 80031b2:	2300      	movs	r3, #0
 80031b4:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 80031b8:	e00e      	b.n	80031d8 <SX1262ReadBuffer+0x16c>
		received_data[i] = read_msg[i + 3];
 80031ba:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80031be:	1cda      	adds	r2, r3, #3
 80031c0:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80031c4:	6939      	ldr	r1, [r7, #16]
 80031c6:	440b      	add	r3, r1
 80031c8:	6a39      	ldr	r1, [r7, #32]
 80031ca:	5c8a      	ldrb	r2, [r1, r2]
 80031cc:	701a      	strb	r2, [r3, #0]
	for (uint8_t i = 0; i < len; ++i)
 80031ce:	f897 3036 	ldrb.w	r3, [r7, #54]	; 0x36
 80031d2:	3301      	adds	r3, #1
 80031d4:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
 80031d8:	f897 2036 	ldrb.w	r2, [r7, #54]	; 0x36
 80031dc:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80031e0:	429a      	cmp	r2, r3
 80031e2:	d3ea      	bcc.n	80031ba <SX1262ReadBuffer+0x14e>


	// Debugging
	uint8_t limit;
	if (len + 3 <= READ_MSG_LEN)
 80031e4:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80031e8:	2bc5      	cmp	r3, #197	; 0xc5
 80031ea:	d805      	bhi.n	80031f8 <SX1262ReadBuffer+0x18c>
		limit = len + 3;
 80031ec:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 80031f0:	3303      	adds	r3, #3
 80031f2:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 80031f6:	e002      	b.n	80031fe <SX1262ReadBuffer+0x192>
	else
		limit = READ_MSG_LEN;
 80031f8:	23c8      	movs	r3, #200	; 0xc8
 80031fa:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35

	for (uint8_t i = 0; i < limit; ++i)
 80031fe:	2300      	movs	r3, #0
 8003200:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8003204:	e00c      	b.n	8003220 <SX1262ReadBuffer+0x1b4>
		radio->spi_read_msg[i] = read_msg[i];
 8003206:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 800320a:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800320e:	6a39      	ldr	r1, [r7, #32]
 8003210:	5c89      	ldrb	r1, [r1, r2]
 8003212:	69ba      	ldr	r2, [r7, #24]
 8003214:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = 0; i < limit; ++i)
 8003216:	f897 3034 	ldrb.w	r3, [r7, #52]	; 0x34
 800321a:	3301      	adds	r3, #1
 800321c:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
 8003220:	f897 2034 	ldrb.w	r2, [r7, #52]	; 0x34
 8003224:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8003228:	429a      	cmp	r2, r3
 800322a:	d3ec      	bcc.n	8003206 <SX1262ReadBuffer+0x19a>
	for (uint8_t i = len + 3; i < READ_MSG_LEN; ++i)
 800322c:	f897 3060 	ldrb.w	r3, [r7, #96]	; 0x60
 8003230:	3303      	adds	r3, #3
 8003232:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 8003236:	e009      	b.n	800324c <SX1262ReadBuffer+0x1e0>
		radio->spi_read_msg[i] = 0;
 8003238:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 800323c:	69ba      	ldr	r2, [r7, #24]
 800323e:	2100      	movs	r1, #0
 8003240:	54d1      	strb	r1, [r2, r3]
	for (uint8_t i = len + 3; i < READ_MSG_LEN; ++i)
 8003242:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003246:	3301      	adds	r3, #1
 8003248:	f887 3033 	strb.w	r3, [r7, #51]	; 0x33
 800324c:	f897 3033 	ldrb.w	r3, [r7, #51]	; 0x33
 8003250:	2bc7      	cmp	r3, #199	; 0xc7
 8003252:	d9f1      	bls.n	8003238 <SX1262ReadBuffer+0x1cc>
 8003254:	f8d7 d004 	ldr.w	sp, [r7, #4]
}
 8003258:	bf00      	nop
 800325a:	373c      	adds	r7, #60	; 0x3c
 800325c:	46bd      	mov	sp, r7
 800325e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08003264 <TpmsStructsInit>:


/* PROM memory is written differently and it's unique for each sensor
 * It has to do with the manufacturing process of the sensor          */
void TpmsStructsInit(void)
{
 8003264:	b480      	push	{r7}
 8003266:	af00      	add	r7, sp, #0
	/* TPMS Front Right */
	tpms_fr.id = 0;
 8003268:	4b3e      	ldr	r3, [pc, #248]	; (8003364 <TpmsStructsInit+0x100>)
 800326a:	2200      	movs	r2, #0
 800326c:	701a      	strb	r2, [r3, #0]
	tpms_fr.PROM[0] = 1;
 800326e:	4b3d      	ldr	r3, [pc, #244]	; (8003364 <TpmsStructsInit+0x100>)
 8003270:	2201      	movs	r2, #1
 8003272:	805a      	strh	r2, [r3, #2]
	tpms_fr.PROM[1] = 29759;
 8003274:	4b3b      	ldr	r3, [pc, #236]	; (8003364 <TpmsStructsInit+0x100>)
 8003276:	f247 423f 	movw	r2, #29759	; 0x743f
 800327a:	809a      	strh	r2, [r3, #4]
	tpms_fr.PROM[2] = 29011;
 800327c:	4b39      	ldr	r3, [pc, #228]	; (8003364 <TpmsStructsInit+0x100>)
 800327e:	f247 1253 	movw	r2, #29011	; 0x7153
 8003282:	80da      	strh	r2, [r3, #6]
	tpms_fr.PROM[3] = 18234;
 8003284:	4b37      	ldr	r3, [pc, #220]	; (8003364 <TpmsStructsInit+0x100>)
 8003286:	f244 723a 	movw	r2, #18234	; 0x473a
 800328a:	811a      	strh	r2, [r3, #8]
	tpms_fr.PROM[4] = 18934;
 800328c:	4b35      	ldr	r3, [pc, #212]	; (8003364 <TpmsStructsInit+0x100>)
 800328e:	f644 12f6 	movw	r2, #18934	; 0x49f6
 8003292:	815a      	strh	r2, [r3, #10]
	tpms_fr.PROM[5] = 27339;
 8003294:	4b33      	ldr	r3, [pc, #204]	; (8003364 <TpmsStructsInit+0x100>)
 8003296:	f646 22cb 	movw	r2, #27339	; 0x6acb
 800329a:	819a      	strh	r2, [r3, #12]
	tpms_fr.PROM[6] = 26943;
 800329c:	4b31      	ldr	r3, [pc, #196]	; (8003364 <TpmsStructsInit+0x100>)
 800329e:	f646 123f 	movw	r2, #26943	; 0x693f
 80032a2:	81da      	strh	r2, [r3, #14]

	/* TPMS Front Left */
	tpms_fl.id = 1;
 80032a4:	4b30      	ldr	r3, [pc, #192]	; (8003368 <TpmsStructsInit+0x104>)
 80032a6:	2201      	movs	r2, #1
 80032a8:	701a      	strb	r2, [r3, #0]
	tpms_fl.PROM[0] = 1;
 80032aa:	4b2f      	ldr	r3, [pc, #188]	; (8003368 <TpmsStructsInit+0x104>)
 80032ac:	2201      	movs	r2, #1
 80032ae:	805a      	strh	r2, [r3, #2]
	tpms_fl.PROM[1] = 30183;
 80032b0:	4b2d      	ldr	r3, [pc, #180]	; (8003368 <TpmsStructsInit+0x104>)
 80032b2:	f247 52e7 	movw	r2, #30183	; 0x75e7
 80032b6:	809a      	strh	r2, [r3, #4]
	tpms_fl.PROM[2] = 28072;
 80032b8:	4b2b      	ldr	r3, [pc, #172]	; (8003368 <TpmsStructsInit+0x104>)
 80032ba:	f646 52a8 	movw	r2, #28072	; 0x6da8
 80032be:	80da      	strh	r2, [r3, #6]
	tpms_fl.PROM[3] = 18109;
 80032c0:	4b29      	ldr	r3, [pc, #164]	; (8003368 <TpmsStructsInit+0x104>)
 80032c2:	f244 62bd 	movw	r2, #18109	; 0x46bd
 80032c6:	811a      	strh	r2, [r3, #8]
	tpms_fl.PROM[4] = 18077;
 80032c8:	4b27      	ldr	r3, [pc, #156]	; (8003368 <TpmsStructsInit+0x104>)
 80032ca:	f244 629d 	movw	r2, #18077	; 0x469d
 80032ce:	815a      	strh	r2, [r3, #10]
	tpms_fl.PROM[5] = 26770;
 80032d0:	4b25      	ldr	r3, [pc, #148]	; (8003368 <TpmsStructsInit+0x104>)
 80032d2:	f646 0292 	movw	r2, #26770	; 0x6892
 80032d6:	819a      	strh	r2, [r3, #12]
	tpms_fl.PROM[6] = 26528;
 80032d8:	4b23      	ldr	r3, [pc, #140]	; (8003368 <TpmsStructsInit+0x104>)
 80032da:	f246 72a0 	movw	r2, #26528	; 0x67a0
 80032de:	81da      	strh	r2, [r3, #14]

	/* TPMS Rear Right */
	tpms_rr.id = 2;
 80032e0:	4b22      	ldr	r3, [pc, #136]	; (800336c <TpmsStructsInit+0x108>)
 80032e2:	2202      	movs	r2, #2
 80032e4:	701a      	strb	r2, [r3, #0]
	tpms_rr.PROM[0] = 1;
 80032e6:	4b21      	ldr	r3, [pc, #132]	; (800336c <TpmsStructsInit+0x108>)
 80032e8:	2201      	movs	r2, #1
 80032ea:	805a      	strh	r2, [r3, #2]
	tpms_rr.PROM[1] = 29553;
 80032ec:	4b1f      	ldr	r3, [pc, #124]	; (800336c <TpmsStructsInit+0x108>)
 80032ee:	f247 3271 	movw	r2, #29553	; 0x7371
 80032f2:	809a      	strh	r2, [r3, #4]
	tpms_rr.PROM[2] = 28976;
 80032f4:	4b1d      	ldr	r3, [pc, #116]	; (800336c <TpmsStructsInit+0x108>)
 80032f6:	f247 1230 	movw	r2, #28976	; 0x7130
 80032fa:	80da      	strh	r2, [r3, #6]
	tpms_rr.PROM[3] = 17686;
 80032fc:	4b1b      	ldr	r3, [pc, #108]	; (800336c <TpmsStructsInit+0x108>)
 80032fe:	f244 5216 	movw	r2, #17686	; 0x4516
 8003302:	811a      	strh	r2, [r3, #8]
	tpms_rr.PROM[4] = 18245;
 8003304:	4b19      	ldr	r3, [pc, #100]	; (800336c <TpmsStructsInit+0x108>)
 8003306:	f244 7245 	movw	r2, #18245	; 0x4745
 800330a:	815a      	strh	r2, [r3, #10]
	tpms_rr.PROM[5] = 27727;
 800330c:	4b17      	ldr	r3, [pc, #92]	; (800336c <TpmsStructsInit+0x108>)
 800330e:	f646 424f 	movw	r2, #27727	; 0x6c4f
 8003312:	819a      	strh	r2, [r3, #12]
	tpms_rr.PROM[6] = 26979;
 8003314:	4b15      	ldr	r3, [pc, #84]	; (800336c <TpmsStructsInit+0x108>)
 8003316:	f646 1263 	movw	r2, #26979	; 0x6963
 800331a:	81da      	strh	r2, [r3, #14]

	/* TPMS Rear Left */
	tpms_rl.id = 3;
 800331c:	4b14      	ldr	r3, [pc, #80]	; (8003370 <TpmsStructsInit+0x10c>)
 800331e:	2203      	movs	r2, #3
 8003320:	701a      	strb	r2, [r3, #0]
	tpms_rl.PROM[0] = 1;
 8003322:	4b13      	ldr	r3, [pc, #76]	; (8003370 <TpmsStructsInit+0x10c>)
 8003324:	2201      	movs	r2, #1
 8003326:	805a      	strh	r2, [r3, #2]
	tpms_rl.PROM[1] = 28725;
 8003328:	4b11      	ldr	r3, [pc, #68]	; (8003370 <TpmsStructsInit+0x10c>)
 800332a:	f247 0235 	movw	r2, #28725	; 0x7035
 800332e:	809a      	strh	r2, [r3, #4]
	tpms_rl.PROM[2] = 28333;
 8003330:	4b0f      	ldr	r3, [pc, #60]	; (8003370 <TpmsStructsInit+0x10c>)
 8003332:	f646 62ad 	movw	r2, #28333	; 0x6ead
 8003336:	80da      	strh	r2, [r3, #6]
	tpms_rl.PROM[3] = 16814;
 8003338:	4b0d      	ldr	r3, [pc, #52]	; (8003370 <TpmsStructsInit+0x10c>)
 800333a:	f244 12ae 	movw	r2, #16814	; 0x41ae
 800333e:	811a      	strh	r2, [r3, #8]
	tpms_rl.PROM[4] = 17470;
 8003340:	4b0b      	ldr	r3, [pc, #44]	; (8003370 <TpmsStructsInit+0x10c>)
 8003342:	f244 423e 	movw	r2, #17470	; 0x443e
 8003346:	815a      	strh	r2, [r3, #10]
	tpms_rl.PROM[5] = 27433;
 8003348:	4b09      	ldr	r3, [pc, #36]	; (8003370 <TpmsStructsInit+0x10c>)
 800334a:	f646 3229 	movw	r2, #27433	; 0x6b29
 800334e:	819a      	strh	r2, [r3, #12]
	tpms_rl.PROM[6] = 26274;
 8003350:	4b07      	ldr	r3, [pc, #28]	; (8003370 <TpmsStructsInit+0x10c>)
 8003352:	f246 62a2 	movw	r2, #26274	; 0x66a2
 8003356:	81da      	strh	r2, [r3, #14]
}
 8003358:	bf00      	nop
 800335a:	46bd      	mov	sp, r7
 800335c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003360:	4770      	bx	lr
 8003362:	bf00      	nop
 8003364:	20000330 	.word	0x20000330
 8003368:	2000035c 	.word	0x2000035c
 800336c:	20000388 	.word	0x20000388
 8003370:	200003b4 	.word	0x200003b4

08003374 <init_packet_types>:


void init_packet_types(void)
{
 8003374:	b480      	push	{r7}
 8003376:	af00      	add	r7, sp, #0
	tpms_packet.PacketType = PACKET_TYPE_GFSK;
 8003378:	4b1d      	ldr	r3, [pc, #116]	; (80033f0 <init_packet_types+0x7c>)
 800337a:	2200      	movs	r2, #0
 800337c:	701a      	strb	r2, [r3, #0]
	tpms_packet.Params.Gfsk.PreambleLength = 16;
 800337e:	4b1c      	ldr	r3, [pc, #112]	; (80033f0 <init_packet_types+0x7c>)
 8003380:	2210      	movs	r2, #16
 8003382:	805a      	strh	r2, [r3, #2]
	tpms_packet.Params.Gfsk.PreambleMinDetect = PREAMBLE_DETECTOR_08_BITS;
 8003384:	4b1a      	ldr	r3, [pc, #104]	; (80033f0 <init_packet_types+0x7c>)
 8003386:	2204      	movs	r2, #4
 8003388:	711a      	strb	r2, [r3, #4]
	tpms_packet.Params.Gfsk.SyncWordLength = 0x18;
 800338a:	4b19      	ldr	r3, [pc, #100]	; (80033f0 <init_packet_types+0x7c>)
 800338c:	2218      	movs	r2, #24
 800338e:	715a      	strb	r2, [r3, #5]
	tpms_packet.Params.Gfsk.AddrComp = ADDRESSCOMP_FILT_OFF;
 8003390:	4b17      	ldr	r3, [pc, #92]	; (80033f0 <init_packet_types+0x7c>)
 8003392:	2200      	movs	r2, #0
 8003394:	719a      	strb	r2, [r3, #6]
	tpms_packet.Params.Gfsk.HeaderType = GFSK_PACKET_FIXED_LENGTH;
 8003396:	4b16      	ldr	r3, [pc, #88]	; (80033f0 <init_packet_types+0x7c>)
 8003398:	2200      	movs	r2, #0
 800339a:	71da      	strb	r2, [r3, #7]
	tpms_packet.Params.Gfsk.PayloadLength = TPMS_MSG_BYTES + 1;  // Payload plus CRC
 800339c:	4b14      	ldr	r3, [pc, #80]	; (80033f0 <init_packet_types+0x7c>)
 800339e:	2206      	movs	r2, #6
 80033a0:	721a      	strb	r2, [r3, #8]
	tpms_packet.Params.Gfsk.CrcType = GFSK_CRC_1_BYTES;
 80033a2:	4b13      	ldr	r3, [pc, #76]	; (80033f0 <init_packet_types+0x7c>)
 80033a4:	2200      	movs	r2, #0
 80033a6:	725a      	strb	r2, [r3, #9]
	tpms_packet.Params.Gfsk.DcFree = WHITENING_ON;
 80033a8:	4b11      	ldr	r3, [pc, #68]	; (80033f0 <init_packet_types+0x7c>)
 80033aa:	2201      	movs	r2, #1
 80033ac:	729a      	strb	r2, [r3, #10]

	tele_packet.PacketType = PACKET_TYPE_GFSK;
 80033ae:	4b11      	ldr	r3, [pc, #68]	; (80033f4 <init_packet_types+0x80>)
 80033b0:	2200      	movs	r2, #0
 80033b2:	701a      	strb	r2, [r3, #0]
	tele_packet.Params.Gfsk.PreambleLength = 32;
 80033b4:	4b0f      	ldr	r3, [pc, #60]	; (80033f4 <init_packet_types+0x80>)
 80033b6:	2220      	movs	r2, #32
 80033b8:	805a      	strh	r2, [r3, #2]
	tele_packet.Params.Gfsk.PreambleMinDetect = PREAMBLE_DETECTOR_16_BITS;
 80033ba:	4b0e      	ldr	r3, [pc, #56]	; (80033f4 <init_packet_types+0x80>)
 80033bc:	2205      	movs	r2, #5
 80033be:	711a      	strb	r2, [r3, #4]
	tele_packet.Params.Gfsk.SyncWordLength = 0x40;
 80033c0:	4b0c      	ldr	r3, [pc, #48]	; (80033f4 <init_packet_types+0x80>)
 80033c2:	2240      	movs	r2, #64	; 0x40
 80033c4:	715a      	strb	r2, [r3, #5]
	tele_packet.Params.Gfsk.AddrComp = ADDRESSCOMP_FILT_OFF;
 80033c6:	4b0b      	ldr	r3, [pc, #44]	; (80033f4 <init_packet_types+0x80>)
 80033c8:	2200      	movs	r2, #0
 80033ca:	719a      	strb	r2, [r3, #6]
	tele_packet.Params.Gfsk.HeaderType = GFSK_PACKET_FIXED_LENGTH;
 80033cc:	4b09      	ldr	r3, [pc, #36]	; (80033f4 <init_packet_types+0x80>)
 80033ce:	2200      	movs	r2, #0
 80033d0:	71da      	strb	r2, [r3, #7]
	tele_packet.Params.Gfsk.PayloadLength = 50 + 2;  // Payload plus CRC
 80033d2:	4b08      	ldr	r3, [pc, #32]	; (80033f4 <init_packet_types+0x80>)
 80033d4:	2234      	movs	r2, #52	; 0x34
 80033d6:	721a      	strb	r2, [r3, #8]
	tele_packet.Params.Gfsk.CrcType = GFSK_CRC_2_BYTES;
 80033d8:	4b06      	ldr	r3, [pc, #24]	; (80033f4 <init_packet_types+0x80>)
 80033da:	2202      	movs	r2, #2
 80033dc:	725a      	strb	r2, [r3, #9]
	tele_packet.Params.Gfsk.DcFree = WHITENING_ON;
 80033de:	4b05      	ldr	r3, [pc, #20]	; (80033f4 <init_packet_types+0x80>)
 80033e0:	2201      	movs	r2, #1
 80033e2:	729a      	strb	r2, [r3, #10]
}
 80033e4:	bf00      	nop
 80033e6:	46bd      	mov	sp, r7
 80033e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ec:	4770      	bx	lr
 80033ee:	bf00      	nop
 80033f0:	20000308 	.word	0x20000308
 80033f4:	2000031c 	.word	0x2000031c

080033f8 <SX1262CreateTpmsRequestMsg>:


void SX1262CreateTpmsRequestMsg(Radio* radio, uint16_t delay_ms, uint8_t tx_freq, int8_t sleep_time, int8_t wait_time)
{
 80033f8:	b480      	push	{r7}
 80033fa:	b083      	sub	sp, #12
 80033fc:	af00      	add	r7, sp, #0
 80033fe:	6078      	str	r0, [r7, #4]
 8003400:	4608      	mov	r0, r1
 8003402:	4611      	mov	r1, r2
 8003404:	461a      	mov	r2, r3
 8003406:	4603      	mov	r3, r0
 8003408:	807b      	strh	r3, [r7, #2]
 800340a:	460b      	mov	r3, r1
 800340c:	707b      	strb	r3, [r7, #1]
 800340e:	4613      	mov	r3, r2
 8003410:	703b      	strb	r3, [r7, #0]
	radio->tpms_tx_msg[0] = (REQUEST_MSG << 4) | tx_freq;
 8003412:	787b      	ldrb	r3, [r7, #1]
 8003414:	f063 034f 	orn	r3, r3, #79	; 0x4f
 8003418:	b2da      	uxtb	r2, r3
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	f883 23c6 	strb.w	r2, [r3, #966]	; 0x3c6
	radio->tpms_tx_msg[1] = delay_ms >> 8;
 8003420:	887b      	ldrh	r3, [r7, #2]
 8003422:	0a1b      	lsrs	r3, r3, #8
 8003424:	b29b      	uxth	r3, r3
 8003426:	b2da      	uxtb	r2, r3
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	f883 23c7 	strb.w	r2, [r3, #967]	; 0x3c7
	radio->tpms_tx_msg[2] = delay_ms;
 800342e:	887b      	ldrh	r3, [r7, #2]
 8003430:	b2da      	uxtb	r2, r3
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	f883 23c8 	strb.w	r2, [r3, #968]	; 0x3c8
	radio->tpms_tx_msg[3] = sleep_time;
 8003438:	783a      	ldrb	r2, [r7, #0]
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	f883 23c9 	strb.w	r2, [r3, #969]	; 0x3c9
	radio->tpms_tx_msg[4] = wait_time;
 8003440:	7c3a      	ldrb	r2, [r7, #16]
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	f883 23ca 	strb.w	r2, [r3, #970]	; 0x3ca
}
 8003448:	bf00      	nop
 800344a:	370c      	adds	r7, #12
 800344c:	46bd      	mov	sp, r7
 800344e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003452:	4770      	bx	lr

08003454 <SX1262CreateTpmsCfgrMsg>:

void SX1262CreateTpmsCfgrMsg(Radio* radio,  int8_t power, uint16_t freqInMHz)
{
 8003454:	b480      	push	{r7}
 8003456:	b083      	sub	sp, #12
 8003458:	af00      	add	r7, sp, #0
 800345a:	6078      	str	r0, [r7, #4]
 800345c:	460b      	mov	r3, r1
 800345e:	70fb      	strb	r3, [r7, #3]
 8003460:	4613      	mov	r3, r2
 8003462:	803b      	strh	r3, [r7, #0]
	radio->tpms_tx_msg[0] = (CFGR_MSG << 4) & 0xF0;
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	22c0      	movs	r2, #192	; 0xc0
 8003468:	f883 23c6 	strb.w	r2, [r3, #966]	; 0x3c6
	radio->tpms_tx_msg[1] = power;
 800346c:	78fa      	ldrb	r2, [r7, #3]
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	f883 23c7 	strb.w	r2, [r3, #967]	; 0x3c7
	radio->tpms_tx_msg[2] = freqInMHz >> 8;
 8003474:	883b      	ldrh	r3, [r7, #0]
 8003476:	0a1b      	lsrs	r3, r3, #8
 8003478:	b29b      	uxth	r3, r3
 800347a:	b2da      	uxtb	r2, r3
 800347c:	687b      	ldr	r3, [r7, #4]
 800347e:	f883 23c8 	strb.w	r2, [r3, #968]	; 0x3c8
	radio->tpms_tx_msg[3] = freqInMHz;
 8003482:	883b      	ldrh	r3, [r7, #0]
 8003484:	b2da      	uxtb	r2, r3
 8003486:	687b      	ldr	r3, [r7, #4]
 8003488:	f883 23c9 	strb.w	r2, [r3, #969]	; 0x3c9
	radio->tpms_tx_msg[4] = 0x00;
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	2200      	movs	r2, #0
 8003490:	f883 23ca 	strb.w	r2, [r3, #970]	; 0x3ca
}
 8003494:	bf00      	nop
 8003496:	370c      	adds	r7, #12
 8003498:	46bd      	mov	sp, r7
 800349a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800349e:	4770      	bx	lr

080034a0 <SX1262SetFunction>:

RadioState_t SX1262SetFunction(MCU* mcu, Radio* radio, Function_t function)
{
 80034a0:	b580      	push	{r7, lr}
 80034a2:	b084      	sub	sp, #16
 80034a4:	af00      	add	r7, sp, #0
 80034a6:	60f8      	str	r0, [r7, #12]
 80034a8:	60b9      	str	r1, [r7, #8]
 80034aa:	4613      	mov	r3, r2
 80034ac:	71fb      	strb	r3, [r7, #7]
	if ((function == TPMS) && (radio->function != TPMS))
 80034ae:	79fb      	ldrb	r3, [r7, #7]
 80034b0:	2b01      	cmp	r3, #1
 80034b2:	d115      	bne.n	80034e0 <SX1262SetFunction+0x40>
 80034b4:	68bb      	ldr	r3, [r7, #8]
 80034b6:	f893 3468 	ldrb.w	r3, [r3, #1128]	; 0x468
 80034ba:	2b01      	cmp	r3, #1
 80034bc:	d010      	beq.n	80034e0 <SX1262SetFunction+0x40>
	{
		SX1262SetPacketParams(mcu, radio, &tpms_packet);
 80034be:	4a17      	ldr	r2, [pc, #92]	; (800351c <SX1262SetFunction+0x7c>)
 80034c0:	68b9      	ldr	r1, [r7, #8]
 80034c2:	68f8      	ldr	r0, [r7, #12]
 80034c4:	f7fd fec6 	bl	8001254 <SX1262SetPacketParams>
		radio->function = TPMS;
 80034c8:	68bb      	ldr	r3, [r7, #8]
 80034ca:	2201      	movs	r2, #1
 80034cc:	f883 2468 	strb.w	r2, [r3, #1128]	; 0x468
		return SX1262SetGfskSyncWord(mcu, radio, TpmsGfskSyncWord, sizeof(TpmsGfskSyncWord));
 80034d0:	2303      	movs	r3, #3
 80034d2:	4a13      	ldr	r2, [pc, #76]	; (8003520 <SX1262SetFunction+0x80>)
 80034d4:	68b9      	ldr	r1, [r7, #8]
 80034d6:	68f8      	ldr	r0, [r7, #12]
 80034d8:	f7fe f8a0 	bl	800161c <SX1262SetGfskSyncWord>
 80034dc:	4603      	mov	r3, r0
 80034de:	e019      	b.n	8003514 <SX1262SetFunction+0x74>
	}

	else if ((function == TELEMETRY) && (radio->function != TELEMETRY))
 80034e0:	79fb      	ldrb	r3, [r7, #7]
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d115      	bne.n	8003512 <SX1262SetFunction+0x72>
 80034e6:	68bb      	ldr	r3, [r7, #8]
 80034e8:	f893 3468 	ldrb.w	r3, [r3, #1128]	; 0x468
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	d010      	beq.n	8003512 <SX1262SetFunction+0x72>
	{
		SX1262SetPacketParams(mcu, radio, &tele_packet);
 80034f0:	4a0c      	ldr	r2, [pc, #48]	; (8003524 <SX1262SetFunction+0x84>)
 80034f2:	68b9      	ldr	r1, [r7, #8]
 80034f4:	68f8      	ldr	r0, [r7, #12]
 80034f6:	f7fd fead 	bl	8001254 <SX1262SetPacketParams>
		radio->function = TELEMETRY;
 80034fa:	68bb      	ldr	r3, [r7, #8]
 80034fc:	2200      	movs	r2, #0
 80034fe:	f883 2468 	strb.w	r2, [r3, #1128]	; 0x468
		return SX1262SetGfskSyncWord(mcu, radio, TeleGfskSyncWord, sizeof(TeleGfskSyncWord));
 8003502:	2308      	movs	r3, #8
 8003504:	4a08      	ldr	r2, [pc, #32]	; (8003528 <SX1262SetFunction+0x88>)
 8003506:	68b9      	ldr	r1, [r7, #8]
 8003508:	68f8      	ldr	r0, [r7, #12]
 800350a:	f7fe f887 	bl	800161c <SX1262SetGfskSyncWord>
 800350e:	4603      	mov	r3, r0
 8003510:	e000      	b.n	8003514 <SX1262SetFunction+0x74>
	}

	return RADIO_OK;
 8003512:	2300      	movs	r3, #0
}
 8003514:	4618      	mov	r0, r3
 8003516:	3710      	adds	r7, #16
 8003518:	46bd      	mov	sp, r7
 800351a:	bd80      	pop	{r7, pc}
 800351c:	20000308 	.word	0x20000308
 8003520:	20000000 	.word	0x20000000
 8003524:	2000031c 	.word	0x2000031c
 8003528:	20000004 	.word	0x20000004
 800352c:	00000000 	.word	0x00000000

08003530 <TpmsGetMessage>:


void TpmsGetMessage(Radio* radio, TelemetryData_t* teleData)
{
 8003530:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003534:	b0d5      	sub	sp, #340	; 0x154
 8003536:	af00      	add	r7, sp, #0
 8003538:	f8c7 010c 	str.w	r0, [r7, #268]	; 0x10c
 800353c:	f8c7 1108 	str.w	r1, [r7, #264]	; 0x108
	uint8_t received_tpms_id = radio->tpms_rx_msg[0] & 0b11;
 8003540:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8003544:	f893 33cc 	ldrb.w	r3, [r3, #972]	; 0x3cc
 8003548:	f003 0303 	and.w	r3, r3, #3
 800354c:	f887 312f 	strb.w	r3, [r7, #303]	; 0x12f

	TPMS_data_t* tpmsSensor;

	/* Chooses which TPMS the data are referring to */
	switch (received_tpms_id)
 8003550:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8003554:	2b03      	cmp	r3, #3
 8003556:	d81b      	bhi.n	8003590 <TpmsGetMessage+0x60>
 8003558:	a201      	add	r2, pc, #4	; (adr r2, 8003560 <TpmsGetMessage+0x30>)
 800355a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800355e:	bf00      	nop
 8003560:	08003571 	.word	0x08003571
 8003564:	08003579 	.word	0x08003579
 8003568:	08003581 	.word	0x08003581
 800356c:	08003589 	.word	0x08003589
	{
	case 0:
		tpmsSensor = &tpms_fr;
 8003570:	4bb7      	ldr	r3, [pc, #732]	; (8003850 <TpmsGetMessage+0x320>)
 8003572:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
		break;
 8003576:	e00c      	b.n	8003592 <TpmsGetMessage+0x62>
	case 1:
		tpmsSensor = &tpms_fl;
 8003578:	4bb6      	ldr	r3, [pc, #728]	; (8003854 <TpmsGetMessage+0x324>)
 800357a:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
		break;
 800357e:	e008      	b.n	8003592 <TpmsGetMessage+0x62>
	case 2:
		tpmsSensor = &tpms_rr;
 8003580:	4bb5      	ldr	r3, [pc, #724]	; (8003858 <TpmsGetMessage+0x328>)
 8003582:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
		break;
 8003586:	e004      	b.n	8003592 <TpmsGetMessage+0x62>
	case 3:
		tpmsSensor = &tpms_rl;
 8003588:	4bb4      	ldr	r3, [pc, #720]	; (800385c <TpmsGetMessage+0x32c>)
 800358a:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
		break;
 800358e:	e000      	b.n	8003592 <TpmsGetMessage+0x62>
	default:
		break;
 8003590:	bf00      	nop
	}


	if (radio->tpmsWrongCRC == true)
 8003592:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8003596:	f893 33d9 	ldrb.w	r3, [r3, #985]	; 0x3d9
 800359a:	2b00      	cmp	r3, #0
 800359c:	d00c      	beq.n	80035b8 <TpmsGetMessage+0x88>
	{
		tpmsSensor->wrongCRC++;
 800359e:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 80035a2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80035a4:	3301      	adds	r3, #1
 80035a6:	b29b      	uxth	r3, r3
 80035a8:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 80035ac:	8453      	strh	r3, [r2, #34]	; 0x22
		radio->tpmsWrongCRC = false;
 80035ae:	f8d7 210c 	ldr.w	r2, [r7, #268]	; 0x10c
 80035b2:	2300      	movs	r3, #0
 80035b4:	f882 33d9 	strb.w	r3, [r2, #985]	; 0x3d9
	}

	tpmsSensor->rssi = radio->TpmsRssiAvg;
 80035b8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80035bc:	f993 33d8 	ldrsb.w	r3, [r3, #984]	; 0x3d8
 80035c0:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 80035c4:	f882 3020 	strb.w	r3, [r2, #32]
	tpmsSensor->received_msgs++;
 80035c8:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 80035cc:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80035ce:	3301      	adds	r3, #1
 80035d0:	b29b      	uxth	r3, r3
 80035d2:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 80035d6:	8513      	strh	r3, [r2, #40]	; 0x28
	tpmsSensor->time_variation = radio->tpms_variation;
 80035d8:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80035dc:	f8d3 23dc 	ldr.w	r2, [r3, #988]	; 0x3dc
 80035e0:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 80035e4:	625a      	str	r2, [r3, #36]	; 0x24
	tpmsSensor->not_received--;
 80035e6:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 80035ea:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80035ec:	3b01      	subs	r3, #1
 80035ee:	b29b      	uxth	r3, r3
 80035f0:	f8d7 214c 	ldr.w	r2, [r7, #332]	; 0x14c
 80035f4:	8553      	strh	r3, [r2, #42]	; 0x2a

	tpmsSensor->temperature_reg = 0xFFFF00 & ((radio->tpms_rx_msg[1] << 16) | (radio->tpms_rx_msg[2] << 8));
 80035f6:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 80035fa:	f893 33cd 	ldrb.w	r3, [r3, #973]	; 0x3cd
 80035fe:	041a      	lsls	r2, r3, #16
 8003600:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8003604:	f893 33ce 	ldrb.w	r3, [r3, #974]	; 0x3ce
 8003608:	021b      	lsls	r3, r3, #8
 800360a:	4313      	orrs	r3, r2
 800360c:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8003610:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003614:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003618:	611a      	str	r2, [r3, #16]
	tpmsSensor->pressure_reg    = 0xFFFF00 & ((radio->tpms_rx_msg[3] << 16) | (radio->tpms_rx_msg[4] << 8));
 800361a:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 800361e:	f893 33cf 	ldrb.w	r3, [r3, #975]	; 0x3cf
 8003622:	041a      	lsls	r2, r3, #16
 8003624:	f8d7 310c 	ldr.w	r3, [r7, #268]	; 0x10c
 8003628:	f893 33d0 	ldrb.w	r3, [r3, #976]	; 0x3d0
 800362c:	021b      	lsls	r3, r3, #8
 800362e:	4313      	orrs	r3, r2
 8003630:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8003634:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003638:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 800363c:	615a      	str	r2, [r3, #20]


	/* Temperature Calibration */
	int32_t dT   = tpmsSensor->temperature_reg - ((uint32_t)(tpmsSensor->PROM[5]) << 8);
 800363e:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003642:	691a      	ldr	r2, [r3, #16]
 8003644:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003648:	899b      	ldrh	r3, [r3, #12]
 800364a:	021b      	lsls	r3, r3, #8
 800364c:	1ad3      	subs	r3, r2, r3
 800364e:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
	int32_t temp = 2000 + ((int64_t)dT * tpmsSensor->PROM[6] >> 23);
 8003652:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003656:	17da      	asrs	r2, r3, #31
 8003658:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 800365c:	f8c7 2104 	str.w	r2, [r7, #260]	; 0x104
 8003660:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003664:	89db      	ldrh	r3, [r3, #14]
 8003666:	b29b      	uxth	r3, r3
 8003668:	2200      	movs	r2, #0
 800366a:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 800366e:	f8c7 20fc 	str.w	r2, [r7, #252]	; 0xfc
 8003672:	e9d7 0140 	ldrd	r0, r1, [r7, #256]	; 0x100
 8003676:	460b      	mov	r3, r1
 8003678:	f8d7 20f8 	ldr.w	r2, [r7, #248]	; 0xf8
 800367c:	fb02 f203 	mul.w	r2, r2, r3
 8003680:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8003684:	e9c7 0140 	strd	r0, r1, [r7, #256]	; 0x100
 8003688:	4601      	mov	r1, r0
 800368a:	fb01 f303 	mul.w	r3, r1, r3
 800368e:	4413      	add	r3, r2
 8003690:	f8d7 2100 	ldr.w	r2, [r7, #256]	; 0x100
 8003694:	f8d7 10f8 	ldr.w	r1, [r7, #248]	; 0xf8
 8003698:	fba2 4501 	umull	r4, r5, r2, r1
 800369c:	442b      	add	r3, r5
 800369e:	461d      	mov	r5, r3
 80036a0:	f04f 0200 	mov.w	r2, #0
 80036a4:	f04f 0300 	mov.w	r3, #0
 80036a8:	0de2      	lsrs	r2, r4, #23
 80036aa:	ea42 2245 	orr.w	r2, r2, r5, lsl #9
 80036ae:	15eb      	asrs	r3, r5, #23
 80036b0:	4613      	mov	r3, r2
 80036b2:	f503 63fa 	add.w	r3, r3, #2000	; 0x7d0
 80036b6:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124

	/* Pressure Calibration */
	int64_t off  = ((int64_t)(tpmsSensor->PROM[2]) << 16) + (((int64_t)(tpmsSensor->PROM[4]) * dT) >> 7);
 80036ba:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 80036be:	88db      	ldrh	r3, [r3, #6]
 80036c0:	b29b      	uxth	r3, r3
 80036c2:	2200      	movs	r2, #0
 80036c4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80036c8:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 80036cc:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 80036d0:	460b      	mov	r3, r1
 80036d2:	0c1b      	lsrs	r3, r3, #16
 80036d4:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80036d8:	460b      	mov	r3, r1
 80036da:	041b      	lsls	r3, r3, #16
 80036dc:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80036e0:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 80036e4:	895b      	ldrh	r3, [r3, #10]
 80036e6:	b29b      	uxth	r3, r3
 80036e8:	2200      	movs	r2, #0
 80036ea:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80036ee:	f8c7 20cc 	str.w	r2, [r7, #204]	; 0xcc
 80036f2:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 80036f6:	17da      	asrs	r2, r3, #31
 80036f8:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 80036fc:	f8c7 20f4 	str.w	r2, [r7, #244]	; 0xf4
 8003700:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8003704:	460b      	mov	r3, r1
 8003706:	e9d7 453c 	ldrd	r4, r5, [r7, #240]	; 0xf0
 800370a:	4622      	mov	r2, r4
 800370c:	fb02 f203 	mul.w	r2, r2, r3
 8003710:	e9c7 453c 	strd	r4, r5, [r7, #240]	; 0xf0
 8003714:	462b      	mov	r3, r5
 8003716:	4604      	mov	r4, r0
 8003718:	460d      	mov	r5, r1
 800371a:	4621      	mov	r1, r4
 800371c:	fb01 f303 	mul.w	r3, r1, r3
 8003720:	4413      	add	r3, r2
 8003722:	4622      	mov	r2, r4
 8003724:	f8d7 10f0 	ldr.w	r1, [r7, #240]	; 0xf0
 8003728:	fba2 8901 	umull	r8, r9, r2, r1
 800372c:	444b      	add	r3, r9
 800372e:	4699      	mov	r9, r3
 8003730:	f04f 0200 	mov.w	r2, #0
 8003734:	f04f 0300 	mov.w	r3, #0
 8003738:	ea4f 12d8 	mov.w	r2, r8, lsr #7
 800373c:	ea42 6249 	orr.w	r2, r2, r9, lsl #25
 8003740:	ea4f 13e9 	mov.w	r3, r9, asr #7
 8003744:	e9d7 4534 	ldrd	r4, r5, [r7, #208]	; 0xd0
 8003748:	4621      	mov	r1, r4
 800374a:	1889      	adds	r1, r1, r2
 800374c:	6539      	str	r1, [r7, #80]	; 0x50
 800374e:	4629      	mov	r1, r5
 8003750:	eb43 0101 	adc.w	r1, r3, r1
 8003754:	6579      	str	r1, [r7, #84]	; 0x54
 8003756:	e9d7 3414 	ldrd	r3, r4, [r7, #80]	; 0x50
 800375a:	e9c7 3446 	strd	r3, r4, [r7, #280]	; 0x118
	int64_t sens = ((int64_t)(tpmsSensor->PROM[1]) << 15) + (((int64_t)(tpmsSensor->PROM[3]) * dT) >> 8);
 800375e:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003762:	889b      	ldrh	r3, [r3, #4]
 8003764:	b29b      	uxth	r3, r3
 8003766:	2200      	movs	r2, #0
 8003768:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800376c:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8003770:	f04f 0000 	mov.w	r0, #0
 8003774:	f04f 0100 	mov.w	r1, #0
 8003778:	e9d7 4530 	ldrd	r4, r5, [r7, #192]	; 0xc0
 800377c:	462b      	mov	r3, r5
 800377e:	03d9      	lsls	r1, r3, #15
 8003780:	4623      	mov	r3, r4
 8003782:	ea41 4153 	orr.w	r1, r1, r3, lsr #17
 8003786:	4623      	mov	r3, r4
 8003788:	03d8      	lsls	r0, r3, #15
 800378a:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 800378e:	891b      	ldrh	r3, [r3, #8]
 8003790:	b29b      	uxth	r3, r3
 8003792:	2200      	movs	r2, #0
 8003794:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8003798:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800379c:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 80037a0:	17da      	asrs	r2, r3, #31
 80037a2:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80037a6:	f8c7 20b4 	str.w	r2, [r7, #180]	; 0xb4
 80037aa:	e9d7 562e 	ldrd	r5, r6, [r7, #184]	; 0xb8
 80037ae:	4633      	mov	r3, r6
 80037b0:	e9d7 892c 	ldrd	r8, r9, [r7, #176]	; 0xb0
 80037b4:	4642      	mov	r2, r8
 80037b6:	fb02 f203 	mul.w	r2, r2, r3
 80037ba:	464b      	mov	r3, r9
 80037bc:	462c      	mov	r4, r5
 80037be:	fb04 f303 	mul.w	r3, r4, r3
 80037c2:	4413      	add	r3, r2
 80037c4:	462a      	mov	r2, r5
 80037c6:	4644      	mov	r4, r8
 80037c8:	fba2 ab04 	umull	sl, fp, r2, r4
 80037cc:	445b      	add	r3, fp
 80037ce:	469b      	mov	fp, r3
 80037d0:	f04f 0200 	mov.w	r2, #0
 80037d4:	f04f 0300 	mov.w	r3, #0
 80037d8:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80037dc:	ea42 620b 	orr.w	r2, r2, fp, lsl #24
 80037e0:	ea4f 232b 	mov.w	r3, fp, asr #8
 80037e4:	1884      	adds	r4, r0, r2
 80037e6:	64bc      	str	r4, [r7, #72]	; 0x48
 80037e8:	eb41 0303 	adc.w	r3, r1, r3
 80037ec:	64fb      	str	r3, [r7, #76]	; 0x4c
 80037ee:	e9d7 3412 	ldrd	r3, r4, [r7, #72]	; 0x48
 80037f2:	e9c7 3444 	strd	r3, r4, [r7, #272]	; 0x110
	// int32_t p = ((pressure_reg * sens >> 21) - off) >> 13;

	/* Second Order Temperature Compensation */
	int64_t ti, offi, sensi;

	if (temp > 2000) {
 80037f6:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 80037fa:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 80037fe:	dd2f      	ble.n	8003860 <TpmsGetMessage+0x330>
		ti    = (dT * dT) >> 36;
 8003800:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003804:	fb03 f203 	mul.w	r2, r3, r3
 8003808:	2324      	movs	r3, #36	; 0x24
 800380a:	fa42 f303 	asr.w	r3, r2, r3
 800380e:	17da      	asrs	r2, r3, #31
 8003810:	643b      	str	r3, [r7, #64]	; 0x40
 8003812:	647a      	str	r2, [r7, #68]	; 0x44
 8003814:	e9d7 3410 	ldrd	r3, r4, [r7, #64]	; 0x40
 8003818:	e9c7 3450 	strd	r3, r4, [r7, #320]	; 0x140
		offi  = ((temp - 2000) * (temp - 2000)) >> 4;
 800381c:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003820:	f5a3 62fa 	sub.w	r2, r3, #2000	; 0x7d0
 8003824:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003828:	f5a3 63fa 	sub.w	r3, r3, #2000	; 0x7d0
 800382c:	fb02 f303 	mul.w	r3, r2, r3
 8003830:	111b      	asrs	r3, r3, #4
 8003832:	17da      	asrs	r2, r3, #31
 8003834:	63bb      	str	r3, [r7, #56]	; 0x38
 8003836:	63fa      	str	r2, [r7, #60]	; 0x3c
 8003838:	e9d7 340e 	ldrd	r3, r4, [r7, #56]	; 0x38
 800383c:	e9c7 344e 	strd	r3, r4, [r7, #312]	; 0x138
		sensi = 0;
 8003840:	f04f 0200 	mov.w	r2, #0
 8003844:	f04f 0300 	mov.w	r3, #0
 8003848:	e9c7 234c 	strd	r2, r3, [r7, #304]	; 0x130
 800384c:	e0bf      	b.n	80039ce <TpmsGetMessage+0x49e>
 800384e:	bf00      	nop
 8003850:	20000330 	.word	0x20000330
 8003854:	2000035c 	.word	0x2000035c
 8003858:	20000388 	.word	0x20000388
 800385c:	200003b4 	.word	0x200003b4
	}
	else {
		ti    = (3 * (int64_t)dT * (int64_t)dT) >> 33;
 8003860:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003864:	17da      	asrs	r2, r3, #31
 8003866:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800386a:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800386e:	f8d7 3128 	ldr.w	r3, [r7, #296]	; 0x128
 8003872:	17da      	asrs	r2, r3, #31
 8003874:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8003878:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800387c:	e9d7 452a 	ldrd	r4, r5, [r7, #168]	; 0xa8
 8003880:	462b      	mov	r3, r5
 8003882:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8003886:	4642      	mov	r2, r8
 8003888:	fb02 f203 	mul.w	r2, r2, r3
 800388c:	464b      	mov	r3, r9
 800388e:	4621      	mov	r1, r4
 8003890:	fb01 f303 	mul.w	r3, r1, r3
 8003894:	4413      	add	r3, r2
 8003896:	4622      	mov	r2, r4
 8003898:	4641      	mov	r1, r8
 800389a:	fba2 1201 	umull	r1, r2, r2, r1
 800389e:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 80038a2:	460a      	mov	r2, r1
 80038a4:	f8c7 20e8 	str.w	r2, [r7, #232]	; 0xe8
 80038a8:	f8d7 20ec 	ldr.w	r2, [r7, #236]	; 0xec
 80038ac:	4413      	add	r3, r2
 80038ae:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 80038b2:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 80038b6:	4622      	mov	r2, r4
 80038b8:	462b      	mov	r3, r5
 80038ba:	1891      	adds	r1, r2, r2
 80038bc:	6339      	str	r1, [r7, #48]	; 0x30
 80038be:	415b      	adcs	r3, r3
 80038c0:	637b      	str	r3, [r7, #52]	; 0x34
 80038c2:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80038c6:	4621      	mov	r1, r4
 80038c8:	1851      	adds	r1, r2, r1
 80038ca:	f8c7 1098 	str.w	r1, [r7, #152]	; 0x98
 80038ce:	4629      	mov	r1, r5
 80038d0:	eb43 0101 	adc.w	r1, r3, r1
 80038d4:	f8c7 109c 	str.w	r1, [r7, #156]	; 0x9c
 80038d8:	f04f 0200 	mov.w	r2, #0
 80038dc:	f04f 0300 	mov.w	r3, #0
 80038e0:	e9d7 4526 	ldrd	r4, r5, [r7, #152]	; 0x98
 80038e4:	4629      	mov	r1, r5
 80038e6:	104a      	asrs	r2, r1, #1
 80038e8:	4629      	mov	r1, r5
 80038ea:	17cb      	asrs	r3, r1, #31
 80038ec:	e9c7 2350 	strd	r2, r3, [r7, #320]	; 0x140
		offi  = (3 * (temp - 2000) * (temp - 2000)) >> 1;
 80038f0:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 80038f4:	f5a3 62fa 	sub.w	r2, r3, #2000	; 0x7d0
 80038f8:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 80038fc:	f5a3 63fa 	sub.w	r3, r3, #2000	; 0x7d0
 8003900:	fb03 f202 	mul.w	r2, r3, r2
 8003904:	4613      	mov	r3, r2
 8003906:	005b      	lsls	r3, r3, #1
 8003908:	4413      	add	r3, r2
 800390a:	105b      	asrs	r3, r3, #1
 800390c:	17da      	asrs	r2, r3, #31
 800390e:	62bb      	str	r3, [r7, #40]	; 0x28
 8003910:	62fa      	str	r2, [r7, #44]	; 0x2c
 8003912:	e9d7 340a 	ldrd	r3, r4, [r7, #40]	; 0x28
 8003916:	e9c7 344e 	strd	r3, r4, [r7, #312]	; 0x138
		sensi = (5 * (temp - 2000) * (temp - 2000)) >> 3;
 800391a:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800391e:	f5a3 62fa 	sub.w	r2, r3, #2000	; 0x7d0
 8003922:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003926:	f5a3 63fa 	sub.w	r3, r3, #2000	; 0x7d0
 800392a:	fb03 f202 	mul.w	r2, r3, r2
 800392e:	4613      	mov	r3, r2
 8003930:	009b      	lsls	r3, r3, #2
 8003932:	4413      	add	r3, r2
 8003934:	10db      	asrs	r3, r3, #3
 8003936:	17da      	asrs	r2, r3, #31
 8003938:	623b      	str	r3, [r7, #32]
 800393a:	627a      	str	r2, [r7, #36]	; 0x24
 800393c:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
 8003940:	e9c7 344c 	strd	r3, r4, [r7, #304]	; 0x130

		if (temp < -1500) {
 8003944:	f8d7 2124 	ldr.w	r2, [r7, #292]	; 0x124
 8003948:	4bd9      	ldr	r3, [pc, #868]	; (8003cb0 <TpmsGetMessage+0x780>)
 800394a:	429a      	cmp	r2, r3
 800394c:	da3f      	bge.n	80039ce <TpmsGetMessage+0x49e>
			offi  = offi + 7 * (temp + 1500) * (temp + 1500);
 800394e:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003952:	f203 52dc 	addw	r2, r3, #1500	; 0x5dc
 8003956:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800395a:	f203 53dc 	addw	r3, r3, #1500	; 0x5dc
 800395e:	fb03 f202 	mul.w	r2, r3, r2
 8003962:	4613      	mov	r3, r2
 8003964:	00db      	lsls	r3, r3, #3
 8003966:	1a9b      	subs	r3, r3, r2
 8003968:	17da      	asrs	r2, r3, #31
 800396a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800396e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8003972:	e9d7 234e 	ldrd	r2, r3, [r7, #312]	; 0x138
 8003976:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800397a:	4621      	mov	r1, r4
 800397c:	1851      	adds	r1, r2, r1
 800397e:	61b9      	str	r1, [r7, #24]
 8003980:	4629      	mov	r1, r5
 8003982:	eb43 0101 	adc.w	r1, r3, r1
 8003986:	61f9      	str	r1, [r7, #28]
 8003988:	e9d7 3406 	ldrd	r3, r4, [r7, #24]
 800398c:	e9c7 344e 	strd	r3, r4, [r7, #312]	; 0x138
			sensi = sensi + 4 * (temp + 1500) * (temp + 1500);
 8003990:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 8003994:	f203 52dc 	addw	r2, r3, #1500	; 0x5dc
 8003998:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 800399c:	f203 53dc 	addw	r3, r3, #1500	; 0x5dc
 80039a0:	fb02 f303 	mul.w	r3, r2, r3
 80039a4:	009b      	lsls	r3, r3, #2
 80039a6:	17da      	asrs	r2, r3, #31
 80039a8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80039ac:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80039b0:	e9d7 234c 	ldrd	r2, r3, [r7, #304]	; 0x130
 80039b4:	e9d7 4522 	ldrd	r4, r5, [r7, #136]	; 0x88
 80039b8:	4621      	mov	r1, r4
 80039ba:	1851      	adds	r1, r2, r1
 80039bc:	6139      	str	r1, [r7, #16]
 80039be:	4629      	mov	r1, r5
 80039c0:	eb43 0101 	adc.w	r1, r3, r1
 80039c4:	6179      	str	r1, [r7, #20]
 80039c6:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 80039ca:	e9c7 344c 	strd	r3, r4, [r7, #304]	; 0x130
		}
	}
	tpmsSensor->temperature = (temp - ti) * 0.01;
 80039ce:	f8d7 3124 	ldr.w	r3, [r7, #292]	; 0x124
 80039d2:	17da      	asrs	r2, r3, #31
 80039d4:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 80039d8:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 80039dc:	e9d7 2350 	ldrd	r2, r3, [r7, #320]	; 0x140
 80039e0:	e9d7 4520 	ldrd	r4, r5, [r7, #128]	; 0x80
 80039e4:	4621      	mov	r1, r4
 80039e6:	1a89      	subs	r1, r1, r2
 80039e8:	67b9      	str	r1, [r7, #120]	; 0x78
 80039ea:	4629      	mov	r1, r5
 80039ec:	eb61 0303 	sbc.w	r3, r1, r3
 80039f0:	67fb      	str	r3, [r7, #124]	; 0x7c
 80039f2:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	; 0x78
 80039f6:	f7fc fdd1 	bl	800059c <__aeabi_l2d>
 80039fa:	a3a5      	add	r3, pc, #660	; (adr r3, 8003c90 <TpmsGetMessage+0x760>)
 80039fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a00:	f7fc fdfa 	bl	80005f8 <__aeabi_dmul>
 8003a04:	4602      	mov	r2, r0
 8003a06:	460b      	mov	r3, r1
 8003a08:	4610      	mov	r0, r2
 8003a0a:	4619      	mov	r1, r3
 8003a0c:	f7fd f8ec 	bl	8000be8 <__aeabi_d2f>
 8003a10:	4602      	mov	r2, r0
 8003a12:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003a16:	619a      	str	r2, [r3, #24]
	tpmsSensor->pressure    = ((((tpmsSensor->pressure_reg * (sens - sensi))/ 2097152) - (off - offi)) / 8192) * 0.1;
 8003a18:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003a1c:	695b      	ldr	r3, [r3, #20]
 8003a1e:	2200      	movs	r2, #0
 8003a20:	673b      	str	r3, [r7, #112]	; 0x70
 8003a22:	677a      	str	r2, [r7, #116]	; 0x74
 8003a24:	e9d7 0144 	ldrd	r0, r1, [r7, #272]	; 0x110
 8003a28:	e9d7 234c 	ldrd	r2, r3, [r7, #304]	; 0x130
 8003a2c:	1a84      	subs	r4, r0, r2
 8003a2e:	66bc      	str	r4, [r7, #104]	; 0x68
 8003a30:	eb61 0303 	sbc.w	r3, r1, r3
 8003a34:	66fb      	str	r3, [r7, #108]	; 0x6c
 8003a36:	e9d7 451c 	ldrd	r4, r5, [r7, #112]	; 0x70
 8003a3a:	462b      	mov	r3, r5
 8003a3c:	e9d7 891a 	ldrd	r8, r9, [r7, #104]	; 0x68
 8003a40:	4642      	mov	r2, r8
 8003a42:	fb02 f203 	mul.w	r2, r2, r3
 8003a46:	464b      	mov	r3, r9
 8003a48:	4621      	mov	r1, r4
 8003a4a:	fb01 f303 	mul.w	r3, r1, r3
 8003a4e:	4413      	add	r3, r2
 8003a50:	4622      	mov	r2, r4
 8003a52:	4641      	mov	r1, r8
 8003a54:	fba2 1201 	umull	r1, r2, r2, r1
 8003a58:	f8c7 20e4 	str.w	r2, [r7, #228]	; 0xe4
 8003a5c:	460a      	mov	r2, r1
 8003a5e:	f8c7 20e0 	str.w	r2, [r7, #224]	; 0xe0
 8003a62:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 8003a66:	4413      	add	r3, r2
 8003a68:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003a6c:	e9d7 2338 	ldrd	r2, r3, [r7, #224]	; 0xe0
 8003a70:	2b00      	cmp	r3, #0
 8003a72:	da07      	bge.n	8003a84 <TpmsGetMessage+0x554>
 8003a74:	498f      	ldr	r1, [pc, #572]	; (8003cb4 <TpmsGetMessage+0x784>)
 8003a76:	1851      	adds	r1, r2, r1
 8003a78:	60b9      	str	r1, [r7, #8]
 8003a7a:	f143 0300 	adc.w	r3, r3, #0
 8003a7e:	60fb      	str	r3, [r7, #12]
 8003a80:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8003a84:	f04f 0000 	mov.w	r0, #0
 8003a88:	f04f 0100 	mov.w	r1, #0
 8003a8c:	0d50      	lsrs	r0, r2, #21
 8003a8e:	ea40 20c3 	orr.w	r0, r0, r3, lsl #11
 8003a92:	1559      	asrs	r1, r3, #21
 8003a94:	4604      	mov	r4, r0
 8003a96:	460d      	mov	r5, r1
 8003a98:	e9d7 0146 	ldrd	r0, r1, [r7, #280]	; 0x118
 8003a9c:	e9d7 234e 	ldrd	r2, r3, [r7, #312]	; 0x138
 8003aa0:	1a86      	subs	r6, r0, r2
 8003aa2:	663e      	str	r6, [r7, #96]	; 0x60
 8003aa4:	eb61 0303 	sbc.w	r3, r1, r3
 8003aa8:	667b      	str	r3, [r7, #100]	; 0x64
 8003aaa:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	; 0x60
 8003aae:	460b      	mov	r3, r1
 8003ab0:	1ae3      	subs	r3, r4, r3
 8003ab2:	65bb      	str	r3, [r7, #88]	; 0x58
 8003ab4:	4613      	mov	r3, r2
 8003ab6:	eb65 0303 	sbc.w	r3, r5, r3
 8003aba:	65fb      	str	r3, [r7, #92]	; 0x5c
 8003abc:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8003ac0:	2b00      	cmp	r3, #0
 8003ac2:	da08      	bge.n	8003ad6 <TpmsGetMessage+0x5a6>
 8003ac4:	f641 71ff 	movw	r1, #8191	; 0x1fff
 8003ac8:	1851      	adds	r1, r2, r1
 8003aca:	6039      	str	r1, [r7, #0]
 8003acc:	f143 0300 	adc.w	r3, r3, #0
 8003ad0:	607b      	str	r3, [r7, #4]
 8003ad2:	e9d7 2300 	ldrd	r2, r3, [r7]
 8003ad6:	f04f 0000 	mov.w	r0, #0
 8003ada:	f04f 0100 	mov.w	r1, #0
 8003ade:	0b50      	lsrs	r0, r2, #13
 8003ae0:	ea40 40c3 	orr.w	r0, r0, r3, lsl #19
 8003ae4:	1359      	asrs	r1, r3, #13
 8003ae6:	4602      	mov	r2, r0
 8003ae8:	460b      	mov	r3, r1
 8003aea:	4610      	mov	r0, r2
 8003aec:	4619      	mov	r1, r3
 8003aee:	f7fc fd55 	bl	800059c <__aeabi_l2d>
 8003af2:	a369      	add	r3, pc, #420	; (adr r3, 8003c98 <TpmsGetMessage+0x768>)
 8003af4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003af8:	f7fc fd7e 	bl	80005f8 <__aeabi_dmul>
 8003afc:	4602      	mov	r2, r0
 8003afe:	460b      	mov	r3, r1
 8003b00:	4610      	mov	r0, r2
 8003b02:	4619      	mov	r1, r3
 8003b04:	f7fd f870 	bl	8000be8 <__aeabi_d2f>
 8003b08:	4602      	mov	r2, r0
 8003b0a:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003b0e:	61da      	str	r2, [r3, #28]

	/* Convert pressure from mBar to PSI and subtract atmospheric pressure */
	tpmsSensor->pressure = (tpmsSensor->pressure - 1013.25) * 0.0145037;
 8003b10:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003b14:	69db      	ldr	r3, [r3, #28]
 8003b16:	4618      	mov	r0, r3
 8003b18:	f7fc fd16 	bl	8000548 <__aeabi_f2d>
 8003b1c:	a360      	add	r3, pc, #384	; (adr r3, 8003ca0 <TpmsGetMessage+0x770>)
 8003b1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b22:	f7fc fbb1 	bl	8000288 <__aeabi_dsub>
 8003b26:	4602      	mov	r2, r0
 8003b28:	460b      	mov	r3, r1
 8003b2a:	4610      	mov	r0, r2
 8003b2c:	4619      	mov	r1, r3
 8003b2e:	a35e      	add	r3, pc, #376	; (adr r3, 8003ca8 <TpmsGetMessage+0x778>)
 8003b30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003b34:	f7fc fd60 	bl	80005f8 <__aeabi_dmul>
 8003b38:	4602      	mov	r2, r0
 8003b3a:	460b      	mov	r3, r1
 8003b3c:	4610      	mov	r0, r2
 8003b3e:	4619      	mov	r1, r3
 8003b40:	f7fd f852 	bl	8000be8 <__aeabi_d2f>
 8003b44:	4602      	mov	r2, r0
 8003b46:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003b4a:	61da      	str	r2, [r3, #28]

	switch (received_tpms_id)
 8003b4c:	f897 312f 	ldrb.w	r3, [r7, #303]	; 0x12f
 8003b50:	2b03      	cmp	r3, #3
 8003b52:	f200 8094 	bhi.w	8003c7e <TpmsGetMessage+0x74e>
 8003b56:	a201      	add	r2, pc, #4	; (adr r2, 8003b5c <TpmsGetMessage+0x62c>)
 8003b58:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003b5c:	08003b6d 	.word	0x08003b6d
 8003b60:	08003baf 	.word	0x08003baf
 8003b64:	08003bf3 	.word	0x08003bf3
 8003b68:	08003c39 	.word	0x08003c39
	{
	case 0:
		teleData->tpms.fr_press = (uint16_t)(tpmsSensor->pressure    * 100);
 8003b6c:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003b70:	edd3 7a07 	vldr	s15, [r3, #28]
 8003b74:	ed9f 7a50 	vldr	s14, [pc, #320]	; 8003cb8 <TpmsGetMessage+0x788>
 8003b78:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b7c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b80:	ee17 3a90 	vmov	r3, s15
 8003b84:	b29a      	uxth	r2, r3
 8003b86:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003b8a:	875a      	strh	r2, [r3, #58]	; 0x3a
		teleData->tpms.fr_temp  = (uint16_t)(tpmsSensor->temperature * 100);  /* Gives a resolution of 0.01 deg C */
 8003b8c:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003b90:	edd3 7a06 	vldr	s15, [r3, #24]
 8003b94:	ed9f 7a48 	vldr	s14, [pc, #288]	; 8003cb8 <TpmsGetMessage+0x788>
 8003b98:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b9c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ba0:	ee17 3a90 	vmov	r3, s15
 8003ba4:	b29a      	uxth	r2, r3
 8003ba6:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003baa:	879a      	strh	r2, [r3, #60]	; 0x3c
		break;
 8003bac:	e068      	b.n	8003c80 <TpmsGetMessage+0x750>
	case 1:
		teleData->tpms.fl_press = (uint16_t)(tpmsSensor->pressure    * 100);
 8003bae:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003bb2:	edd3 7a07 	vldr	s15, [r3, #28]
 8003bb6:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8003cb8 <TpmsGetMessage+0x788>
 8003bba:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003bbe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003bc2:	ee17 3a90 	vmov	r3, s15
 8003bc6:	b29a      	uxth	r2, r3
 8003bc8:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003bcc:	87da      	strh	r2, [r3, #62]	; 0x3e
		teleData->tpms.fl_temp  = (uint16_t)(tpmsSensor->temperature * 100);
 8003bce:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003bd2:	edd3 7a06 	vldr	s15, [r3, #24]
 8003bd6:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8003cb8 <TpmsGetMessage+0x788>
 8003bda:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003bde:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003be2:	ee17 3a90 	vmov	r3, s15
 8003be6:	b29a      	uxth	r2, r3
 8003be8:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003bec:	f8a3 2040 	strh.w	r2, [r3, #64]	; 0x40
		break;
 8003bf0:	e046      	b.n	8003c80 <TpmsGetMessage+0x750>
	case 2:
		teleData->tpms.rr_press = (uint16_t)(tpmsSensor->pressure	 * 100);
 8003bf2:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003bf6:	edd3 7a07 	vldr	s15, [r3, #28]
 8003bfa:	ed9f 7a2f 	vldr	s14, [pc, #188]	; 8003cb8 <TpmsGetMessage+0x788>
 8003bfe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c02:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c06:	ee17 3a90 	vmov	r3, s15
 8003c0a:	b29a      	uxth	r2, r3
 8003c0c:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003c10:	f8a3 2042 	strh.w	r2, [r3, #66]	; 0x42
		teleData->tpms.rr_temp  = (uint16_t)(tpmsSensor->temperature * 100);
 8003c14:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003c18:	edd3 7a06 	vldr	s15, [r3, #24]
 8003c1c:	ed9f 7a26 	vldr	s14, [pc, #152]	; 8003cb8 <TpmsGetMessage+0x788>
 8003c20:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c24:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c28:	ee17 3a90 	vmov	r3, s15
 8003c2c:	b29a      	uxth	r2, r3
 8003c2e:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003c32:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
		break;
 8003c36:	e023      	b.n	8003c80 <TpmsGetMessage+0x750>
	case 3:
		teleData->tpms.rl_press = (uint16_t)(tpmsSensor->pressure	 * 100);
 8003c38:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003c3c:	edd3 7a07 	vldr	s15, [r3, #28]
 8003c40:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8003cb8 <TpmsGetMessage+0x788>
 8003c44:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c48:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c4c:	ee17 3a90 	vmov	r3, s15
 8003c50:	b29a      	uxth	r2, r3
 8003c52:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003c56:	f8a3 2046 	strh.w	r2, [r3, #70]	; 0x46
		teleData->tpms.rl_temp  = (uint16_t)(tpmsSensor->temperature * 100);
 8003c5a:	f8d7 314c 	ldr.w	r3, [r7, #332]	; 0x14c
 8003c5e:	edd3 7a06 	vldr	s15, [r3, #24]
 8003c62:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8003cb8 <TpmsGetMessage+0x788>
 8003c66:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c6a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c6e:	ee17 3a90 	vmov	r3, s15
 8003c72:	b29a      	uxth	r2, r3
 8003c74:	f8d7 3108 	ldr.w	r3, [r7, #264]	; 0x108
 8003c78:	f8a3 2048 	strh.w	r2, [r3, #72]	; 0x48
		break;
 8003c7c:	e000      	b.n	8003c80 <TpmsGetMessage+0x750>
	default:
		break;
 8003c7e:	bf00      	nop
	}
}
 8003c80:	bf00      	nop
 8003c82:	f507 77aa 	add.w	r7, r7, #340	; 0x154
 8003c86:	46bd      	mov	sp, r7
 8003c88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c8c:	f3af 8000 	nop.w
 8003c90:	47ae147b 	.word	0x47ae147b
 8003c94:	3f847ae1 	.word	0x3f847ae1
 8003c98:	9999999a 	.word	0x9999999a
 8003c9c:	3fb99999 	.word	0x3fb99999
 8003ca0:	00000000 	.word	0x00000000
 8003ca4:	408faa00 	.word	0x408faa00
 8003ca8:	a95e32bb 	.word	0xa95e32bb
 8003cac:	3f8db41d 	.word	0x3f8db41d
 8003cb0:	fffffa24 	.word	0xfffffa24
 8003cb4:	001fffff 	.word	0x001fffff
 8003cb8:	42c80000 	.word	0x42c80000

08003cbc <process_can1_rx_msg>:
#include <TeleMsgs_USB.h>


/* Primary CAN bus */
void process_can1_rx_msg(TelemetryData_t* teleData, uint32_t can_id, uint8_t* RxData)
{
 8003cbc:	b480      	push	{r7}
 8003cbe:	b085      	sub	sp, #20
 8003cc0:	af00      	add	r7, sp, #0
 8003cc2:	60f8      	str	r0, [r7, #12]
 8003cc4:	60b9      	str	r1, [r7, #8]
 8003cc6:	607a      	str	r2, [r7, #4]
	switch(can_id)
 8003cc8:	68bb      	ldr	r3, [r7, #8]
 8003cca:	f240 4204 	movw	r2, #1028	; 0x404
 8003cce:	4293      	cmp	r3, r2
 8003cd0:	f000 8582 	beq.w	80047d8 <process_can1_rx_msg+0xb1c>
 8003cd4:	68bb      	ldr	r3, [r7, #8]
 8003cd6:	f240 4204 	movw	r2, #1028	; 0x404
 8003cda:	4293      	cmp	r3, r2
 8003cdc:	f200 85d5 	bhi.w	800488a <process_can1_rx_msg+0xbce>
 8003ce0:	68bb      	ldr	r3, [r7, #8]
 8003ce2:	f240 4203 	movw	r2, #1027	; 0x403
 8003ce6:	4293      	cmp	r3, r2
 8003ce8:	f000 8558 	beq.w	800479c <process_can1_rx_msg+0xae0>
 8003cec:	68bb      	ldr	r3, [r7, #8]
 8003cee:	f240 4203 	movw	r2, #1027	; 0x403
 8003cf2:	4293      	cmp	r3, r2
 8003cf4:	f200 85c9 	bhi.w	800488a <process_can1_rx_msg+0xbce>
 8003cf8:	68bb      	ldr	r3, [r7, #8]
 8003cfa:	f240 1281 	movw	r2, #385	; 0x181
 8003cfe:	4293      	cmp	r3, r2
 8003d00:	d040      	beq.n	8003d84 <process_can1_rx_msg+0xc8>
 8003d02:	68bb      	ldr	r3, [r7, #8]
 8003d04:	f5b3 7fc0 	cmp.w	r3, #384	; 0x180
 8003d08:	f240 85bf 	bls.w	800488a <process_can1_rx_msg+0xbce>
 8003d0c:	68bb      	ldr	r3, [r7, #8]
 8003d0e:	f5b3 7f45 	cmp.w	r3, #788	; 0x314
 8003d12:	f080 85ba 	bcs.w	800488a <process_can1_rx_msg+0xbce>
 8003d16:	68bb      	ldr	r3, [r7, #8]
 8003d18:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8003d1c:	f0c0 85b5 	bcc.w	800488a <process_can1_rx_msg+0xbce>
 8003d20:	68bb      	ldr	r3, [r7, #8]
 8003d22:	f5a3 7340 	sub.w	r3, r3, #768	; 0x300
 8003d26:	2b13      	cmp	r3, #19
 8003d28:	f200 85af 	bhi.w	800488a <process_can1_rx_msg+0xbce>
 8003d2c:	a201      	add	r2, pc, #4	; (adr r2, 8003d34 <process_can1_rx_msg+0x78>)
 8003d2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003d32:	bf00      	nop
 8003d34:	08004083 	.word	0x08004083
 8003d38:	080040ad 	.word	0x080040ad
 8003d3c:	08004117 	.word	0x08004117
 8003d40:	0800416f 	.word	0x0800416f
 8003d44:	08004181 	.word	0x08004181
 8003d48:	080042ab 	.word	0x080042ab
 8003d4c:	08004323 	.word	0x08004323
 8003d50:	08004377 	.word	0x08004377
 8003d54:	0800440d 	.word	0x0800440d
 8003d58:	080044f3 	.word	0x080044f3
 8003d5c:	0800488b 	.word	0x0800488b
 8003d60:	0800488b 	.word	0x0800488b
 8003d64:	0800488b 	.word	0x0800488b
 8003d68:	0800488b 	.word	0x0800488b
 8003d6c:	0800488b 	.word	0x0800488b
 8003d70:	0800488b 	.word	0x0800488b
 8003d74:	08004529 	.word	0x08004529
 8003d78:	08004557 	.word	0x08004557
 8003d7c:	080045b5 	.word	0x080045b5
 8003d80:	080046d7 	.word	0x080046d7
	{

	case 0x181:         /* INVERTER RX ID - VCU FLAGS */
		switch(RxData[0])
 8003d84:	687b      	ldr	r3, [r7, #4]
 8003d86:	781b      	ldrb	r3, [r3, #0]
 8003d88:	2b8f      	cmp	r3, #143	; 0x8f
 8003d8a:	f000 80ac 	beq.w	8003ee6 <process_can1_rx_msg+0x22a>
 8003d8e:	2b8f      	cmp	r3, #143	; 0x8f
 8003d90:	f300 8174 	bgt.w	800407c <process_can1_rx_msg+0x3c0>
 8003d94:	2b27      	cmp	r3, #39	; 0x27
 8003d96:	d002      	beq.n	8003d9e <process_can1_rx_msg+0xe2>
 8003d98:	2b40      	cmp	r3, #64	; 0x40
 8003d9a:	d059      	beq.n	8003e50 <process_can1_rx_msg+0x194>
			teleData->inv.overcurrent_200 			   = (RxData[4] >> 1) & 0x01;
			teleData->inv.ballast_circuit_overload_87  = (RxData[4] >> 7) & 0x01;
			break;

		default:
			break;
 8003d9c:	e16e      	b.n	800407c <process_can1_rx_msg+0x3c0>
			teleData->vcu.apps_deviaton 		= (RxData[1] >> 0) & 0x01;
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	3301      	adds	r3, #1
 8003da2:	781b      	ldrb	r3, [r3, #0]
 8003da4:	f003 0301 	and.w	r3, r3, #1
 8003da8:	b2d9      	uxtb	r1, r3
 8003daa:	68fa      	ldr	r2, [r7, #12]
 8003dac:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 8003db0:	f361 03c3 	bfi	r3, r1, #3, #1
 8003db4:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
			teleData->vcu.apps_implausibility	= (RxData[1] >> 1) & 0x01;
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	3301      	adds	r3, #1
 8003dbc:	781b      	ldrb	r3, [r3, #0]
 8003dbe:	085b      	lsrs	r3, r3, #1
 8003dc0:	b2db      	uxtb	r3, r3
 8003dc2:	f003 0301 	and.w	r3, r3, #1
 8003dc6:	b2d9      	uxtb	r1, r3
 8003dc8:	68fa      	ldr	r2, [r7, #12]
 8003dca:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 8003dce:	f361 1304 	bfi	r3, r1, #4, #1
 8003dd2:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
			teleData->vcu.brake_deviation 		= (RxData[1] >> 2) & 0x01;
 8003dd6:	687b      	ldr	r3, [r7, #4]
 8003dd8:	3301      	adds	r3, #1
 8003dda:	781b      	ldrb	r3, [r3, #0]
 8003ddc:	089b      	lsrs	r3, r3, #2
 8003dde:	b2db      	uxtb	r3, r3
 8003de0:	f003 0301 	and.w	r3, r3, #1
 8003de4:	b2d9      	uxtb	r1, r3
 8003de6:	68fa      	ldr	r2, [r7, #12]
 8003de8:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 8003dec:	f361 1345 	bfi	r3, r1, #5, #1
 8003df0:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
			teleData->vcu.brake_implausibility  = (RxData[1] >> 3) & 0x01;
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	3301      	adds	r3, #1
 8003df8:	781b      	ldrb	r3, [r3, #0]
 8003dfa:	08db      	lsrs	r3, r3, #3
 8003dfc:	b2db      	uxtb	r3, r3
 8003dfe:	f003 0301 	and.w	r3, r3, #1
 8003e02:	b2d9      	uxtb	r1, r3
 8003e04:	68fa      	ldr	r2, [r7, #12]
 8003e06:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 8003e0a:	f361 1386 	bfi	r3, r1, #6, #1
 8003e0e:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
			teleData->vcu.software_bspd_enabled = (RxData[1] >> 4) & 0x01;
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	3301      	adds	r3, #1
 8003e16:	781b      	ldrb	r3, [r3, #0]
 8003e18:	091b      	lsrs	r3, r3, #4
 8003e1a:	b2db      	uxtb	r3, r3
 8003e1c:	f003 0301 	and.w	r3, r3, #1
 8003e20:	b2d9      	uxtb	r1, r3
 8003e22:	68fa      	ldr	r2, [r7, #12]
 8003e24:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 8003e28:	f361 13c7 	bfi	r3, r1, #7, #1
 8003e2c:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
			teleData->vcu.power_limiter_active  = (RxData[1] >> 5) & 0x01;
 8003e30:	687b      	ldr	r3, [r7, #4]
 8003e32:	3301      	adds	r3, #1
 8003e34:	781b      	ldrb	r3, [r3, #0]
 8003e36:	095b      	lsrs	r3, r3, #5
 8003e38:	b2db      	uxtb	r3, r3
 8003e3a:	f003 0301 	and.w	r3, r3, #1
 8003e3e:	b2d9      	uxtb	r1, r3
 8003e40:	68fa      	ldr	r2, [r7, #12]
 8003e42:	f892 304c 	ldrb.w	r3, [r2, #76]	; 0x4c
 8003e46:	f361 0300 	bfi	r3, r1, #0, #1
 8003e4a:	f882 304c 	strb.w	r3, [r2, #76]	; 0x4c
			break;
 8003e4e:	e116      	b.n	800407e <process_can1_rx_msg+0x3c2>
			teleData->inv.inv_enable 		  = (RxData[1] >> 0) & 0x01;
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	3301      	adds	r3, #1
 8003e54:	781b      	ldrb	r3, [r3, #0]
 8003e56:	f003 0301 	and.w	r3, r3, #1
 8003e5a:	b2d9      	uxtb	r1, r3
 8003e5c:	68fa      	ldr	r2, [r7, #12]
 8003e5e:	7a13      	ldrb	r3, [r2, #8]
 8003e60:	f361 0300 	bfi	r3, r1, #0, #1
 8003e64:	7213      	strb	r3, [r2, #8]
			teleData->inv.inv_ok 			  = (RxData[1] >> 1) & 0x01;
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	3301      	adds	r3, #1
 8003e6a:	781b      	ldrb	r3, [r3, #0]
 8003e6c:	085b      	lsrs	r3, r3, #1
 8003e6e:	b2db      	uxtb	r3, r3
 8003e70:	f003 0301 	and.w	r3, r3, #1
 8003e74:	b2d9      	uxtb	r1, r3
 8003e76:	68fa      	ldr	r2, [r7, #12]
 8003e78:	7a13      	ldrb	r3, [r2, #8]
 8003e7a:	f361 0341 	bfi	r3, r1, #1, #1
 8003e7e:	7213      	strb	r3, [r2, #8]
			teleData->inv.curr_lim_reached 	  = (RxData[4] >> 5) & 0x01;
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	3304      	adds	r3, #4
 8003e84:	781b      	ldrb	r3, [r3, #0]
 8003e86:	095b      	lsrs	r3, r3, #5
 8003e88:	b2db      	uxtb	r3, r3
 8003e8a:	f003 0301 	and.w	r3, r3, #1
 8003e8e:	b2d9      	uxtb	r1, r3
 8003e90:	68fa      	ldr	r2, [r7, #12]
 8003e92:	7a13      	ldrb	r3, [r2, #8]
 8003e94:	f361 0382 	bfi	r3, r1, #2, #1
 8003e98:	7213      	strb	r3, [r2, #8]
			teleData->inv.curr_lim_igbt_temp  = (RxData[5] >> 0) & 0x01;
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	3305      	adds	r3, #5
 8003e9e:	781b      	ldrb	r3, [r3, #0]
 8003ea0:	f003 0301 	and.w	r3, r3, #1
 8003ea4:	b2d9      	uxtb	r1, r3
 8003ea6:	68fa      	ldr	r2, [r7, #12]
 8003ea8:	7a13      	ldrb	r3, [r2, #8]
 8003eaa:	f361 03c3 	bfi	r3, r1, #3, #1
 8003eae:	7213      	strb	r3, [r2, #8]
			teleData->inv.curr_lim_motor_temp = (RxData[5] >> 2) & 0x01;
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	3305      	adds	r3, #5
 8003eb4:	781b      	ldrb	r3, [r3, #0]
 8003eb6:	089b      	lsrs	r3, r3, #2
 8003eb8:	b2db      	uxtb	r3, r3
 8003eba:	f003 0301 	and.w	r3, r3, #1
 8003ebe:	b2d9      	uxtb	r1, r3
 8003ec0:	68fa      	ldr	r2, [r7, #12]
 8003ec2:	7a13      	ldrb	r3, [r2, #8]
 8003ec4:	f361 1304 	bfi	r3, r1, #4, #1
 8003ec8:	7213      	strb	r3, [r2, #8]
			teleData->inv.curr_peak_val_warn  = (RxData[5] >> 4) & 0x01;
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	3305      	adds	r3, #5
 8003ece:	781b      	ldrb	r3, [r3, #0]
 8003ed0:	091b      	lsrs	r3, r3, #4
 8003ed2:	b2db      	uxtb	r3, r3
 8003ed4:	f003 0301 	and.w	r3, r3, #1
 8003ed8:	b2d9      	uxtb	r1, r3
 8003eda:	68fa      	ldr	r2, [r7, #12]
 8003edc:	7a13      	ldrb	r3, [r2, #8]
 8003ede:	f361 1345 	bfi	r3, r1, #5, #1
 8003ee2:	7213      	strb	r3, [r2, #8]
			break;
 8003ee4:	e0cb      	b.n	800407e <process_can1_rx_msg+0x3c2>
			teleData->inv.defective_param 		  = (RxData[1] >> 0) & 0x01;
 8003ee6:	687b      	ldr	r3, [r7, #4]
 8003ee8:	3301      	adds	r3, #1
 8003eea:	781b      	ldrb	r3, [r3, #0]
 8003eec:	f003 0301 	and.w	r3, r3, #1
 8003ef0:	b2d9      	uxtb	r1, r3
 8003ef2:	68fa      	ldr	r2, [r7, #12]
 8003ef4:	7a13      	ldrb	r3, [r2, #8]
 8003ef6:	f361 1386 	bfi	r3, r1, #6, #1
 8003efa:	7213      	strb	r3, [r2, #8]
			teleData->inv.hardware_fault 		  = (RxData[1] >> 1) & 0x01;
 8003efc:	687b      	ldr	r3, [r7, #4]
 8003efe:	3301      	adds	r3, #1
 8003f00:	781b      	ldrb	r3, [r3, #0]
 8003f02:	085b      	lsrs	r3, r3, #1
 8003f04:	b2db      	uxtb	r3, r3
 8003f06:	f003 0301 	and.w	r3, r3, #1
 8003f0a:	b2d9      	uxtb	r1, r3
 8003f0c:	68fa      	ldr	r2, [r7, #12]
 8003f0e:	7a13      	ldrb	r3, [r2, #8]
 8003f10:	f361 13c7 	bfi	r3, r1, #7, #1
 8003f14:	7213      	strb	r3, [r2, #8]
			teleData->inv.faulty_safety_circuit   = (RxData[1] >> 2) & 0x01;
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	3301      	adds	r3, #1
 8003f1a:	781b      	ldrb	r3, [r3, #0]
 8003f1c:	089b      	lsrs	r3, r3, #2
 8003f1e:	b2db      	uxtb	r3, r3
 8003f20:	f003 0301 	and.w	r3, r3, #1
 8003f24:	b2d9      	uxtb	r1, r3
 8003f26:	68fa      	ldr	r2, [r7, #12]
 8003f28:	7a53      	ldrb	r3, [r2, #9]
 8003f2a:	f361 0300 	bfi	r3, r1, #0, #1
 8003f2e:	7253      	strb	r3, [r2, #9]
			teleData->inv.can_time_out_exceeded   = (RxData[1] >> 3) & 0x01;
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	3301      	adds	r3, #1
 8003f34:	781b      	ldrb	r3, [r3, #0]
 8003f36:	08db      	lsrs	r3, r3, #3
 8003f38:	b2db      	uxtb	r3, r3
 8003f3a:	f003 0301 	and.w	r3, r3, #1
 8003f3e:	b2d9      	uxtb	r1, r3
 8003f40:	68fa      	ldr	r2, [r7, #12]
 8003f42:	7a53      	ldrb	r3, [r2, #9]
 8003f44:	f361 0341 	bfi	r3, r1, #1, #1
 8003f48:	7253      	strb	r3, [r2, #9]
			teleData->inv.bad_encoder_signal 	  = (RxData[1] >> 4) & 0x01;
 8003f4a:	687b      	ldr	r3, [r7, #4]
 8003f4c:	3301      	adds	r3, #1
 8003f4e:	781b      	ldrb	r3, [r3, #0]
 8003f50:	091b      	lsrs	r3, r3, #4
 8003f52:	b2db      	uxtb	r3, r3
 8003f54:	f003 0301 	and.w	r3, r3, #1
 8003f58:	b2d9      	uxtb	r1, r3
 8003f5a:	68fa      	ldr	r2, [r7, #12]
 8003f5c:	7a53      	ldrb	r3, [r2, #9]
 8003f5e:	f361 0382 	bfi	r3, r1, #2, #1
 8003f62:	7253      	strb	r3, [r2, #9]
			teleData->inv.no_power_supply_voltage = (RxData[1] >> 5) & 0x01;
 8003f64:	687b      	ldr	r3, [r7, #4]
 8003f66:	3301      	adds	r3, #1
 8003f68:	781b      	ldrb	r3, [r3, #0]
 8003f6a:	095b      	lsrs	r3, r3, #5
 8003f6c:	b2db      	uxtb	r3, r3
 8003f6e:	f003 0301 	and.w	r3, r3, #1
 8003f72:	b2d9      	uxtb	r1, r3
 8003f74:	68fa      	ldr	r2, [r7, #12]
 8003f76:	7a53      	ldrb	r3, [r2, #9]
 8003f78:	f361 03c3 	bfi	r3, r1, #3, #1
 8003f7c:	7253      	strb	r3, [r2, #9]
			teleData->inv.overvoltage 			   = (RxData[2] >> 0) & 0x01;
 8003f7e:	687b      	ldr	r3, [r7, #4]
 8003f80:	3302      	adds	r3, #2
 8003f82:	781b      	ldrb	r3, [r3, #0]
 8003f84:	f003 0301 	and.w	r3, r3, #1
 8003f88:	b2d9      	uxtb	r1, r3
 8003f8a:	68fa      	ldr	r2, [r7, #12]
 8003f8c:	7a53      	ldrb	r3, [r2, #9]
 8003f8e:	f361 1304 	bfi	r3, r1, #4, #1
 8003f92:	7253      	strb	r3, [r2, #9]
			teleData->inv.overcurrent 			   = (RxData[2] >> 1) & 0x01;
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	3302      	adds	r3, #2
 8003f98:	781b      	ldrb	r3, [r3, #0]
 8003f9a:	085b      	lsrs	r3, r3, #1
 8003f9c:	b2db      	uxtb	r3, r3
 8003f9e:	f003 0301 	and.w	r3, r3, #1
 8003fa2:	b2d9      	uxtb	r1, r3
 8003fa4:	68fa      	ldr	r2, [r7, #12]
 8003fa6:	7a53      	ldrb	r3, [r2, #9]
 8003fa8:	f361 1345 	bfi	r3, r1, #5, #1
 8003fac:	7253      	strb	r3, [r2, #9]
			teleData->inv.current_measure_fault    = (RxData[2] >> 6) & 0x01;
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	3302      	adds	r3, #2
 8003fb2:	781b      	ldrb	r3, [r3, #0]
 8003fb4:	099b      	lsrs	r3, r3, #6
 8003fb6:	b2db      	uxtb	r3, r3
 8003fb8:	f003 0301 	and.w	r3, r3, #1
 8003fbc:	b2d9      	uxtb	r1, r3
 8003fbe:	68fa      	ldr	r2, [r7, #12]
 8003fc0:	7a53      	ldrb	r3, [r2, #9]
 8003fc2:	f361 1386 	bfi	r3, r1, #6, #1
 8003fc6:	7253      	strb	r3, [r2, #9]
			teleData->inv.ballast_circuit_overload = (RxData[2] >> 7) & 0x01;
 8003fc8:	687b      	ldr	r3, [r7, #4]
 8003fca:	3302      	adds	r3, #2
 8003fcc:	781b      	ldrb	r3, [r3, #0]
 8003fce:	09db      	lsrs	r3, r3, #7
 8003fd0:	b2db      	uxtb	r3, r3
 8003fd2:	f003 0301 	and.w	r3, r3, #1
 8003fd6:	b2d9      	uxtb	r1, r3
 8003fd8:	68fa      	ldr	r2, [r7, #12]
 8003fda:	7a53      	ldrb	r3, [r2, #9]
 8003fdc:	f361 13c7 	bfi	r3, r1, #7, #1
 8003fe0:	7253      	strb	r3, [r2, #9]
			teleData->inv.faulty_run_signal_emi 		  = (RxData[3] >> 1) & 0x01;
 8003fe2:	687b      	ldr	r3, [r7, #4]
 8003fe4:	3303      	adds	r3, #3
 8003fe6:	781b      	ldrb	r3, [r3, #0]
 8003fe8:	085b      	lsrs	r3, r3, #1
 8003fea:	b2db      	uxtb	r3, r3
 8003fec:	f003 0301 	and.w	r3, r3, #1
 8003ff0:	b2d9      	uxtb	r1, r3
 8003ff2:	68fa      	ldr	r2, [r7, #12]
 8003ff4:	7a93      	ldrb	r3, [r2, #10]
 8003ff6:	f361 0300 	bfi	r3, r1, #0, #1
 8003ffa:	7293      	strb	r3, [r2, #10]
			teleData->inv.inactive_rfe 					  = (RxData[3] >> 2) & 0x01;
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	3303      	adds	r3, #3
 8004000:	781b      	ldrb	r3, [r3, #0]
 8004002:	089b      	lsrs	r3, r3, #2
 8004004:	b2db      	uxtb	r3, r3
 8004006:	f003 0301 	and.w	r3, r3, #1
 800400a:	b2d9      	uxtb	r1, r3
 800400c:	68fa      	ldr	r2, [r7, #12]
 800400e:	7a93      	ldrb	r3, [r2, #10]
 8004010:	f361 0341 	bfi	r3, r1, #1, #1
 8004014:	7293      	strb	r3, [r2, #10]
			teleData->inv.power_supply_missing_or_too_low = (RxData[3] >> 5) & 0x01;
 8004016:	687b      	ldr	r3, [r7, #4]
 8004018:	3303      	adds	r3, #3
 800401a:	781b      	ldrb	r3, [r3, #0]
 800401c:	095b      	lsrs	r3, r3, #5
 800401e:	b2db      	uxtb	r3, r3
 8004020:	f003 0301 	and.w	r3, r3, #1
 8004024:	b2d9      	uxtb	r1, r3
 8004026:	68fa      	ldr	r2, [r7, #12]
 8004028:	7a93      	ldrb	r3, [r2, #10]
 800402a:	f361 0382 	bfi	r3, r1, #2, #1
 800402e:	7293      	strb	r3, [r2, #10]
			teleData->inv.output_voltage_limit_reached = (RxData[4] >> 0) & 0x01;
 8004030:	687b      	ldr	r3, [r7, #4]
 8004032:	3304      	adds	r3, #4
 8004034:	781b      	ldrb	r3, [r3, #0]
 8004036:	f003 0301 	and.w	r3, r3, #1
 800403a:	b2d9      	uxtb	r1, r3
 800403c:	68fa      	ldr	r2, [r7, #12]
 800403e:	7a93      	ldrb	r3, [r2, #10]
 8004040:	f361 03c3 	bfi	r3, r1, #3, #1
 8004044:	7293      	strb	r3, [r2, #10]
			teleData->inv.overcurrent_200 			   = (RxData[4] >> 1) & 0x01;
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	3304      	adds	r3, #4
 800404a:	781b      	ldrb	r3, [r3, #0]
 800404c:	085b      	lsrs	r3, r3, #1
 800404e:	b2db      	uxtb	r3, r3
 8004050:	f003 0301 	and.w	r3, r3, #1
 8004054:	b2d9      	uxtb	r1, r3
 8004056:	68fa      	ldr	r2, [r7, #12]
 8004058:	7a93      	ldrb	r3, [r2, #10]
 800405a:	f361 1304 	bfi	r3, r1, #4, #1
 800405e:	7293      	strb	r3, [r2, #10]
			teleData->inv.ballast_circuit_overload_87  = (RxData[4] >> 7) & 0x01;
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	3304      	adds	r3, #4
 8004064:	781b      	ldrb	r3, [r3, #0]
 8004066:	09db      	lsrs	r3, r3, #7
 8004068:	b2db      	uxtb	r3, r3
 800406a:	f003 0301 	and.w	r3, r3, #1
 800406e:	b2d9      	uxtb	r1, r3
 8004070:	68fa      	ldr	r2, [r7, #12]
 8004072:	7a93      	ldrb	r3, [r2, #10]
 8004074:	f361 1345 	bfi	r3, r1, #5, #1
 8004078:	7293      	strb	r3, [r2, #10]
			break;
 800407a:	e000      	b.n	800407e <process_can1_rx_msg+0x3c2>
			break;
 800407c:	bf00      	nop
		}
		break;
 800407e:	f000 bc05 	b.w	800488c <process_can1_rx_msg+0xbd0>

	case 0x300:
		teleData->accu.bms_error_code       = RxData[0];
 8004082:	687b      	ldr	r3, [r7, #4]
 8004084:	781a      	ldrb	r2, [r3, #0]
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	749a      	strb	r2, [r3, #18]
		teleData->accu.last_bms_error_code  = RxData[1];
 800408a:	687b      	ldr	r3, [r7, #4]
 800408c:	785a      	ldrb	r2, [r3, #1]
 800408e:	68fb      	ldr	r3, [r7, #12]
 8004090:	74da      	strb	r2, [r3, #19]
		teleData->accu.tsac_error_code      = RxData[2];
 8004092:	687b      	ldr	r3, [r7, #4]
 8004094:	789a      	ldrb	r2, [r3, #2]
 8004096:	68fb      	ldr	r3, [r7, #12]
 8004098:	751a      	strb	r2, [r3, #20]
		teleData->accu.last_tsac_error_code = RxData[3];
 800409a:	687b      	ldr	r3, [r7, #4]
 800409c:	78da      	ldrb	r2, [r3, #3]
 800409e:	68fb      	ldr	r3, [r7, #12]
 80040a0:	755a      	strb	r2, [r3, #21]
		teleData->accu.error_position       = RxData[4];
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	791a      	ldrb	r2, [r3, #4]
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	761a      	strb	r2, [r3, #24]
		break;
 80040aa:	e3ef      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x301:
		teleData->accu.total_voltage_vs = (RxData[0] << 8) | RxData[1];
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	781b      	ldrb	r3, [r3, #0]
 80040b0:	021b      	lsls	r3, r3, #8
 80040b2:	b21a      	sxth	r2, r3
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	3301      	adds	r3, #1
 80040b8:	781b      	ldrb	r3, [r3, #0]
 80040ba:	b21b      	sxth	r3, r3
 80040bc:	4313      	orrs	r3, r2
 80040be:	b21b      	sxth	r3, r3
 80040c0:	b29a      	uxth	r2, r3
 80040c2:	68fb      	ldr	r3, [r7, #12]
 80040c4:	839a      	strh	r2, [r3, #28]
		teleData->accu.accu_current     = (RxData[2] << 8) | RxData[3];
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	3302      	adds	r3, #2
 80040ca:	781b      	ldrb	r3, [r3, #0]
 80040cc:	021b      	lsls	r3, r3, #8
 80040ce:	b21a      	sxth	r2, r3
 80040d0:	687b      	ldr	r3, [r7, #4]
 80040d2:	3303      	adds	r3, #3
 80040d4:	781b      	ldrb	r3, [r3, #0]
 80040d6:	b21b      	sxth	r3, r3
 80040d8:	4313      	orrs	r3, r2
 80040da:	b21a      	sxth	r2, r3
 80040dc:	68fb      	ldr	r3, [r7, #12]
 80040de:	851a      	strh	r2, [r3, #40]	; 0x28
		teleData->accu.wh_consumed      = (RxData[4] << 8) | RxData[5];
 80040e0:	687b      	ldr	r3, [r7, #4]
 80040e2:	3304      	adds	r3, #4
 80040e4:	781b      	ldrb	r3, [r3, #0]
 80040e6:	021b      	lsls	r3, r3, #8
 80040e8:	b21a      	sxth	r2, r3
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	3305      	adds	r3, #5
 80040ee:	781b      	ldrb	r3, [r3, #0]
 80040f0:	b21b      	sxth	r3, r3
 80040f2:	4313      	orrs	r3, r2
 80040f4:	b21a      	sxth	r2, r3
 80040f6:	68fb      	ldr	r3, [r7, #12]
 80040f8:	849a      	strh	r2, [r3, #36]	; 0x24
		teleData->accu.ah_consumed      = (RxData[6] << 8) | RxData[7];
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	3306      	adds	r3, #6
 80040fe:	781b      	ldrb	r3, [r3, #0]
 8004100:	021b      	lsls	r3, r3, #8
 8004102:	b21a      	sxth	r2, r3
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	3307      	adds	r3, #7
 8004108:	781b      	ldrb	r3, [r3, #0]
 800410a:	b21b      	sxth	r3, r3
 800410c:	4313      	orrs	r3, r2
 800410e:	b21a      	sxth	r2, r3
 8004110:	68fb      	ldr	r3, [r7, #12]
 8004112:	84da      	strh	r2, [r3, #38]	; 0x26
		break;
 8004114:	e3ba      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x302:
		teleData->accu.max_cell_voltage		= (RxData[0] << 8) | RxData[1];
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	781b      	ldrb	r3, [r3, #0]
 800411a:	021b      	lsls	r3, r3, #8
 800411c:	b21a      	sxth	r2, r3
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	3301      	adds	r3, #1
 8004122:	781b      	ldrb	r3, [r3, #0]
 8004124:	b21b      	sxth	r3, r3
 8004126:	4313      	orrs	r3, r2
 8004128:	b21b      	sxth	r3, r3
 800412a:	b29a      	uxth	r2, r3
 800412c:	68fb      	ldr	r3, [r7, #12]
 800412e:	83da      	strh	r2, [r3, #30]
		teleData->accu.max_cell_voltage_pos =  RxData[2];
 8004130:	687b      	ldr	r3, [r7, #4]
 8004132:	789a      	ldrb	r2, [r3, #2]
 8004134:	68fb      	ldr	r3, [r7, #12]
 8004136:	765a      	strb	r2, [r3, #25]
		teleData->accu.min_cell_voltage 	= (RxData[3] << 8) | RxData[4];
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	3303      	adds	r3, #3
 800413c:	781b      	ldrb	r3, [r3, #0]
 800413e:	021b      	lsls	r3, r3, #8
 8004140:	b21a      	sxth	r2, r3
 8004142:	687b      	ldr	r3, [r7, #4]
 8004144:	3304      	adds	r3, #4
 8004146:	781b      	ldrb	r3, [r3, #0]
 8004148:	b21b      	sxth	r3, r3
 800414a:	4313      	orrs	r3, r2
 800414c:	b21b      	sxth	r3, r3
 800414e:	b29a      	uxth	r2, r3
 8004150:	68fb      	ldr	r3, [r7, #12]
 8004152:	841a      	strh	r2, [r3, #32]
		teleData->accu.min_cell_voltage_pos =  RxData[5];
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	795a      	ldrb	r2, [r3, #5]
 8004158:	68fb      	ldr	r3, [r7, #12]
 800415a:	769a      	strb	r2, [r3, #26]
		teleData->accu.max_soc              =  RxData[6];
 800415c:	687b      	ldr	r3, [r7, #4]
 800415e:	799a      	ldrb	r2, [r3, #6]
 8004160:	68fb      	ldr	r3, [r7, #12]
 8004162:	759a      	strb	r2, [r3, #22]
		teleData->accu.min_soc              =  RxData[7];
 8004164:	687b      	ldr	r3, [r7, #4]
 8004166:	79da      	ldrb	r2, [r3, #7]
 8004168:	68fb      	ldr	r3, [r7, #12]
 800416a:	75da      	strb	r2, [r3, #23]
		break;
 800416c:	e38e      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x303:
		teleData->accu.max_cell_temp = RxData[0];
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	781a      	ldrb	r2, [r3, #0]
 8004172:	68fb      	ldr	r3, [r7, #12]
 8004174:	739a      	strb	r2, [r3, #14]
		teleData->accu.min_cell_temp = RxData[2];
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	789a      	ldrb	r2, [r3, #2]
 800417a:	68fb      	ldr	r3, [r7, #12]
 800417c:	73da      	strb	r2, [r3, #15]
		break;
 800417e:	e385      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x304:
		teleData->accu.over_60v_dclink =   (RxData[0] >> 0) & 0x01;
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	781b      	ldrb	r3, [r3, #0]
 8004184:	f003 0301 	and.w	r3, r3, #1
 8004188:	b2d9      	uxtb	r1, r3
 800418a:	68fa      	ldr	r2, [r7, #12]
 800418c:	7b13      	ldrb	r3, [r2, #12]
 800418e:	f361 0300 	bfi	r3, r1, #0, #1
 8004192:	7313      	strb	r3, [r2, #12]
		teleData->accu.air_m_state     =   (RxData[0] >> 1) & 0x01;
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	781b      	ldrb	r3, [r3, #0]
 8004198:	085b      	lsrs	r3, r3, #1
 800419a:	b2db      	uxtb	r3, r3
 800419c:	f003 0301 	and.w	r3, r3, #1
 80041a0:	b2d9      	uxtb	r1, r3
 80041a2:	68fa      	ldr	r2, [r7, #12]
 80041a4:	7b13      	ldrb	r3, [r2, #12]
 80041a6:	f361 0341 	bfi	r3, r1, #1, #1
 80041aa:	7313      	strb	r3, [r2, #12]
		teleData->accu.air_m_supp      =   (RxData[0] >> 2) & 0x01;
 80041ac:	687b      	ldr	r3, [r7, #4]
 80041ae:	781b      	ldrb	r3, [r3, #0]
 80041b0:	089b      	lsrs	r3, r3, #2
 80041b2:	b2db      	uxtb	r3, r3
 80041b4:	f003 0301 	and.w	r3, r3, #1
 80041b8:	b2d9      	uxtb	r1, r3
 80041ba:	68fa      	ldr	r2, [r7, #12]
 80041bc:	7b13      	ldrb	r3, [r2, #12]
 80041be:	f361 0382 	bfi	r3, r1, #2, #1
 80041c2:	7313      	strb	r3, [r2, #12]
		teleData->accu.air_p_state     =   (RxData[0] >> 3) & 0x01;
 80041c4:	687b      	ldr	r3, [r7, #4]
 80041c6:	781b      	ldrb	r3, [r3, #0]
 80041c8:	08db      	lsrs	r3, r3, #3
 80041ca:	b2db      	uxtb	r3, r3
 80041cc:	f003 0301 	and.w	r3, r3, #1
 80041d0:	b2d9      	uxtb	r1, r3
 80041d2:	68fa      	ldr	r2, [r7, #12]
 80041d4:	7b13      	ldrb	r3, [r2, #12]
 80041d6:	f361 03c3 	bfi	r3, r1, #3, #1
 80041da:	7313      	strb	r3, [r2, #12]
		teleData->accu.air_p_supp      =   (RxData[0] >> 4) & 0x01;
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	781b      	ldrb	r3, [r3, #0]
 80041e0:	091b      	lsrs	r3, r3, #4
 80041e2:	b2db      	uxtb	r3, r3
 80041e4:	f003 0301 	and.w	r3, r3, #1
 80041e8:	b2d9      	uxtb	r1, r3
 80041ea:	68fa      	ldr	r2, [r7, #12]
 80041ec:	7b13      	ldrb	r3, [r2, #12]
 80041ee:	f361 1304 	bfi	r3, r1, #4, #1
 80041f2:	7313      	strb	r3, [r2, #12]
		teleData->accu.imd_ok          = !((RxData[0] >> 5) & 0x01);
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	781b      	ldrb	r3, [r3, #0]
 80041f8:	095b      	lsrs	r3, r3, #5
 80041fa:	b2db      	uxtb	r3, r3
 80041fc:	f003 0301 	and.w	r3, r3, #1
 8004200:	2b00      	cmp	r3, #0
 8004202:	bf0c      	ite	eq
 8004204:	2301      	moveq	r3, #1
 8004206:	2300      	movne	r3, #0
 8004208:	b2d9      	uxtb	r1, r3
 800420a:	68fa      	ldr	r2, [r7, #12]
 800420c:	7b13      	ldrb	r3, [r2, #12]
 800420e:	f361 1345 	bfi	r3, r1, #5, #1
 8004212:	7313      	strb	r3, [r2, #12]
		teleData->accu.ams_ok          = !((RxData[0] >> 6) & 0x01);
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	781b      	ldrb	r3, [r3, #0]
 8004218:	099b      	lsrs	r3, r3, #6
 800421a:	b2db      	uxtb	r3, r3
 800421c:	f003 0301 	and.w	r3, r3, #1
 8004220:	2b00      	cmp	r3, #0
 8004222:	bf0c      	ite	eq
 8004224:	2301      	moveq	r3, #1
 8004226:	2300      	movne	r3, #0
 8004228:	b2d9      	uxtb	r1, r3
 800422a:	68fa      	ldr	r2, [r7, #12]
 800422c:	7b13      	ldrb	r3, [r2, #12]
 800422e:	f361 1386 	bfi	r3, r1, #6, #1
 8004232:	7313      	strb	r3, [r2, #12]
		teleData->accu.precharge_state =   (RxData[0] >> 7) & 0x01;
 8004234:	687b      	ldr	r3, [r7, #4]
 8004236:	781b      	ldrb	r3, [r3, #0]
 8004238:	09db      	lsrs	r3, r3, #7
 800423a:	b2db      	uxtb	r3, r3
 800423c:	f003 0301 	and.w	r3, r3, #1
 8004240:	b2d9      	uxtb	r1, r3
 8004242:	68fa      	ldr	r2, [r7, #12]
 8004244:	7b13      	ldrb	r3, [r2, #12]
 8004246:	f361 13c7 	bfi	r3, r1, #7, #1
 800424a:	7313      	strb	r3, [r2, #12]
		teleData->accu.ts_active       =   (RxData[1] >> 0) & 0x01;
 800424c:	687b      	ldr	r3, [r7, #4]
 800424e:	3301      	adds	r3, #1
 8004250:	781b      	ldrb	r3, [r3, #0]
 8004252:	f003 0301 	and.w	r3, r3, #1
 8004256:	b2d9      	uxtb	r1, r3
 8004258:	68fa      	ldr	r2, [r7, #12]
 800425a:	7b53      	ldrb	r3, [r2, #13]
 800425c:	f361 0300 	bfi	r3, r1, #0, #1
 8004260:	7353      	strb	r3, [r2, #13]
		teleData->accu.vicor_overtemp  =   (RxData[1] >> 1) & 0x01;
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	3301      	adds	r3, #1
 8004266:	781b      	ldrb	r3, [r3, #0]
 8004268:	085b      	lsrs	r3, r3, #1
 800426a:	b2db      	uxtb	r3, r3
 800426c:	f003 0301 	and.w	r3, r3, #1
 8004270:	b2d9      	uxtb	r1, r3
 8004272:	68fa      	ldr	r2, [r7, #12]
 8004274:	7b53      	ldrb	r3, [r2, #13]
 8004276:	f361 0341 	bfi	r3, r1, #1, #1
 800427a:	7353      	strb	r3, [r2, #13]

		teleData->accu.dcdc_temp    = RxData[2];
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	789a      	ldrb	r2, [r3, #2]
 8004280:	68fb      	ldr	r3, [r7, #12]
 8004282:	741a      	strb	r2, [r3, #16]
		teleData->accu.max_humidity = RxData[3];
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	78da      	ldrb	r2, [r3, #3]
 8004288:	68fb      	ldr	r3, [r7, #12]
 800428a:	745a      	strb	r2, [r3, #17]

		teleData->accu.imd_isolation_kOhms = (RxData[5] << 8) | RxData[6];
 800428c:	687b      	ldr	r3, [r7, #4]
 800428e:	3305      	adds	r3, #5
 8004290:	781b      	ldrb	r3, [r3, #0]
 8004292:	021b      	lsls	r3, r3, #8
 8004294:	b21a      	sxth	r2, r3
 8004296:	687b      	ldr	r3, [r7, #4]
 8004298:	3306      	adds	r3, #6
 800429a:	781b      	ldrb	r3, [r3, #0]
 800429c:	b21b      	sxth	r3, r3
 800429e:	4313      	orrs	r3, r2
 80042a0:	b21b      	sxth	r3, r3
 80042a2:	b29a      	uxth	r2, r3
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	845a      	strh	r2, [r3, #34]	; 0x22
		break;
 80042a8:	e2f0      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x305:
		teleData->vcu.hall_fl = (RxData[0] << 8) | RxData[1];
 80042aa:	687b      	ldr	r3, [r7, #4]
 80042ac:	781b      	ldrb	r3, [r3, #0]
 80042ae:	021b      	lsls	r3, r3, #8
 80042b0:	b21a      	sxth	r2, r3
 80042b2:	687b      	ldr	r3, [r7, #4]
 80042b4:	3301      	adds	r3, #1
 80042b6:	781b      	ldrb	r3, [r3, #0]
 80042b8:	b21b      	sxth	r3, r3
 80042ba:	4313      	orrs	r3, r2
 80042bc:	b21b      	sxth	r3, r3
 80042be:	b29a      	uxth	r2, r3
 80042c0:	68fb      	ldr	r3, [r7, #12]
 80042c2:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
		teleData->vcu.hall_fr = (RxData[2] << 8) | RxData[3];
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	3302      	adds	r3, #2
 80042ca:	781b      	ldrb	r3, [r3, #0]
 80042cc:	021b      	lsls	r3, r3, #8
 80042ce:	b21a      	sxth	r2, r3
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	3303      	adds	r3, #3
 80042d4:	781b      	ldrb	r3, [r3, #0]
 80042d6:	b21b      	sxth	r3, r3
 80042d8:	4313      	orrs	r3, r2
 80042da:	b21b      	sxth	r3, r3
 80042dc:	b29a      	uxth	r2, r3
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	f8a3 205a 	strh.w	r2, [r3, #90]	; 0x5a
		teleData->vcu.hall_rl = (RxData[4] << 8) | RxData[5];
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	3304      	adds	r3, #4
 80042e8:	781b      	ldrb	r3, [r3, #0]
 80042ea:	021b      	lsls	r3, r3, #8
 80042ec:	b21a      	sxth	r2, r3
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	3305      	adds	r3, #5
 80042f2:	781b      	ldrb	r3, [r3, #0]
 80042f4:	b21b      	sxth	r3, r3
 80042f6:	4313      	orrs	r3, r2
 80042f8:	b21b      	sxth	r3, r3
 80042fa:	b29a      	uxth	r2, r3
 80042fc:	68fb      	ldr	r3, [r7, #12]
 80042fe:	f8a3 2060 	strh.w	r2, [r3, #96]	; 0x60
		teleData->vcu.hall_rr = (RxData[6] << 8) | RxData[7];
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	3306      	adds	r3, #6
 8004306:	781b      	ldrb	r3, [r3, #0]
 8004308:	021b      	lsls	r3, r3, #8
 800430a:	b21a      	sxth	r2, r3
 800430c:	687b      	ldr	r3, [r7, #4]
 800430e:	3307      	adds	r3, #7
 8004310:	781b      	ldrb	r3, [r3, #0]
 8004312:	b21b      	sxth	r3, r3
 8004314:	4313      	orrs	r3, r2
 8004316:	b21b      	sxth	r3, r3
 8004318:	b29a      	uxth	r2, r3
 800431a:	68fb      	ldr	r3, [r7, #12]
 800431c:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
		break;
 8004320:	e2b4      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x306:
		teleData->vcu.actual_torque    = (RxData[0] << 8) | RxData[1];
 8004322:	687b      	ldr	r3, [r7, #4]
 8004324:	781b      	ldrb	r3, [r3, #0]
 8004326:	021b      	lsls	r3, r3, #8
 8004328:	b21a      	sxth	r2, r3
 800432a:	687b      	ldr	r3, [r7, #4]
 800432c:	3301      	adds	r3, #1
 800432e:	781b      	ldrb	r3, [r3, #0]
 8004330:	b21b      	sxth	r3, r3
 8004332:	4313      	orrs	r3, r2
 8004334:	b21a      	sxth	r2, r3
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	f8a3 2052 	strh.w	r2, [r3, #82]	; 0x52
		teleData->vcu.requested_torque = (RxData[2] << 8) | RxData[3];
 800433c:	687b      	ldr	r3, [r7, #4]
 800433e:	3302      	adds	r3, #2
 8004340:	781b      	ldrb	r3, [r3, #0]
 8004342:	021b      	lsls	r3, r3, #8
 8004344:	b21a      	sxth	r2, r3
 8004346:	687b      	ldr	r3, [r7, #4]
 8004348:	3303      	adds	r3, #3
 800434a:	781b      	ldrb	r3, [r3, #0]
 800434c:	b21b      	sxth	r3, r3
 800434e:	4313      	orrs	r3, r2
 8004350:	b21a      	sxth	r2, r3
 8004352:	68fb      	ldr	r3, [r7, #12]
 8004354:	f8a3 2050 	strh.w	r2, [r3, #80]	; 0x50
		teleData->vcu.motor_rpm		   = (RxData[4] << 8) | RxData[5];
 8004358:	687b      	ldr	r3, [r7, #4]
 800435a:	3304      	adds	r3, #4
 800435c:	781b      	ldrb	r3, [r3, #0]
 800435e:	021b      	lsls	r3, r3, #8
 8004360:	b21a      	sxth	r2, r3
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	3305      	adds	r3, #5
 8004366:	781b      	ldrb	r3, [r3, #0]
 8004368:	b21b      	sxth	r3, r3
 800436a:	4313      	orrs	r3, r2
 800436c:	b21a      	sxth	r2, r3
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
		break;
 8004374:	e28a      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x307:
		teleData->vcu.asb_ok     = !((RxData[0] >> 2) & 0x01);
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	781b      	ldrb	r3, [r3, #0]
 800437a:	089b      	lsrs	r3, r3, #2
 800437c:	b2db      	uxtb	r3, r3
 800437e:	f003 0301 	and.w	r3, r3, #1
 8004382:	2b00      	cmp	r3, #0
 8004384:	bf0c      	ite	eq
 8004386:	2301      	moveq	r3, #1
 8004388:	2300      	movne	r3, #0
 800438a:	b2d9      	uxtb	r1, r3
 800438c:	68fa      	ldr	r2, [r7, #12]
 800438e:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 8004392:	f361 0300 	bfi	r3, r1, #0, #1
 8004396:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a
		teleData->vcu.bspd_ok    = !((RxData[0] >> 3) & 0x01);
 800439a:	687b      	ldr	r3, [r7, #4]
 800439c:	781b      	ldrb	r3, [r3, #0]
 800439e:	08db      	lsrs	r3, r3, #3
 80043a0:	b2db      	uxtb	r3, r3
 80043a2:	f003 0301 	and.w	r3, r3, #1
 80043a6:	2b00      	cmp	r3, #0
 80043a8:	bf0c      	ite	eq
 80043aa:	2301      	moveq	r3, #1
 80043ac:	2300      	movne	r3, #0
 80043ae:	b2d9      	uxtb	r1, r3
 80043b0:	68fa      	ldr	r2, [r7, #12]
 80043b2:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 80043b6:	f361 0341 	bfi	r3, r1, #1, #1
 80043ba:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a
		teleData->vcu.sd_closed  =   (RxData[0] >> 4) & 0x01;
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	781b      	ldrb	r3, [r3, #0]
 80043c2:	091b      	lsrs	r3, r3, #4
 80043c4:	b2db      	uxtb	r3, r3
 80043c6:	f003 0301 	and.w	r3, r3, #1
 80043ca:	b2d9      	uxtb	r1, r3
 80043cc:	68fa      	ldr	r2, [r7, #12]
 80043ce:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 80043d2:	f361 0382 	bfi	r3, r1, #2, #1
 80043d6:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a

		teleData->vcu.apps1 	  = RxData[1];
 80043da:	687b      	ldr	r3, [r7, #4]
 80043dc:	3301      	adds	r3, #1
 80043de:	781b      	ldrb	r3, [r3, #0]
 80043e0:	b29a      	uxth	r2, r3
 80043e2:	68fb      	ldr	r3, [r7, #12]
 80043e4:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
		teleData->vcu.apps2 	  = RxData[2];
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	3302      	adds	r3, #2
 80043ec:	781b      	ldrb	r3, [r3, #0]
 80043ee:	b29a      	uxth	r2, r3
 80043f0:	68fb      	ldr	r3, [r7, #12]
 80043f2:	f8a3 2058 	strh.w	r2, [r3, #88]	; 0x58
		teleData->vcu.brake_front = RxData[4];
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	791a      	ldrb	r2, [r3, #4]
 80043fa:	68fb      	ldr	r3, [r7, #12]
 80043fc:	f883 204d 	strb.w	r2, [r3, #77]	; 0x4d
		teleData->vcu.brake_rear  = RxData[5];
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	795a      	ldrb	r2, [r3, #5]
 8004404:	68fb      	ldr	r3, [r7, #12]
 8004406:	f883 204e 	strb.w	r2, [r3, #78]	; 0x4e
		break;
 800440a:	e23f      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x308:
		teleData->vcu.precharge_done     = (RxData[0] >> 0) & 0x01;
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	781b      	ldrb	r3, [r3, #0]
 8004410:	f003 0301 	and.w	r3, r3, #1
 8004414:	b2d9      	uxtb	r1, r3
 8004416:	68fa      	ldr	r2, [r7, #12]
 8004418:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 800441c:	f361 03c3 	bfi	r3, r1, #3, #1
 8004420:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a
		teleData->vcu.r2d_done           = (RxData[0] >> 1) & 0x01;
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	781b      	ldrb	r3, [r3, #0]
 8004428:	085b      	lsrs	r3, r3, #1
 800442a:	b2db      	uxtb	r3, r3
 800442c:	f003 0301 	and.w	r3, r3, #1
 8004430:	b2d9      	uxtb	r1, r3
 8004432:	68fa      	ldr	r2, [r7, #12]
 8004434:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 8004438:	f361 1304 	bfi	r3, r1, #4, #1
 800443c:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a
		teleData->vcu.mission_pc_error   = (RxData[1] >> 0) & 0x01;
 8004440:	687b      	ldr	r3, [r7, #4]
 8004442:	3301      	adds	r3, #1
 8004444:	781b      	ldrb	r3, [r3, #0]
 8004446:	f003 0301 	and.w	r3, r3, #1
 800444a:	b2d9      	uxtb	r1, r3
 800444c:	68fa      	ldr	r2, [r7, #12]
 800444e:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 8004452:	f361 1345 	bfi	r3, r1, #5, #1
 8004456:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a
		teleData->vcu.air_m_error        = (RxData[1] >> 1) & 0x01;
 800445a:	687b      	ldr	r3, [r7, #4]
 800445c:	3301      	adds	r3, #1
 800445e:	781b      	ldrb	r3, [r3, #0]
 8004460:	085b      	lsrs	r3, r3, #1
 8004462:	b2db      	uxtb	r3, r3
 8004464:	f003 0301 	and.w	r3, r3, #1
 8004468:	b2d9      	uxtb	r1, r3
 800446a:	68fa      	ldr	r2, [r7, #12]
 800446c:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 8004470:	f361 1386 	bfi	r3, r1, #6, #1
 8004474:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a
		teleData->vcu.air_p_error        = (RxData[1] >> 2) & 0x01;
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	3301      	adds	r3, #1
 800447c:	781b      	ldrb	r3, [r3, #0]
 800447e:	089b      	lsrs	r3, r3, #2
 8004480:	b2db      	uxtb	r3, r3
 8004482:	f003 0301 	and.w	r3, r3, #1
 8004486:	b2d9      	uxtb	r1, r3
 8004488:	68fa      	ldr	r2, [r7, #12]
 800448a:	f892 304a 	ldrb.w	r3, [r2, #74]	; 0x4a
 800448e:	f361 13c7 	bfi	r3, r1, #7, #1
 8004492:	f882 304a 	strb.w	r3, [r2, #74]	; 0x4a
		teleData->vcu.pc_pressed_error   = (RxData[1] >> 3) & 0x01;
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	3301      	adds	r3, #1
 800449a:	781b      	ldrb	r3, [r3, #0]
 800449c:	08db      	lsrs	r3, r3, #3
 800449e:	b2db      	uxtb	r3, r3
 80044a0:	f003 0301 	and.w	r3, r3, #1
 80044a4:	b2d9      	uxtb	r1, r3
 80044a6:	68fa      	ldr	r2, [r7, #12]
 80044a8:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 80044ac:	f361 0300 	bfi	r3, r1, #0, #1
 80044b0:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
		teleData->vcu.imd_ams_bspd_error = (RxData[1] >> 4) & 0x01;
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	3301      	adds	r3, #1
 80044b8:	781b      	ldrb	r3, [r3, #0]
 80044ba:	091b      	lsrs	r3, r3, #4
 80044bc:	b2db      	uxtb	r3, r3
 80044be:	f003 0301 	and.w	r3, r3, #1
 80044c2:	b2d9      	uxtb	r1, r3
 80044c4:	68fa      	ldr	r2, [r7, #12]
 80044c6:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 80044ca:	f361 0341 	bfi	r3, r1, #1, #1
 80044ce:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
		teleData->vcu.airs_opened_error  = (RxData[1] >> 5) & 0x01;
 80044d2:	687b      	ldr	r3, [r7, #4]
 80044d4:	3301      	adds	r3, #1
 80044d6:	781b      	ldrb	r3, [r3, #0]
 80044d8:	095b      	lsrs	r3, r3, #5
 80044da:	b2db      	uxtb	r3, r3
 80044dc:	f003 0301 	and.w	r3, r3, #1
 80044e0:	b2d9      	uxtb	r1, r3
 80044e2:	68fa      	ldr	r2, [r7, #12]
 80044e4:	f892 304b 	ldrb.w	r3, [r2, #75]	; 0x4b
 80044e8:	f361 0382 	bfi	r3, r1, #2, #1
 80044ec:	f882 304b 	strb.w	r3, [r2, #75]	; 0x4b
		break;
 80044f0:	e1cc      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x309:
		teleData->dash.r2d_pressed  = (RxData[0] >> 0) & 0x01;
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	781b      	ldrb	r3, [r3, #0]
 80044f6:	f003 0301 	and.w	r3, r3, #1
 80044fa:	b2d9      	uxtb	r1, r3
 80044fc:	68fa      	ldr	r2, [r7, #12]
 80044fe:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 8004502:	f361 0300 	bfi	r3, r1, #0, #1
 8004506:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		teleData->dash.pc_combo     = (RxData[0] >> 5) & 0x01;
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	781b      	ldrb	r3, [r3, #0]
 800450e:	095b      	lsrs	r3, r3, #5
 8004510:	b2db      	uxtb	r3, r3
 8004512:	f003 0301 	and.w	r3, r3, #1
 8004516:	b2d9      	uxtb	r1, r3
 8004518:	68fa      	ldr	r2, [r7, #12]
 800451a:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 800451e:	f361 1304 	bfi	r3, r1, #4, #1
 8004522:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		break;
 8004526:	e1b1      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x310:
		teleData->dash.mission 		  =  RxData[0]       & 0x7F; // Excude the mission lock bit
 8004528:	687b      	ldr	r3, [r7, #4]
 800452a:	781b      	ldrb	r3, [r3, #0]
 800452c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004530:	b2da      	uxtb	r2, r3
 8004532:	68fb      	ldr	r3, [r7, #12]
 8004534:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
		teleData->dash.mission_locked = (RxData[0] >> 7) & 0x01;
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	781b      	ldrb	r3, [r3, #0]
 800453c:	09db      	lsrs	r3, r3, #7
 800453e:	b2db      	uxtb	r3, r3
 8004540:	f003 0301 	and.w	r3, r3, #1
 8004544:	b2d9      	uxtb	r1, r3
 8004546:	68fa      	ldr	r2, [r7, #12]
 8004548:	f892 3063 	ldrb.w	r3, [r2, #99]	; 0x63
 800454c:	f361 0300 	bfi	r3, r1, #0, #1
 8004550:	f882 3063 	strb.w	r3, [r2, #99]	; 0x63
		break;
 8004554:	e19a      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x311:
		teleData->pdu.max_cell_voltage = (RxData[0] << 8) | RxData[1];
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	781b      	ldrb	r3, [r3, #0]
 800455a:	021b      	lsls	r3, r3, #8
 800455c:	b21a      	sxth	r2, r3
 800455e:	687b      	ldr	r3, [r7, #4]
 8004560:	3301      	adds	r3, #1
 8004562:	781b      	ldrb	r3, [r3, #0]
 8004564:	b21b      	sxth	r3, r3
 8004566:	4313      	orrs	r3, r2
 8004568:	b21b      	sxth	r3, r3
 800456a:	b29a      	uxth	r2, r3
 800456c:	68fb      	ldr	r3, [r7, #12]
 800456e:	859a      	strh	r2, [r3, #44]	; 0x2c
		teleData->pdu.min_cell_voltage = (RxData[2] << 8) | RxData[3];
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	3302      	adds	r3, #2
 8004574:	781b      	ldrb	r3, [r3, #0]
 8004576:	021b      	lsls	r3, r3, #8
 8004578:	b21a      	sxth	r2, r3
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	3303      	adds	r3, #3
 800457e:	781b      	ldrb	r3, [r3, #0]
 8004580:	b21b      	sxth	r3, r3
 8004582:	4313      	orrs	r3, r2
 8004584:	b21b      	sxth	r3, r3
 8004586:	b29a      	uxth	r2, r3
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	85da      	strh	r2, [r3, #46]	; 0x2e
		teleData->pdu.max_cell_temp    = RxData[4];
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	791a      	ldrb	r2, [r3, #4]
 8004590:	68fb      	ldr	r3, [r7, #12]
 8004592:	f883 202b 	strb.w	r2, [r3, #43]	; 0x2b
		teleData->pdu.tdk1_current 		  = (RxData[6] << 8) | RxData[7];
 8004596:	687b      	ldr	r3, [r7, #4]
 8004598:	3306      	adds	r3, #6
 800459a:	781b      	ldrb	r3, [r3, #0]
 800459c:	021b      	lsls	r3, r3, #8
 800459e:	b21a      	sxth	r2, r3
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	3307      	adds	r3, #7
 80045a4:	781b      	ldrb	r3, [r3, #0]
 80045a6:	b21b      	sxth	r3, r3
 80045a8:	4313      	orrs	r3, r2
 80045aa:	b21b      	sxth	r3, r3
 80045ac:	b29a      	uxth	r2, r3
 80045ae:	68fb      	ldr	r3, [r7, #12]
 80045b0:	861a      	strh	r2, [r3, #48]	; 0x30
		break;
 80045b2:	e16b      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x312:
		teleData->pdu.tdk2_current = (RxData[0] << 8) | RxData[1];
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	781b      	ldrb	r3, [r3, #0]
 80045b8:	021b      	lsls	r3, r3, #8
 80045ba:	b21a      	sxth	r2, r3
 80045bc:	687b      	ldr	r3, [r7, #4]
 80045be:	3301      	adds	r3, #1
 80045c0:	781b      	ldrb	r3, [r3, #0]
 80045c2:	b21b      	sxth	r3, r3
 80045c4:	4313      	orrs	r3, r2
 80045c6:	b21b      	sxth	r3, r3
 80045c8:	b29a      	uxth	r2, r3
 80045ca:	68fb      	ldr	r3, [r7, #12]
 80045cc:	865a      	strh	r2, [r3, #50]	; 0x32
		teleData->pdu.wh_consumed  = (RxData[2] << 8) | RxData[3];
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	3302      	adds	r3, #2
 80045d2:	781b      	ldrb	r3, [r3, #0]
 80045d4:	021b      	lsls	r3, r3, #8
 80045d6:	b21a      	sxth	r2, r3
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	3303      	adds	r3, #3
 80045dc:	781b      	ldrb	r3, [r3, #0]
 80045de:	b21b      	sxth	r3, r3
 80045e0:	4313      	orrs	r3, r2
 80045e2:	b21b      	sxth	r3, r3
 80045e4:	b29a      	uxth	r2, r3
 80045e6:	68fb      	ldr	r3, [r7, #12]
 80045e8:	869a      	strh	r2, [r3, #52]	; 0x34

		teleData->pdu.undervoltage = (RxData[4] >> 0) & 0x01;
 80045ea:	687b      	ldr	r3, [r7, #4]
 80045ec:	3304      	adds	r3, #4
 80045ee:	781b      	ldrb	r3, [r3, #0]
 80045f0:	f003 0301 	and.w	r3, r3, #1
 80045f4:	b2d9      	uxtb	r1, r3
 80045f6:	68fa      	ldr	r2, [r7, #12]
 80045f8:	f892 302a 	ldrb.w	r3, [r2, #42]	; 0x2a
 80045fc:	f361 0300 	bfi	r3, r1, #0, #1
 8004600:	f882 302a 	strb.w	r3, [r2, #42]	; 0x2a
		teleData->pdu.overvoltage  = (RxData[4] >> 1) & 0x01;
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	3304      	adds	r3, #4
 8004608:	781b      	ldrb	r3, [r3, #0]
 800460a:	085b      	lsrs	r3, r3, #1
 800460c:	b2db      	uxtb	r3, r3
 800460e:	f003 0301 	and.w	r3, r3, #1
 8004612:	b2d9      	uxtb	r1, r3
 8004614:	68fa      	ldr	r2, [r7, #12]
 8004616:	f892 302a 	ldrb.w	r3, [r2, #42]	; 0x2a
 800461a:	f361 0341 	bfi	r3, r1, #1, #1
 800461e:	f882 302a 	strb.w	r3, [r2, #42]	; 0x2a
		teleData->pdu.overtemp     = (RxData[4] >> 2) & 0x01;
 8004622:	687b      	ldr	r3, [r7, #4]
 8004624:	3304      	adds	r3, #4
 8004626:	781b      	ldrb	r3, [r3, #0]
 8004628:	089b      	lsrs	r3, r3, #2
 800462a:	b2db      	uxtb	r3, r3
 800462c:	f003 0301 	and.w	r3, r3, #1
 8004630:	b2d9      	uxtb	r1, r3
 8004632:	68fa      	ldr	r2, [r7, #12]
 8004634:	f892 302a 	ldrb.w	r3, [r2, #42]	; 0x2a
 8004638:	f361 0382 	bfi	r3, r1, #2, #1
 800463c:	f882 302a 	strb.w	r3, [r2, #42]	; 0x2a
		teleData->pdu.overcurrent  = (RxData[4] >> 3) & 0x01;
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	3304      	adds	r3, #4
 8004644:	781b      	ldrb	r3, [r3, #0]
 8004646:	08db      	lsrs	r3, r3, #3
 8004648:	b2db      	uxtb	r3, r3
 800464a:	f003 0301 	and.w	r3, r3, #1
 800464e:	b2d9      	uxtb	r1, r3
 8004650:	68fa      	ldr	r2, [r7, #12]
 8004652:	f892 302a 	ldrb.w	r3, [r2, #42]	; 0x2a
 8004656:	f361 03c3 	bfi	r3, r1, #3, #1
 800465a:	f882 302a 	strb.w	r3, [r2, #42]	; 0x2a
		teleData->pdu.dac1_enabled = (RxData[4] >> 4) & 0x01;
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	3304      	adds	r3, #4
 8004662:	781b      	ldrb	r3, [r3, #0]
 8004664:	091b      	lsrs	r3, r3, #4
 8004666:	b2db      	uxtb	r3, r3
 8004668:	f003 0301 	and.w	r3, r3, #1
 800466c:	b2d9      	uxtb	r1, r3
 800466e:	68fa      	ldr	r2, [r7, #12]
 8004670:	f892 302a 	ldrb.w	r3, [r2, #42]	; 0x2a
 8004674:	f361 1304 	bfi	r3, r1, #4, #1
 8004678:	f882 302a 	strb.w	r3, [r2, #42]	; 0x2a
		teleData->pdu.dac2_enabled = (RxData[4] >> 5) & 0x01;
 800467c:	687b      	ldr	r3, [r7, #4]
 800467e:	3304      	adds	r3, #4
 8004680:	781b      	ldrb	r3, [r3, #0]
 8004682:	095b      	lsrs	r3, r3, #5
 8004684:	b2db      	uxtb	r3, r3
 8004686:	f003 0301 	and.w	r3, r3, #1
 800468a:	b2d9      	uxtb	r1, r3
 800468c:	68fa      	ldr	r2, [r7, #12]
 800468e:	f892 302a 	ldrb.w	r3, [r2, #42]	; 0x2a
 8004692:	f361 1345 	bfi	r3, r1, #5, #1
 8004696:	f882 302a 	strb.w	r3, [r2, #42]	; 0x2a
		teleData->pdu.pi_enabled   = (RxData[4] >> 6) & 0x01;
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	3304      	adds	r3, #4
 800469e:	781b      	ldrb	r3, [r3, #0]
 80046a0:	099b      	lsrs	r3, r3, #6
 80046a2:	b2db      	uxtb	r3, r3
 80046a4:	f003 0301 	and.w	r3, r3, #1
 80046a8:	b2d9      	uxtb	r1, r3
 80046aa:	68fa      	ldr	r2, [r7, #12]
 80046ac:	f892 302a 	ldrb.w	r3, [r2, #42]	; 0x2a
 80046b0:	f361 1386 	bfi	r3, r1, #6, #1
 80046b4:	f882 302a 	strb.w	r3, [r2, #42]	; 0x2a

		teleData->pdu.distribution_ratio = (RxData[5] << 8) | RxData[6];
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	3305      	adds	r3, #5
 80046bc:	781b      	ldrb	r3, [r3, #0]
 80046be:	021b      	lsls	r3, r3, #8
 80046c0:	b21a      	sxth	r2, r3
 80046c2:	687b      	ldr	r3, [r7, #4]
 80046c4:	3306      	adds	r3, #6
 80046c6:	781b      	ldrb	r3, [r3, #0]
 80046c8:	b21b      	sxth	r3, r3
 80046ca:	4313      	orrs	r3, r2
 80046cc:	b21b      	sxth	r3, r3
 80046ce:	b29a      	uxth	r2, r3
 80046d0:	68fb      	ldr	r3, [r7, #12]
 80046d2:	86da      	strh	r2, [r3, #54]	; 0x36
		break;
 80046d4:	e0da      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x313:
		teleData->dash.power_limiter =  RxData[0];
 80046d6:	687b      	ldr	r3, [r7, #4]
 80046d8:	781a      	ldrb	r2, [r3, #0]
 80046da:	68fb      	ldr	r3, [r7, #12]
 80046dc:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
		teleData->dash.traction_def  =  RxData[1];
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	785a      	ldrb	r2, [r3, #1]
 80046e4:	68fb      	ldr	r3, [r7, #12]
 80046e6:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65

		teleData->dash.aux2_pressed       = (RxData[2] >> 0) & 0x01;
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	3302      	adds	r3, #2
 80046ee:	781b      	ldrb	r3, [r3, #0]
 80046f0:	f003 0301 	and.w	r3, r3, #1
 80046f4:	b2d9      	uxtb	r1, r3
 80046f6:	68fa      	ldr	r2, [r7, #12]
 80046f8:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 80046fc:	f361 0341 	bfi	r3, r1, #1, #1
 8004700:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		teleData->dash.regen_on           = (RxData[2] >> 1) & 0x01;
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	3302      	adds	r3, #2
 8004708:	781b      	ldrb	r3, [r3, #0]
 800470a:	085b      	lsrs	r3, r3, #1
 800470c:	b2db      	uxtb	r3, r3
 800470e:	f003 0301 	and.w	r3, r3, #1
 8004712:	b2d9      	uxtb	r1, r3
 8004714:	68fa      	ldr	r2, [r7, #12]
 8004716:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 800471a:	f361 0382 	bfi	r3, r1, #2, #1
 800471e:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		teleData->dash.aero_fans_on       = (RxData[2] >> 2) & 0x01;
 8004722:	687b      	ldr	r3, [r7, #4]
 8004724:	3302      	adds	r3, #2
 8004726:	781b      	ldrb	r3, [r3, #0]
 8004728:	089b      	lsrs	r3, r3, #2
 800472a:	b2db      	uxtb	r3, r3
 800472c:	f003 0301 	and.w	r3, r3, #1
 8004730:	b2d9      	uxtb	r1, r3
 8004732:	68fa      	ldr	r2, [r7, #12]
 8004734:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 8004738:	f361 03c3 	bfi	r3, r1, #3, #1
 800473c:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		teleData->dash.cockpit_sd_closed  = (RxData[2] >> 3) & 0x01;
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	3302      	adds	r3, #2
 8004744:	781b      	ldrb	r3, [r3, #0]
 8004746:	08db      	lsrs	r3, r3, #3
 8004748:	b2db      	uxtb	r3, r3
 800474a:	f003 0301 	and.w	r3, r3, #1
 800474e:	b2d9      	uxtb	r1, r3
 8004750:	68fa      	ldr	r2, [r7, #12]
 8004752:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 8004756:	f361 1345 	bfi	r3, r1, #5, #1
 800475a:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		teleData->dash.bots_sd_closed     = (RxData[2] >> 4) & 0x01;
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	3302      	adds	r3, #2
 8004762:	781b      	ldrb	r3, [r3, #0]
 8004764:	091b      	lsrs	r3, r3, #4
 8004766:	b2db      	uxtb	r3, r3
 8004768:	f003 0301 	and.w	r3, r3, #1
 800476c:	b2d9      	uxtb	r1, r3
 800476e:	68fa      	ldr	r2, [r7, #12]
 8004770:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 8004774:	f361 1386 	bfi	r3, r1, #6, #1
 8004778:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		teleData->dash.inertia_sd_closed  = (RxData[2] >> 5) & 0x01;
 800477c:	687b      	ldr	r3, [r7, #4]
 800477e:	3302      	adds	r3, #2
 8004780:	781b      	ldrb	r3, [r3, #0]
 8004782:	095b      	lsrs	r3, r3, #5
 8004784:	b2db      	uxtb	r3, r3
 8004786:	f003 0301 	and.w	r3, r3, #1
 800478a:	b2d9      	uxtb	r1, r3
 800478c:	68fa      	ldr	r2, [r7, #12]
 800478e:	f892 3062 	ldrb.w	r3, [r2, #98]	; 0x62
 8004792:	f361 13c7 	bfi	r3, r1, #7, #1
 8004796:	f882 3062 	strb.w	r3, [r2, #98]	; 0x62
		break;
 800479a:	e077      	b.n	800488c <process_can1_rx_msg+0xbd0>

	case 0x403:
		teleData->asb.vcu_alive  = !(RxData[0] == 0);
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	781b      	ldrb	r3, [r3, #0]
 80047a0:	2b00      	cmp	r3, #0
 80047a2:	bf14      	ite	ne
 80047a4:	2301      	movne	r3, #1
 80047a6:	2300      	moveq	r3, #0
 80047a8:	b2d9      	uxtb	r1, r3
 80047aa:	68fa      	ldr	r2, [r7, #12]
 80047ac:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 80047b0:	f361 1386 	bfi	r3, r1, #6, #1
 80047b4:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		teleData->asb.accu_alive = !(RxData[1] == 0);
 80047b8:	687b      	ldr	r3, [r7, #4]
 80047ba:	3301      	adds	r3, #1
 80047bc:	781b      	ldrb	r3, [r3, #0]
 80047be:	2b00      	cmp	r3, #0
 80047c0:	bf14      	ite	ne
 80047c2:	2301      	movne	r3, #1
 80047c4:	2300      	moveq	r3, #0
 80047c6:	b2d9      	uxtb	r1, r3
 80047c8:	68fa      	ldr	r2, [r7, #12]
 80047ca:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 80047ce:	f361 13c7 	bfi	r3, r1, #7, #1
 80047d2:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		break;
 80047d6:	e059      	b.n	800488c <process_can1_rx_msg+0xbd0>
	case 0x404:

		/* Manual Errors */
		teleData->asb.manual_begin							 = (RxData[5] >> 0) & 0x01;
 80047d8:	687b      	ldr	r3, [r7, #4]
 80047da:	3305      	adds	r3, #5
 80047dc:	781b      	ldrb	r3, [r3, #0]
 80047de:	f003 0301 	and.w	r3, r3, #1
 80047e2:	b2d9      	uxtb	r1, r3
 80047e4:	68fa      	ldr	r2, [r7, #12]
 80047e6:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 80047ea:	f361 0300 	bfi	r3, r1, #0, #1
 80047ee:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		teleData->asb.manual_asms_off						 = (RxData[5] >> 1) & 0x01;
 80047f2:	687b      	ldr	r3, [r7, #4]
 80047f4:	3305      	adds	r3, #5
 80047f6:	781b      	ldrb	r3, [r3, #0]
 80047f8:	085b      	lsrs	r3, r3, #1
 80047fa:	b2db      	uxtb	r3, r3
 80047fc:	f003 0301 	and.w	r3, r3, #1
 8004800:	b2d9      	uxtb	r1, r3
 8004802:	68fa      	ldr	r2, [r7, #12]
 8004804:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 8004808:	f361 0341 	bfi	r3, r1, #1, #1
 800480c:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		teleData->asb.manual_mission_error					 = (RxData[5] >> 4) & 0x01;
 8004810:	687b      	ldr	r3, [r7, #4]
 8004812:	3305      	adds	r3, #5
 8004814:	781b      	ldrb	r3, [r3, #0]
 8004816:	091b      	lsrs	r3, r3, #4
 8004818:	b2db      	uxtb	r3, r3
 800481a:	f003 0301 	and.w	r3, r3, #1
 800481e:	b2d9      	uxtb	r1, r3
 8004820:	68fa      	ldr	r2, [r7, #12]
 8004822:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 8004826:	f361 0382 	bfi	r3, r1, #2, #1
 800482a:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		teleData->asb.manual_asms_off_error 				 = (RxData[5] >> 5) & 0x01;
 800482e:	687b      	ldr	r3, [r7, #4]
 8004830:	3305      	adds	r3, #5
 8004832:	781b      	ldrb	r3, [r3, #0]
 8004834:	095b      	lsrs	r3, r3, #5
 8004836:	b2db      	uxtb	r3, r3
 8004838:	f003 0301 	and.w	r3, r3, #1
 800483c:	b2d9      	uxtb	r1, r3
 800483e:	68fa      	ldr	r2, [r7, #12]
 8004840:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 8004844:	f361 03c3 	bfi	r3, r1, #3, #1
 8004848:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		teleData->asb.right_sd_closed = (RxData[6] >> 2) & 0x01;
 800484c:	687b      	ldr	r3, [r7, #4]
 800484e:	3306      	adds	r3, #6
 8004850:	781b      	ldrb	r3, [r3, #0]
 8004852:	089b      	lsrs	r3, r3, #2
 8004854:	b2db      	uxtb	r3, r3
 8004856:	f003 0301 	and.w	r3, r3, #1
 800485a:	b2d9      	uxtb	r1, r3
 800485c:	68fa      	ldr	r2, [r7, #12]
 800485e:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 8004862:	f361 1304 	bfi	r3, r1, #4, #1
 8004866:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		teleData->asb.left_sd_closed  = (RxData[6] >> 3) & 0x01;
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	3306      	adds	r3, #6
 800486e:	781b      	ldrb	r3, [r3, #0]
 8004870:	08db      	lsrs	r3, r3, #3
 8004872:	b2db      	uxtb	r3, r3
 8004874:	f003 0301 	and.w	r3, r3, #1
 8004878:	b2d9      	uxtb	r1, r3
 800487a:	68fa      	ldr	r2, [r7, #12]
 800487c:	f892 3038 	ldrb.w	r3, [r2, #56]	; 0x38
 8004880:	f361 1345 	bfi	r3, r1, #5, #1
 8004884:	f882 3038 	strb.w	r3, [r2, #56]	; 0x38
		break;
 8004888:	e000      	b.n	800488c <process_can1_rx_msg+0xbd0>

	default:
		break;
 800488a:	bf00      	nop
	}
}
 800488c:	bf00      	nop
 800488e:	3714      	adds	r7, #20
 8004890:	46bd      	mov	sp, r7
 8004892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004896:	4770      	bx	lr

08004898 <process_can2_rx_msg>:


/* Sensory CAN bus */
void process_can2_rx_msg(TelemetryData_t* teleData, uint32_t can_id, uint8_t* RxData)
{
 8004898:	b480      	push	{r7}
 800489a:	b085      	sub	sp, #20
 800489c:	af00      	add	r7, sp, #0
 800489e:	60f8      	str	r0, [r7, #12]
 80048a0:	60b9      	str	r1, [r7, #8]
 80048a2:	607a      	str	r2, [r7, #4]
	switch(can_id)
 80048a4:	68bb      	ldr	r3, [r7, #8]
 80048a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80048aa:	f000 8154 	beq.w	8004b56 <process_can2_rx_msg+0x2be>
 80048ae:	68bb      	ldr	r3, [r7, #8]
 80048b0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80048b4:	f0c0 81aa 	bcc.w	8004c0c <process_can2_rx_msg+0x374>
 80048b8:	68bb      	ldr	r3, [r7, #8]
 80048ba:	f240 42e3 	movw	r2, #1251	; 0x4e3
 80048be:	4293      	cmp	r3, r2
 80048c0:	f200 81a4 	bhi.w	8004c0c <process_can2_rx_msg+0x374>
 80048c4:	68bb      	ldr	r3, [r7, #8]
 80048c6:	f5b3 6f9a 	cmp.w	r3, #1232	; 0x4d0
 80048ca:	f0c0 819f 	bcc.w	8004c0c <process_can2_rx_msg+0x374>
 80048ce:	68bb      	ldr	r3, [r7, #8]
 80048d0:	f5a3 639a 	sub.w	r3, r3, #1232	; 0x4d0
 80048d4:	2b13      	cmp	r3, #19
 80048d6:	f200 8199 	bhi.w	8004c0c <process_can2_rx_msg+0x374>
 80048da:	a201      	add	r2, pc, #4	; (adr r2, 80048e0 <process_can2_rx_msg+0x48>)
 80048dc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80048e0:	08004931 	.word	0x08004931
 80048e4:	08004bb1 	.word	0x08004bb1
 80048e8:	08004c0d 	.word	0x08004c0d
 80048ec:	08004c0d 	.word	0x08004c0d
 80048f0:	08004c0d 	.word	0x08004c0d
 80048f4:	08004c0d 	.word	0x08004c0d
 80048f8:	08004c0d 	.word	0x08004c0d
 80048fc:	08004c0d 	.word	0x08004c0d
 8004900:	08004c0d 	.word	0x08004c0d
 8004904:	08004c0d 	.word	0x08004c0d
 8004908:	08004c0d 	.word	0x08004c0d
 800490c:	08004c0d 	.word	0x08004c0d
 8004910:	08004c0d 	.word	0x08004c0d
 8004914:	08004c0d 	.word	0x08004c0d
 8004918:	08004c0d 	.word	0x08004c0d
 800491c:	08004c0d 	.word	0x08004c0d
 8004920:	08004a07 	.word	0x08004a07
 8004924:	08004a5b 	.word	0x08004a5b
 8004928:	08004aaf 	.word	0x08004aaf
 800492c:	08004b03 	.word	0x08004b03
	{
	case 0x4D0:

		teleData->ccu.water_temp0    = RxData[0];
 8004930:	687b      	ldr	r3, [r7, #4]
 8004932:	781a      	ldrb	r2, [r3, #0]
 8004934:	68fb      	ldr	r3, [r7, #12]
 8004936:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
		teleData->ccu.water_temp1    = RxData[1];
 800493a:	687b      	ldr	r3, [r7, #4]
 800493c:	785a      	ldrb	r2, [r3, #1]
 800493e:	68fb      	ldr	r3, [r7, #12]
 8004940:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
		teleData->ccu.cooling_fan_on = RxData[2];
 8004944:	687b      	ldr	r3, [r7, #4]
 8004946:	3302      	adds	r3, #2
 8004948:	781b      	ldrb	r3, [r3, #0]
 800494a:	f003 0301 	and.w	r3, r3, #1
 800494e:	b2d9      	uxtb	r1, r3
 8004950:	68fa      	ldr	r2, [r7, #12]
 8004952:	f892 3068 	ldrb.w	r3, [r2, #104]	; 0x68
 8004956:	f361 1345 	bfi	r3, r1, #5, #1
 800495a:	f882 3068 	strb.w	r3, [r2, #104]	; 0x68

		teleData->ccu.pumps_on					= (RxData[3] >> 0) & 0x01;
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	3303      	adds	r3, #3
 8004962:	781b      	ldrb	r3, [r3, #0]
 8004964:	f003 0301 	and.w	r3, r3, #1
 8004968:	b2d9      	uxtb	r1, r3
 800496a:	68fa      	ldr	r2, [r7, #12]
 800496c:	f892 3068 	ldrb.w	r3, [r2, #104]	; 0x68
 8004970:	f361 0300 	bfi	r3, r1, #0, #1
 8004974:	f882 3068 	strb.w	r3, [r2, #104]	; 0x68
		teleData->ccu.motor_temp_too_high 		= (RxData[3] >> 1) & 0x01;
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	3303      	adds	r3, #3
 800497c:	781b      	ldrb	r3, [r3, #0]
 800497e:	085b      	lsrs	r3, r3, #1
 8004980:	b2db      	uxtb	r3, r3
 8004982:	f003 0301 	and.w	r3, r3, #1
 8004986:	b2d9      	uxtb	r1, r3
 8004988:	68fa      	ldr	r2, [r7, #12]
 800498a:	f892 3068 	ldrb.w	r3, [r2, #104]	; 0x68
 800498e:	f361 0341 	bfi	r3, r1, #1, #1
 8004992:	f882 3068 	strb.w	r3, [r2, #104]	; 0x68
		teleData->ccu.device_temp_too_high 		= (RxData[3] >> 2) & 0x01;
 8004996:	687b      	ldr	r3, [r7, #4]
 8004998:	3303      	adds	r3, #3
 800499a:	781b      	ldrb	r3, [r3, #0]
 800499c:	089b      	lsrs	r3, r3, #2
 800499e:	b2db      	uxtb	r3, r3
 80049a0:	f003 0301 	and.w	r3, r3, #1
 80049a4:	b2d9      	uxtb	r1, r3
 80049a6:	68fa      	ldr	r2, [r7, #12]
 80049a8:	f892 3068 	ldrb.w	r3, [r2, #104]	; 0x68
 80049ac:	f361 0382 	bfi	r3, r1, #2, #1
 80049b0:	f882 3068 	strb.w	r3, [r2, #104]	; 0x68
		teleData->ccu.motor_temp_limit_reached  = (RxData[3] >> 3) & 0x01;
 80049b4:	687b      	ldr	r3, [r7, #4]
 80049b6:	3303      	adds	r3, #3
 80049b8:	781b      	ldrb	r3, [r3, #0]
 80049ba:	08db      	lsrs	r3, r3, #3
 80049bc:	b2db      	uxtb	r3, r3
 80049be:	f003 0301 	and.w	r3, r3, #1
 80049c2:	b2d9      	uxtb	r1, r3
 80049c4:	68fa      	ldr	r2, [r7, #12]
 80049c6:	f892 3068 	ldrb.w	r3, [r2, #104]	; 0x68
 80049ca:	f361 03c3 	bfi	r3, r1, #3, #1
 80049ce:	f882 3068 	strb.w	r3, [r2, #104]	; 0x68
		teleData->ccu.device_temp_limit_reached = (RxData[3] >> 4) & 0x01;
 80049d2:	687b      	ldr	r3, [r7, #4]
 80049d4:	3303      	adds	r3, #3
 80049d6:	781b      	ldrb	r3, [r3, #0]
 80049d8:	091b      	lsrs	r3, r3, #4
 80049da:	b2db      	uxtb	r3, r3
 80049dc:	f003 0301 	and.w	r3, r3, #1
 80049e0:	b2d9      	uxtb	r1, r3
 80049e2:	68fa      	ldr	r2, [r7, #12]
 80049e4:	f892 3068 	ldrb.w	r3, [r2, #104]	; 0x68
 80049e8:	f361 1304 	bfi	r3, r1, #4, #1
 80049ec:	f882 3068 	strb.w	r3, [r2, #104]	; 0x68

		teleData->ccu.igbt_temp   = RxData[4];
 80049f0:	687b      	ldr	r3, [r7, #4]
 80049f2:	791a      	ldrb	r2, [r3, #4]
 80049f4:	68fb      	ldr	r3, [r7, #12]
 80049f6:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
		teleData->ccu.motor_temp  = RxData[5];
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	795a      	ldrb	r2, [r3, #5]
 80049fe:	68fb      	ldr	r3, [r7, #12]
 8004a00:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
		break;
 8004a04:	e103      	b.n	8004c0e <process_can2_rx_msg+0x376>

	case 0x4E0:
		/* Average of the 4 channels */
		teleData->ir.infrared_fl = (((RxData[0] << 8) | RxData[1]) +
 8004a06:	687b      	ldr	r3, [r7, #4]
 8004a08:	781b      	ldrb	r3, [r3, #0]
 8004a0a:	021b      	lsls	r3, r3, #8
 8004a0c:	687a      	ldr	r2, [r7, #4]
 8004a0e:	3201      	adds	r2, #1
 8004a10:	7812      	ldrb	r2, [r2, #0]
 8004a12:	431a      	orrs	r2, r3
				                    ((RxData[2] << 8) | RxData[3]) +
 8004a14:	687b      	ldr	r3, [r7, #4]
 8004a16:	3302      	adds	r3, #2
 8004a18:	781b      	ldrb	r3, [r3, #0]
 8004a1a:	021b      	lsls	r3, r3, #8
 8004a1c:	6879      	ldr	r1, [r7, #4]
 8004a1e:	3103      	adds	r1, #3
 8004a20:	7809      	ldrb	r1, [r1, #0]
 8004a22:	430b      	orrs	r3, r1
		teleData->ir.infrared_fl = (((RxData[0] << 8) | RxData[1]) +
 8004a24:	441a      	add	r2, r3
								    ((RxData[4] << 8) | RxData[5]) +
 8004a26:	687b      	ldr	r3, [r7, #4]
 8004a28:	3304      	adds	r3, #4
 8004a2a:	781b      	ldrb	r3, [r3, #0]
 8004a2c:	021b      	lsls	r3, r3, #8
 8004a2e:	6879      	ldr	r1, [r7, #4]
 8004a30:	3105      	adds	r1, #5
 8004a32:	7809      	ldrb	r1, [r1, #0]
 8004a34:	430b      	orrs	r3, r1
				                    ((RxData[2] << 8) | RxData[3]) +
 8004a36:	441a      	add	r2, r3
				                    ((RxData[6] << 8) | RxData[7])) / 4;
 8004a38:	687b      	ldr	r3, [r7, #4]
 8004a3a:	3306      	adds	r3, #6
 8004a3c:	781b      	ldrb	r3, [r3, #0]
 8004a3e:	021b      	lsls	r3, r3, #8
 8004a40:	6879      	ldr	r1, [r7, #4]
 8004a42:	3107      	adds	r1, #7
 8004a44:	7809      	ldrb	r1, [r1, #0]
 8004a46:	430b      	orrs	r3, r1
								    ((RxData[4] << 8) | RxData[5]) +
 8004a48:	4413      	add	r3, r2
				                    ((RxData[6] << 8) | RxData[7])) / 4;
 8004a4a:	2b00      	cmp	r3, #0
 8004a4c:	da00      	bge.n	8004a50 <process_can2_rx_msg+0x1b8>
 8004a4e:	3303      	adds	r3, #3
 8004a50:	109b      	asrs	r3, r3, #2
		teleData->ir.infrared_fl = (((RxData[0] << 8) | RxData[1]) +
 8004a52:	b29a      	uxth	r2, r3
 8004a54:	68fb      	ldr	r3, [r7, #12]
 8004a56:	805a      	strh	r2, [r3, #2]
		break;
 8004a58:	e0d9      	b.n	8004c0e <process_can2_rx_msg+0x376>

	case 0x4E1:
		/* Average of the 4 channels */
		teleData->ir.infrared_fr = (((RxData[0] << 8) | RxData[1]) +
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	781b      	ldrb	r3, [r3, #0]
 8004a5e:	021b      	lsls	r3, r3, #8
 8004a60:	687a      	ldr	r2, [r7, #4]
 8004a62:	3201      	adds	r2, #1
 8004a64:	7812      	ldrb	r2, [r2, #0]
 8004a66:	431a      	orrs	r2, r3
				       	   	        ((RxData[2] << 8) | RxData[3]) +
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	3302      	adds	r3, #2
 8004a6c:	781b      	ldrb	r3, [r3, #0]
 8004a6e:	021b      	lsls	r3, r3, #8
 8004a70:	6879      	ldr	r1, [r7, #4]
 8004a72:	3103      	adds	r1, #3
 8004a74:	7809      	ldrb	r1, [r1, #0]
 8004a76:	430b      	orrs	r3, r1
		teleData->ir.infrared_fr = (((RxData[0] << 8) | RxData[1]) +
 8004a78:	441a      	add	r2, r3
								    ((RxData[4] << 8) | RxData[5]) +
 8004a7a:	687b      	ldr	r3, [r7, #4]
 8004a7c:	3304      	adds	r3, #4
 8004a7e:	781b      	ldrb	r3, [r3, #0]
 8004a80:	021b      	lsls	r3, r3, #8
 8004a82:	6879      	ldr	r1, [r7, #4]
 8004a84:	3105      	adds	r1, #5
 8004a86:	7809      	ldrb	r1, [r1, #0]
 8004a88:	430b      	orrs	r3, r1
				       	   	        ((RxData[2] << 8) | RxData[3]) +
 8004a8a:	441a      	add	r2, r3
								    ((RxData[6] << 8) | RxData[7])) / 4;
 8004a8c:	687b      	ldr	r3, [r7, #4]
 8004a8e:	3306      	adds	r3, #6
 8004a90:	781b      	ldrb	r3, [r3, #0]
 8004a92:	021b      	lsls	r3, r3, #8
 8004a94:	6879      	ldr	r1, [r7, #4]
 8004a96:	3107      	adds	r1, #7
 8004a98:	7809      	ldrb	r1, [r1, #0]
 8004a9a:	430b      	orrs	r3, r1
								    ((RxData[4] << 8) | RxData[5]) +
 8004a9c:	4413      	add	r3, r2
								    ((RxData[6] << 8) | RxData[7])) / 4;
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	da00      	bge.n	8004aa4 <process_can2_rx_msg+0x20c>
 8004aa2:	3303      	adds	r3, #3
 8004aa4:	109b      	asrs	r3, r3, #2
		teleData->ir.infrared_fr = (((RxData[0] << 8) | RxData[1]) +
 8004aa6:	b29a      	uxth	r2, r3
 8004aa8:	68fb      	ldr	r3, [r7, #12]
 8004aaa:	801a      	strh	r2, [r3, #0]
		break;
 8004aac:	e0af      	b.n	8004c0e <process_can2_rx_msg+0x376>

	case 0x4E2:
		/* Average of the 4 channels */
		teleData->ir.infrared_rl = (((RxData[0] << 8) | RxData[1]) +
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	781b      	ldrb	r3, [r3, #0]
 8004ab2:	021b      	lsls	r3, r3, #8
 8004ab4:	687a      	ldr	r2, [r7, #4]
 8004ab6:	3201      	adds	r2, #1
 8004ab8:	7812      	ldrb	r2, [r2, #0]
 8004aba:	431a      	orrs	r2, r3
				       	   	        ((RxData[2] << 8) | RxData[3]) +
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	3302      	adds	r3, #2
 8004ac0:	781b      	ldrb	r3, [r3, #0]
 8004ac2:	021b      	lsls	r3, r3, #8
 8004ac4:	6879      	ldr	r1, [r7, #4]
 8004ac6:	3103      	adds	r1, #3
 8004ac8:	7809      	ldrb	r1, [r1, #0]
 8004aca:	430b      	orrs	r3, r1
		teleData->ir.infrared_rl = (((RxData[0] << 8) | RxData[1]) +
 8004acc:	441a      	add	r2, r3
								    ((RxData[4] << 8) | RxData[5]) +
 8004ace:	687b      	ldr	r3, [r7, #4]
 8004ad0:	3304      	adds	r3, #4
 8004ad2:	781b      	ldrb	r3, [r3, #0]
 8004ad4:	021b      	lsls	r3, r3, #8
 8004ad6:	6879      	ldr	r1, [r7, #4]
 8004ad8:	3105      	adds	r1, #5
 8004ada:	7809      	ldrb	r1, [r1, #0]
 8004adc:	430b      	orrs	r3, r1
				       	   	        ((RxData[2] << 8) | RxData[3]) +
 8004ade:	441a      	add	r2, r3
								    ((RxData[6] << 8) | RxData[7])) / 4;
 8004ae0:	687b      	ldr	r3, [r7, #4]
 8004ae2:	3306      	adds	r3, #6
 8004ae4:	781b      	ldrb	r3, [r3, #0]
 8004ae6:	021b      	lsls	r3, r3, #8
 8004ae8:	6879      	ldr	r1, [r7, #4]
 8004aea:	3107      	adds	r1, #7
 8004aec:	7809      	ldrb	r1, [r1, #0]
 8004aee:	430b      	orrs	r3, r1
								    ((RxData[4] << 8) | RxData[5]) +
 8004af0:	4413      	add	r3, r2
								    ((RxData[6] << 8) | RxData[7])) / 4;
 8004af2:	2b00      	cmp	r3, #0
 8004af4:	da00      	bge.n	8004af8 <process_can2_rx_msg+0x260>
 8004af6:	3303      	adds	r3, #3
 8004af8:	109b      	asrs	r3, r3, #2
		teleData->ir.infrared_rl = (((RxData[0] << 8) | RxData[1]) +
 8004afa:	b29a      	uxth	r2, r3
 8004afc:	68fb      	ldr	r3, [r7, #12]
 8004afe:	80da      	strh	r2, [r3, #6]
		break;
 8004b00:	e085      	b.n	8004c0e <process_can2_rx_msg+0x376>

	case 0x4E3:
		/* Average of the 4 channels */
		teleData->ir.infrared_rr = (((RxData[0] << 8) | RxData[1]) +
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	781b      	ldrb	r3, [r3, #0]
 8004b06:	021b      	lsls	r3, r3, #8
 8004b08:	687a      	ldr	r2, [r7, #4]
 8004b0a:	3201      	adds	r2, #1
 8004b0c:	7812      	ldrb	r2, [r2, #0]
 8004b0e:	431a      	orrs	r2, r3
				       	   	        ((RxData[2] << 8) | RxData[3]) +
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	3302      	adds	r3, #2
 8004b14:	781b      	ldrb	r3, [r3, #0]
 8004b16:	021b      	lsls	r3, r3, #8
 8004b18:	6879      	ldr	r1, [r7, #4]
 8004b1a:	3103      	adds	r1, #3
 8004b1c:	7809      	ldrb	r1, [r1, #0]
 8004b1e:	430b      	orrs	r3, r1
		teleData->ir.infrared_rr = (((RxData[0] << 8) | RxData[1]) +
 8004b20:	441a      	add	r2, r3
								    ((RxData[4] << 8) | RxData[5]) +
 8004b22:	687b      	ldr	r3, [r7, #4]
 8004b24:	3304      	adds	r3, #4
 8004b26:	781b      	ldrb	r3, [r3, #0]
 8004b28:	021b      	lsls	r3, r3, #8
 8004b2a:	6879      	ldr	r1, [r7, #4]
 8004b2c:	3105      	adds	r1, #5
 8004b2e:	7809      	ldrb	r1, [r1, #0]
 8004b30:	430b      	orrs	r3, r1
				       	   	        ((RxData[2] << 8) | RxData[3]) +
 8004b32:	441a      	add	r2, r3
								    ((RxData[6] << 8) | RxData[7])) / 4;
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	3306      	adds	r3, #6
 8004b38:	781b      	ldrb	r3, [r3, #0]
 8004b3a:	021b      	lsls	r3, r3, #8
 8004b3c:	6879      	ldr	r1, [r7, #4]
 8004b3e:	3107      	adds	r1, #7
 8004b40:	7809      	ldrb	r1, [r1, #0]
 8004b42:	430b      	orrs	r3, r1
								    ((RxData[4] << 8) | RxData[5]) +
 8004b44:	4413      	add	r3, r2
								    ((RxData[6] << 8) | RxData[7])) / 4;
 8004b46:	2b00      	cmp	r3, #0
 8004b48:	da00      	bge.n	8004b4c <process_can2_rx_msg+0x2b4>
 8004b4a:	3303      	adds	r3, #3
 8004b4c:	109b      	asrs	r3, r3, #2
		teleData->ir.infrared_rr = (((RxData[0] << 8) | RxData[1]) +
 8004b4e:	b29a      	uxth	r2, r3
 8004b50:	68fb      	ldr	r3, [r7, #12]
 8004b52:	809a      	strh	r2, [r3, #4]
		break;
 8004b54:	e05b      	b.n	8004c0e <process_can2_rx_msg+0x376>

	case 0x400:

		teleData->plex.accel_long = (RxData[0] << 8) | RxData[1];
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	781b      	ldrb	r3, [r3, #0]
 8004b5a:	021b      	lsls	r3, r3, #8
 8004b5c:	b21a      	sxth	r2, r3
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	3301      	adds	r3, #1
 8004b62:	781b      	ldrb	r3, [r3, #0]
 8004b64:	b21b      	sxth	r3, r3
 8004b66:	4313      	orrs	r3, r2
 8004b68:	b21b      	sxth	r3, r3
 8004b6a:	b29a      	uxth	r2, r3
 8004b6c:	68fb      	ldr	r3, [r7, #12]
 8004b6e:	f8a3 2072 	strh.w	r2, [r3, #114]	; 0x72
		teleData->plex.accel_lat  = (RxData[2] << 8) | RxData[3];
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	3302      	adds	r3, #2
 8004b76:	781b      	ldrb	r3, [r3, #0]
 8004b78:	021b      	lsls	r3, r3, #8
 8004b7a:	b21a      	sxth	r2, r3
 8004b7c:	687b      	ldr	r3, [r7, #4]
 8004b7e:	3303      	adds	r3, #3
 8004b80:	781b      	ldrb	r3, [r3, #0]
 8004b82:	b21b      	sxth	r3, r3
 8004b84:	4313      	orrs	r3, r2
 8004b86:	b21b      	sxth	r3, r3
 8004b88:	b29a      	uxth	r2, r3
 8004b8a:	68fb      	ldr	r3, [r7, #12]
 8004b8c:	f8a3 2074 	strh.w	r2, [r3, #116]	; 0x74
		teleData->plex.gps_speed  = (RxData[4] << 8) | RxData[5];
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	3304      	adds	r3, #4
 8004b94:	781b      	ldrb	r3, [r3, #0]
 8004b96:	021b      	lsls	r3, r3, #8
 8004b98:	b21a      	sxth	r2, r3
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	3305      	adds	r3, #5
 8004b9e:	781b      	ldrb	r3, [r3, #0]
 8004ba0:	b21b      	sxth	r3, r3
 8004ba2:	4313      	orrs	r3, r2
 8004ba4:	b21b      	sxth	r3, r3
 8004ba6:	b29a      	uxth	r2, r3
 8004ba8:	68fb      	ldr	r3, [r7, #12]
 8004baa:	f8a3 2076 	strh.w	r2, [r3, #118]	; 0x76
		break;
 8004bae:	e02e      	b.n	8004c0e <process_can2_rx_msg+0x376>

	case 0x4D1:

		teleData->ccu.linear_rl = RxData[0] * 100 + RxData[1];
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	781b      	ldrb	r3, [r3, #0]
 8004bb4:	b29b      	uxth	r3, r3
 8004bb6:	461a      	mov	r2, r3
 8004bb8:	0092      	lsls	r2, r2, #2
 8004bba:	4413      	add	r3, r2
 8004bbc:	461a      	mov	r2, r3
 8004bbe:	0091      	lsls	r1, r2, #2
 8004bc0:	461a      	mov	r2, r3
 8004bc2:	460b      	mov	r3, r1
 8004bc4:	4413      	add	r3, r2
 8004bc6:	009b      	lsls	r3, r3, #2
 8004bc8:	b29a      	uxth	r2, r3
 8004bca:	687b      	ldr	r3, [r7, #4]
 8004bcc:	3301      	adds	r3, #1
 8004bce:	781b      	ldrb	r3, [r3, #0]
 8004bd0:	b29b      	uxth	r3, r3
 8004bd2:	4413      	add	r3, r2
 8004bd4:	b29a      	uxth	r2, r3
 8004bd6:	68fb      	ldr	r3, [r7, #12]
 8004bd8:	f8a3 206e 	strh.w	r2, [r3, #110]	; 0x6e
		teleData->ccu.linear_rr = RxData[2] * 100 + RxData[3];
 8004bdc:	687b      	ldr	r3, [r7, #4]
 8004bde:	3302      	adds	r3, #2
 8004be0:	781b      	ldrb	r3, [r3, #0]
 8004be2:	b29b      	uxth	r3, r3
 8004be4:	461a      	mov	r2, r3
 8004be6:	0092      	lsls	r2, r2, #2
 8004be8:	4413      	add	r3, r2
 8004bea:	461a      	mov	r2, r3
 8004bec:	0091      	lsls	r1, r2, #2
 8004bee:	461a      	mov	r2, r3
 8004bf0:	460b      	mov	r3, r1
 8004bf2:	4413      	add	r3, r2
 8004bf4:	009b      	lsls	r3, r3, #2
 8004bf6:	b29a      	uxth	r2, r3
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	3303      	adds	r3, #3
 8004bfc:	781b      	ldrb	r3, [r3, #0]
 8004bfe:	b29b      	uxth	r3, r3
 8004c00:	4413      	add	r3, r2
 8004c02:	b29a      	uxth	r2, r3
 8004c04:	68fb      	ldr	r3, [r7, #12]
 8004c06:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70
		break;
 8004c0a:	e000      	b.n	8004c0e <process_can2_rx_msg+0x376>

	default:
		break;
 8004c0c:	bf00      	nop
	}
}
 8004c0e:	bf00      	nop
 8004c10:	3714      	adds	r7, #20
 8004c12:	46bd      	mov	sp, r7
 8004c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c18:	4770      	bx	lr
 8004c1a:	bf00      	nop

08004c1c <CreateTeleTxMsg>:



void CreateTeleTxMsg(Radio* radio, uint8_t id, TelemetryData_t* teleData)
{
 8004c1c:	b480      	push	{r7}
 8004c1e:	b085      	sub	sp, #20
 8004c20:	af00      	add	r7, sp, #0
 8004c22:	60f8      	str	r0, [r7, #12]
 8004c24:	460b      	mov	r3, r1
 8004c26:	607a      	str	r2, [r7, #4]
 8004c28:	72fb      	strb	r3, [r7, #11]
	radio->per.tx_counter++;
 8004c2a:	68fb      	ldr	r3, [r7, #12]
 8004c2c:	f8d3 3450 	ldr.w	r3, [r3, #1104]	; 0x450
 8004c30:	1c5a      	adds	r2, r3, #1
 8004c32:	68fb      	ldr	r3, [r7, #12]
 8004c34:	f8c3 2450 	str.w	r2, [r3, #1104]	; 0x450

	radio->tx_msg[0] = id;
 8004c38:	68fb      	ldr	r3, [r7, #12]
 8004c3a:	7afa      	ldrb	r2, [r7, #11]
 8004c3c:	f883 21c7 	strb.w	r2, [r3, #455]	; 0x1c7
	radio->tx_msg[1] = radio->per.tx_counter >> 24;
 8004c40:	68fb      	ldr	r3, [r7, #12]
 8004c42:	f8d3 3450 	ldr.w	r3, [r3, #1104]	; 0x450
 8004c46:	0e1b      	lsrs	r3, r3, #24
 8004c48:	b2da      	uxtb	r2, r3
 8004c4a:	68fb      	ldr	r3, [r7, #12]
 8004c4c:	f883 21c8 	strb.w	r2, [r3, #456]	; 0x1c8
	radio->tx_msg[2] = radio->per.tx_counter >> 16;
 8004c50:	68fb      	ldr	r3, [r7, #12]
 8004c52:	f8d3 3450 	ldr.w	r3, [r3, #1104]	; 0x450
 8004c56:	0c1b      	lsrs	r3, r3, #16
 8004c58:	b2da      	uxtb	r2, r3
 8004c5a:	68fb      	ldr	r3, [r7, #12]
 8004c5c:	f883 21c9 	strb.w	r2, [r3, #457]	; 0x1c9
	radio->tx_msg[3] = radio->per.tx_counter >> 8;
 8004c60:	68fb      	ldr	r3, [r7, #12]
 8004c62:	f8d3 3450 	ldr.w	r3, [r3, #1104]	; 0x450
 8004c66:	0a1b      	lsrs	r3, r3, #8
 8004c68:	b2da      	uxtb	r2, r3
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	f883 21ca 	strb.w	r2, [r3, #458]	; 0x1ca
	radio->tx_msg[4] = radio->per.tx_counter;
 8004c70:	68fb      	ldr	r3, [r7, #12]
 8004c72:	f8d3 3450 	ldr.w	r3, [r3, #1104]	; 0x450
 8004c76:	b2da      	uxtb	r2, r3
 8004c78:	68fb      	ldr	r3, [r7, #12]
 8004c7a:	f883 21cb 	strb.w	r2, [r3, #459]	; 0x1cb

	switch(id)
 8004c7e:	7afb      	ldrb	r3, [r7, #11]
 8004c80:	2b03      	cmp	r3, #3
 8004c82:	f000 8483 	beq.w	800558c <CreateTeleTxMsg+0x970>
 8004c86:	2b03      	cmp	r3, #3
 8004c88:	f300 8606 	bgt.w	8005898 <CreateTeleTxMsg+0xc7c>
 8004c8c:	2b01      	cmp	r3, #1
 8004c8e:	d004      	beq.n	8004c9a <CreateTeleTxMsg+0x7e>
 8004c90:	2b02      	cmp	r3, #2
 8004c92:	f000 82df 	beq.w	8005254 <CreateTeleTxMsg+0x638>
							(teleData->accu.air_m_state   	<< 1) |
							(teleData->accu.air_p_state   	<< 0);

		break;
	}
}
 8004c96:	f000 bdff 	b.w	8005898 <CreateTeleTxMsg+0xc7c>
		radio->tx_msg[5] = (teleData->accu.over_60v_dclink << 7) |
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	7b1b      	ldrb	r3, [r3, #12]
 8004c9e:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8004ca2:	b2db      	uxtb	r3, r3
 8004ca4:	01db      	lsls	r3, r3, #7
 8004ca6:	b25a      	sxtb	r2, r3
						   (teleData->accu.air_m_state     << 6) |
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	7b1b      	ldrb	r3, [r3, #12]
 8004cac:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8004cb0:	b2db      	uxtb	r3, r3
 8004cb2:	019b      	lsls	r3, r3, #6
		radio->tx_msg[5] = (teleData->accu.over_60v_dclink << 7) |
 8004cb4:	b25b      	sxtb	r3, r3
 8004cb6:	4313      	orrs	r3, r2
 8004cb8:	b25a      	sxtb	r2, r3
						   (teleData->accu.air_m_supp      << 5) |
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	7b1b      	ldrb	r3, [r3, #12]
 8004cbe:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8004cc2:	b2db      	uxtb	r3, r3
 8004cc4:	015b      	lsls	r3, r3, #5
						   (teleData->accu.air_m_state     << 6) |
 8004cc6:	b25b      	sxtb	r3, r3
 8004cc8:	4313      	orrs	r3, r2
 8004cca:	b25a      	sxtb	r2, r3
						   (teleData->accu.air_p_state     << 4) |
 8004ccc:	687b      	ldr	r3, [r7, #4]
 8004cce:	7b1b      	ldrb	r3, [r3, #12]
 8004cd0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8004cd4:	b2db      	uxtb	r3, r3
 8004cd6:	011b      	lsls	r3, r3, #4
						   (teleData->accu.air_m_supp      << 5) |
 8004cd8:	b25b      	sxtb	r3, r3
 8004cda:	4313      	orrs	r3, r2
 8004cdc:	b25a      	sxtb	r2, r3
						   (teleData->accu.air_p_supp      << 3) |
 8004cde:	687b      	ldr	r3, [r7, #4]
 8004ce0:	7b1b      	ldrb	r3, [r3, #12]
 8004ce2:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8004ce6:	b2db      	uxtb	r3, r3
 8004ce8:	00db      	lsls	r3, r3, #3
						   (teleData->accu.air_p_state     << 4) |
 8004cea:	b25b      	sxtb	r3, r3
 8004cec:	4313      	orrs	r3, r2
 8004cee:	b25a      	sxtb	r2, r3
						   (teleData->accu.precharge_state << 2) |
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	7b1b      	ldrb	r3, [r3, #12]
 8004cf4:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8004cf8:	b2db      	uxtb	r3, r3
 8004cfa:	009b      	lsls	r3, r3, #2
						   (teleData->accu.air_p_supp      << 3) |
 8004cfc:	b25b      	sxtb	r3, r3
 8004cfe:	4313      	orrs	r3, r2
 8004d00:	b25a      	sxtb	r2, r3
						   (teleData->accu.ts_active       << 1) |
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	7b5b      	ldrb	r3, [r3, #13]
 8004d06:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8004d0a:	b2db      	uxtb	r3, r3
 8004d0c:	005b      	lsls	r3, r3, #1
						   (teleData->accu.precharge_state << 2) |
 8004d0e:	b25b      	sxtb	r3, r3
 8004d10:	4313      	orrs	r3, r2
 8004d12:	b25a      	sxtb	r2, r3
						   (teleData->accu.vicor_overtemp  << 0);
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	7b5b      	ldrb	r3, [r3, #13]
 8004d18:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8004d1c:	b2db      	uxtb	r3, r3
 8004d1e:	b25b      	sxtb	r3, r3
						   (teleData->accu.ts_active       << 1) |
 8004d20:	4313      	orrs	r3, r2
 8004d22:	b25b      	sxtb	r3, r3
 8004d24:	b2da      	uxtb	r2, r3
		radio->tx_msg[5] = (teleData->accu.over_60v_dclink << 7) |
 8004d26:	68fb      	ldr	r3, [r7, #12]
 8004d28:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
		radio->tx_msg[6]  = teleData->accu.max_cell_temp;
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	7b9a      	ldrb	r2, [r3, #14]
 8004d30:	68fb      	ldr	r3, [r7, #12]
 8004d32:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
		radio->tx_msg[7]  = teleData->accu.min_cell_temp;
 8004d36:	687b      	ldr	r3, [r7, #4]
 8004d38:	7bda      	ldrb	r2, [r3, #15]
 8004d3a:	68fb      	ldr	r3, [r7, #12]
 8004d3c:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
		radio->tx_msg[8]  = teleData->accu.dcdc_temp;
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	7c1a      	ldrb	r2, [r3, #16]
 8004d44:	68fb      	ldr	r3, [r7, #12]
 8004d46:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
		radio->tx_msg[9]  = teleData->accu.max_humidity;
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	7c5a      	ldrb	r2, [r3, #17]
 8004d4e:	68fb      	ldr	r3, [r7, #12]
 8004d50:	f883 21d0 	strb.w	r2, [r3, #464]	; 0x1d0
		radio->tx_msg[10] = teleData->accu.bms_error_code;
 8004d54:	687b      	ldr	r3, [r7, #4]
 8004d56:	7c9a      	ldrb	r2, [r3, #18]
 8004d58:	68fb      	ldr	r3, [r7, #12]
 8004d5a:	f883 21d1 	strb.w	r2, [r3, #465]	; 0x1d1
		radio->tx_msg[11] = teleData->accu.tsac_error_code;
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	7d1a      	ldrb	r2, [r3, #20]
 8004d62:	68fb      	ldr	r3, [r7, #12]
 8004d64:	f883 21d2 	strb.w	r2, [r3, #466]	; 0x1d2
		radio->tx_msg[12] = teleData->accu.max_soc;
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	7d9a      	ldrb	r2, [r3, #22]
 8004d6c:	68fb      	ldr	r3, [r7, #12]
 8004d6e:	f883 21d3 	strb.w	r2, [r3, #467]	; 0x1d3
		radio->tx_msg[13] = teleData->accu.total_voltage_vs >> 8;
 8004d72:	687b      	ldr	r3, [r7, #4]
 8004d74:	8b9b      	ldrh	r3, [r3, #28]
 8004d76:	0a1b      	lsrs	r3, r3, #8
 8004d78:	b29b      	uxth	r3, r3
 8004d7a:	b2da      	uxtb	r2, r3
 8004d7c:	68fb      	ldr	r3, [r7, #12]
 8004d7e:	f883 21d4 	strb.w	r2, [r3, #468]	; 0x1d4
		radio->tx_msg[14] = teleData->accu.total_voltage_vs;
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	8b9b      	ldrh	r3, [r3, #28]
 8004d86:	b2da      	uxtb	r2, r3
 8004d88:	68fb      	ldr	r3, [r7, #12]
 8004d8a:	f883 21d5 	strb.w	r2, [r3, #469]	; 0x1d5
		radio->tx_msg[15] = teleData->accu.accu_current >> 8;
 8004d8e:	687b      	ldr	r3, [r7, #4]
 8004d90:	f9b3 3028 	ldrsh.w	r3, [r3, #40]	; 0x28
 8004d94:	121b      	asrs	r3, r3, #8
 8004d96:	b21b      	sxth	r3, r3
 8004d98:	b2da      	uxtb	r2, r3
 8004d9a:	68fb      	ldr	r3, [r7, #12]
 8004d9c:	f883 21d6 	strb.w	r2, [r3, #470]	; 0x1d6
		radio->tx_msg[16] = teleData->accu.accu_current;
 8004da0:	687b      	ldr	r3, [r7, #4]
 8004da2:	f9b3 3028 	ldrsh.w	r3, [r3, #40]	; 0x28
 8004da6:	b2da      	uxtb	r2, r3
 8004da8:	68fb      	ldr	r3, [r7, #12]
 8004daa:	f883 21d7 	strb.w	r2, [r3, #471]	; 0x1d7
		radio->tx_msg[17] = teleData->accu.max_cell_voltage >> 8;
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	8bdb      	ldrh	r3, [r3, #30]
 8004db2:	0a1b      	lsrs	r3, r3, #8
 8004db4:	b29b      	uxth	r3, r3
 8004db6:	b2da      	uxtb	r2, r3
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	f883 21d8 	strb.w	r2, [r3, #472]	; 0x1d8
		radio->tx_msg[18] = teleData->accu.max_cell_voltage;
 8004dbe:	687b      	ldr	r3, [r7, #4]
 8004dc0:	8bdb      	ldrh	r3, [r3, #30]
 8004dc2:	b2da      	uxtb	r2, r3
 8004dc4:	68fb      	ldr	r3, [r7, #12]
 8004dc6:	f883 21d9 	strb.w	r2, [r3, #473]	; 0x1d9
		radio->tx_msg[19] = teleData->accu.min_cell_voltage >> 8;
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	8c1b      	ldrh	r3, [r3, #32]
 8004dce:	0a1b      	lsrs	r3, r3, #8
 8004dd0:	b29b      	uxth	r3, r3
 8004dd2:	b2da      	uxtb	r2, r3
 8004dd4:	68fb      	ldr	r3, [r7, #12]
 8004dd6:	f883 21da 	strb.w	r2, [r3, #474]	; 0x1da
		radio->tx_msg[20] = teleData->accu.min_cell_voltage;
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	8c1b      	ldrh	r3, [r3, #32]
 8004dde:	b2da      	uxtb	r2, r3
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	f883 21db 	strb.w	r2, [r3, #475]	; 0x1db
		radio->tx_msg[21] = teleData->accu.wh_consumed >> 8;
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004dec:	121b      	asrs	r3, r3, #8
 8004dee:	b21b      	sxth	r3, r3
 8004df0:	b2da      	uxtb	r2, r3
 8004df2:	68fb      	ldr	r3, [r7, #12]
 8004df4:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
		radio->tx_msg[22] = teleData->accu.wh_consumed;
 8004df8:	687b      	ldr	r3, [r7, #4]
 8004dfa:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	; 0x24
 8004dfe:	b2da      	uxtb	r2, r3
 8004e00:	68fb      	ldr	r3, [r7, #12]
 8004e02:	f883 21dd 	strb.w	r2, [r3, #477]	; 0x1dd
		radio->tx_msg[23] = teleData->accu.ah_consumed >> 8;
 8004e06:	687b      	ldr	r3, [r7, #4]
 8004e08:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004e0c:	121b      	asrs	r3, r3, #8
 8004e0e:	b21b      	sxth	r3, r3
 8004e10:	b2da      	uxtb	r2, r3
 8004e12:	68fb      	ldr	r3, [r7, #12]
 8004e14:	f883 21de 	strb.w	r2, [r3, #478]	; 0x1de
		radio->tx_msg[24] = teleData->accu.ah_consumed;
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	; 0x26
 8004e1e:	b2da      	uxtb	r2, r3
 8004e20:	68fb      	ldr	r3, [r7, #12]
 8004e22:	f883 21df 	strb.w	r2, [r3, #479]	; 0x1df
		radio->tx_msg[25] = teleData->accu.error_position;
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	7e1a      	ldrb	r2, [r3, #24]
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	f883 21e0 	strb.w	r2, [r3, #480]	; 0x1e0
		radio->tx_msg[26] = teleData->accu.max_cell_voltage_pos;
 8004e30:	687b      	ldr	r3, [r7, #4]
 8004e32:	7e5a      	ldrb	r2, [r3, #25]
 8004e34:	68fb      	ldr	r3, [r7, #12]
 8004e36:	f883 21e1 	strb.w	r2, [r3, #481]	; 0x1e1
		radio->tx_msg[27] = teleData->accu.min_cell_voltage_pos;
 8004e3a:	687b      	ldr	r3, [r7, #4]
 8004e3c:	7e9a      	ldrb	r2, [r3, #26]
 8004e3e:	68fb      	ldr	r3, [r7, #12]
 8004e40:	f883 21e2 	strb.w	r2, [r3, #482]	; 0x1e2
		radio->tx_msg[28] = teleData->pdu.max_cell_temp;
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	f893 202b 	ldrb.w	r2, [r3, #43]	; 0x2b
 8004e4a:	68fb      	ldr	r3, [r7, #12]
 8004e4c:	f883 21e3 	strb.w	r2, [r3, #483]	; 0x1e3
		radio->tx_msg[29] = teleData->pdu.max_cell_voltage >> 8;
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004e54:	0a1b      	lsrs	r3, r3, #8
 8004e56:	b29b      	uxth	r3, r3
 8004e58:	b2da      	uxtb	r2, r3
 8004e5a:	68fb      	ldr	r3, [r7, #12]
 8004e5c:	f883 21e4 	strb.w	r2, [r3, #484]	; 0x1e4
		radio->tx_msg[30] = teleData->pdu.max_cell_voltage;
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004e64:	b2da      	uxtb	r2, r3
 8004e66:	68fb      	ldr	r3, [r7, #12]
 8004e68:	f883 21e5 	strb.w	r2, [r3, #485]	; 0x1e5
		radio->tx_msg[31] = teleData->pdu.min_cell_voltage >> 8;
 8004e6c:	687b      	ldr	r3, [r7, #4]
 8004e6e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004e70:	0a1b      	lsrs	r3, r3, #8
 8004e72:	b29b      	uxth	r3, r3
 8004e74:	b2da      	uxtb	r2, r3
 8004e76:	68fb      	ldr	r3, [r7, #12]
 8004e78:	f883 21e6 	strb.w	r2, [r3, #486]	; 0x1e6
		radio->tx_msg[32] = teleData->pdu.min_cell_voltage;
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004e80:	b2da      	uxtb	r2, r3
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	f883 21e7 	strb.w	r2, [r3, #487]	; 0x1e7
		radio->tx_msg[33] = teleData->pdu.tdk1_current >> 8;
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 8004e8c:	0a1b      	lsrs	r3, r3, #8
 8004e8e:	b29b      	uxth	r3, r3
 8004e90:	b2da      	uxtb	r2, r3
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	f883 21e8 	strb.w	r2, [r3, #488]	; 0x1e8
		radio->tx_msg[34] = teleData->pdu.tdk1_current;
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
 8004e9c:	b2da      	uxtb	r2, r3
 8004e9e:	68fb      	ldr	r3, [r7, #12]
 8004ea0:	f883 21e9 	strb.w	r2, [r3, #489]	; 0x1e9
		radio->tx_msg[35] = teleData->pdu.tdk2_current >> 8;
 8004ea4:	687b      	ldr	r3, [r7, #4]
 8004ea6:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8004ea8:	0a1b      	lsrs	r3, r3, #8
 8004eaa:	b29b      	uxth	r3, r3
 8004eac:	b2da      	uxtb	r2, r3
 8004eae:	68fb      	ldr	r3, [r7, #12]
 8004eb0:	f883 21ea 	strb.w	r2, [r3, #490]	; 0x1ea
		radio->tx_msg[36] = teleData->pdu.tdk2_current;
 8004eb4:	687b      	ldr	r3, [r7, #4]
 8004eb6:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
 8004eb8:	b2da      	uxtb	r2, r3
 8004eba:	68fb      	ldr	r3, [r7, #12]
 8004ebc:	f883 21eb 	strb.w	r2, [r3, #491]	; 0x1eb
		radio->tx_msg[37] = teleData->pdu.wh_consumed >> 8;
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 8004ec4:	0a1b      	lsrs	r3, r3, #8
 8004ec6:	b29b      	uxth	r3, r3
 8004ec8:	b2da      	uxtb	r2, r3
 8004eca:	68fb      	ldr	r3, [r7, #12]
 8004ecc:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
		radio->tx_msg[38] = teleData->pdu.wh_consumed;
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
 8004ed4:	b2da      	uxtb	r2, r3
 8004ed6:	68fb      	ldr	r3, [r7, #12]
 8004ed8:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
		radio->tx_msg[39] = teleData->accu.last_bms_error_code;
 8004edc:	687b      	ldr	r3, [r7, #4]
 8004ede:	7cda      	ldrb	r2, [r3, #19]
 8004ee0:	68fb      	ldr	r3, [r7, #12]
 8004ee2:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
		radio->tx_msg[40] = teleData->accu.last_tsac_error_code;
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	7d5a      	ldrb	r2, [r3, #21]
 8004eea:	68fb      	ldr	r3, [r7, #12]
 8004eec:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
		radio->tx_msg[41] = (teleData->inv.inv_enable          << 7) |
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	7a1b      	ldrb	r3, [r3, #8]
 8004ef4:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8004ef8:	b2db      	uxtb	r3, r3
 8004efa:	01db      	lsls	r3, r3, #7
 8004efc:	b25a      	sxtb	r2, r3
							(teleData->inv.inv_ok              << 6) |
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	7a1b      	ldrb	r3, [r3, #8]
 8004f02:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8004f06:	b2db      	uxtb	r3, r3
 8004f08:	019b      	lsls	r3, r3, #6
		radio->tx_msg[41] = (teleData->inv.inv_enable          << 7) |
 8004f0a:	b25b      	sxtb	r3, r3
 8004f0c:	4313      	orrs	r3, r2
 8004f0e:	b25a      	sxtb	r2, r3
							(teleData->inv.curr_lim_reached    << 5) |
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	7a1b      	ldrb	r3, [r3, #8]
 8004f14:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8004f18:	b2db      	uxtb	r3, r3
 8004f1a:	015b      	lsls	r3, r3, #5
							(teleData->inv.inv_ok              << 6) |
 8004f1c:	b25b      	sxtb	r3, r3
 8004f1e:	4313      	orrs	r3, r2
 8004f20:	b25a      	sxtb	r2, r3
							(teleData->inv.curr_lim_igbt_temp  << 4) |
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	7a1b      	ldrb	r3, [r3, #8]
 8004f26:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8004f2a:	b2db      	uxtb	r3, r3
 8004f2c:	011b      	lsls	r3, r3, #4
							(teleData->inv.curr_lim_reached    << 5) |
 8004f2e:	b25b      	sxtb	r3, r3
 8004f30:	4313      	orrs	r3, r2
 8004f32:	b25a      	sxtb	r2, r3
							(teleData->inv.curr_lim_motor_temp << 3) |
 8004f34:	687b      	ldr	r3, [r7, #4]
 8004f36:	7a1b      	ldrb	r3, [r3, #8]
 8004f38:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8004f3c:	b2db      	uxtb	r3, r3
 8004f3e:	00db      	lsls	r3, r3, #3
							(teleData->inv.curr_lim_igbt_temp  << 4) |
 8004f40:	b25b      	sxtb	r3, r3
 8004f42:	4313      	orrs	r3, r2
 8004f44:	b25a      	sxtb	r2, r3
							(teleData->inv.curr_peak_val_warn  << 2) |
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	7a1b      	ldrb	r3, [r3, #8]
 8004f4a:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8004f4e:	b2db      	uxtb	r3, r3
 8004f50:	009b      	lsls	r3, r3, #2
							(teleData->inv.curr_lim_motor_temp << 3) |
 8004f52:	b25b      	sxtb	r3, r3
 8004f54:	4313      	orrs	r3, r2
 8004f56:	b25a      	sxtb	r2, r3
							(teleData->inv.defective_param 	   << 1) |
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	7a1b      	ldrb	r3, [r3, #8]
 8004f5c:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8004f60:	b2db      	uxtb	r3, r3
 8004f62:	005b      	lsls	r3, r3, #1
							(teleData->inv.curr_peak_val_warn  << 2) |
 8004f64:	b25b      	sxtb	r3, r3
 8004f66:	4313      	orrs	r3, r2
 8004f68:	b25a      	sxtb	r2, r3
							(teleData->inv.hardware_fault      << 0);
 8004f6a:	687b      	ldr	r3, [r7, #4]
 8004f6c:	7a1b      	ldrb	r3, [r3, #8]
 8004f6e:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8004f72:	b2db      	uxtb	r3, r3
 8004f74:	b25b      	sxtb	r3, r3
							(teleData->inv.defective_param 	   << 1) |
 8004f76:	4313      	orrs	r3, r2
 8004f78:	b25b      	sxtb	r3, r3
 8004f7a:	b2da      	uxtb	r2, r3
		radio->tx_msg[41] = (teleData->inv.inv_enable          << 7) |
 8004f7c:	68fb      	ldr	r3, [r7, #12]
 8004f7e:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
		radio->tx_msg[42] = (teleData->inv.faulty_safety_circuit    << 7) |
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	7a5b      	ldrb	r3, [r3, #9]
 8004f86:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8004f8a:	b2db      	uxtb	r3, r3
 8004f8c:	01db      	lsls	r3, r3, #7
 8004f8e:	b25a      	sxtb	r2, r3
							(teleData->inv.can_time_out_exceeded    << 6) |
 8004f90:	687b      	ldr	r3, [r7, #4]
 8004f92:	7a5b      	ldrb	r3, [r3, #9]
 8004f94:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8004f98:	b2db      	uxtb	r3, r3
 8004f9a:	019b      	lsls	r3, r3, #6
		radio->tx_msg[42] = (teleData->inv.faulty_safety_circuit    << 7) |
 8004f9c:	b25b      	sxtb	r3, r3
 8004f9e:	4313      	orrs	r3, r2
 8004fa0:	b25a      	sxtb	r2, r3
							(teleData->inv.bad_encoder_signal   	<< 5) |
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	7a5b      	ldrb	r3, [r3, #9]
 8004fa6:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8004faa:	b2db      	uxtb	r3, r3
 8004fac:	015b      	lsls	r3, r3, #5
							(teleData->inv.can_time_out_exceeded    << 6) |
 8004fae:	b25b      	sxtb	r3, r3
 8004fb0:	4313      	orrs	r3, r2
 8004fb2:	b25a      	sxtb	r2, r3
							(teleData->inv.no_power_supply_voltage  << 4) |
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	7a5b      	ldrb	r3, [r3, #9]
 8004fb8:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8004fbc:	b2db      	uxtb	r3, r3
 8004fbe:	011b      	lsls	r3, r3, #4
							(teleData->inv.bad_encoder_signal   	<< 5) |
 8004fc0:	b25b      	sxtb	r3, r3
 8004fc2:	4313      	orrs	r3, r2
 8004fc4:	b25a      	sxtb	r2, r3
							(teleData->inv.overvoltage 				<< 3) |
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	7a5b      	ldrb	r3, [r3, #9]
 8004fca:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8004fce:	b2db      	uxtb	r3, r3
 8004fd0:	00db      	lsls	r3, r3, #3
							(teleData->inv.no_power_supply_voltage  << 4) |
 8004fd2:	b25b      	sxtb	r3, r3
 8004fd4:	4313      	orrs	r3, r2
 8004fd6:	b25a      	sxtb	r2, r3
							(teleData->inv.overcurrent  			<< 2) |
 8004fd8:	687b      	ldr	r3, [r7, #4]
 8004fda:	7a5b      	ldrb	r3, [r3, #9]
 8004fdc:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8004fe0:	b2db      	uxtb	r3, r3
 8004fe2:	009b      	lsls	r3, r3, #2
							(teleData->inv.overvoltage 				<< 3) |
 8004fe4:	b25b      	sxtb	r3, r3
 8004fe6:	4313      	orrs	r3, r2
 8004fe8:	b25a      	sxtb	r2, r3
							(teleData->inv.current_measure_fault    << 1) |
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	7a5b      	ldrb	r3, [r3, #9]
 8004fee:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8004ff2:	b2db      	uxtb	r3, r3
 8004ff4:	005b      	lsls	r3, r3, #1
							(teleData->inv.overcurrent  			<< 2) |
 8004ff6:	b25b      	sxtb	r3, r3
 8004ff8:	4313      	orrs	r3, r2
 8004ffa:	b25a      	sxtb	r2, r3
							(teleData->inv.ballast_circuit_overload << 0);
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	7a5b      	ldrb	r3, [r3, #9]
 8005000:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8005004:	b2db      	uxtb	r3, r3
 8005006:	b25b      	sxtb	r3, r3
							(teleData->inv.current_measure_fault    << 1) |
 8005008:	4313      	orrs	r3, r2
 800500a:	b25b      	sxtb	r3, r3
 800500c:	b2da      	uxtb	r2, r3
		radio->tx_msg[42] = (teleData->inv.faulty_safety_circuit    << 7) |
 800500e:	68fb      	ldr	r3, [r7, #12]
 8005010:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
		radio->tx_msg[43] = (teleData->inv.faulty_run_signal_emi           << 5) |
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	7a9b      	ldrb	r3, [r3, #10]
 8005018:	f3c3 0300 	ubfx	r3, r3, #0, #1
 800501c:	b2db      	uxtb	r3, r3
 800501e:	015b      	lsls	r3, r3, #5
 8005020:	b25a      	sxtb	r2, r3
							(teleData->inv.inactive_rfe              	   << 4) |
 8005022:	687b      	ldr	r3, [r7, #4]
 8005024:	7a9b      	ldrb	r3, [r3, #10]
 8005026:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800502a:	b2db      	uxtb	r3, r3
 800502c:	011b      	lsls	r3, r3, #4
		radio->tx_msg[43] = (teleData->inv.faulty_run_signal_emi           << 5) |
 800502e:	b25b      	sxtb	r3, r3
 8005030:	4313      	orrs	r3, r2
 8005032:	b25a      	sxtb	r2, r3
							(teleData->inv.power_supply_missing_or_too_low << 3) |
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	7a9b      	ldrb	r3, [r3, #10]
 8005038:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800503c:	b2db      	uxtb	r3, r3
 800503e:	00db      	lsls	r3, r3, #3
							(teleData->inv.inactive_rfe              	   << 4) |
 8005040:	b25b      	sxtb	r3, r3
 8005042:	4313      	orrs	r3, r2
 8005044:	b25a      	sxtb	r2, r3
							(teleData->inv.output_voltage_limit_reached    << 2) |
 8005046:	687b      	ldr	r3, [r7, #4]
 8005048:	7a9b      	ldrb	r3, [r3, #10]
 800504a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800504e:	b2db      	uxtb	r3, r3
 8005050:	009b      	lsls	r3, r3, #2
							(teleData->inv.power_supply_missing_or_too_low << 3) |
 8005052:	b25b      	sxtb	r3, r3
 8005054:	4313      	orrs	r3, r2
 8005056:	b25a      	sxtb	r2, r3
							(teleData->inv.overcurrent_200 				   << 1) |
 8005058:	687b      	ldr	r3, [r7, #4]
 800505a:	7a9b      	ldrb	r3, [r3, #10]
 800505c:	f3c3 1300 	ubfx	r3, r3, #4, #1
 8005060:	b2db      	uxtb	r3, r3
 8005062:	005b      	lsls	r3, r3, #1
							(teleData->inv.output_voltage_limit_reached    << 2) |
 8005064:	b25b      	sxtb	r3, r3
 8005066:	4313      	orrs	r3, r2
 8005068:	b25a      	sxtb	r2, r3
							(teleData->inv.ballast_circuit_overload_87     << 0);
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	7a9b      	ldrb	r3, [r3, #10]
 800506e:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8005072:	b2db      	uxtb	r3, r3
 8005074:	b25b      	sxtb	r3, r3
							(teleData->inv.overcurrent_200 				   << 1) |
 8005076:	4313      	orrs	r3, r2
 8005078:	b25b      	sxtb	r3, r3
 800507a:	b2da      	uxtb	r2, r3
		radio->tx_msg[43] = (teleData->inv.faulty_run_signal_emi           << 5) |
 800507c:	68fb      	ldr	r3, [r7, #12]
 800507e:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
		radio->tx_msg[44] = (teleData->pdu.pi_enabled   << 6) |
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8005088:	f3c3 1380 	ubfx	r3, r3, #6, #1
 800508c:	b2db      	uxtb	r3, r3
 800508e:	019b      	lsls	r3, r3, #6
 8005090:	b25a      	sxtb	r2, r3
							(teleData->pdu.dac2_enabled << 5) |
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 8005098:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800509c:	b2db      	uxtb	r3, r3
 800509e:	015b      	lsls	r3, r3, #5
		radio->tx_msg[44] = (teleData->pdu.pi_enabled   << 6) |
 80050a0:	b25b      	sxtb	r3, r3
 80050a2:	4313      	orrs	r3, r2
 80050a4:	b25a      	sxtb	r2, r3
							(teleData->pdu.dac1_enabled << 4) |
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80050ac:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80050b0:	b2db      	uxtb	r3, r3
 80050b2:	011b      	lsls	r3, r3, #4
							(teleData->pdu.dac2_enabled << 5) |
 80050b4:	b25b      	sxtb	r3, r3
 80050b6:	4313      	orrs	r3, r2
 80050b8:	b25a      	sxtb	r2, r3
							(teleData->pdu.overcurrent  << 3) |
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80050c0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80050c4:	b2db      	uxtb	r3, r3
 80050c6:	00db      	lsls	r3, r3, #3
							(teleData->pdu.dac1_enabled << 4) |
 80050c8:	b25b      	sxtb	r3, r3
 80050ca:	4313      	orrs	r3, r2
 80050cc:	b25a      	sxtb	r2, r3
							(teleData->pdu.overtemp     << 2) |
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80050d4:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80050d8:	b2db      	uxtb	r3, r3
 80050da:	009b      	lsls	r3, r3, #2
							(teleData->pdu.overcurrent  << 3) |
 80050dc:	b25b      	sxtb	r3, r3
 80050de:	4313      	orrs	r3, r2
 80050e0:	b25a      	sxtb	r2, r3
							(teleData->pdu.overvoltage  << 1) |
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80050e8:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80050ec:	b2db      	uxtb	r3, r3
 80050ee:	005b      	lsls	r3, r3, #1
							(teleData->pdu.overtemp     << 2) |
 80050f0:	b25b      	sxtb	r3, r3
 80050f2:	4313      	orrs	r3, r2
 80050f4:	b25a      	sxtb	r2, r3
							(teleData->pdu.undervoltage << 0);
 80050f6:	687b      	ldr	r3, [r7, #4]
 80050f8:	f893 302a 	ldrb.w	r3, [r3, #42]	; 0x2a
 80050fc:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8005100:	b2db      	uxtb	r3, r3
 8005102:	b25b      	sxtb	r3, r3
							(teleData->pdu.overvoltage  << 1) |
 8005104:	4313      	orrs	r3, r2
 8005106:	b25b      	sxtb	r3, r3
 8005108:	b2da      	uxtb	r2, r3
		radio->tx_msg[44] = (teleData->pdu.pi_enabled   << 6) |
 800510a:	68fb      	ldr	r3, [r7, #12]
 800510c:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
		radio->tx_msg[45] =  teleData->pdu.distribution_ratio >> 8;
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005114:	0a1b      	lsrs	r3, r3, #8
 8005116:	b29b      	uxth	r3, r3
 8005118:	b2da      	uxtb	r2, r3
 800511a:	68fb      	ldr	r3, [r7, #12]
 800511c:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
		radio->tx_msg[46] =  teleData->pdu.distribution_ratio;
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005124:	b2da      	uxtb	r2, r3
 8005126:	68fb      	ldr	r3, [r7, #12]
 8005128:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
		radio->tx_msg[47] = teleData->accu.min_soc;
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	7dda      	ldrb	r2, [r3, #23]
 8005130:	68fb      	ldr	r3, [r7, #12]
 8005132:	f883 21f6 	strb.w	r2, [r3, #502]	; 0x1f6
		radio->tx_msg[48] = (teleData->vcu.mission_pc_error   << 7) |
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 800513c:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8005140:	b2db      	uxtb	r3, r3
 8005142:	01db      	lsls	r3, r3, #7
 8005144:	b25a      	sxtb	r2, r3
							(teleData->vcu.air_m_error		  << 6) |
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 800514c:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8005150:	b2db      	uxtb	r3, r3
 8005152:	019b      	lsls	r3, r3, #6
		radio->tx_msg[48] = (teleData->vcu.mission_pc_error   << 7) |
 8005154:	b25b      	sxtb	r3, r3
 8005156:	4313      	orrs	r3, r2
 8005158:	b25a      	sxtb	r2, r3
							(teleData->vcu.air_p_error 		  << 5) |
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 8005160:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8005164:	b2db      	uxtb	r3, r3
 8005166:	015b      	lsls	r3, r3, #5
							(teleData->vcu.air_m_error		  << 6) |
 8005168:	b25b      	sxtb	r3, r3
 800516a:	4313      	orrs	r3, r2
 800516c:	b25a      	sxtb	r2, r3
							(teleData->vcu.pc_pressed_error   << 4) |
 800516e:	687b      	ldr	r3, [r7, #4]
 8005170:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 8005174:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8005178:	b2db      	uxtb	r3, r3
 800517a:	011b      	lsls	r3, r3, #4
							(teleData->vcu.air_p_error 		  << 5) |
 800517c:	b25b      	sxtb	r3, r3
 800517e:	4313      	orrs	r3, r2
 8005180:	b25a      	sxtb	r2, r3
							(teleData->vcu.imd_ams_bspd_error << 3) |
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 8005188:	f3c3 0340 	ubfx	r3, r3, #1, #1
 800518c:	b2db      	uxtb	r3, r3
 800518e:	00db      	lsls	r3, r3, #3
							(teleData->vcu.pc_pressed_error   << 4) |
 8005190:	b25b      	sxtb	r3, r3
 8005192:	4313      	orrs	r3, r2
 8005194:	b25a      	sxtb	r2, r3
							(teleData->vcu.airs_opened_error  << 2) |
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 800519c:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80051a0:	b2db      	uxtb	r3, r3
 80051a2:	009b      	lsls	r3, r3, #2
							(teleData->vcu.imd_ams_bspd_error << 3) |
 80051a4:	b25b      	sxtb	r3, r3
 80051a6:	4313      	orrs	r3, r2
 80051a8:	b25a      	sxtb	r2, r3
							(teleData->vcu.precharge_done     << 1) |
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 80051b0:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80051b4:	b2db      	uxtb	r3, r3
 80051b6:	005b      	lsls	r3, r3, #1
							(teleData->vcu.airs_opened_error  << 2) |
 80051b8:	b25b      	sxtb	r3, r3
 80051ba:	4313      	orrs	r3, r2
 80051bc:	b25a      	sxtb	r2, r3
							(teleData->vcu.r2d_done           << 0);
 80051be:	687b      	ldr	r3, [r7, #4]
 80051c0:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 80051c4:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80051c8:	b2db      	uxtb	r3, r3
 80051ca:	b25b      	sxtb	r3, r3
							(teleData->vcu.precharge_done     << 1) |
 80051cc:	4313      	orrs	r3, r2
 80051ce:	b25b      	sxtb	r3, r3
 80051d0:	b2da      	uxtb	r2, r3
		radio->tx_msg[48] = (teleData->vcu.mission_pc_error   << 7) |
 80051d2:	68fb      	ldr	r3, [r7, #12]
 80051d4:	f883 21f7 	strb.w	r2, [r3, #503]	; 0x1f7
		radio->tx_msg[49] = (teleData->vcu.power_limiter_active  << 5) |
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	f893 304c 	ldrb.w	r3, [r3, #76]	; 0x4c
 80051de:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80051e2:	b2db      	uxtb	r3, r3
 80051e4:	015b      	lsls	r3, r3, #5
 80051e6:	b25a      	sxtb	r2, r3
							(teleData->vcu.software_bspd_enabled << 4) |
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 80051ee:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80051f2:	b2db      	uxtb	r3, r3
 80051f4:	011b      	lsls	r3, r3, #4
		radio->tx_msg[49] = (teleData->vcu.power_limiter_active  << 5) |
 80051f6:	b25b      	sxtb	r3, r3
 80051f8:	4313      	orrs	r3, r2
 80051fa:	b25a      	sxtb	r2, r3
							(teleData->vcu.brake_implausibility  << 3) |
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 8005202:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8005206:	b2db      	uxtb	r3, r3
 8005208:	00db      	lsls	r3, r3, #3
							(teleData->vcu.software_bspd_enabled << 4) |
 800520a:	b25b      	sxtb	r3, r3
 800520c:	4313      	orrs	r3, r2
 800520e:	b25a      	sxtb	r2, r3
							(teleData->vcu.brake_deviation       << 2) |
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 8005216:	f3c3 1340 	ubfx	r3, r3, #5, #1
 800521a:	b2db      	uxtb	r3, r3
 800521c:	009b      	lsls	r3, r3, #2
							(teleData->vcu.brake_implausibility  << 3) |
 800521e:	b25b      	sxtb	r3, r3
 8005220:	4313      	orrs	r3, r2
 8005222:	b25a      	sxtb	r2, r3
							(teleData->vcu.apps_implausibility   << 1) |
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 800522a:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800522e:	b2db      	uxtb	r3, r3
 8005230:	005b      	lsls	r3, r3, #1
							(teleData->vcu.brake_deviation       << 2) |
 8005232:	b25b      	sxtb	r3, r3
 8005234:	4313      	orrs	r3, r2
 8005236:	b25a      	sxtb	r2, r3
							(teleData->vcu.apps_deviaton         << 0);
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	f893 304b 	ldrb.w	r3, [r3, #75]	; 0x4b
 800523e:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8005242:	b2db      	uxtb	r3, r3
 8005244:	b25b      	sxtb	r3, r3
							(teleData->vcu.apps_implausibility   << 1) |
 8005246:	4313      	orrs	r3, r2
 8005248:	b25b      	sxtb	r3, r3
 800524a:	b2da      	uxtb	r2, r3
		radio->tx_msg[49] = (teleData->vcu.power_limiter_active  << 5) |
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	f883 21f8 	strb.w	r2, [r3, #504]	; 0x1f8
		break;
 8005252:	e321      	b.n	8005898 <CreateTeleTxMsg+0xc7c>
		radio->tx_msg[5]  = RFU;
 8005254:	68fb      	ldr	r3, [r7, #12]
 8005256:	22ff      	movs	r2, #255	; 0xff
 8005258:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
		radio->tx_msg[6]  = teleData->vcu.brake_front;
 800525c:	687b      	ldr	r3, [r7, #4]
 800525e:	f893 204d 	ldrb.w	r2, [r3, #77]	; 0x4d
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
		radio->tx_msg[7]  = teleData->vcu.brake_rear;
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	f893 204e 	ldrb.w	r2, [r3, #78]	; 0x4e
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
		radio->tx_msg[8]  = teleData->vcu.actual_torque >> 8;
 8005274:	687b      	ldr	r3, [r7, #4]
 8005276:	f9b3 3052 	ldrsh.w	r3, [r3, #82]	; 0x52
 800527a:	121b      	asrs	r3, r3, #8
 800527c:	b21b      	sxth	r3, r3
 800527e:	b2da      	uxtb	r2, r3
 8005280:	68fb      	ldr	r3, [r7, #12]
 8005282:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
		radio->tx_msg[9]  = teleData->vcu.actual_torque;
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	f9b3 3052 	ldrsh.w	r3, [r3, #82]	; 0x52
 800528c:	b2da      	uxtb	r2, r3
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	f883 21d0 	strb.w	r2, [r3, #464]	; 0x1d0
		radio->tx_msg[10] = teleData->vcu.requested_torque >> 8;
 8005294:	687b      	ldr	r3, [r7, #4]
 8005296:	f9b3 3050 	ldrsh.w	r3, [r3, #80]	; 0x50
 800529a:	121b      	asrs	r3, r3, #8
 800529c:	b21b      	sxth	r3, r3
 800529e:	b2da      	uxtb	r2, r3
 80052a0:	68fb      	ldr	r3, [r7, #12]
 80052a2:	f883 21d1 	strb.w	r2, [r3, #465]	; 0x1d1
		radio->tx_msg[11] = teleData->vcu.requested_torque;
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	f9b3 3050 	ldrsh.w	r3, [r3, #80]	; 0x50
 80052ac:	b2da      	uxtb	r2, r3
 80052ae:	68fb      	ldr	r3, [r7, #12]
 80052b0:	f883 21d2 	strb.w	r2, [r3, #466]	; 0x1d2
		radio->tx_msg[12] = teleData->vcu.motor_rpm >> 8;
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	f9b3 3054 	ldrsh.w	r3, [r3, #84]	; 0x54
 80052ba:	121b      	asrs	r3, r3, #8
 80052bc:	b21b      	sxth	r3, r3
 80052be:	b2da      	uxtb	r2, r3
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	f883 21d3 	strb.w	r2, [r3, #467]	; 0x1d3
		radio->tx_msg[13] = teleData->vcu.motor_rpm;
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	f9b3 3054 	ldrsh.w	r3, [r3, #84]	; 0x54
 80052cc:	b2da      	uxtb	r2, r3
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	f883 21d4 	strb.w	r2, [r3, #468]	; 0x1d4
		radio->tx_msg[14] = teleData->vcu.apps1 >> 8;
 80052d4:	687b      	ldr	r3, [r7, #4]
 80052d6:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80052da:	0a1b      	lsrs	r3, r3, #8
 80052dc:	b29b      	uxth	r3, r3
 80052de:	b2da      	uxtb	r2, r3
 80052e0:	68fb      	ldr	r3, [r7, #12]
 80052e2:	f883 21d5 	strb.w	r2, [r3, #469]	; 0x1d5
		radio->tx_msg[15] = teleData->vcu.apps1;
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 80052ec:	b2da      	uxtb	r2, r3
 80052ee:	68fb      	ldr	r3, [r7, #12]
 80052f0:	f883 21d6 	strb.w	r2, [r3, #470]	; 0x1d6
		radio->tx_msg[16] = teleData->vcu.apps2 >> 8;
 80052f4:	687b      	ldr	r3, [r7, #4]
 80052f6:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 80052fa:	0a1b      	lsrs	r3, r3, #8
 80052fc:	b29b      	uxth	r3, r3
 80052fe:	b2da      	uxtb	r2, r3
 8005300:	68fb      	ldr	r3, [r7, #12]
 8005302:	f883 21d7 	strb.w	r2, [r3, #471]	; 0x1d7
		radio->tx_msg[17] = teleData->vcu.apps2;
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	f8b3 3058 	ldrh.w	r3, [r3, #88]	; 0x58
 800530c:	b2da      	uxtb	r2, r3
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	f883 21d8 	strb.w	r2, [r3, #472]	; 0x1d8
		radio->tx_msg[18] = teleData->vcu.hall_fr >> 8;
 8005314:	687b      	ldr	r3, [r7, #4]
 8005316:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800531a:	0a1b      	lsrs	r3, r3, #8
 800531c:	b29b      	uxth	r3, r3
 800531e:	b2da      	uxtb	r2, r3
 8005320:	68fb      	ldr	r3, [r7, #12]
 8005322:	f883 21d9 	strb.w	r2, [r3, #473]	; 0x1d9
		radio->tx_msg[19] = teleData->vcu.hall_fr;
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	f8b3 305a 	ldrh.w	r3, [r3, #90]	; 0x5a
 800532c:	b2da      	uxtb	r2, r3
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	f883 21da 	strb.w	r2, [r3, #474]	; 0x1da
		radio->tx_msg[20] = teleData->vcu.hall_fl >> 8;
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800533a:	0a1b      	lsrs	r3, r3, #8
 800533c:	b29b      	uxth	r3, r3
 800533e:	b2da      	uxtb	r2, r3
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	f883 21db 	strb.w	r2, [r3, #475]	; 0x1db
		radio->tx_msg[21] = teleData->vcu.hall_fl;
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800534c:	b2da      	uxtb	r2, r3
 800534e:	68fb      	ldr	r3, [r7, #12]
 8005350:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
		radio->tx_msg[22] = teleData->vcu.hall_rr >> 8;
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800535a:	0a1b      	lsrs	r3, r3, #8
 800535c:	b29b      	uxth	r3, r3
 800535e:	b2da      	uxtb	r2, r3
 8005360:	68fb      	ldr	r3, [r7, #12]
 8005362:	f883 21dd 	strb.w	r2, [r3, #477]	; 0x1dd
		radio->tx_msg[23] = teleData->vcu.hall_rr;
 8005366:	687b      	ldr	r3, [r7, #4]
 8005368:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800536c:	b2da      	uxtb	r2, r3
 800536e:	68fb      	ldr	r3, [r7, #12]
 8005370:	f883 21de 	strb.w	r2, [r3, #478]	; 0x1de
		radio->tx_msg[24] = teleData->vcu.hall_rl >> 8;
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800537a:	0a1b      	lsrs	r3, r3, #8
 800537c:	b29b      	uxth	r3, r3
 800537e:	b2da      	uxtb	r2, r3
 8005380:	68fb      	ldr	r3, [r7, #12]
 8005382:	f883 21df 	strb.w	r2, [r3, #479]	; 0x1df
		radio->tx_msg[25] = teleData->vcu.hall_rl;
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	f8b3 3060 	ldrh.w	r3, [r3, #96]	; 0x60
 800538c:	b2da      	uxtb	r2, r3
 800538e:	68fb      	ldr	r3, [r7, #12]
 8005390:	f883 21e0 	strb.w	r2, [r3, #480]	; 0x1e0
		radio->tx_msg[26] = teleData->accu.imd_isolation_kOhms >> 8;
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8005398:	0a1b      	lsrs	r3, r3, #8
 800539a:	b29b      	uxth	r3, r3
 800539c:	b2da      	uxtb	r2, r3
 800539e:	68fb      	ldr	r3, [r7, #12]
 80053a0:	f883 21e1 	strb.w	r2, [r3, #481]	; 0x1e1
		radio->tx_msg[27] = teleData->accu.imd_isolation_kOhms;
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80053a8:	b2da      	uxtb	r2, r3
 80053aa:	68fb      	ldr	r3, [r7, #12]
 80053ac:	f883 21e2 	strb.w	r2, [r3, #482]	; 0x1e2
		radio->tx_msg[28] = RFU;
 80053b0:	68fb      	ldr	r3, [r7, #12]
 80053b2:	22ff      	movs	r2, #255	; 0xff
 80053b4:	f883 21e3 	strb.w	r2, [r3, #483]	; 0x1e3
		radio->tx_msg[29] = RFU;
 80053b8:	68fb      	ldr	r3, [r7, #12]
 80053ba:	22ff      	movs	r2, #255	; 0xff
 80053bc:	f883 21e4 	strb.w	r2, [r3, #484]	; 0x1e4
		radio->tx_msg[30] = (teleData->dash.r2d_pressed     << 7) |
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80053c6:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80053ca:	b2db      	uxtb	r3, r3
 80053cc:	01db      	lsls	r3, r3, #7
 80053ce:	b25a      	sxtb	r2, r3
							(teleData->dash.pc_combo        << 6) |
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80053d6:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80053da:	b2db      	uxtb	r3, r3
 80053dc:	019b      	lsls	r3, r3, #6
		radio->tx_msg[30] = (teleData->dash.r2d_pressed     << 7) |
 80053de:	b25b      	sxtb	r3, r3
 80053e0:	4313      	orrs	r3, r2
 80053e2:	b25a      	sxtb	r2, r3
							(teleData->dash.aux2_pressed    << 5) |
 80053e4:	687b      	ldr	r3, [r7, #4]
 80053e6:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80053ea:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80053ee:	b2db      	uxtb	r3, r3
 80053f0:	015b      	lsls	r3, r3, #5
							(teleData->dash.pc_combo        << 6) |
 80053f2:	b25b      	sxtb	r3, r3
 80053f4:	4313      	orrs	r3, r2
 80053f6:	b25a      	sxtb	r2, r3
							(teleData->dash.regen_on        << 4) |
 80053f8:	687b      	ldr	r3, [r7, #4]
 80053fa:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80053fe:	f3c3 0380 	ubfx	r3, r3, #2, #1
 8005402:	b2db      	uxtb	r3, r3
 8005404:	011b      	lsls	r3, r3, #4
							(teleData->dash.aux2_pressed    << 5) |
 8005406:	b25b      	sxtb	r3, r3
 8005408:	4313      	orrs	r3, r2
 800540a:	b25a      	sxtb	r2, r3
							(teleData->dash.aero_fans_on    << 3);
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8005412:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8005416:	b2db      	uxtb	r3, r3
 8005418:	00db      	lsls	r3, r3, #3
							(teleData->dash.regen_on        << 4) |
 800541a:	b25b      	sxtb	r3, r3
 800541c:	4313      	orrs	r3, r2
 800541e:	b25b      	sxtb	r3, r3
 8005420:	b2da      	uxtb	r2, r3
		radio->tx_msg[30] = (teleData->dash.r2d_pressed     << 7) |
 8005422:	68fb      	ldr	r3, [r7, #12]
 8005424:	f883 21e5 	strb.w	r2, [r3, #485]	; 0x1e5
		radio->tx_msg[31] =  teleData->dash.power_limiter;
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	f893 2064 	ldrb.w	r2, [r3, #100]	; 0x64
 800542e:	68fb      	ldr	r3, [r7, #12]
 8005430:	f883 21e6 	strb.w	r2, [r3, #486]	; 0x1e6
		radio->tx_msg[32] =  teleData->dash.traction_def;
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	f893 2065 	ldrb.w	r2, [r3, #101]	; 0x65
 800543a:	68fb      	ldr	r3, [r7, #12]
 800543c:	f883 21e7 	strb.w	r2, [r3, #487]	; 0x1e7
		radio->tx_msg[33] =  teleData->dash.mission;
 8005440:	687b      	ldr	r3, [r7, #4]
 8005442:	f893 2066 	ldrb.w	r2, [r3, #102]	; 0x66
 8005446:	68fb      	ldr	r3, [r7, #12]
 8005448:	f883 21e8 	strb.w	r2, [r3, #488]	; 0x1e8
		radio->tx_msg[34] = (teleData->dash.mission_locked << 0) & 0x01;
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	f893 3063 	ldrb.w	r3, [r3, #99]	; 0x63
 8005452:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8005456:	b2db      	uxtb	r3, r3
 8005458:	461a      	mov	r2, r3
 800545a:	68fb      	ldr	r3, [r7, #12]
 800545c:	f883 21e9 	strb.w	r2, [r3, #489]	; 0x1e9
		radio->tx_msg[35] =  RFU;
 8005460:	68fb      	ldr	r3, [r7, #12]
 8005462:	22ff      	movs	r2, #255	; 0xff
 8005464:	f883 21ea 	strb.w	r2, [r3, #490]	; 0x1ea
		radio->tx_msg[36] = (teleData->ccu.cooling_fan_on			 << 5) |
 8005468:	687b      	ldr	r3, [r7, #4]
 800546a:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 800546e:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8005472:	b2db      	uxtb	r3, r3
 8005474:	015b      	lsls	r3, r3, #5
 8005476:	b25a      	sxtb	r2, r3
							(teleData->ccu.pumps_on 				 << 4) |
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 800547e:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8005482:	b2db      	uxtb	r3, r3
 8005484:	011b      	lsls	r3, r3, #4
		radio->tx_msg[36] = (teleData->ccu.cooling_fan_on			 << 5) |
 8005486:	b25b      	sxtb	r3, r3
 8005488:	4313      	orrs	r3, r2
 800548a:	b25a      	sxtb	r2, r3
							(teleData->ccu.motor_temp_too_high 		 << 3) |
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 8005492:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8005496:	b2db      	uxtb	r3, r3
 8005498:	00db      	lsls	r3, r3, #3
							(teleData->ccu.pumps_on 				 << 4) |
 800549a:	b25b      	sxtb	r3, r3
 800549c:	4313      	orrs	r3, r2
 800549e:	b25a      	sxtb	r2, r3
							(teleData->ccu.device_temp_too_high		 << 2) |
 80054a0:	687b      	ldr	r3, [r7, #4]
 80054a2:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 80054a6:	f3c3 0380 	ubfx	r3, r3, #2, #1
 80054aa:	b2db      	uxtb	r3, r3
 80054ac:	009b      	lsls	r3, r3, #2
							(teleData->ccu.motor_temp_too_high 		 << 3) |
 80054ae:	b25b      	sxtb	r3, r3
 80054b0:	4313      	orrs	r3, r2
 80054b2:	b25a      	sxtb	r2, r3
							(teleData->ccu.motor_temp_limit_reached  << 1) |
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 80054ba:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 80054be:	b2db      	uxtb	r3, r3
 80054c0:	005b      	lsls	r3, r3, #1
							(teleData->ccu.device_temp_too_high		 << 2) |
 80054c2:	b25b      	sxtb	r3, r3
 80054c4:	4313      	orrs	r3, r2
 80054c6:	b25a      	sxtb	r2, r3
							(teleData->ccu.device_temp_limit_reached << 0);
 80054c8:	687b      	ldr	r3, [r7, #4]
 80054ca:	f893 3068 	ldrb.w	r3, [r3, #104]	; 0x68
 80054ce:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80054d2:	b2db      	uxtb	r3, r3
 80054d4:	b25b      	sxtb	r3, r3
							(teleData->ccu.motor_temp_limit_reached  << 1) |
 80054d6:	4313      	orrs	r3, r2
 80054d8:	b25b      	sxtb	r3, r3
 80054da:	b2da      	uxtb	r2, r3
		radio->tx_msg[36] = (teleData->ccu.cooling_fan_on			 << 5) |
 80054dc:	68fb      	ldr	r3, [r7, #12]
 80054de:	f883 21eb 	strb.w	r2, [r3, #491]	; 0x1eb
		radio->tx_msg[37] =  teleData->ccu.igbt_temp;
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	f893 2069 	ldrb.w	r2, [r3, #105]	; 0x69
 80054e8:	68fb      	ldr	r3, [r7, #12]
 80054ea:	f883 21ec 	strb.w	r2, [r3, #492]	; 0x1ec
		radio->tx_msg[38] =  teleData->ccu.motor_temp;
 80054ee:	687b      	ldr	r3, [r7, #4]
 80054f0:	f893 206a 	ldrb.w	r2, [r3, #106]	; 0x6a
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	f883 21ed 	strb.w	r2, [r3, #493]	; 0x1ed
		radio->tx_msg[39] =  RFU;
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	22ff      	movs	r2, #255	; 0xff
 80054fe:	f883 21ee 	strb.w	r2, [r3, #494]	; 0x1ee
		radio->tx_msg[40] = teleData->plex.accel_long >> 8;
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	f8b3 3072 	ldrh.w	r3, [r3, #114]	; 0x72
 8005508:	0a1b      	lsrs	r3, r3, #8
 800550a:	b29b      	uxth	r3, r3
 800550c:	b2da      	uxtb	r2, r3
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	f883 21ef 	strb.w	r2, [r3, #495]	; 0x1ef
		radio->tx_msg[41] = teleData->plex.accel_long;
 8005514:	687b      	ldr	r3, [r7, #4]
 8005516:	f8b3 3072 	ldrh.w	r3, [r3, #114]	; 0x72
 800551a:	b2da      	uxtb	r2, r3
 800551c:	68fb      	ldr	r3, [r7, #12]
 800551e:	f883 21f0 	strb.w	r2, [r3, #496]	; 0x1f0
		radio->tx_msg[42] = teleData->plex.accel_lat >> 8;
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	f8b3 3074 	ldrh.w	r3, [r3, #116]	; 0x74
 8005528:	0a1b      	lsrs	r3, r3, #8
 800552a:	b29b      	uxth	r3, r3
 800552c:	b2da      	uxtb	r2, r3
 800552e:	68fb      	ldr	r3, [r7, #12]
 8005530:	f883 21f1 	strb.w	r2, [r3, #497]	; 0x1f1
		radio->tx_msg[43] = teleData->plex.accel_lat;
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	f8b3 3074 	ldrh.w	r3, [r3, #116]	; 0x74
 800553a:	b2da      	uxtb	r2, r3
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	f883 21f2 	strb.w	r2, [r3, #498]	; 0x1f2
		radio->tx_msg[44] = teleData->plex.gps_speed >> 8;
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	f8b3 3076 	ldrh.w	r3, [r3, #118]	; 0x76
 8005548:	0a1b      	lsrs	r3, r3, #8
 800554a:	b29b      	uxth	r3, r3
 800554c:	b2da      	uxtb	r2, r3
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	f883 21f3 	strb.w	r2, [r3, #499]	; 0x1f3
		radio->tx_msg[45] = teleData->plex.gps_speed;
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	f8b3 3076 	ldrh.w	r3, [r3, #118]	; 0x76
 800555a:	b2da      	uxtb	r2, r3
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	f883 21f4 	strb.w	r2, [r3, #500]	; 0x1f4
		radio->tx_msg[46] = teleData->ccu.water_temp0;
 8005562:	687b      	ldr	r3, [r7, #4]
 8005564:	f893 206b 	ldrb.w	r2, [r3, #107]	; 0x6b
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	f883 21f5 	strb.w	r2, [r3, #501]	; 0x1f5
		radio->tx_msg[47] = teleData->ccu.water_temp1;
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	f893 206c 	ldrb.w	r2, [r3, #108]	; 0x6c
 8005574:	68fb      	ldr	r3, [r7, #12]
 8005576:	f883 21f6 	strb.w	r2, [r3, #502]	; 0x1f6
		radio->tx_msg[48] = RFU;
 800557a:	68fb      	ldr	r3, [r7, #12]
 800557c:	22ff      	movs	r2, #255	; 0xff
 800557e:	f883 21f7 	strb.w	r2, [r3, #503]	; 0x1f7
		radio->tx_msg[49] = RFU;
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	22ff      	movs	r2, #255	; 0xff
 8005586:	f883 21f8 	strb.w	r2, [r3, #504]	; 0x1f8
		break;
 800558a:	e185      	b.n	8005898 <CreateTeleTxMsg+0xc7c>
		radio->tx_msg[5]  = teleData->ir.infrared_fr >> 8;
 800558c:	687b      	ldr	r3, [r7, #4]
 800558e:	881b      	ldrh	r3, [r3, #0]
 8005590:	0a1b      	lsrs	r3, r3, #8
 8005592:	b29b      	uxth	r3, r3
 8005594:	b2da      	uxtb	r2, r3
 8005596:	68fb      	ldr	r3, [r7, #12]
 8005598:	f883 21cc 	strb.w	r2, [r3, #460]	; 0x1cc
		radio->tx_msg[6]  = teleData->ir.infrared_fr;
 800559c:	687b      	ldr	r3, [r7, #4]
 800559e:	881b      	ldrh	r3, [r3, #0]
 80055a0:	b2da      	uxtb	r2, r3
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	f883 21cd 	strb.w	r2, [r3, #461]	; 0x1cd
		radio->tx_msg[7]  = teleData->ir.infrared_fl >> 8;
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	885b      	ldrh	r3, [r3, #2]
 80055ac:	0a1b      	lsrs	r3, r3, #8
 80055ae:	b29b      	uxth	r3, r3
 80055b0:	b2da      	uxtb	r2, r3
 80055b2:	68fb      	ldr	r3, [r7, #12]
 80055b4:	f883 21ce 	strb.w	r2, [r3, #462]	; 0x1ce
		radio->tx_msg[8]  = teleData->ir.infrared_fl;
 80055b8:	687b      	ldr	r3, [r7, #4]
 80055ba:	885b      	ldrh	r3, [r3, #2]
 80055bc:	b2da      	uxtb	r2, r3
 80055be:	68fb      	ldr	r3, [r7, #12]
 80055c0:	f883 21cf 	strb.w	r2, [r3, #463]	; 0x1cf
		radio->tx_msg[9]  = teleData->ir.infrared_rr >> 8;
 80055c4:	687b      	ldr	r3, [r7, #4]
 80055c6:	889b      	ldrh	r3, [r3, #4]
 80055c8:	0a1b      	lsrs	r3, r3, #8
 80055ca:	b29b      	uxth	r3, r3
 80055cc:	b2da      	uxtb	r2, r3
 80055ce:	68fb      	ldr	r3, [r7, #12]
 80055d0:	f883 21d0 	strb.w	r2, [r3, #464]	; 0x1d0
		radio->tx_msg[10] = teleData->ir.infrared_rr;
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	889b      	ldrh	r3, [r3, #4]
 80055d8:	b2da      	uxtb	r2, r3
 80055da:	68fb      	ldr	r3, [r7, #12]
 80055dc:	f883 21d1 	strb.w	r2, [r3, #465]	; 0x1d1
		radio->tx_msg[11] = teleData->ir.infrared_rl >> 8;
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	88db      	ldrh	r3, [r3, #6]
 80055e4:	0a1b      	lsrs	r3, r3, #8
 80055e6:	b29b      	uxth	r3, r3
 80055e8:	b2da      	uxtb	r2, r3
 80055ea:	68fb      	ldr	r3, [r7, #12]
 80055ec:	f883 21d2 	strb.w	r2, [r3, #466]	; 0x1d2
		radio->tx_msg[12] = teleData->ir.infrared_rl;
 80055f0:	687b      	ldr	r3, [r7, #4]
 80055f2:	88db      	ldrh	r3, [r3, #6]
 80055f4:	b2da      	uxtb	r2, r3
 80055f6:	68fb      	ldr	r3, [r7, #12]
 80055f8:	f883 21d3 	strb.w	r2, [r3, #467]	; 0x1d3
		radio->tx_msg[13] = teleData->ccu.linear_rr >> 8;
 80055fc:	687b      	ldr	r3, [r7, #4]
 80055fe:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
 8005602:	0a1b      	lsrs	r3, r3, #8
 8005604:	b29b      	uxth	r3, r3
 8005606:	b2da      	uxtb	r2, r3
 8005608:	68fb      	ldr	r3, [r7, #12]
 800560a:	f883 21d4 	strb.w	r2, [r3, #468]	; 0x1d4
		radio->tx_msg[14] = teleData->ccu.linear_rr;
 800560e:	687b      	ldr	r3, [r7, #4]
 8005610:	f8b3 3070 	ldrh.w	r3, [r3, #112]	; 0x70
 8005614:	b2da      	uxtb	r2, r3
 8005616:	68fb      	ldr	r3, [r7, #12]
 8005618:	f883 21d5 	strb.w	r2, [r3, #469]	; 0x1d5
		radio->tx_msg[15] = teleData->ccu.linear_rl >> 8;
 800561c:	687b      	ldr	r3, [r7, #4]
 800561e:	f8b3 306e 	ldrh.w	r3, [r3, #110]	; 0x6e
 8005622:	0a1b      	lsrs	r3, r3, #8
 8005624:	b29b      	uxth	r3, r3
 8005626:	b2da      	uxtb	r2, r3
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	f883 21d6 	strb.w	r2, [r3, #470]	; 0x1d6
		radio->tx_msg[16] = teleData->ccu.linear_rl;
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	f8b3 306e 	ldrh.w	r3, [r3, #110]	; 0x6e
 8005634:	b2da      	uxtb	r2, r3
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	f883 21d7 	strb.w	r2, [r3, #471]	; 0x1d7
		radio->tx_msg[17] = (teleData->asb.manual_begin 		 << 5) |
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005642:	f3c3 0300 	ubfx	r3, r3, #0, #1
 8005646:	b2db      	uxtb	r3, r3
 8005648:	015b      	lsls	r3, r3, #5
 800564a:	b25a      	sxtb	r2, r3
							(teleData->asb.manual_asms_off 		 << 4) |
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005652:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8005656:	b2db      	uxtb	r3, r3
 8005658:	011b      	lsls	r3, r3, #4
		radio->tx_msg[17] = (teleData->asb.manual_begin 		 << 5) |
 800565a:	b25b      	sxtb	r3, r3
 800565c:	4313      	orrs	r3, r2
 800565e:	b25a      	sxtb	r2, r3
							(teleData->asb.manual_mission_error	 << 3) |
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8005666:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800566a:	b2db      	uxtb	r3, r3
 800566c:	00db      	lsls	r3, r3, #3
							(teleData->asb.manual_asms_off 		 << 4) |
 800566e:	b25b      	sxtb	r3, r3
 8005670:	4313      	orrs	r3, r2
 8005672:	b25a      	sxtb	r2, r3
							(teleData->asb.manual_asms_off_error << 2) |
 8005674:	687b      	ldr	r3, [r7, #4]
 8005676:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800567a:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 800567e:	b2db      	uxtb	r3, r3
 8005680:	009b      	lsls	r3, r3, #2
							(teleData->asb.manual_mission_error	 << 3) |
 8005682:	b25b      	sxtb	r3, r3
 8005684:	4313      	orrs	r3, r2
 8005686:	b25a      	sxtb	r2, r3
							(teleData->asb.vcu_alive	 		 << 1) |
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800568e:	f3c3 1380 	ubfx	r3, r3, #6, #1
 8005692:	b2db      	uxtb	r3, r3
 8005694:	005b      	lsls	r3, r3, #1
							(teleData->asb.manual_asms_off_error << 2) |
 8005696:	b25b      	sxtb	r3, r3
 8005698:	4313      	orrs	r3, r2
 800569a:	b25a      	sxtb	r2, r3
							(teleData->asb.accu_alive	 		 << 0);
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 80056a2:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 80056a6:	b2db      	uxtb	r3, r3
 80056a8:	b25b      	sxtb	r3, r3
							(teleData->asb.vcu_alive	 		 << 1) |
 80056aa:	4313      	orrs	r3, r2
 80056ac:	b25b      	sxtb	r3, r3
 80056ae:	b2da      	uxtb	r2, r3
		radio->tx_msg[17] = (teleData->asb.manual_begin 		 << 5) |
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	f883 21d8 	strb.w	r2, [r3, #472]	; 0x1d8
		radio->tx_msg[18] = teleData->tpms.fr_temp >> 8;
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80056ba:	0a1b      	lsrs	r3, r3, #8
 80056bc:	b29b      	uxth	r3, r3
 80056be:	b2da      	uxtb	r2, r3
 80056c0:	68fb      	ldr	r3, [r7, #12]
 80056c2:	f883 21d9 	strb.w	r2, [r3, #473]	; 0x1d9
		radio->tx_msg[19] = teleData->tpms.fr_temp;
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 80056ca:	b2da      	uxtb	r2, r3
 80056cc:	68fb      	ldr	r3, [r7, #12]
 80056ce:	f883 21da 	strb.w	r2, [r3, #474]	; 0x1da
		radio->tx_msg[20] = teleData->tpms.fr_press >> 8;
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	8f5b      	ldrh	r3, [r3, #58]	; 0x3a
 80056d6:	0a1b      	lsrs	r3, r3, #8
 80056d8:	b29b      	uxth	r3, r3
 80056da:	b2da      	uxtb	r2, r3
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	f883 21db 	strb.w	r2, [r3, #475]	; 0x1db
		radio->tx_msg[21] = teleData->tpms.fr_press;
 80056e2:	687b      	ldr	r3, [r7, #4]
 80056e4:	8f5b      	ldrh	r3, [r3, #58]	; 0x3a
 80056e6:	b2da      	uxtb	r2, r3
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	f883 21dc 	strb.w	r2, [r3, #476]	; 0x1dc
		radio->tx_msg[22] = teleData->tpms.fl_temp >> 8;
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 80056f4:	0a1b      	lsrs	r3, r3, #8
 80056f6:	b29b      	uxth	r3, r3
 80056f8:	b2da      	uxtb	r2, r3
 80056fa:	68fb      	ldr	r3, [r7, #12]
 80056fc:	f883 21dd 	strb.w	r2, [r3, #477]	; 0x1dd
		radio->tx_msg[23] = teleData->tpms.fl_temp;
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8005706:	b2da      	uxtb	r2, r3
 8005708:	68fb      	ldr	r3, [r7, #12]
 800570a:	f883 21de 	strb.w	r2, [r3, #478]	; 0x1de
		radio->tx_msg[24] = teleData->tpms.fl_press >> 8;
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005712:	0a1b      	lsrs	r3, r3, #8
 8005714:	b29b      	uxth	r3, r3
 8005716:	b2da      	uxtb	r2, r3
 8005718:	68fb      	ldr	r3, [r7, #12]
 800571a:	f883 21df 	strb.w	r2, [r3, #479]	; 0x1df
		radio->tx_msg[25] = teleData->tpms.fl_press;
 800571e:	687b      	ldr	r3, [r7, #4]
 8005720:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005722:	b2da      	uxtb	r2, r3
 8005724:	68fb      	ldr	r3, [r7, #12]
 8005726:	f883 21e0 	strb.w	r2, [r3, #480]	; 0x1e0
		radio->tx_msg[26] = teleData->tpms.rr_temp >> 8;
 800572a:	687b      	ldr	r3, [r7, #4]
 800572c:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8005730:	0a1b      	lsrs	r3, r3, #8
 8005732:	b29b      	uxth	r3, r3
 8005734:	b2da      	uxtb	r2, r3
 8005736:	68fb      	ldr	r3, [r7, #12]
 8005738:	f883 21e1 	strb.w	r2, [r3, #481]	; 0x1e1
		radio->tx_msg[27] = teleData->tpms.rr_temp;
 800573c:	687b      	ldr	r3, [r7, #4]
 800573e:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8005742:	b2da      	uxtb	r2, r3
 8005744:	68fb      	ldr	r3, [r7, #12]
 8005746:	f883 21e2 	strb.w	r2, [r3, #482]	; 0x1e2
		radio->tx_msg[28] = teleData->tpms.rr_press >> 8;
 800574a:	687b      	ldr	r3, [r7, #4]
 800574c:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8005750:	0a1b      	lsrs	r3, r3, #8
 8005752:	b29b      	uxth	r3, r3
 8005754:	b2da      	uxtb	r2, r3
 8005756:	68fb      	ldr	r3, [r7, #12]
 8005758:	f883 21e3 	strb.w	r2, [r3, #483]	; 0x1e3
		radio->tx_msg[29] = teleData->tpms.rr_press;
 800575c:	687b      	ldr	r3, [r7, #4]
 800575e:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8005762:	b2da      	uxtb	r2, r3
 8005764:	68fb      	ldr	r3, [r7, #12]
 8005766:	f883 21e4 	strb.w	r2, [r3, #484]	; 0x1e4
		radio->tx_msg[30] = teleData->tpms.rl_temp >> 8;
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
 8005770:	0a1b      	lsrs	r3, r3, #8
 8005772:	b29b      	uxth	r3, r3
 8005774:	b2da      	uxtb	r2, r3
 8005776:	68fb      	ldr	r3, [r7, #12]
 8005778:	f883 21e5 	strb.w	r2, [r3, #485]	; 0x1e5
		radio->tx_msg[31] = teleData->tpms.rl_temp;
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
 8005782:	b2da      	uxtb	r2, r3
 8005784:	68fb      	ldr	r3, [r7, #12]
 8005786:	f883 21e6 	strb.w	r2, [r3, #486]	; 0x1e6
		radio->tx_msg[32] = teleData->tpms.rl_press >> 8;
 800578a:	687b      	ldr	r3, [r7, #4]
 800578c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8005790:	0a1b      	lsrs	r3, r3, #8
 8005792:	b29b      	uxth	r3, r3
 8005794:	b2da      	uxtb	r2, r3
 8005796:	68fb      	ldr	r3, [r7, #12]
 8005798:	f883 21e7 	strb.w	r2, [r3, #487]	; 0x1e7
		radio->tx_msg[33] = teleData->tpms.rl_press;
 800579c:	687b      	ldr	r3, [r7, #4]
 800579e:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 80057a2:	b2da      	uxtb	r2, r3
 80057a4:	68fb      	ldr	r3, [r7, #12]
 80057a6:	f883 21e8 	strb.w	r2, [r3, #488]	; 0x1e8
		radio->tx_msg[34] = (teleData->vcu.bspd_ok  		  << 7) |
 80057aa:	687b      	ldr	r3, [r7, #4]
 80057ac:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 80057b0:	f3c3 0340 	ubfx	r3, r3, #1, #1
 80057b4:	b2db      	uxtb	r3, r3
 80057b6:	01db      	lsls	r3, r3, #7
 80057b8:	b25a      	sxtb	r2, r3
							(teleData->vcu.asb_ok   		  << 6) |
 80057ba:	687b      	ldr	r3, [r7, #4]
 80057bc:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 80057c0:	f3c3 0300 	ubfx	r3, r3, #0, #1
 80057c4:	b2db      	uxtb	r3, r3
 80057c6:	019b      	lsls	r3, r3, #6
		radio->tx_msg[34] = (teleData->vcu.bspd_ok  		  << 7) |
 80057c8:	b25b      	sxtb	r3, r3
 80057ca:	4313      	orrs	r3, r2
 80057cc:	b25a      	sxtb	r2, r3
							(teleData->accu.imd_ok  		  << 4) |
 80057ce:	687b      	ldr	r3, [r7, #4]
 80057d0:	7b1b      	ldrb	r3, [r3, #12]
 80057d2:	f3c3 1340 	ubfx	r3, r3, #5, #1
 80057d6:	b2db      	uxtb	r3, r3
 80057d8:	011b      	lsls	r3, r3, #4
							(teleData->vcu.asb_ok   		  << 6) |
 80057da:	b25b      	sxtb	r3, r3
 80057dc:	4313      	orrs	r3, r2
 80057de:	b25a      	sxtb	r2, r3
							(teleData->accu.ams_ok 			  << 3) |
 80057e0:	687b      	ldr	r3, [r7, #4]
 80057e2:	7b1b      	ldrb	r3, [r3, #12]
 80057e4:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80057e8:	b2db      	uxtb	r3, r3
 80057ea:	00db      	lsls	r3, r3, #3
							(teleData->accu.imd_ok  		  << 4) |
 80057ec:	b25b      	sxtb	r3, r3
 80057ee:	4313      	orrs	r3, r2
 80057f0:	b25a      	sxtb	r2, r3
							(teleData->dash.bots_sd_closed    << 2) |
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 80057f8:	f3c3 1380 	ubfx	r3, r3, #6, #1
 80057fc:	b2db      	uxtb	r3, r3
 80057fe:	009b      	lsls	r3, r3, #2
							(teleData->accu.ams_ok 			  << 3) |
 8005800:	b25b      	sxtb	r3, r3
 8005802:	4313      	orrs	r3, r2
 8005804:	b25a      	sxtb	r2, r3
							(teleData->dash.cockpit_sd_closed << 1) |
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 800580c:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8005810:	b2db      	uxtb	r3, r3
 8005812:	005b      	lsls	r3, r3, #1
							(teleData->dash.bots_sd_closed    << 2) |
 8005814:	b25b      	sxtb	r3, r3
 8005816:	4313      	orrs	r3, r2
 8005818:	b25a      	sxtb	r2, r3
							(teleData->dash.inertia_sd_closed << 0);
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8005820:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8005824:	b2db      	uxtb	r3, r3
 8005826:	b25b      	sxtb	r3, r3
							(teleData->dash.cockpit_sd_closed << 1) |
 8005828:	4313      	orrs	r3, r2
 800582a:	b25b      	sxtb	r3, r3
 800582c:	b2da      	uxtb	r2, r3
		radio->tx_msg[34] = (teleData->vcu.bspd_ok  		  << 7) |
 800582e:	68fb      	ldr	r3, [r7, #12]
 8005830:	f883 21e9 	strb.w	r2, [r3, #489]	; 0x1e9
		radio->tx_msg[35] = (teleData->vcu.sd_closed       	<< 4) |
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	f893 304a 	ldrb.w	r3, [r3, #74]	; 0x4a
 800583a:	f3c3 0380 	ubfx	r3, r3, #2, #1
 800583e:	b2db      	uxtb	r3, r3
 8005840:	011b      	lsls	r3, r3, #4
 8005842:	b25a      	sxtb	r2, r3
							(teleData->asb.right_sd_closed 	<< 3) |
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800584a:	f3c3 1300 	ubfx	r3, r3, #4, #1
 800584e:	b2db      	uxtb	r3, r3
 8005850:	00db      	lsls	r3, r3, #3
		radio->tx_msg[35] = (teleData->vcu.sd_closed       	<< 4) |
 8005852:	b25b      	sxtb	r3, r3
 8005854:	4313      	orrs	r3, r2
 8005856:	b25a      	sxtb	r2, r3
							(teleData->asb.left_sd_closed 	<< 2) |
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 800585e:	f3c3 1340 	ubfx	r3, r3, #5, #1
 8005862:	b2db      	uxtb	r3, r3
 8005864:	009b      	lsls	r3, r3, #2
							(teleData->asb.right_sd_closed 	<< 3) |
 8005866:	b25b      	sxtb	r3, r3
 8005868:	4313      	orrs	r3, r2
 800586a:	b25a      	sxtb	r2, r3
							(teleData->accu.air_m_state   	<< 1) |
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	7b1b      	ldrb	r3, [r3, #12]
 8005870:	f3c3 0340 	ubfx	r3, r3, #1, #1
 8005874:	b2db      	uxtb	r3, r3
 8005876:	005b      	lsls	r3, r3, #1
							(teleData->asb.left_sd_closed 	<< 2) |
 8005878:	b25b      	sxtb	r3, r3
 800587a:	4313      	orrs	r3, r2
 800587c:	b25a      	sxtb	r2, r3
							(teleData->accu.air_p_state   	<< 0);
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	7b1b      	ldrb	r3, [r3, #12]
 8005882:	f3c3 03c0 	ubfx	r3, r3, #3, #1
 8005886:	b2db      	uxtb	r3, r3
 8005888:	b25b      	sxtb	r3, r3
							(teleData->accu.air_m_state   	<< 1) |
 800588a:	4313      	orrs	r3, r2
 800588c:	b25b      	sxtb	r3, r3
 800588e:	b2da      	uxtb	r2, r3
		radio->tx_msg[35] = (teleData->vcu.sd_closed       	<< 4) |
 8005890:	68fb      	ldr	r3, [r7, #12]
 8005892:	f883 21ea 	strb.w	r2, [r3, #490]	; 0x1ea
		break;
 8005896:	bf00      	nop
}
 8005898:	bf00      	nop
 800589a:	3714      	adds	r7, #20
 800589c:	46bd      	mov	sp, r7
 800589e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80058a2:	4770      	bx	lr

080058a4 <HAL_GPIO_EXTI_Callback>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80058a4:	b580      	push	{r7, lr}
 80058a6:	b082      	sub	sp, #8
 80058a8:	af00      	add	r7, sp, #0
 80058aa:	4603      	mov	r3, r0
 80058ac:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin == mcu.dio2.pin)
 80058ae:	4b0b      	ldr	r3, [pc, #44]	; (80058dc <HAL_GPIO_EXTI_Callback+0x38>)
 80058b0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80058b2:	88fa      	ldrh	r2, [r7, #6]
 80058b4:	429a      	cmp	r2, r3
 80058b6:	d104      	bne.n	80058c2 <HAL_GPIO_EXTI_Callback+0x1e>
	{
		SX1262dio2Interrupt(&mcu, &radio);
 80058b8:	4909      	ldr	r1, [pc, #36]	; (80058e0 <HAL_GPIO_EXTI_Callback+0x3c>)
 80058ba:	4808      	ldr	r0, [pc, #32]	; (80058dc <HAL_GPIO_EXTI_Callback+0x38>)
 80058bc:	f7fc fea7 	bl	800260e <SX1262dio2Interrupt>

	else if (GPIO_Pin == mcu.dio1.pin)
	{
		radio.msg_pending = true;
	}
}
 80058c0:	e008      	b.n	80058d4 <HAL_GPIO_EXTI_Callback+0x30>
	else if (GPIO_Pin == mcu.dio1.pin)
 80058c2:	4b06      	ldr	r3, [pc, #24]	; (80058dc <HAL_GPIO_EXTI_Callback+0x38>)
 80058c4:	8c1b      	ldrh	r3, [r3, #32]
 80058c6:	88fa      	ldrh	r2, [r7, #6]
 80058c8:	429a      	cmp	r2, r3
 80058ca:	d103      	bne.n	80058d4 <HAL_GPIO_EXTI_Callback+0x30>
		radio.msg_pending = true;
 80058cc:	4b04      	ldr	r3, [pc, #16]	; (80058e0 <HAL_GPIO_EXTI_Callback+0x3c>)
 80058ce:	2201      	movs	r2, #1
 80058d0:	f883 23c5 	strb.w	r2, [r3, #965]	; 0x3c5
}
 80058d4:	bf00      	nop
 80058d6:	3708      	adds	r7, #8
 80058d8:	46bd      	mov	sp, r7
 80058da:	bd80      	pop	{r7, pc}
 80058dc:	200003e0 	.word	0x200003e0
 80058e0:	20000444 	.word	0x20000444

080058e4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80058e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80058e8:	b0a3      	sub	sp, #140	; 0x8c
 80058ea:	af16      	add	r7, sp, #88	; 0x58
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80058ec:	f001 fc8a 	bl	8007204 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80058f0:	f000 fb4c 	bl	8005f8c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80058f4:	f000 fdbe 	bl	8006474 <MX_GPIO_Init>
  MX_DMA_Init();
 80058f8:	f000 fd94 	bl	8006424 <MX_DMA_Init>
  MX_SPI1_Init();
 80058fc:	f000 fd5c 	bl	80063b8 <MX_SPI1_Init>
  MX_CAN1_Init();
 8005900:	f000 fc8a 	bl	8006218 <MX_CAN1_Init>
  MX_CAN2_Init();
 8005904:	f000 fcf0 	bl	80062e8 <MX_CAN2_Init>
  MX_ADC1_Init();
 8005908:	f000 fbaa 	bl	8006060 <MX_ADC1_Init>
  MX_ADC2_Init();
 800590c:	f000 fc16 	bl	800613c <MX_ADC2_Init>
  MX_USB_DEVICE_Init();
 8005910:	f009 fb8a 	bl	800f028 <MX_USB_DEVICE_Init>
  /* USER CODE BEGIN 2 */
  /* MCU Configuration--------------------------------------------------------*/
  MCU_init(&mcu, &hspi1, GPIOA, NSS_Pin, GPIOB, NRESET_Pin, GPIOB,
 8005914:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005918:	9315      	str	r3, [sp, #84]	; 0x54
 800591a:	4b65      	ldr	r3, [pc, #404]	; (8005ab0 <main+0x1cc>)
 800591c:	9314      	str	r3, [sp, #80]	; 0x50
 800591e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005922:	9313      	str	r3, [sp, #76]	; 0x4c
 8005924:	4b63      	ldr	r3, [pc, #396]	; (8005ab4 <main+0x1d0>)
 8005926:	9312      	str	r3, [sp, #72]	; 0x48
 8005928:	2304      	movs	r3, #4
 800592a:	9311      	str	r3, [sp, #68]	; 0x44
 800592c:	4b62      	ldr	r3, [pc, #392]	; (8005ab8 <main+0x1d4>)
 800592e:	9310      	str	r3, [sp, #64]	; 0x40
 8005930:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005934:	930f      	str	r3, [sp, #60]	; 0x3c
 8005936:	4b5e      	ldr	r3, [pc, #376]	; (8005ab0 <main+0x1cc>)
 8005938:	930e      	str	r3, [sp, #56]	; 0x38
 800593a:	2380      	movs	r3, #128	; 0x80
 800593c:	930d      	str	r3, [sp, #52]	; 0x34
 800593e:	4b5c      	ldr	r3, [pc, #368]	; (8005ab0 <main+0x1cc>)
 8005940:	930c      	str	r3, [sp, #48]	; 0x30
 8005942:	2340      	movs	r3, #64	; 0x40
 8005944:	930b      	str	r3, [sp, #44]	; 0x2c
 8005946:	4b5a      	ldr	r3, [pc, #360]	; (8005ab0 <main+0x1cc>)
 8005948:	930a      	str	r3, [sp, #40]	; 0x28
 800594a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800594e:	9309      	str	r3, [sp, #36]	; 0x24
 8005950:	4b5a      	ldr	r3, [pc, #360]	; (8005abc <main+0x1d8>)
 8005952:	9308      	str	r3, [sp, #32]
 8005954:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005958:	9307      	str	r3, [sp, #28]
 800595a:	4b58      	ldr	r3, [pc, #352]	; (8005abc <main+0x1d8>)
 800595c:	9306      	str	r3, [sp, #24]
 800595e:	2304      	movs	r3, #4
 8005960:	9305      	str	r3, [sp, #20]
 8005962:	4b56      	ldr	r3, [pc, #344]	; (8005abc <main+0x1d8>)
 8005964:	9304      	str	r3, [sp, #16]
 8005966:	2302      	movs	r3, #2
 8005968:	9303      	str	r3, [sp, #12]
 800596a:	4b54      	ldr	r3, [pc, #336]	; (8005abc <main+0x1d8>)
 800596c:	9302      	str	r3, [sp, #8]
 800596e:	2301      	movs	r3, #1
 8005970:	9301      	str	r3, [sp, #4]
 8005972:	4b52      	ldr	r3, [pc, #328]	; (8005abc <main+0x1d8>)
 8005974:	9300      	str	r3, [sp, #0]
 8005976:	2310      	movs	r3, #16
 8005978:	4a4e      	ldr	r2, [pc, #312]	; (8005ab4 <main+0x1d0>)
 800597a:	4951      	ldr	r1, [pc, #324]	; (8005ac0 <main+0x1dc>)
 800597c:	4851      	ldr	r0, [pc, #324]	; (8005ac4 <main+0x1e0>)
 800597e:	f7fc fe94 	bl	80026aa <MCU_init>
		   GPIOC, RF_SWITCH_Pin, GPIOC, RF_SWITCH_SUPP_Pin,
		   GPIOC, RADIO_TX_LED_Pin, GPIOD, RADIO_RX_LED_Pin,
		   GPIOA, CAN_TX_LED_Pin, GPIOC, CAN_RX_LED_Pin);

  /* TPMS Initializations */
  init_packet_types();
 8005982:	f7fd fcf7 	bl	8003374 <init_packet_types>
  TpmsStructsInit();
 8005986:	f7fd fc6d 	bl	8003264 <TpmsStructsInit>
  radio.per.first_reception = true;
 800598a:	4a4f      	ldr	r2, [pc, #316]	; (8005ac8 <main+0x1e4>)
 800598c:	2301      	movs	r3, #1
 800598e:	f882 3460 	strb.w	r3, [r2, #1120]	; 0x460

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */


  SX1262GfskInit(&mcu, &radio, prev_dbm, prev_freq);
 8005992:	4b4e      	ldr	r3, [pc, #312]	; (8005acc <main+0x1e8>)
 8005994:	f993 2000 	ldrsb.w	r2, [r3]
 8005998:	4b4d      	ldr	r3, [pc, #308]	; (8005ad0 <main+0x1ec>)
 800599a:	881b      	ldrh	r3, [r3, #0]
 800599c:	494a      	ldr	r1, [pc, #296]	; (8005ac8 <main+0x1e4>)
 800599e:	4849      	ldr	r0, [pc, #292]	; (8005ac4 <main+0x1e0>)
 80059a0:	f7fc fc1a 	bl	80021d8 <SX1262GfskInit>
  //SX1262LoRaInit(&mcu, &radio, 22, 900);

  rx_tick = HAL_GetTick();
 80059a4:	f001 fc94 	bl	80072d0 <HAL_GetTick>
 80059a8:	4602      	mov	r2, r0
 80059aa:	4b4a      	ldr	r3, [pc, #296]	; (8005ad4 <main+0x1f0>)
 80059ac:	601a      	str	r2, [r3, #0]


  HAL_ADC_Start_DMA(&hadc1, (uint32_t*)adc1results, 3);
 80059ae:	2203      	movs	r2, #3
 80059b0:	4949      	ldr	r1, [pc, #292]	; (8005ad8 <main+0x1f4>)
 80059b2:	484a      	ldr	r0, [pc, #296]	; (8005adc <main+0x1f8>)
 80059b4:	f001 fd00 	bl	80073b8 <HAL_ADC_Start_DMA>
  HAL_ADC_Start_DMA(&hadc2, (uint32_t*)adc2results, 3);
 80059b8:	2203      	movs	r2, #3
 80059ba:	4949      	ldr	r1, [pc, #292]	; (8005ae0 <main+0x1fc>)
 80059bc:	4849      	ldr	r0, [pc, #292]	; (8005ae4 <main+0x200>)
 80059be:	f001 fcfb 	bl	80073b8 <HAL_ADC_Start_DMA>
	  SX1262SetRxDutyCycle(&mcu, &radio, 200, 200);
#endif

  while (1)
  {
	if (radio.opMode != SLEEP_MODE)
 80059c2:	4b41      	ldr	r3, [pc, #260]	; (8005ac8 <main+0x1e4>)
 80059c4:	f893 3444 	ldrb.w	r3, [r3, #1092]	; 0x444
 80059c8:	2b08      	cmp	r3, #8
 80059ca:	d003      	beq.n	80059d4 <main+0xf0>
		SX1262GetStatus(&mcu, &radio);
 80059cc:	493e      	ldr	r1, [pc, #248]	; (8005ac8 <main+0x1e4>)
 80059ce:	483d      	ldr	r0, [pc, #244]	; (8005ac4 <main+0x1e0>)
 80059d0:	f7fc fb4c 	bl	800206c <SX1262GetStatus>

	SX1262GetStatus(&mcu, &radio);
#endif

#if (FUNCTION == TELEMETRY_TPMS)
		if (tpms_msg_sent)  // TPMS sent message and a new time has to be decided
 80059d4:	4b44      	ldr	r3, [pc, #272]	; (8005ae8 <main+0x204>)
 80059d6:	781b      	ldrb	r3, [r3, #0]
 80059d8:	2b00      	cmp	r3, #0
 80059da:	d010      	beq.n	80059fe <main+0x11a>
		{
			tpms_msg_time = HAL_GetTick() + tpms_interval;
 80059dc:	f001 fc78 	bl	80072d0 <HAL_GetTick>
 80059e0:	4602      	mov	r2, r0
 80059e2:	4b42      	ldr	r3, [pc, #264]	; (8005aec <main+0x208>)
 80059e4:	681b      	ldr	r3, [r3, #0]
 80059e6:	4413      	add	r3, r2
 80059e8:	2200      	movs	r2, #0
 80059ea:	623b      	str	r3, [r7, #32]
 80059ec:	627a      	str	r2, [r7, #36]	; 0x24
 80059ee:	4b40      	ldr	r3, [pc, #256]	; (8005af0 <main+0x20c>)
 80059f0:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 80059f4:	e9c3 1200 	strd	r1, r2, [r3]
			tpms_msg_sent = false;
 80059f8:	4a3b      	ldr	r2, [pc, #236]	; (8005ae8 <main+0x204>)
 80059fa:	2300      	movs	r3, #0
 80059fc:	7013      	strb	r3, [r2, #0]
		}

		if (HAL_GetTick() - tx_tick > tx_msg_delay)
 80059fe:	f001 fc67 	bl	80072d0 <HAL_GetTick>
 8005a02:	4602      	mov	r2, r0
 8005a04:	4b3b      	ldr	r3, [pc, #236]	; (8005af4 <main+0x210>)
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	1ad2      	subs	r2, r2, r3
 8005a0a:	4b3b      	ldr	r3, [pc, #236]	; (8005af8 <main+0x214>)
 8005a0c:	881b      	ldrh	r3, [r3, #0]
 8005a0e:	429a      	cmp	r2, r3
 8005a10:	f240 80e5 	bls.w	8005bde <main+0x2fa>
		{
			radio.tx_interval = HAL_GetTick() - tx_tick;
 8005a14:	f001 fc5c 	bl	80072d0 <HAL_GetTick>
 8005a18:	4603      	mov	r3, r0
 8005a1a:	b29a      	uxth	r2, r3
 8005a1c:	4b35      	ldr	r3, [pc, #212]	; (8005af4 <main+0x210>)
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	b29b      	uxth	r3, r3
 8005a22:	1ad3      	subs	r3, r2, r3
 8005a24:	b29b      	uxth	r3, r3
 8005a26:	4a28      	ldr	r2, [pc, #160]	; (8005ac8 <main+0x1e4>)
 8005a28:	f8a2 3472 	strh.w	r3, [r2, #1138]	; 0x472
			tx_tick = HAL_GetTick();
 8005a2c:	f001 fc50 	bl	80072d0 <HAL_GetTick>
 8005a30:	4602      	mov	r2, r0
 8005a32:	4b30      	ldr	r3, [pc, #192]	; (8005af4 <main+0x210>)
 8005a34:	601a      	str	r2, [r3, #0]

			/* TPMS Tx Message */
			SX1262SetFunction(&mcu, &radio, TPMS);
 8005a36:	2201      	movs	r2, #1
 8005a38:	4923      	ldr	r1, [pc, #140]	; (8005ac8 <main+0x1e4>)
 8005a3a:	4822      	ldr	r0, [pc, #136]	; (8005ac4 <main+0x1e0>)
 8005a3c:	f7fd fd30 	bl	80034a0 <SX1262SetFunction>

			if (config)
 8005a40:	4b2e      	ldr	r3, [pc, #184]	; (8005afc <main+0x218>)
 8005a42:	781b      	ldrb	r3, [r3, #0]
 8005a44:	2b00      	cmp	r3, #0
 8005a46:	d009      	beq.n	8005a5c <main+0x178>
				SX1262CreateTpmsCfgrMsg(&radio, tpms_power, tpms_freq);
 8005a48:	4b2d      	ldr	r3, [pc, #180]	; (8005b00 <main+0x21c>)
 8005a4a:	f993 1000 	ldrsb.w	r1, [r3]
 8005a4e:	4b2d      	ldr	r3, [pc, #180]	; (8005b04 <main+0x220>)
 8005a50:	881b      	ldrh	r3, [r3, #0]
 8005a52:	461a      	mov	r2, r3
 8005a54:	481c      	ldr	r0, [pc, #112]	; (8005ac8 <main+0x1e4>)
 8005a56:	f7fd fcfd 	bl	8003454 <SX1262CreateTpmsCfgrMsg>
 8005a5a:	e06c      	b.n	8005b36 <main+0x252>
			else
			{
				wait_time = tpms_msg_time - HAL_GetTick() - 130; // -40
 8005a5c:	4b24      	ldr	r3, [pc, #144]	; (8005af0 <main+0x20c>)
 8005a5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a62:	4614      	mov	r4, r2
 8005a64:	f001 fc34 	bl	80072d0 <HAL_GetTick>
 8005a68:	4603      	mov	r3, r0
 8005a6a:	1ae3      	subs	r3, r4, r3
 8005a6c:	f1a3 0282 	sub.w	r2, r3, #130	; 0x82
 8005a70:	4b25      	ldr	r3, [pc, #148]	; (8005b08 <main+0x224>)
 8005a72:	601a      	str	r2, [r3, #0]
				switch (tpms_interval)
 8005a74:	4b1d      	ldr	r3, [pc, #116]	; (8005aec <main+0x208>)
 8005a76:	681a      	ldr	r2, [r3, #0]
 8005a78:	f640 33b8 	movw	r3, #3000	; 0xbb8
 8005a7c:	429a      	cmp	r2, r3
 8005a7e:	d012      	beq.n	8005aa6 <main+0x1c2>
 8005a80:	f640 33b8 	movw	r3, #3000	; 0xbb8
 8005a84:	429a      	cmp	r2, r3
 8005a86:	d843      	bhi.n	8005b10 <main+0x22c>
 8005a88:	f5b2 7ffa 	cmp.w	r2, #500	; 0x1f4
 8005a8c:	d003      	beq.n	8005a96 <main+0x1b2>
 8005a8e:	f5b2 7f7a 	cmp.w	r2, #1000	; 0x3e8
 8005a92:	d004      	beq.n	8005a9e <main+0x1ba>
				case (3000):    /* 3.0s */
		             tx_freq = SAMPLE_3_0;
					 break;

				default:
					 break;
 8005a94:	e03c      	b.n	8005b10 <main+0x22c>
					 tx_freq = SAMPLE_0_5;
 8005a96:	4a1d      	ldr	r2, [pc, #116]	; (8005b0c <main+0x228>)
 8005a98:	2301      	movs	r3, #1
 8005a9a:	7013      	strb	r3, [r2, #0]
					 break;
 8005a9c:	e039      	b.n	8005b12 <main+0x22e>
					 tx_freq = SAMPLE_1_0;
 8005a9e:	4a1b      	ldr	r2, [pc, #108]	; (8005b0c <main+0x228>)
 8005aa0:	2302      	movs	r3, #2
 8005aa2:	7013      	strb	r3, [r2, #0]
					 break;
 8005aa4:	e035      	b.n	8005b12 <main+0x22e>
		             tx_freq = SAMPLE_3_0;
 8005aa6:	4a19      	ldr	r2, [pc, #100]	; (8005b0c <main+0x228>)
 8005aa8:	2303      	movs	r3, #3
 8005aaa:	7013      	strb	r3, [r2, #0]
					 break;
 8005aac:	e031      	b.n	8005b12 <main+0x22e>
 8005aae:	bf00      	nop
 8005ab0:	40020800 	.word	0x40020800
 8005ab4:	40020000 	.word	0x40020000
 8005ab8:	40020c00 	.word	0x40020c00
 8005abc:	40020400 	.word	0x40020400
 8005ac0:	20000ad4 	.word	0x20000ad4
 8005ac4:	200003e0 	.word	0x200003e0
 8005ac8:	20000444 	.word	0x20000444
 8005acc:	2000001d 	.word	0x2000001d
 8005ad0:	20000020 	.word	0x20000020
 8005ad4:	20000bb8 	.word	0x20000bb8
 8005ad8:	20000b2c 	.word	0x20000b2c
 8005adc:	20000934 	.word	0x20000934
 8005ae0:	20000b50 	.word	0x20000b50
 8005ae4:	2000097c 	.word	0x2000097c
 8005ae8:	2000000e 	.word	0x2000000e
 8005aec:	20000010 	.word	0x20000010
 8005af0:	20000b88 	.word	0x20000b88
 8005af4:	20000bbc 	.word	0x20000bbc
 8005af8:	2000001a 	.word	0x2000001a
 8005afc:	20000b94 	.word	0x20000b94
 8005b00:	20000014 	.word	0x20000014
 8005b04:	20000016 	.word	0x20000016
 8005b08:	20000b90 	.word	0x20000b90
 8005b0c:	20000b95 	.word	0x20000b95
					 break;
 8005b10:	bf00      	nop
				}
				SX1262CreateTpmsRequestMsg(&radio, wait_time, tx_freq, cal_sleep_time, cal_wait_time);
 8005b12:	4b66      	ldr	r3, [pc, #408]	; (8005cac <main+0x3c8>)
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	b298      	uxth	r0, r3
 8005b18:	4b65      	ldr	r3, [pc, #404]	; (8005cb0 <main+0x3cc>)
 8005b1a:	7819      	ldrb	r1, [r3, #0]
 8005b1c:	4b65      	ldr	r3, [pc, #404]	; (8005cb4 <main+0x3d0>)
 8005b1e:	f993 2000 	ldrsb.w	r2, [r3]
 8005b22:	4b65      	ldr	r3, [pc, #404]	; (8005cb8 <main+0x3d4>)
 8005b24:	f993 3000 	ldrsb.w	r3, [r3]
 8005b28:	9300      	str	r3, [sp, #0]
 8005b2a:	4613      	mov	r3, r2
 8005b2c:	460a      	mov	r2, r1
 8005b2e:	4601      	mov	r1, r0
 8005b30:	4862      	ldr	r0, [pc, #392]	; (8005cbc <main+0x3d8>)
 8005b32:	f7fd fc61 	bl	80033f8 <SX1262CreateTpmsRequestMsg>
			}

			SX1262SendPayload(&mcu, &radio, radio.tpms_tx_msg, radio.packetParams.Params.Gfsk.PayloadLength - 1, 5, true);
 8005b36:	4b61      	ldr	r3, [pc, #388]	; (8005cbc <main+0x3d8>)
 8005b38:	f893 340c 	ldrb.w	r3, [r3, #1036]	; 0x40c
 8005b3c:	3b01      	subs	r3, #1
 8005b3e:	b2da      	uxtb	r2, r3
 8005b40:	2301      	movs	r3, #1
 8005b42:	9301      	str	r3, [sp, #4]
 8005b44:	2305      	movs	r3, #5
 8005b46:	9300      	str	r3, [sp, #0]
 8005b48:	4613      	mov	r3, r2
 8005b4a:	4a5d      	ldr	r2, [pc, #372]	; (8005cc0 <main+0x3dc>)
 8005b4c:	495b      	ldr	r1, [pc, #364]	; (8005cbc <main+0x3d8>)
 8005b4e:	485d      	ldr	r0, [pc, #372]	; (8005cc4 <main+0x3e0>)
 8005b50:	f7fc f94b 	bl	8001dea <SX1262SendPayload>
			radio.tpms_tx_time = HAL_GetTick() - tx_tick;
 8005b54:	f001 fbbc 	bl	80072d0 <HAL_GetTick>
 8005b58:	4603      	mov	r3, r0
 8005b5a:	b29a      	uxth	r2, r3
 8005b5c:	4b5a      	ldr	r3, [pc, #360]	; (8005cc8 <main+0x3e4>)
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	b29b      	uxth	r3, r3
 8005b62:	1ad3      	subs	r3, r2, r3
 8005b64:	b29b      	uxth	r3, r3
 8005b66:	4a55      	ldr	r2, [pc, #340]	; (8005cbc <main+0x3d8>)
 8005b68:	f8a2 346c 	strh.w	r3, [r2, #1132]	; 0x46c

			/* Telemery Tx Message */
			tx_tick = HAL_GetTick();
 8005b6c:	f001 fbb0 	bl	80072d0 <HAL_GetTick>
 8005b70:	4602      	mov	r2, r0
 8005b72:	4b55      	ldr	r3, [pc, #340]	; (8005cc8 <main+0x3e4>)
 8005b74:	601a      	str	r2, [r3, #0]
			SX1262SetFunction(&mcu, &radio, TELEMETRY);
 8005b76:	2200      	movs	r2, #0
 8005b78:	4950      	ldr	r1, [pc, #320]	; (8005cbc <main+0x3d8>)
 8005b7a:	4852      	ldr	r0, [pc, #328]	; (8005cc4 <main+0x3e0>)
 8005b7c:	f7fd fc90 	bl	80034a0 <SX1262SetFunction>

			CreateTeleTxMsg(&radio, tx_msg_id, &teleData);
 8005b80:	4b52      	ldr	r3, [pc, #328]	; (8005ccc <main+0x3e8>)
 8005b82:	781b      	ldrb	r3, [r3, #0]
 8005b84:	4a52      	ldr	r2, [pc, #328]	; (8005cd0 <main+0x3ec>)
 8005b86:	4619      	mov	r1, r3
 8005b88:	484c      	ldr	r0, [pc, #304]	; (8005cbc <main+0x3d8>)
 8005b8a:	f7ff f847 	bl	8004c1c <CreateTeleTxMsg>
			tx_msg_id++;
 8005b8e:	4b4f      	ldr	r3, [pc, #316]	; (8005ccc <main+0x3e8>)
 8005b90:	781b      	ldrb	r3, [r3, #0]
 8005b92:	3301      	adds	r3, #1
 8005b94:	b2db      	uxtb	r3, r3
 8005b96:	4a4d      	ldr	r2, [pc, #308]	; (8005ccc <main+0x3e8>)
 8005b98:	7013      	strb	r3, [r2, #0]
			if (tx_msg_id > PACKETS_NUM)
 8005b9a:	4b4c      	ldr	r3, [pc, #304]	; (8005ccc <main+0x3e8>)
 8005b9c:	781b      	ldrb	r3, [r3, #0]
 8005b9e:	2b03      	cmp	r3, #3
 8005ba0:	d902      	bls.n	8005ba8 <main+0x2c4>
				tx_msg_id = 1;
 8005ba2:	4a4a      	ldr	r2, [pc, #296]	; (8005ccc <main+0x3e8>)
 8005ba4:	2301      	movs	r3, #1
 8005ba6:	7013      	strb	r3, [r2, #0]

			SX1262SendPayload(&mcu, &radio, radio.tx_msg, radio.packetParams.Params.Gfsk.PayloadLength - 2, 50, false);
 8005ba8:	4b44      	ldr	r3, [pc, #272]	; (8005cbc <main+0x3d8>)
 8005baa:	f893 340c 	ldrb.w	r3, [r3, #1036]	; 0x40c
 8005bae:	3b02      	subs	r3, #2
 8005bb0:	b2da      	uxtb	r2, r3
 8005bb2:	2300      	movs	r3, #0
 8005bb4:	9301      	str	r3, [sp, #4]
 8005bb6:	2332      	movs	r3, #50	; 0x32
 8005bb8:	9300      	str	r3, [sp, #0]
 8005bba:	4613      	mov	r3, r2
 8005bbc:	4a45      	ldr	r2, [pc, #276]	; (8005cd4 <main+0x3f0>)
 8005bbe:	493f      	ldr	r1, [pc, #252]	; (8005cbc <main+0x3d8>)
 8005bc0:	4840      	ldr	r0, [pc, #256]	; (8005cc4 <main+0x3e0>)
 8005bc2:	f7fc f912 	bl	8001dea <SX1262SendPayload>
			radio.tele_tx_time = HAL_GetTick() - tx_tick;
 8005bc6:	f001 fb83 	bl	80072d0 <HAL_GetTick>
 8005bca:	4603      	mov	r3, r0
 8005bcc:	b29a      	uxth	r2, r3
 8005bce:	4b3e      	ldr	r3, [pc, #248]	; (8005cc8 <main+0x3e4>)
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	b29b      	uxth	r3, r3
 8005bd4:	1ad3      	subs	r3, r2, r3
 8005bd6:	b29b      	uxth	r3, r3
 8005bd8:	4a38      	ldr	r2, [pc, #224]	; (8005cbc <main+0x3d8>)
 8005bda:	f8a2 346a 	strh.w	r3, [r2, #1130]	; 0x46a
		}

		delay = (int64_t)(HAL_GetTick()) - tpms_msg_time;
 8005bde:	f001 fb77 	bl	80072d0 <HAL_GetTick>
 8005be2:	4603      	mov	r3, r0
 8005be4:	2200      	movs	r2, #0
 8005be6:	62bb      	str	r3, [r7, #40]	; 0x28
 8005be8:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005bea:	4b3b      	ldr	r3, [pc, #236]	; (8005cd8 <main+0x3f4>)
 8005bec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005bf0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8005bf2:	1a89      	subs	r1, r1, r2
 8005bf4:	61b9      	str	r1, [r7, #24]
 8005bf6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8005bf8:	eb61 0303 	sbc.w	r3, r1, r3
 8005bfc:	61fb      	str	r3, [r7, #28]
 8005bfe:	4b37      	ldr	r3, [pc, #220]	; (8005cdc <main+0x3f8>)
 8005c00:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8005c04:	e9c3 1200 	strd	r1, r2, [r3]
		if (delay > window_start)  // 15 NORMALLY
 8005c08:	4b35      	ldr	r3, [pc, #212]	; (8005ce0 <main+0x3fc>)
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	17da      	asrs	r2, r3, #31
 8005c0e:	4698      	mov	r8, r3
 8005c10:	4691      	mov	r9, r2
 8005c12:	4b32      	ldr	r3, [pc, #200]	; (8005cdc <main+0x3f8>)
 8005c14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c18:	4590      	cmp	r8, r2
 8005c1a:	eb79 0303 	sbcs.w	r3, r9, r3
 8005c1e:	f280 80c6 	bge.w	8005dae <main+0x4ca>
		{
			radio.msg_pending = false;
 8005c22:	4a26      	ldr	r2, [pc, #152]	; (8005cbc <main+0x3d8>)
 8005c24:	2300      	movs	r3, #0
 8005c26:	f882 33c5 	strb.w	r3, [r2, #965]	; 0x3c5

			tpms_fr.not_received++;
 8005c2a:	4b2e      	ldr	r3, [pc, #184]	; (8005ce4 <main+0x400>)
 8005c2c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c2e:	3301      	adds	r3, #1
 8005c30:	b29b      	uxth	r3, r3
 8005c32:	4a2c      	ldr	r2, [pc, #176]	; (8005ce4 <main+0x400>)
 8005c34:	8553      	strh	r3, [r2, #42]	; 0x2a
			tpms_fl.not_received++;
 8005c36:	4b2c      	ldr	r3, [pc, #176]	; (8005ce8 <main+0x404>)
 8005c38:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c3a:	3301      	adds	r3, #1
 8005c3c:	b29b      	uxth	r3, r3
 8005c3e:	4a2a      	ldr	r2, [pc, #168]	; (8005ce8 <main+0x404>)
 8005c40:	8553      	strh	r3, [r2, #42]	; 0x2a
			tpms_rr.not_received++;
 8005c42:	4b2a      	ldr	r3, [pc, #168]	; (8005cec <main+0x408>)
 8005c44:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c46:	3301      	adds	r3, #1
 8005c48:	b29b      	uxth	r3, r3
 8005c4a:	4a28      	ldr	r2, [pc, #160]	; (8005cec <main+0x408>)
 8005c4c:	8553      	strh	r3, [r2, #42]	; 0x2a
			tpms_rl.not_received++;
 8005c4e:	4b28      	ldr	r3, [pc, #160]	; (8005cf0 <main+0x40c>)
 8005c50:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8005c52:	3301      	adds	r3, #1
 8005c54:	b29b      	uxth	r3, r3
 8005c56:	4a26      	ldr	r2, [pc, #152]	; (8005cf0 <main+0x40c>)
 8005c58:	8553      	strh	r3, [r2, #42]	; 0x2a

			SX1262SetFunction(&mcu, &radio, TPMS);
 8005c5a:	2201      	movs	r2, #1
 8005c5c:	4917      	ldr	r1, [pc, #92]	; (8005cbc <main+0x3d8>)
 8005c5e:	4819      	ldr	r0, [pc, #100]	; (8005cc4 <main+0x3e0>)
 8005c60:	f7fd fc1e 	bl	80034a0 <SX1262SetFunction>

//			tpms_msg_time = HAL_GetTick() + tpms_interval;

			SX1262SetRxBoosted(&mcu, &radio, 0xFFFF);
 8005c64:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005c68:	4914      	ldr	r1, [pc, #80]	; (8005cbc <main+0x3d8>)
 8005c6a:	4816      	ldr	r0, [pc, #88]	; (8005cc4 <main+0x3e0>)
 8005c6c:	f7fb fdc8 	bl	8001800 <SX1262SetRxBoosted>
			tpms_msg_sent = true;
 8005c70:	4a20      	ldr	r2, [pc, #128]	; (8005cf4 <main+0x410>)
 8005c72:	2301      	movs	r3, #1
 8005c74:	7013      	strb	r3, [r2, #0]
			current_tick = HAL_GetTick();
 8005c76:	f001 fb2b 	bl	80072d0 <HAL_GetTick>
 8005c7a:	4602      	mov	r2, r0
 8005c7c:	4b1e      	ldr	r3, [pc, #120]	; (8005cf8 <main+0x414>)
 8005c7e:	601a      	str	r2, [r3, #0]
			width_start = HAL_GetTick() - tpms_msg_time;
 8005c80:	f001 fb26 	bl	80072d0 <HAL_GetTick>
 8005c84:	4603      	mov	r3, r0
 8005c86:	2200      	movs	r2, #0
 8005c88:	469a      	mov	sl, r3
 8005c8a:	4693      	mov	fp, r2
 8005c8c:	4b12      	ldr	r3, [pc, #72]	; (8005cd8 <main+0x3f4>)
 8005c8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c92:	ebba 0102 	subs.w	r1, sl, r2
 8005c96:	6139      	str	r1, [r7, #16]
 8005c98:	eb6b 0303 	sbc.w	r3, fp, r3
 8005c9c:	617b      	str	r3, [r7, #20]
 8005c9e:	4b17      	ldr	r3, [pc, #92]	; (8005cfc <main+0x418>)
 8005ca0:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8005ca4:	e9c3 1200 	strd	r1, r2, [r3]
			while (HAL_GetTick() - current_tick < window_width) // wait to get TPMS messages // 100 NORMALLY
 8005ca8:	e05c      	b.n	8005d64 <main+0x480>
 8005caa:	bf00      	nop
 8005cac:	20000b90 	.word	0x20000b90
 8005cb0:	20000b95 	.word	0x20000b95
 8005cb4:	20000b81 	.word	0x20000b81
 8005cb8:	20000b82 	.word	0x20000b82
 8005cbc:	20000444 	.word	0x20000444
 8005cc0:	2000080a 	.word	0x2000080a
 8005cc4:	200003e0 	.word	0x200003e0
 8005cc8:	20000bbc 	.word	0x20000bbc
 8005ccc:	2000001c 	.word	0x2000001c
 8005cd0:	200008bc 	.word	0x200008bc
 8005cd4:	2000060b 	.word	0x2000060b
 8005cd8:	20000b88 	.word	0x20000b88
 8005cdc:	20000ba0 	.word	0x20000ba0
 8005ce0:	20000b9c 	.word	0x20000b9c
 8005ce4:	20000330 	.word	0x20000330
 8005ce8:	2000035c 	.word	0x2000035c
 8005cec:	20000388 	.word	0x20000388
 8005cf0:	200003b4 	.word	0x200003b4
 8005cf4:	2000000e 	.word	0x2000000e
 8005cf8:	20000b98 	.word	0x20000b98
 8005cfc:	20000ba8 	.word	0x20000ba8
			{
 				if (radio.msg_pending)
 8005d00:	4b8d      	ldr	r3, [pc, #564]	; (8005f38 <main+0x654>)
 8005d02:	f893 33c5 	ldrb.w	r3, [r3, #965]	; 0x3c5
 8005d06:	2b00      	cmp	r3, #0
 8005d08:	d02c      	beq.n	8005d64 <main+0x480>
				{
 					radio.msg_pending = false;
 8005d0a:	4a8b      	ldr	r2, [pc, #556]	; (8005f38 <main+0x654>)
 8005d0c:	2300      	movs	r3, #0
 8005d0e:	f882 33c5 	strb.w	r3, [r2, #965]	; 0x3c5

					SX1262dio1Interrupt(&mcu, &radio);
 8005d12:	4989      	ldr	r1, [pc, #548]	; (8005f38 <main+0x654>)
 8005d14:	4889      	ldr	r0, [pc, #548]	; (8005f3c <main+0x658>)
 8005d16:	f7fc fc28 	bl	800256a <SX1262dio1Interrupt>
					SX1262GetStatus(&mcu, &radio);
 8005d1a:	4987      	ldr	r1, [pc, #540]	; (8005f38 <main+0x654>)
 8005d1c:	4887      	ldr	r0, [pc, #540]	; (8005f3c <main+0x658>)
 8005d1e:	f7fc f9a5 	bl	800206c <SX1262GetStatus>
					SX1262ClearIrqStatus(&mcu, &radio, 0xFFFF);
 8005d22:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005d26:	4984      	ldr	r1, [pc, #528]	; (8005f38 <main+0x654>)
 8005d28:	4884      	ldr	r0, [pc, #528]	; (8005f3c <main+0x658>)
 8005d2a:	f7fb fdcf 	bl	80018cc <SX1262ClearIrqStatus>

					radio.tpms_variation = HAL_GetTick() - tpms_msg_time;
 8005d2e:	f001 facf 	bl	80072d0 <HAL_GetTick>
 8005d32:	4601      	mov	r1, r0
 8005d34:	4b82      	ldr	r3, [pc, #520]	; (8005f40 <main+0x65c>)
 8005d36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d3a:	4613      	mov	r3, r2
 8005d3c:	1acb      	subs	r3, r1, r3
 8005d3e:	461a      	mov	r2, r3
 8005d40:	4b7d      	ldr	r3, [pc, #500]	; (8005f38 <main+0x654>)
 8005d42:	f8c3 23dc 	str.w	r2, [r3, #988]	; 0x3dc

					TpmsGetMessage(&radio, &teleData);
 8005d46:	497f      	ldr	r1, [pc, #508]	; (8005f44 <main+0x660>)
 8005d48:	487b      	ldr	r0, [pc, #492]	; (8005f38 <main+0x654>)
 8005d4a:	f7fd fbf1 	bl	8003530 <TpmsGetMessage>

					// Reset
					SX1262SetStandby(&mcu, &radio, STDBY_XOSC);
 8005d4e:	2201      	movs	r2, #1
 8005d50:	4979      	ldr	r1, [pc, #484]	; (8005f38 <main+0x654>)
 8005d52:	487a      	ldr	r0, [pc, #488]	; (8005f3c <main+0x658>)
 8005d54:	f7fb f94c 	bl	8000ff0 <SX1262SetStandby>
					SX1262SetRxBoosted(&mcu, &radio, 0xFFFF);
 8005d58:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005d5c:	4976      	ldr	r1, [pc, #472]	; (8005f38 <main+0x654>)
 8005d5e:	4877      	ldr	r0, [pc, #476]	; (8005f3c <main+0x658>)
 8005d60:	f7fb fd4e 	bl	8001800 <SX1262SetRxBoosted>
			while (HAL_GetTick() - current_tick < window_width) // wait to get TPMS messages // 100 NORMALLY
 8005d64:	f001 fab4 	bl	80072d0 <HAL_GetTick>
 8005d68:	4602      	mov	r2, r0
 8005d6a:	4b77      	ldr	r3, [pc, #476]	; (8005f48 <main+0x664>)
 8005d6c:	681b      	ldr	r3, [r3, #0]
 8005d6e:	1ad2      	subs	r2, r2, r3
 8005d70:	4b76      	ldr	r3, [pc, #472]	; (8005f4c <main+0x668>)
 8005d72:	881b      	ldrh	r3, [r3, #0]
 8005d74:	429a      	cmp	r2, r3
 8005d76:	d3c3      	bcc.n	8005d00 <main+0x41c>
				}
			}
			width_end = HAL_GetTick() - tpms_msg_time;
 8005d78:	f001 faaa 	bl	80072d0 <HAL_GetTick>
 8005d7c:	4603      	mov	r3, r0
 8005d7e:	2200      	movs	r2, #0
 8005d80:	461d      	mov	r5, r3
 8005d82:	4616      	mov	r6, r2
 8005d84:	4b6e      	ldr	r3, [pc, #440]	; (8005f40 <main+0x65c>)
 8005d86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d8a:	1aa9      	subs	r1, r5, r2
 8005d8c:	60b9      	str	r1, [r7, #8]
 8005d8e:	eb66 0303 	sbc.w	r3, r6, r3
 8005d92:	60fb      	str	r3, [r7, #12]
 8005d94:	4b6e      	ldr	r3, [pc, #440]	; (8005f50 <main+0x66c>)
 8005d96:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8005d9a:	e9c3 1200 	strd	r1, r2, [r3]
			SX1262SetStandby(&mcu, &radio, STDBY_XOSC);
 8005d9e:	2201      	movs	r2, #1
 8005da0:	4965      	ldr	r1, [pc, #404]	; (8005f38 <main+0x654>)
 8005da2:	4866      	ldr	r0, [pc, #408]	; (8005f3c <main+0x658>)
 8005da4:	f7fb f924 	bl	8000ff0 <SX1262SetStandby>

			CanTxTPMSmessage(&teleData);
 8005da8:	4866      	ldr	r0, [pc, #408]	; (8005f44 <main+0x660>)
 8005daa:	f000 fe09 	bl	80069c0 <CanTxTPMSmessage>
#endif




	if ((prev_freq != curr_freq) || (prev_dbm != curr_dbm))
 8005dae:	4b69      	ldr	r3, [pc, #420]	; (8005f54 <main+0x670>)
 8005db0:	881a      	ldrh	r2, [r3, #0]
 8005db2:	4b69      	ldr	r3, [pc, #420]	; (8005f58 <main+0x674>)
 8005db4:	881b      	ldrh	r3, [r3, #0]
 8005db6:	429a      	cmp	r2, r3
 8005db8:	d107      	bne.n	8005dca <main+0x4e6>
 8005dba:	4b68      	ldr	r3, [pc, #416]	; (8005f5c <main+0x678>)
 8005dbc:	f993 2000 	ldrsb.w	r2, [r3]
 8005dc0:	4b67      	ldr	r3, [pc, #412]	; (8005f60 <main+0x67c>)
 8005dc2:	f993 3000 	ldrsb.w	r3, [r3]
 8005dc6:	429a      	cmp	r2, r3
 8005dc8:	d011      	beq.n	8005dee <main+0x50a>
	{
		SX1262GfskInit(&mcu, &radio, curr_dbm, curr_freq);
 8005dca:	4b65      	ldr	r3, [pc, #404]	; (8005f60 <main+0x67c>)
 8005dcc:	f993 2000 	ldrsb.w	r2, [r3]
 8005dd0:	4b61      	ldr	r3, [pc, #388]	; (8005f58 <main+0x674>)
 8005dd2:	881b      	ldrh	r3, [r3, #0]
 8005dd4:	4958      	ldr	r1, [pc, #352]	; (8005f38 <main+0x654>)
 8005dd6:	4859      	ldr	r0, [pc, #356]	; (8005f3c <main+0x658>)
 8005dd8:	f7fc f9fe 	bl	80021d8 <SX1262GfskInit>
		prev_freq = curr_freq;
 8005ddc:	4b5e      	ldr	r3, [pc, #376]	; (8005f58 <main+0x674>)
 8005dde:	881b      	ldrh	r3, [r3, #0]
 8005de0:	4a5c      	ldr	r2, [pc, #368]	; (8005f54 <main+0x670>)
 8005de2:	8013      	strh	r3, [r2, #0]
		prev_dbm = curr_dbm;
 8005de4:	4b5e      	ldr	r3, [pc, #376]	; (8005f60 <main+0x67c>)
 8005de6:	f993 3000 	ldrsb.w	r3, [r3]
 8005dea:	4a5c      	ldr	r2, [pc, #368]	; (8005f5c <main+0x678>)
 8005dec:	7013      	strb	r3, [r2, #0]
	}


	if (HAL_GetTick() - last_linear_can_tx > linear_can_tx_interval)
 8005dee:	f001 fa6f 	bl	80072d0 <HAL_GetTick>
 8005df2:	4602      	mov	r2, r0
 8005df4:	4b5b      	ldr	r3, [pc, #364]	; (8005f64 <main+0x680>)
 8005df6:	681b      	ldr	r3, [r3, #0]
 8005df8:	1ad2      	subs	r2, r2, r3
 8005dfa:	4b5b      	ldr	r3, [pc, #364]	; (8005f68 <main+0x684>)
 8005dfc:	881b      	ldrh	r3, [r3, #0]
 8005dfe:	429a      	cmp	r2, r3
 8005e00:	f67f addf 	bls.w	80059c2 <main+0xde>
	{
		last_linear_can_tx = HAL_GetTick();
 8005e04:	f001 fa64 	bl	80072d0 <HAL_GetTick>
 8005e08:	4602      	mov	r2, r0
 8005e0a:	4b56      	ldr	r3, [pc, #344]	; (8005f64 <main+0x680>)
 8005e0c:	601a      	str	r2, [r3, #0]
		/* Sensory CAN BUS */
		TxHeader2.DLC = 4;
 8005e0e:	4a57      	ldr	r2, [pc, #348]	; (8005f6c <main+0x688>)
 8005e10:	2304      	movs	r3, #4
 8005e12:	6113      	str	r3, [r2, #16]
		TxHeader2.IDE = CAN_ID_STD;
 8005e14:	4a55      	ldr	r2, [pc, #340]	; (8005f6c <main+0x688>)
 8005e16:	2300      	movs	r3, #0
 8005e18:	6093      	str	r3, [r2, #8]
		TxHeader2.RTR = CAN_RTR_DATA;
 8005e1a:	4a54      	ldr	r2, [pc, #336]	; (8005f6c <main+0x688>)
 8005e1c:	2300      	movs	r3, #0
 8005e1e:	60d3      	str	r3, [r2, #12]
		TxHeader2.StdId = 0x4D2;
 8005e20:	4a52      	ldr	r2, [pc, #328]	; (8005f6c <main+0x688>)
 8005e22:	f240 43d2 	movw	r3, #1234	; 0x4d2
 8005e26:	6013      	str	r3, [r2, #0]
		TxHeader2.TransmitGlobalTime = DISABLE;
 8005e28:	4a50      	ldr	r2, [pc, #320]	; (8005f6c <main+0x688>)
 8005e2a:	2300      	movs	r3, #0
 8005e2c:	7513      	strb	r3, [r2, #20]
		TxData2[0] = (uint8_t)(linear_roll);
 8005e2e:	4b50      	ldr	r3, [pc, #320]	; (8005f70 <main+0x68c>)
 8005e30:	edd3 7a00 	vldr	s15, [r3]
 8005e34:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005e38:	edc7 7a01 	vstr	s15, [r7, #4]
 8005e3c:	793b      	ldrb	r3, [r7, #4]
 8005e3e:	b2db      	uxtb	r3, r3
 8005e40:	4a4c      	ldr	r2, [pc, #304]	; (8005f74 <main+0x690>)
 8005e42:	7013      	strb	r3, [r2, #0]
		TxData2[1] = (uint8_t)((linear_roll - TxData2[0]) * 100);
 8005e44:	4b4a      	ldr	r3, [pc, #296]	; (8005f70 <main+0x68c>)
 8005e46:	ed93 7a00 	vldr	s14, [r3]
 8005e4a:	4b4a      	ldr	r3, [pc, #296]	; (8005f74 <main+0x690>)
 8005e4c:	781b      	ldrb	r3, [r3, #0]
 8005e4e:	ee07 3a90 	vmov	s15, r3
 8005e52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e56:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005e5a:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8005f78 <main+0x694>
 8005e5e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005e62:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005e66:	edc7 7a01 	vstr	s15, [r7, #4]
 8005e6a:	793b      	ldrb	r3, [r7, #4]
 8005e6c:	b2db      	uxtb	r3, r3
 8005e6e:	4a41      	ldr	r2, [pc, #260]	; (8005f74 <main+0x690>)
 8005e70:	7053      	strb	r3, [r2, #1]
		TxData2[2] = (uint8_t)(linear_heave);
 8005e72:	4b42      	ldr	r3, [pc, #264]	; (8005f7c <main+0x698>)
 8005e74:	edd3 7a00 	vldr	s15, [r3]
 8005e78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005e7c:	edc7 7a01 	vstr	s15, [r7, #4]
 8005e80:	793b      	ldrb	r3, [r7, #4]
 8005e82:	b2db      	uxtb	r3, r3
 8005e84:	4a3b      	ldr	r2, [pc, #236]	; (8005f74 <main+0x690>)
 8005e86:	7093      	strb	r3, [r2, #2]
		TxData2[3] = (uint8_t)((linear_heave - TxData2[2]) * 100);
 8005e88:	4b3c      	ldr	r3, [pc, #240]	; (8005f7c <main+0x698>)
 8005e8a:	ed93 7a00 	vldr	s14, [r3]
 8005e8e:	4b39      	ldr	r3, [pc, #228]	; (8005f74 <main+0x690>)
 8005e90:	789b      	ldrb	r3, [r3, #2]
 8005e92:	ee07 3a90 	vmov	s15, r3
 8005e96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e9a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8005e9e:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8005f78 <main+0x694>
 8005ea2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005ea6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005eaa:	edc7 7a01 	vstr	s15, [r7, #4]
 8005eae:	793b      	ldrb	r3, [r7, #4]
 8005eb0:	b2db      	uxtb	r3, r3
 8005eb2:	4a30      	ldr	r2, [pc, #192]	; (8005f74 <main+0x690>)
 8005eb4:	70d3      	strb	r3, [r2, #3]
		HAL_CAN_AddTxMessage(&hcan2, &TxHeader2, TxData2, &TxMailbox);
 8005eb6:	4b32      	ldr	r3, [pc, #200]	; (8005f80 <main+0x69c>)
 8005eb8:	4a2e      	ldr	r2, [pc, #184]	; (8005f74 <main+0x690>)
 8005eba:	492c      	ldr	r1, [pc, #176]	; (8005f6c <main+0x688>)
 8005ebc:	4831      	ldr	r0, [pc, #196]	; (8005f84 <main+0x6a0>)
 8005ebe:	f002 f85f 	bl	8007f80 <HAL_CAN_AddTxMessage>

		aero_fans_can_counter++;
 8005ec2:	4b31      	ldr	r3, [pc, #196]	; (8005f88 <main+0x6a4>)
 8005ec4:	781b      	ldrb	r3, [r3, #0]
 8005ec6:	3301      	adds	r3, #1
 8005ec8:	b2db      	uxtb	r3, r3
 8005eca:	4a2f      	ldr	r2, [pc, #188]	; (8005f88 <main+0x6a4>)
 8005ecc:	7013      	strb	r3, [r2, #0]
		if (aero_fans_can_counter > 9)  // ~1s
 8005ece:	4b2e      	ldr	r3, [pc, #184]	; (8005f88 <main+0x6a4>)
 8005ed0:	781b      	ldrb	r3, [r3, #0]
 8005ed2:	2b09      	cmp	r3, #9
 8005ed4:	f67f ad75 	bls.w	80059c2 <main+0xde>
		{
			TxHeader2.DLC = 1;
 8005ed8:	4a24      	ldr	r2, [pc, #144]	; (8005f6c <main+0x688>)
 8005eda:	2301      	movs	r3, #1
 8005edc:	6113      	str	r3, [r2, #16]
			TxHeader2.IDE = CAN_ID_STD;
 8005ede:	4a23      	ldr	r2, [pc, #140]	; (8005f6c <main+0x688>)
 8005ee0:	2300      	movs	r3, #0
 8005ee2:	6093      	str	r3, [r2, #8]
			TxHeader2.RTR = CAN_RTR_DATA;
 8005ee4:	4a21      	ldr	r2, [pc, #132]	; (8005f6c <main+0x688>)
 8005ee6:	2300      	movs	r3, #0
 8005ee8:	60d3      	str	r3, [r2, #12]
			TxHeader2.StdId = 0x313;
 8005eea:	4a20      	ldr	r2, [pc, #128]	; (8005f6c <main+0x688>)
 8005eec:	f240 3313 	movw	r3, #787	; 0x313
 8005ef0:	6013      	str	r3, [r2, #0]
			TxHeader2.TransmitGlobalTime = DISABLE;
 8005ef2:	4a1e      	ldr	r2, [pc, #120]	; (8005f6c <main+0x688>)
 8005ef4:	2300      	movs	r3, #0
 8005ef6:	7513      	strb	r3, [r2, #20]

			/* Ensures that vicor which supplies the aero fans is not overtemp */
			TxData2[0] = teleData.dash.aero_fans_on && (!teleData.accu.vicor_overtemp);
 8005ef8:	4b12      	ldr	r3, [pc, #72]	; (8005f44 <main+0x660>)
 8005efa:	f893 3062 	ldrb.w	r3, [r3, #98]	; 0x62
 8005efe:	f003 0308 	and.w	r3, r3, #8
 8005f02:	b2db      	uxtb	r3, r3
 8005f04:	2b00      	cmp	r3, #0
 8005f06:	d008      	beq.n	8005f1a <main+0x636>
 8005f08:	4b0e      	ldr	r3, [pc, #56]	; (8005f44 <main+0x660>)
 8005f0a:	7b5b      	ldrb	r3, [r3, #13]
 8005f0c:	f003 0302 	and.w	r3, r3, #2
 8005f10:	b2db      	uxtb	r3, r3
 8005f12:	2b00      	cmp	r3, #0
 8005f14:	d101      	bne.n	8005f1a <main+0x636>
 8005f16:	2301      	movs	r3, #1
 8005f18:	e000      	b.n	8005f1c <main+0x638>
 8005f1a:	2300      	movs	r3, #0
 8005f1c:	b2db      	uxtb	r3, r3
 8005f1e:	4a15      	ldr	r2, [pc, #84]	; (8005f74 <main+0x690>)
 8005f20:	7013      	strb	r3, [r2, #0]
			HAL_CAN_AddTxMessage(&hcan2, &TxHeader2, TxData2, &TxMailbox);
 8005f22:	4b17      	ldr	r3, [pc, #92]	; (8005f80 <main+0x69c>)
 8005f24:	4a13      	ldr	r2, [pc, #76]	; (8005f74 <main+0x690>)
 8005f26:	4911      	ldr	r1, [pc, #68]	; (8005f6c <main+0x688>)
 8005f28:	4816      	ldr	r0, [pc, #88]	; (8005f84 <main+0x6a0>)
 8005f2a:	f002 f829 	bl	8007f80 <HAL_CAN_AddTxMessage>

			aero_fans_can_counter = 0;
 8005f2e:	4a16      	ldr	r2, [pc, #88]	; (8005f88 <main+0x6a4>)
 8005f30:	2300      	movs	r3, #0
 8005f32:	7013      	strb	r3, [r2, #0]
	if (radio.opMode != SLEEP_MODE)
 8005f34:	e545      	b.n	80059c2 <main+0xde>
 8005f36:	bf00      	nop
 8005f38:	20000444 	.word	0x20000444
 8005f3c:	200003e0 	.word	0x200003e0
 8005f40:	20000b88 	.word	0x20000b88
 8005f44:	200008bc 	.word	0x200008bc
 8005f48:	20000b98 	.word	0x20000b98
 8005f4c:	20000018 	.word	0x20000018
 8005f50:	20000bb0 	.word	0x20000bb0
 8005f54:	20000020 	.word	0x20000020
 8005f58:	20000022 	.word	0x20000022
 8005f5c:	2000001d 	.word	0x2000001d
 8005f60:	2000001e 	.word	0x2000001e
 8005f64:	20000b7c 	.word	0x20000b7c
 8005f68:	2000000c 	.word	0x2000000c
 8005f6c:	20000be4 	.word	0x20000be4
 8005f70:	20000b74 	.word	0x20000b74
 8005f74:	20000c18 	.word	0x20000c18
 8005f78:	42c80000 	.word	0x42c80000
 8005f7c:	20000b78 	.word	0x20000b78
 8005f80:	20000c28 	.word	0x20000c28
 8005f84:	20000aac 	.word	0x20000aac
 8005f88:	20000b80 	.word	0x20000b80

08005f8c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8005f8c:	b580      	push	{r7, lr}
 8005f8e:	b094      	sub	sp, #80	; 0x50
 8005f90:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8005f92:	f107 0320 	add.w	r3, r7, #32
 8005f96:	2230      	movs	r2, #48	; 0x30
 8005f98:	2100      	movs	r1, #0
 8005f9a:	4618      	mov	r0, r3
 8005f9c:	f00b fbfb 	bl	8011796 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8005fa0:	f107 030c 	add.w	r3, r7, #12
 8005fa4:	2200      	movs	r2, #0
 8005fa6:	601a      	str	r2, [r3, #0]
 8005fa8:	605a      	str	r2, [r3, #4]
 8005faa:	609a      	str	r2, [r3, #8]
 8005fac:	60da      	str	r2, [r3, #12]
 8005fae:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8005fb0:	2300      	movs	r3, #0
 8005fb2:	60bb      	str	r3, [r7, #8]
 8005fb4:	4b28      	ldr	r3, [pc, #160]	; (8006058 <SystemClock_Config+0xcc>)
 8005fb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fb8:	4a27      	ldr	r2, [pc, #156]	; (8006058 <SystemClock_Config+0xcc>)
 8005fba:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8005fbe:	6413      	str	r3, [r2, #64]	; 0x40
 8005fc0:	4b25      	ldr	r3, [pc, #148]	; (8006058 <SystemClock_Config+0xcc>)
 8005fc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005fc4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005fc8:	60bb      	str	r3, [r7, #8]
 8005fca:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8005fcc:	2300      	movs	r3, #0
 8005fce:	607b      	str	r3, [r7, #4]
 8005fd0:	4b22      	ldr	r3, [pc, #136]	; (800605c <SystemClock_Config+0xd0>)
 8005fd2:	681b      	ldr	r3, [r3, #0]
 8005fd4:	4a21      	ldr	r2, [pc, #132]	; (800605c <SystemClock_Config+0xd0>)
 8005fd6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005fda:	6013      	str	r3, [r2, #0]
 8005fdc:	4b1f      	ldr	r3, [pc, #124]	; (800605c <SystemClock_Config+0xd0>)
 8005fde:	681b      	ldr	r3, [r3, #0]
 8005fe0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005fe4:	607b      	str	r3, [r7, #4]
 8005fe6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8005fe8:	2301      	movs	r3, #1
 8005fea:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8005fec:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8005ff0:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8005ff2:	2302      	movs	r3, #2
 8005ff4:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8005ff6:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005ffa:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8005ffc:	2304      	movs	r3, #4
 8005ffe:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8006000:	23a8      	movs	r3, #168	; 0xa8
 8006002:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8006004:	2302      	movs	r3, #2
 8006006:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8006008:	2307      	movs	r3, #7
 800600a:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800600c:	f107 0320 	add.w	r3, r7, #32
 8006010:	4618      	mov	r0, r3
 8006012:	f004 fcd3 	bl	800a9bc <HAL_RCC_OscConfig>
 8006016:	4603      	mov	r3, r0
 8006018:	2b00      	cmp	r3, #0
 800601a:	d001      	beq.n	8006020 <SystemClock_Config+0x94>
  {
    Error_Handler();
 800601c:	f000 fd80 	bl	8006b20 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8006020:	230f      	movs	r3, #15
 8006022:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8006024:	2302      	movs	r3, #2
 8006026:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8006028:	2300      	movs	r3, #0
 800602a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800602c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8006030:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8006032:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006036:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8006038:	f107 030c 	add.w	r3, r7, #12
 800603c:	2105      	movs	r1, #5
 800603e:	4618      	mov	r0, r3
 8006040:	f004 ff34 	bl	800aeac <HAL_RCC_ClockConfig>
 8006044:	4603      	mov	r3, r0
 8006046:	2b00      	cmp	r3, #0
 8006048:	d001      	beq.n	800604e <SystemClock_Config+0xc2>
  {
    Error_Handler();
 800604a:	f000 fd69 	bl	8006b20 <Error_Handler>
  }
}
 800604e:	bf00      	nop
 8006050:	3750      	adds	r7, #80	; 0x50
 8006052:	46bd      	mov	sp, r7
 8006054:	bd80      	pop	{r7, pc}
 8006056:	bf00      	nop
 8006058:	40023800 	.word	0x40023800
 800605c:	40007000 	.word	0x40007000

08006060 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8006060:	b580      	push	{r7, lr}
 8006062:	b084      	sub	sp, #16
 8006064:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8006066:	463b      	mov	r3, r7
 8006068:	2200      	movs	r2, #0
 800606a:	601a      	str	r2, [r3, #0]
 800606c:	605a      	str	r2, [r3, #4]
 800606e:	609a      	str	r2, [r3, #8]
 8006070:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8006072:	4b2f      	ldr	r3, [pc, #188]	; (8006130 <MX_ADC1_Init+0xd0>)
 8006074:	4a2f      	ldr	r2, [pc, #188]	; (8006134 <MX_ADC1_Init+0xd4>)
 8006076:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8006078:	4b2d      	ldr	r3, [pc, #180]	; (8006130 <MX_ADC1_Init+0xd0>)
 800607a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800607e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8006080:	4b2b      	ldr	r3, [pc, #172]	; (8006130 <MX_ADC1_Init+0xd0>)
 8006082:	2200      	movs	r2, #0
 8006084:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = ENABLE;
 8006086:	4b2a      	ldr	r3, [pc, #168]	; (8006130 <MX_ADC1_Init+0xd0>)
 8006088:	2201      	movs	r2, #1
 800608a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800608c:	4b28      	ldr	r3, [pc, #160]	; (8006130 <MX_ADC1_Init+0xd0>)
 800608e:	2201      	movs	r2, #1
 8006090:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8006092:	4b27      	ldr	r3, [pc, #156]	; (8006130 <MX_ADC1_Init+0xd0>)
 8006094:	2200      	movs	r2, #0
 8006096:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 800609a:	4b25      	ldr	r3, [pc, #148]	; (8006130 <MX_ADC1_Init+0xd0>)
 800609c:	2200      	movs	r2, #0
 800609e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80060a0:	4b23      	ldr	r3, [pc, #140]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060a2:	4a25      	ldr	r2, [pc, #148]	; (8006138 <MX_ADC1_Init+0xd8>)
 80060a4:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80060a6:	4b22      	ldr	r3, [pc, #136]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060a8:	2200      	movs	r2, #0
 80060aa:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 3;
 80060ac:	4b20      	ldr	r3, [pc, #128]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060ae:	2203      	movs	r2, #3
 80060b0:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = ENABLE;
 80060b2:	4b1f      	ldr	r3, [pc, #124]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060b4:	2201      	movs	r2, #1
 80060b6:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80060ba:	4b1d      	ldr	r3, [pc, #116]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060bc:	2201      	movs	r2, #1
 80060be:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80060c0:	481b      	ldr	r0, [pc, #108]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060c2:	f001 f935 	bl	8007330 <HAL_ADC_Init>
 80060c6:	4603      	mov	r3, r0
 80060c8:	2b00      	cmp	r3, #0
 80060ca:	d001      	beq.n	80060d0 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 80060cc:	f000 fd28 	bl	8006b20 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_1;
 80060d0:	2301      	movs	r3, #1
 80060d2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80060d4:	2301      	movs	r3, #1
 80060d6:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80060d8:	2307      	movs	r3, #7
 80060da:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80060dc:	463b      	mov	r3, r7
 80060de:	4619      	mov	r1, r3
 80060e0:	4813      	ldr	r0, [pc, #76]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060e2:	f001 fa8d 	bl	8007600 <HAL_ADC_ConfigChannel>
 80060e6:	4603      	mov	r3, r0
 80060e8:	2b00      	cmp	r3, #0
 80060ea:	d001      	beq.n	80060f0 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 80060ec:	f000 fd18 	bl	8006b20 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_2;
 80060f0:	2302      	movs	r3, #2
 80060f2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 80060f4:	2302      	movs	r3, #2
 80060f6:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80060f8:	463b      	mov	r3, r7
 80060fa:	4619      	mov	r1, r3
 80060fc:	480c      	ldr	r0, [pc, #48]	; (8006130 <MX_ADC1_Init+0xd0>)
 80060fe:	f001 fa7f 	bl	8007600 <HAL_ADC_ConfigChannel>
 8006102:	4603      	mov	r3, r0
 8006104:	2b00      	cmp	r3, #0
 8006106:	d001      	beq.n	800610c <MX_ADC1_Init+0xac>
  {
    Error_Handler();
 8006108:	f000 fd0a 	bl	8006b20 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_3;
 800610c:	2303      	movs	r3, #3
 800610e:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 3;
 8006110:	2303      	movs	r3, #3
 8006112:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8006114:	463b      	mov	r3, r7
 8006116:	4619      	mov	r1, r3
 8006118:	4805      	ldr	r0, [pc, #20]	; (8006130 <MX_ADC1_Init+0xd0>)
 800611a:	f001 fa71 	bl	8007600 <HAL_ADC_ConfigChannel>
 800611e:	4603      	mov	r3, r0
 8006120:	2b00      	cmp	r3, #0
 8006122:	d001      	beq.n	8006128 <MX_ADC1_Init+0xc8>
  {
    Error_Handler();
 8006124:	f000 fcfc 	bl	8006b20 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8006128:	bf00      	nop
 800612a:	3710      	adds	r7, #16
 800612c:	46bd      	mov	sp, r7
 800612e:	bd80      	pop	{r7, pc}
 8006130:	20000934 	.word	0x20000934
 8006134:	40012000 	.word	0x40012000
 8006138:	0f000001 	.word	0x0f000001

0800613c <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 800613c:	b580      	push	{r7, lr}
 800613e:	b084      	sub	sp, #16
 8006140:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8006142:	463b      	mov	r3, r7
 8006144:	2200      	movs	r2, #0
 8006146:	601a      	str	r2, [r3, #0]
 8006148:	605a      	str	r2, [r3, #4]
 800614a:	609a      	str	r2, [r3, #8]
 800614c:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC2_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc2.Instance = ADC2;
 800614e:	4b2f      	ldr	r3, [pc, #188]	; (800620c <MX_ADC2_Init+0xd0>)
 8006150:	4a2f      	ldr	r2, [pc, #188]	; (8006210 <MX_ADC2_Init+0xd4>)
 8006152:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8006154:	4b2d      	ldr	r3, [pc, #180]	; (800620c <MX_ADC2_Init+0xd0>)
 8006156:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 800615a:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800615c:	4b2b      	ldr	r3, [pc, #172]	; (800620c <MX_ADC2_Init+0xd0>)
 800615e:	2200      	movs	r2, #0
 8006160:	609a      	str	r2, [r3, #8]
  hadc2.Init.ScanConvMode = ENABLE;
 8006162:	4b2a      	ldr	r3, [pc, #168]	; (800620c <MX_ADC2_Init+0xd0>)
 8006164:	2201      	movs	r2, #1
 8006166:	611a      	str	r2, [r3, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 8006168:	4b28      	ldr	r3, [pc, #160]	; (800620c <MX_ADC2_Init+0xd0>)
 800616a:	2201      	movs	r2, #1
 800616c:	761a      	strb	r2, [r3, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 800616e:	4b27      	ldr	r3, [pc, #156]	; (800620c <MX_ADC2_Init+0xd0>)
 8006170:	2200      	movs	r2, #0
 8006172:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8006176:	4b25      	ldr	r3, [pc, #148]	; (800620c <MX_ADC2_Init+0xd0>)
 8006178:	2200      	movs	r2, #0
 800617a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800617c:	4b23      	ldr	r3, [pc, #140]	; (800620c <MX_ADC2_Init+0xd0>)
 800617e:	4a25      	ldr	r2, [pc, #148]	; (8006214 <MX_ADC2_Init+0xd8>)
 8006180:	629a      	str	r2, [r3, #40]	; 0x28
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8006182:	4b22      	ldr	r3, [pc, #136]	; (800620c <MX_ADC2_Init+0xd0>)
 8006184:	2200      	movs	r2, #0
 8006186:	60da      	str	r2, [r3, #12]
  hadc2.Init.NbrOfConversion = 3;
 8006188:	4b20      	ldr	r3, [pc, #128]	; (800620c <MX_ADC2_Init+0xd0>)
 800618a:	2203      	movs	r2, #3
 800618c:	61da      	str	r2, [r3, #28]
  hadc2.Init.DMAContinuousRequests = ENABLE;
 800618e:	4b1f      	ldr	r3, [pc, #124]	; (800620c <MX_ADC2_Init+0xd0>)
 8006190:	2201      	movs	r2, #1
 8006192:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8006196:	4b1d      	ldr	r3, [pc, #116]	; (800620c <MX_ADC2_Init+0xd0>)
 8006198:	2201      	movs	r2, #1
 800619a:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 800619c:	481b      	ldr	r0, [pc, #108]	; (800620c <MX_ADC2_Init+0xd0>)
 800619e:	f001 f8c7 	bl	8007330 <HAL_ADC_Init>
 80061a2:	4603      	mov	r3, r0
 80061a4:	2b00      	cmp	r3, #0
 80061a6:	d001      	beq.n	80061ac <MX_ADC2_Init+0x70>
  {
    Error_Handler();
 80061a8:	f000 fcba 	bl	8006b20 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_12;
 80061ac:	230c      	movs	r3, #12
 80061ae:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80061b0:	2301      	movs	r3, #1
 80061b2:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80061b4:	2307      	movs	r3, #7
 80061b6:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80061b8:	463b      	mov	r3, r7
 80061ba:	4619      	mov	r1, r3
 80061bc:	4813      	ldr	r0, [pc, #76]	; (800620c <MX_ADC2_Init+0xd0>)
 80061be:	f001 fa1f 	bl	8007600 <HAL_ADC_ConfigChannel>
 80061c2:	4603      	mov	r3, r0
 80061c4:	2b00      	cmp	r3, #0
 80061c6:	d001      	beq.n	80061cc <MX_ADC2_Init+0x90>
  {
    Error_Handler();
 80061c8:	f000 fcaa 	bl	8006b20 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 80061cc:	230d      	movs	r3, #13
 80061ce:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 2;
 80061d0:	2302      	movs	r3, #2
 80061d2:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80061d4:	463b      	mov	r3, r7
 80061d6:	4619      	mov	r1, r3
 80061d8:	480c      	ldr	r0, [pc, #48]	; (800620c <MX_ADC2_Init+0xd0>)
 80061da:	f001 fa11 	bl	8007600 <HAL_ADC_ConfigChannel>
 80061de:	4603      	mov	r3, r0
 80061e0:	2b00      	cmp	r3, #0
 80061e2:	d001      	beq.n	80061e8 <MX_ADC2_Init+0xac>
  {
    Error_Handler();
 80061e4:	f000 fc9c 	bl	8006b20 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_15;
 80061e8:	230f      	movs	r3, #15
 80061ea:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 3;
 80061ec:	2303      	movs	r3, #3
 80061ee:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80061f0:	463b      	mov	r3, r7
 80061f2:	4619      	mov	r1, r3
 80061f4:	4805      	ldr	r0, [pc, #20]	; (800620c <MX_ADC2_Init+0xd0>)
 80061f6:	f001 fa03 	bl	8007600 <HAL_ADC_ConfigChannel>
 80061fa:	4603      	mov	r3, r0
 80061fc:	2b00      	cmp	r3, #0
 80061fe:	d001      	beq.n	8006204 <MX_ADC2_Init+0xc8>
  {
    Error_Handler();
 8006200:	f000 fc8e 	bl	8006b20 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8006204:	bf00      	nop
 8006206:	3710      	adds	r7, #16
 8006208:	46bd      	mov	sp, r7
 800620a:	bd80      	pop	{r7, pc}
 800620c:	2000097c 	.word	0x2000097c
 8006210:	40012100 	.word	0x40012100
 8006214:	0f000001 	.word	0x0f000001

08006218 <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 8006218:	b580      	push	{r7, lr}
 800621a:	b08a      	sub	sp, #40	; 0x28
 800621c:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 800621e:	4b30      	ldr	r3, [pc, #192]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006220:	4a30      	ldr	r2, [pc, #192]	; (80062e4 <MX_CAN1_Init+0xcc>)
 8006222:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 6;
 8006224:	4b2e      	ldr	r3, [pc, #184]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006226:	2206      	movs	r2, #6
 8006228:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 800622a:	4b2d      	ldr	r3, [pc, #180]	; (80062e0 <MX_CAN1_Init+0xc8>)
 800622c:	2200      	movs	r2, #0
 800622e:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8006230:	4b2b      	ldr	r3, [pc, #172]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006232:	2200      	movs	r2, #0
 8006234:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_4TQ;
 8006236:	4b2a      	ldr	r3, [pc, #168]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006238:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800623c:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_2TQ;
 800623e:	4b28      	ldr	r3, [pc, #160]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006240:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8006244:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8006246:	4b26      	ldr	r3, [pc, #152]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006248:	2200      	movs	r2, #0
 800624a:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = ENABLE;
 800624c:	4b24      	ldr	r3, [pc, #144]	; (80062e0 <MX_CAN1_Init+0xc8>)
 800624e:	2201      	movs	r2, #1
 8006250:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 8006252:	4b23      	ldr	r3, [pc, #140]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006254:	2200      	movs	r2, #0
 8006256:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8006258:	4b21      	ldr	r3, [pc, #132]	; (80062e0 <MX_CAN1_Init+0xc8>)
 800625a:	2200      	movs	r2, #0
 800625c:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 800625e:	4b20      	ldr	r3, [pc, #128]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006260:	2200      	movs	r2, #0
 8006262:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8006264:	4b1e      	ldr	r3, [pc, #120]	; (80062e0 <MX_CAN1_Init+0xc8>)
 8006266:	2200      	movs	r2, #0
 8006268:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 800626a:	481d      	ldr	r0, [pc, #116]	; (80062e0 <MX_CAN1_Init+0xc8>)
 800626c:	f001 fc68 	bl	8007b40 <HAL_CAN_Init>
 8006270:	4603      	mov	r3, r0
 8006272:	2b00      	cmp	r3, #0
 8006274:	d001      	beq.n	800627a <MX_CAN1_Init+0x62>
  {
    Error_Handler();
 8006276:	f000 fc53 	bl	8006b20 <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  CAN_FilterTypeDef FilterConfig0;
  FilterConfig0.FilterIdHigh = 0;
 800627a:	2300      	movs	r3, #0
 800627c:	603b      	str	r3, [r7, #0]
  FilterConfig0.FilterIdLow = 0;
 800627e:	2300      	movs	r3, #0
 8006280:	607b      	str	r3, [r7, #4]
  FilterConfig0.FilterMaskIdHigh = 0;
 8006282:	2300      	movs	r3, #0
 8006284:	60bb      	str	r3, [r7, #8]
  FilterConfig0.FilterMaskIdLow = 0;
 8006286:	2300      	movs	r3, #0
 8006288:	60fb      	str	r3, [r7, #12]
  FilterConfig0.FilterFIFOAssignment = CAN_FILTER_FIFO0;
 800628a:	2300      	movs	r3, #0
 800628c:	613b      	str	r3, [r7, #16]
  FilterConfig0.FilterBank = 0;
 800628e:	2300      	movs	r3, #0
 8006290:	617b      	str	r3, [r7, #20]
  FilterConfig0.SlaveStartFilterBank = 14;
 8006292:	230e      	movs	r3, #14
 8006294:	627b      	str	r3, [r7, #36]	; 0x24
  FilterConfig0.FilterMode = CAN_FILTERMODE_IDMASK;
 8006296:	2300      	movs	r3, #0
 8006298:	61bb      	str	r3, [r7, #24]
  FilterConfig0.FilterScale = CAN_FILTERSCALE_32BIT;
 800629a:	2301      	movs	r3, #1
 800629c:	61fb      	str	r3, [r7, #28]
  FilterConfig0.FilterActivation = ENABLE;
 800629e:	2301      	movs	r3, #1
 80062a0:	623b      	str	r3, [r7, #32]

  if(HAL_CAN_ConfigFilter(&hcan1, &FilterConfig0)!=HAL_OK) {
 80062a2:	463b      	mov	r3, r7
 80062a4:	4619      	mov	r1, r3
 80062a6:	480e      	ldr	r0, [pc, #56]	; (80062e0 <MX_CAN1_Init+0xc8>)
 80062a8:	f001 fd46 	bl	8007d38 <HAL_CAN_ConfigFilter>
 80062ac:	4603      	mov	r3, r0
 80062ae:	2b00      	cmp	r3, #0
 80062b0:	d001      	beq.n	80062b6 <MX_CAN1_Init+0x9e>
	  Error_Handler();
 80062b2:	f000 fc35 	bl	8006b20 <Error_Handler>
  }
  if(HAL_CAN_Start(&hcan1)!=HAL_OK) {
 80062b6:	480a      	ldr	r0, [pc, #40]	; (80062e0 <MX_CAN1_Init+0xc8>)
 80062b8:	f001 fe1e 	bl	8007ef8 <HAL_CAN_Start>
 80062bc:	4603      	mov	r3, r0
 80062be:	2b00      	cmp	r3, #0
 80062c0:	d001      	beq.n	80062c6 <MX_CAN1_Init+0xae>
	  Error_Handler();
 80062c2:	f000 fc2d 	bl	8006b20 <Error_Handler>
  }
  if (HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING) != HAL_OK)
 80062c6:	2102      	movs	r1, #2
 80062c8:	4805      	ldr	r0, [pc, #20]	; (80062e0 <MX_CAN1_Init+0xc8>)
 80062ca:	f002 f846 	bl	800835a <HAL_CAN_ActivateNotification>
 80062ce:	4603      	mov	r3, r0
 80062d0:	2b00      	cmp	r3, #0
 80062d2:	d001      	beq.n	80062d8 <MX_CAN1_Init+0xc0>
  {
	  Error_Handler();
 80062d4:	f000 fc24 	bl	8006b20 <Error_Handler>
  }

  /* USER CODE END CAN1_Init 2 */

}
 80062d8:	bf00      	nop
 80062da:	3728      	adds	r7, #40	; 0x28
 80062dc:	46bd      	mov	sp, r7
 80062de:	bd80      	pop	{r7, pc}
 80062e0:	20000a84 	.word	0x20000a84
 80062e4:	40006400 	.word	0x40006400

080062e8 <MX_CAN2_Init>:
  * @brief CAN2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN2_Init(void)
{
 80062e8:	b580      	push	{r7, lr}
 80062ea:	b08a      	sub	sp, #40	; 0x28
 80062ec:	af00      	add	r7, sp, #0
  /* USER CODE END CAN2_Init 0 */

  /* USER CODE BEGIN CAN2_Init 1 */

  /* USER CODE END CAN2_Init 1 */
  hcan2.Instance = CAN2;
 80062ee:	4b30      	ldr	r3, [pc, #192]	; (80063b0 <MX_CAN2_Init+0xc8>)
 80062f0:	4a30      	ldr	r2, [pc, #192]	; (80063b4 <MX_CAN2_Init+0xcc>)
 80062f2:	601a      	str	r2, [r3, #0]
  hcan2.Init.Prescaler = 6;
 80062f4:	4b2e      	ldr	r3, [pc, #184]	; (80063b0 <MX_CAN2_Init+0xc8>)
 80062f6:	2206      	movs	r2, #6
 80062f8:	605a      	str	r2, [r3, #4]
  hcan2.Init.Mode = CAN_MODE_NORMAL;
 80062fa:	4b2d      	ldr	r3, [pc, #180]	; (80063b0 <MX_CAN2_Init+0xc8>)
 80062fc:	2200      	movs	r2, #0
 80062fe:	609a      	str	r2, [r3, #8]
  hcan2.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8006300:	4b2b      	ldr	r3, [pc, #172]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006302:	2200      	movs	r2, #0
 8006304:	60da      	str	r2, [r3, #12]
  hcan2.Init.TimeSeg1 = CAN_BS1_4TQ;
 8006306:	4b2a      	ldr	r3, [pc, #168]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006308:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 800630c:	611a      	str	r2, [r3, #16]
  hcan2.Init.TimeSeg2 = CAN_BS2_2TQ;
 800630e:	4b28      	ldr	r3, [pc, #160]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006310:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 8006314:	615a      	str	r2, [r3, #20]
  hcan2.Init.TimeTriggeredMode = DISABLE;
 8006316:	4b26      	ldr	r3, [pc, #152]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006318:	2200      	movs	r2, #0
 800631a:	761a      	strb	r2, [r3, #24]
  hcan2.Init.AutoBusOff = ENABLE;
 800631c:	4b24      	ldr	r3, [pc, #144]	; (80063b0 <MX_CAN2_Init+0xc8>)
 800631e:	2201      	movs	r2, #1
 8006320:	765a      	strb	r2, [r3, #25]
  hcan2.Init.AutoWakeUp = DISABLE;
 8006322:	4b23      	ldr	r3, [pc, #140]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006324:	2200      	movs	r2, #0
 8006326:	769a      	strb	r2, [r3, #26]
  hcan2.Init.AutoRetransmission = DISABLE;
 8006328:	4b21      	ldr	r3, [pc, #132]	; (80063b0 <MX_CAN2_Init+0xc8>)
 800632a:	2200      	movs	r2, #0
 800632c:	76da      	strb	r2, [r3, #27]
  hcan2.Init.ReceiveFifoLocked = DISABLE;
 800632e:	4b20      	ldr	r3, [pc, #128]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006330:	2200      	movs	r2, #0
 8006332:	771a      	strb	r2, [r3, #28]
  hcan2.Init.TransmitFifoPriority = DISABLE;
 8006334:	4b1e      	ldr	r3, [pc, #120]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006336:	2200      	movs	r2, #0
 8006338:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan2) != HAL_OK)
 800633a:	481d      	ldr	r0, [pc, #116]	; (80063b0 <MX_CAN2_Init+0xc8>)
 800633c:	f001 fc00 	bl	8007b40 <HAL_CAN_Init>
 8006340:	4603      	mov	r3, r0
 8006342:	2b00      	cmp	r3, #0
 8006344:	d001      	beq.n	800634a <MX_CAN2_Init+0x62>
  {
    Error_Handler();
 8006346:	f000 fbeb 	bl	8006b20 <Error_Handler>
  }
  /* USER CODE BEGIN CAN2_Init 2 */
  CAN_FilterTypeDef FilterConfig1;
  FilterConfig1.FilterIdHigh = 0;
 800634a:	2300      	movs	r3, #0
 800634c:	603b      	str	r3, [r7, #0]
  FilterConfig1.FilterIdLow = 0;
 800634e:	2300      	movs	r3, #0
 8006350:	607b      	str	r3, [r7, #4]
  FilterConfig1.FilterMaskIdHigh = 0;
 8006352:	2300      	movs	r3, #0
 8006354:	60bb      	str	r3, [r7, #8]
  FilterConfig1.FilterMaskIdLow = 0;
 8006356:	2300      	movs	r3, #0
 8006358:	60fb      	str	r3, [r7, #12]
  FilterConfig1.FilterFIFOAssignment = CAN_FILTER_FIFO1;
 800635a:	2301      	movs	r3, #1
 800635c:	613b      	str	r3, [r7, #16]
  FilterConfig1.FilterBank = 14;
 800635e:	230e      	movs	r3, #14
 8006360:	617b      	str	r3, [r7, #20]
  FilterConfig1.SlaveStartFilterBank = 14;
 8006362:	230e      	movs	r3, #14
 8006364:	627b      	str	r3, [r7, #36]	; 0x24
  FilterConfig1.FilterMode = CAN_FILTERMODE_IDMASK;
 8006366:	2300      	movs	r3, #0
 8006368:	61bb      	str	r3, [r7, #24]
  FilterConfig1.FilterScale = CAN_FILTERSCALE_32BIT;
 800636a:	2301      	movs	r3, #1
 800636c:	61fb      	str	r3, [r7, #28]
  FilterConfig1.FilterActivation = ENABLE;
 800636e:	2301      	movs	r3, #1
 8006370:	623b      	str	r3, [r7, #32]
  if(HAL_CAN_ConfigFilter(&hcan2, &FilterConfig1)!=HAL_OK) {
 8006372:	463b      	mov	r3, r7
 8006374:	4619      	mov	r1, r3
 8006376:	480e      	ldr	r0, [pc, #56]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006378:	f001 fcde 	bl	8007d38 <HAL_CAN_ConfigFilter>
 800637c:	4603      	mov	r3, r0
 800637e:	2b00      	cmp	r3, #0
 8006380:	d001      	beq.n	8006386 <MX_CAN2_Init+0x9e>
	  Error_Handler();
 8006382:	f000 fbcd 	bl	8006b20 <Error_Handler>
  }
  if(HAL_CAN_Start(&hcan2)!=HAL_OK) {
 8006386:	480a      	ldr	r0, [pc, #40]	; (80063b0 <MX_CAN2_Init+0xc8>)
 8006388:	f001 fdb6 	bl	8007ef8 <HAL_CAN_Start>
 800638c:	4603      	mov	r3, r0
 800638e:	2b00      	cmp	r3, #0
 8006390:	d001      	beq.n	8006396 <MX_CAN2_Init+0xae>
	  Error_Handler();
 8006392:	f000 fbc5 	bl	8006b20 <Error_Handler>
  }
  if (HAL_CAN_ActivateNotification(&hcan2, CAN_IT_RX_FIFO1_MSG_PENDING) != HAL_OK)
 8006396:	2110      	movs	r1, #16
 8006398:	4805      	ldr	r0, [pc, #20]	; (80063b0 <MX_CAN2_Init+0xc8>)
 800639a:	f001 ffde 	bl	800835a <HAL_CAN_ActivateNotification>
 800639e:	4603      	mov	r3, r0
 80063a0:	2b00      	cmp	r3, #0
 80063a2:	d001      	beq.n	80063a8 <MX_CAN2_Init+0xc0>
  {
	  Error_Handler();
 80063a4:	f000 fbbc 	bl	8006b20 <Error_Handler>
  }
  /* USER CODE END CAN2_Init 2 */

}
 80063a8:	bf00      	nop
 80063aa:	3728      	adds	r7, #40	; 0x28
 80063ac:	46bd      	mov	sp, r7
 80063ae:	bd80      	pop	{r7, pc}
 80063b0:	20000aac 	.word	0x20000aac
 80063b4:	40006800 	.word	0x40006800

080063b8 <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 80063b8:	b580      	push	{r7, lr}
 80063ba:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 80063bc:	4b17      	ldr	r3, [pc, #92]	; (800641c <MX_SPI1_Init+0x64>)
 80063be:	4a18      	ldr	r2, [pc, #96]	; (8006420 <MX_SPI1_Init+0x68>)
 80063c0:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80063c2:	4b16      	ldr	r3, [pc, #88]	; (800641c <MX_SPI1_Init+0x64>)
 80063c4:	f44f 7282 	mov.w	r2, #260	; 0x104
 80063c8:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80063ca:	4b14      	ldr	r3, [pc, #80]	; (800641c <MX_SPI1_Init+0x64>)
 80063cc:	2200      	movs	r2, #0
 80063ce:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80063d0:	4b12      	ldr	r3, [pc, #72]	; (800641c <MX_SPI1_Init+0x64>)
 80063d2:	2200      	movs	r2, #0
 80063d4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80063d6:	4b11      	ldr	r3, [pc, #68]	; (800641c <MX_SPI1_Init+0x64>)
 80063d8:	2200      	movs	r2, #0
 80063da:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80063dc:	4b0f      	ldr	r3, [pc, #60]	; (800641c <MX_SPI1_Init+0x64>)
 80063de:	2200      	movs	r2, #0
 80063e0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80063e2:	4b0e      	ldr	r3, [pc, #56]	; (800641c <MX_SPI1_Init+0x64>)
 80063e4:	f44f 7200 	mov.w	r2, #512	; 0x200
 80063e8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_128;
 80063ea:	4b0c      	ldr	r3, [pc, #48]	; (800641c <MX_SPI1_Init+0x64>)
 80063ec:	2230      	movs	r2, #48	; 0x30
 80063ee:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80063f0:	4b0a      	ldr	r3, [pc, #40]	; (800641c <MX_SPI1_Init+0x64>)
 80063f2:	2200      	movs	r2, #0
 80063f4:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 80063f6:	4b09      	ldr	r3, [pc, #36]	; (800641c <MX_SPI1_Init+0x64>)
 80063f8:	2200      	movs	r2, #0
 80063fa:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80063fc:	4b07      	ldr	r3, [pc, #28]	; (800641c <MX_SPI1_Init+0x64>)
 80063fe:	2200      	movs	r2, #0
 8006400:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8006402:	4b06      	ldr	r3, [pc, #24]	; (800641c <MX_SPI1_Init+0x64>)
 8006404:	220a      	movs	r2, #10
 8006406:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8006408:	4804      	ldr	r0, [pc, #16]	; (800641c <MX_SPI1_Init+0x64>)
 800640a:	f004 ff47 	bl	800b29c <HAL_SPI_Init>
 800640e:	4603      	mov	r3, r0
 8006410:	2b00      	cmp	r3, #0
 8006412:	d001      	beq.n	8006418 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8006414:	f000 fb84 	bl	8006b20 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8006418:	bf00      	nop
 800641a:	bd80      	pop	{r7, pc}
 800641c:	20000ad4 	.word	0x20000ad4
 8006420:	40013000 	.word	0x40013000

08006424 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8006424:	b580      	push	{r7, lr}
 8006426:	b082      	sub	sp, #8
 8006428:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA2_CLK_ENABLE();
 800642a:	2300      	movs	r3, #0
 800642c:	607b      	str	r3, [r7, #4]
 800642e:	4b10      	ldr	r3, [pc, #64]	; (8006470 <MX_DMA_Init+0x4c>)
 8006430:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006432:	4a0f      	ldr	r2, [pc, #60]	; (8006470 <MX_DMA_Init+0x4c>)
 8006434:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8006438:	6313      	str	r3, [r2, #48]	; 0x30
 800643a:	4b0d      	ldr	r3, [pc, #52]	; (8006470 <MX_DMA_Init+0x4c>)
 800643c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800643e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006442:	607b      	str	r3, [r7, #4]
 8006444:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 8006446:	2200      	movs	r2, #0
 8006448:	2100      	movs	r1, #0
 800644a:	2038      	movs	r0, #56	; 0x38
 800644c:	f002 faab 	bl	80089a6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8006450:	2038      	movs	r0, #56	; 0x38
 8006452:	f002 fac4 	bl	80089de <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream2_IRQn, 0, 0);
 8006456:	2200      	movs	r2, #0
 8006458:	2100      	movs	r1, #0
 800645a:	203a      	movs	r0, #58	; 0x3a
 800645c:	f002 faa3 	bl	80089a6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream2_IRQn);
 8006460:	203a      	movs	r0, #58	; 0x3a
 8006462:	f002 fabc 	bl	80089de <HAL_NVIC_EnableIRQ>

}
 8006466:	bf00      	nop
 8006468:	3708      	adds	r7, #8
 800646a:	46bd      	mov	sp, r7
 800646c:	bd80      	pop	{r7, pc}
 800646e:	bf00      	nop
 8006470:	40023800 	.word	0x40023800

08006474 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8006474:	b580      	push	{r7, lr}
 8006476:	b08a      	sub	sp, #40	; 0x28
 8006478:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800647a:	f107 0314 	add.w	r3, r7, #20
 800647e:	2200      	movs	r2, #0
 8006480:	601a      	str	r2, [r3, #0]
 8006482:	605a      	str	r2, [r3, #4]
 8006484:	609a      	str	r2, [r3, #8]
 8006486:	60da      	str	r2, [r3, #12]
 8006488:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800648a:	2300      	movs	r3, #0
 800648c:	613b      	str	r3, [r7, #16]
 800648e:	4b68      	ldr	r3, [pc, #416]	; (8006630 <MX_GPIO_Init+0x1bc>)
 8006490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006492:	4a67      	ldr	r2, [pc, #412]	; (8006630 <MX_GPIO_Init+0x1bc>)
 8006494:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006498:	6313      	str	r3, [r2, #48]	; 0x30
 800649a:	4b65      	ldr	r3, [pc, #404]	; (8006630 <MX_GPIO_Init+0x1bc>)
 800649c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800649e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80064a2:	613b      	str	r3, [r7, #16]
 80064a4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80064a6:	2300      	movs	r3, #0
 80064a8:	60fb      	str	r3, [r7, #12]
 80064aa:	4b61      	ldr	r3, [pc, #388]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064ae:	4a60      	ldr	r2, [pc, #384]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064b0:	f043 0304 	orr.w	r3, r3, #4
 80064b4:	6313      	str	r3, [r2, #48]	; 0x30
 80064b6:	4b5e      	ldr	r3, [pc, #376]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064ba:	f003 0304 	and.w	r3, r3, #4
 80064be:	60fb      	str	r3, [r7, #12]
 80064c0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80064c2:	2300      	movs	r3, #0
 80064c4:	60bb      	str	r3, [r7, #8]
 80064c6:	4b5a      	ldr	r3, [pc, #360]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064ca:	4a59      	ldr	r2, [pc, #356]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064cc:	f043 0301 	orr.w	r3, r3, #1
 80064d0:	6313      	str	r3, [r2, #48]	; 0x30
 80064d2:	4b57      	ldr	r3, [pc, #348]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064d6:	f003 0301 	and.w	r3, r3, #1
 80064da:	60bb      	str	r3, [r7, #8]
 80064dc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80064de:	2300      	movs	r3, #0
 80064e0:	607b      	str	r3, [r7, #4]
 80064e2:	4b53      	ldr	r3, [pc, #332]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064e6:	4a52      	ldr	r2, [pc, #328]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064e8:	f043 0302 	orr.w	r3, r3, #2
 80064ec:	6313      	str	r3, [r2, #48]	; 0x30
 80064ee:	4b50      	ldr	r3, [pc, #320]	; (8006630 <MX_GPIO_Init+0x1bc>)
 80064f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80064f2:	f003 0302 	and.w	r3, r3, #2
 80064f6:	607b      	str	r3, [r7, #4]
 80064f8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80064fa:	2300      	movs	r3, #0
 80064fc:	603b      	str	r3, [r7, #0]
 80064fe:	4b4c      	ldr	r3, [pc, #304]	; (8006630 <MX_GPIO_Init+0x1bc>)
 8006500:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006502:	4a4b      	ldr	r2, [pc, #300]	; (8006630 <MX_GPIO_Init+0x1bc>)
 8006504:	f043 0308 	orr.w	r3, r3, #8
 8006508:	6313      	str	r3, [r2, #48]	; 0x30
 800650a:	4b49      	ldr	r3, [pc, #292]	; (8006630 <MX_GPIO_Init+0x1bc>)
 800650c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800650e:	f003 0308 	and.w	r3, r3, #8
 8006512:	603b      	str	r3, [r7, #0]
 8006514:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, NSS_Pin|CAN_TX_LED_Pin, GPIO_PIN_RESET);
 8006516:	2200      	movs	r2, #0
 8006518:	f44f 7104 	mov.w	r1, #528	; 0x210
 800651c:	4845      	ldr	r0, [pc, #276]	; (8006634 <MX_GPIO_Init+0x1c0>)
 800651e:	f002 ff9d 	bl	800945c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(NRESET_GPIO_Port, NRESET_Pin, GPIO_PIN_RESET);
 8006522:	2200      	movs	r2, #0
 8006524:	2101      	movs	r1, #1
 8006526:	4844      	ldr	r0, [pc, #272]	; (8006638 <MX_GPIO_Init+0x1c4>)
 8006528:	f002 ff98 	bl	800945c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, RF_SWITCH_Pin|RF_SWITCH_SUPP_Pin|CAN_RX_LED_Pin|RADIO_TX_LED_Pin, GPIO_PIN_RESET);
 800652c:	2200      	movs	r2, #0
 800652e:	f44f 612c 	mov.w	r1, #2752	; 0xac0
 8006532:	4842      	ldr	r0, [pc, #264]	; (800663c <MX_GPIO_Init+0x1c8>)
 8006534:	f002 ff92 	bl	800945c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RADIO_RX_LED_GPIO_Port, RADIO_RX_LED_Pin, GPIO_PIN_RESET);
 8006538:	2200      	movs	r2, #0
 800653a:	2104      	movs	r1, #4
 800653c:	4840      	ldr	r0, [pc, #256]	; (8006640 <MX_GPIO_Init+0x1cc>)
 800653e:	f002 ff8d 	bl	800945c <HAL_GPIO_WritePin>

  /*Configure GPIO pins : NSS_Pin CAN_TX_LED_Pin */
  GPIO_InitStruct.Pin = NSS_Pin|CAN_TX_LED_Pin;
 8006542:	f44f 7304 	mov.w	r3, #528	; 0x210
 8006546:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006548:	2301      	movs	r3, #1
 800654a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800654c:	2300      	movs	r3, #0
 800654e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8006550:	2300      	movs	r3, #0
 8006552:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8006554:	f107 0314 	add.w	r3, r7, #20
 8006558:	4619      	mov	r1, r3
 800655a:	4836      	ldr	r0, [pc, #216]	; (8006634 <MX_GPIO_Init+0x1c0>)
 800655c:	f002 fdca 	bl	80090f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : NRESET_Pin */
  GPIO_InitStruct.Pin = NRESET_Pin;
 8006560:	2301      	movs	r3, #1
 8006562:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8006564:	2301      	movs	r3, #1
 8006566:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006568:	2300      	movs	r3, #0
 800656a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800656c:	2300      	movs	r3, #0
 800656e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(NRESET_GPIO_Port, &GPIO_InitStruct);
 8006570:	f107 0314 	add.w	r3, r7, #20
 8006574:	4619      	mov	r1, r3
 8006576:	4830      	ldr	r0, [pc, #192]	; (8006638 <MX_GPIO_Init+0x1c4>)
 8006578:	f002 fdbc 	bl	80090f4 <HAL_GPIO_Init>

  /*Configure GPIO pins : BUSY_Pin DIO3_Pin */
  GPIO_InitStruct.Pin = BUSY_Pin|DIO3_Pin;
 800657c:	f248 0302 	movw	r3, #32770	; 0x8002
 8006580:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8006582:	2300      	movs	r3, #0
 8006584:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8006586:	2300      	movs	r3, #0
 8006588:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800658a:	f107 0314 	add.w	r3, r7, #20
 800658e:	4619      	mov	r1, r3
 8006590:	4829      	ldr	r0, [pc, #164]	; (8006638 <MX_GPIO_Init+0x1c4>)
 8006592:	f002 fdaf 	bl	80090f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : DIO1_Pin */
  GPIO_InitStruct.Pin = DIO1_Pin;
 8006596:	2304      	movs	r3, #4
 8006598:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800659a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800659e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80065a0:	2300      	movs	r3, #0
 80065a2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(DIO1_GPIO_Port, &GPIO_InitStruct);
 80065a4:	f107 0314 	add.w	r3, r7, #20
 80065a8:	4619      	mov	r1, r3
 80065aa:	4823      	ldr	r0, [pc, #140]	; (8006638 <MX_GPIO_Init+0x1c4>)
 80065ac:	f002 fda2 	bl	80090f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : DIO2_Pin */
  GPIO_InitStruct.Pin = DIO2_Pin;
 80065b0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80065b4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 80065b6:	f44f 1344 	mov.w	r3, #3211264	; 0x310000
 80065ba:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80065bc:	2300      	movs	r3, #0
 80065be:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(DIO2_GPIO_Port, &GPIO_InitStruct);
 80065c0:	f107 0314 	add.w	r3, r7, #20
 80065c4:	4619      	mov	r1, r3
 80065c6:	481c      	ldr	r0, [pc, #112]	; (8006638 <MX_GPIO_Init+0x1c4>)
 80065c8:	f002 fd94 	bl	80090f4 <HAL_GPIO_Init>

  /*Configure GPIO pins : RF_SWITCH_Pin RF_SWITCH_SUPP_Pin CAN_RX_LED_Pin RADIO_TX_LED_Pin */
  GPIO_InitStruct.Pin = RF_SWITCH_Pin|RF_SWITCH_SUPP_Pin|CAN_RX_LED_Pin|RADIO_TX_LED_Pin;
 80065cc:	f44f 632c 	mov.w	r3, #2752	; 0xac0
 80065d0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80065d2:	2301      	movs	r3, #1
 80065d4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80065d6:	2300      	movs	r3, #0
 80065d8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80065da:	2300      	movs	r3, #0
 80065dc:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80065de:	f107 0314 	add.w	r3, r7, #20
 80065e2:	4619      	mov	r1, r3
 80065e4:	4815      	ldr	r0, [pc, #84]	; (800663c <MX_GPIO_Init+0x1c8>)
 80065e6:	f002 fd85 	bl	80090f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : RADIO_RX_LED_Pin */
  GPIO_InitStruct.Pin = RADIO_RX_LED_Pin;
 80065ea:	2304      	movs	r3, #4
 80065ec:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80065ee:	2301      	movs	r3, #1
 80065f0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80065f2:	2300      	movs	r3, #0
 80065f4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80065f6:	2300      	movs	r3, #0
 80065f8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(RADIO_RX_LED_GPIO_Port, &GPIO_InitStruct);
 80065fa:	f107 0314 	add.w	r3, r7, #20
 80065fe:	4619      	mov	r1, r3
 8006600:	480f      	ldr	r0, [pc, #60]	; (8006640 <MX_GPIO_Init+0x1cc>)
 8006602:	f002 fd77 	bl	80090f4 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 8006606:	2200      	movs	r2, #0
 8006608:	2100      	movs	r1, #0
 800660a:	2008      	movs	r0, #8
 800660c:	f002 f9cb 	bl	80089a6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 8006610:	2008      	movs	r0, #8
 8006612:	f002 f9e4 	bl	80089de <HAL_NVIC_EnableIRQ>

  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 8006616:	2200      	movs	r2, #0
 8006618:	2100      	movs	r1, #0
 800661a:	2028      	movs	r0, #40	; 0x28
 800661c:	f002 f9c3 	bl	80089a6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8006620:	2028      	movs	r0, #40	; 0x28
 8006622:	f002 f9dc 	bl	80089de <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8006626:	bf00      	nop
 8006628:	3728      	adds	r7, #40	; 0x28
 800662a:	46bd      	mov	sp, r7
 800662c:	bd80      	pop	{r7, pc}
 800662e:	bf00      	nop
 8006630:	40023800 	.word	0x40023800
 8006634:	40020000 	.word	0x40020000
 8006638:	40020400 	.word	0x40020400
 800663c:	40020800 	.word	0x40020800
 8006640:	40020c00 	.word	0x40020c00

08006644 <HAL_CAN_RxFifo0MsgPendingCallback>:

/* USER CODE BEGIN 4 */

/* Primary CAN */
void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
{
 8006644:	b580      	push	{r7, lr}
 8006646:	b082      	sub	sp, #8
 8006648:	af00      	add	r7, sp, #0
 800664a:	6078      	str	r0, [r7, #4]
	if (hcan == &hcan1)
 800664c:	687b      	ldr	r3, [r7, #4]
 800664e:	4a16      	ldr	r2, [pc, #88]	; (80066a8 <HAL_CAN_RxFifo0MsgPendingCallback+0x64>)
 8006650:	4293      	cmp	r3, r2
 8006652:	d124      	bne.n	800669e <HAL_CAN_RxFifo0MsgPendingCallback+0x5a>
	{
		HAL_GPIO_WritePin(mcu.can_rx_led.type, mcu.can_rx_led.pin, GPIO_PIN_SET);
 8006654:	4b15      	ldr	r3, [pc, #84]	; (80066ac <HAL_CAN_RxFifo0MsgPendingCallback+0x68>)
 8006656:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006658:	4a14      	ldr	r2, [pc, #80]	; (80066ac <HAL_CAN_RxFifo0MsgPendingCallback+0x68>)
 800665a:	f8b2 1060 	ldrh.w	r1, [r2, #96]	; 0x60
 800665e:	2201      	movs	r2, #1
 8006660:	4618      	mov	r0, r3
 8006662:	f002 fefb 	bl	800945c <HAL_GPIO_WritePin>

		HAL_CAN_GetRxMessage(&hcan1, CAN_RX_FIFO0, &RxHeader1, RxData1);
 8006666:	4b12      	ldr	r3, [pc, #72]	; (80066b0 <HAL_CAN_RxFifo0MsgPendingCallback+0x6c>)
 8006668:	4a12      	ldr	r2, [pc, #72]	; (80066b4 <HAL_CAN_RxFifo0MsgPendingCallback+0x70>)
 800666a:	2100      	movs	r1, #0
 800666c:	480e      	ldr	r0, [pc, #56]	; (80066a8 <HAL_CAN_RxFifo0MsgPendingCallback+0x64>)
 800666e:	f001 fd62 	bl	8008136 <HAL_CAN_GetRxMessage>
		can1_msgs_rx++;
 8006672:	4b11      	ldr	r3, [pc, #68]	; (80066b8 <HAL_CAN_RxFifo0MsgPendingCallback+0x74>)
 8006674:	881b      	ldrh	r3, [r3, #0]
 8006676:	3301      	adds	r3, #1
 8006678:	b29a      	uxth	r2, r3
 800667a:	4b0f      	ldr	r3, [pc, #60]	; (80066b8 <HAL_CAN_RxFifo0MsgPendingCallback+0x74>)
 800667c:	801a      	strh	r2, [r3, #0]
		process_can1_rx_msg(&teleData, RxHeader1.StdId, RxData1);
 800667e:	4b0d      	ldr	r3, [pc, #52]	; (80066b4 <HAL_CAN_RxFifo0MsgPendingCallback+0x70>)
 8006680:	681b      	ldr	r3, [r3, #0]
 8006682:	4a0b      	ldr	r2, [pc, #44]	; (80066b0 <HAL_CAN_RxFifo0MsgPendingCallback+0x6c>)
 8006684:	4619      	mov	r1, r3
 8006686:	480d      	ldr	r0, [pc, #52]	; (80066bc <HAL_CAN_RxFifo0MsgPendingCallback+0x78>)
 8006688:	f7fd fb18 	bl	8003cbc <process_can1_rx_msg>

		HAL_GPIO_WritePin(mcu.can_rx_led.type, mcu.can_rx_led.pin, GPIO_PIN_RESET);
 800668c:	4b07      	ldr	r3, [pc, #28]	; (80066ac <HAL_CAN_RxFifo0MsgPendingCallback+0x68>)
 800668e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006690:	4a06      	ldr	r2, [pc, #24]	; (80066ac <HAL_CAN_RxFifo0MsgPendingCallback+0x68>)
 8006692:	f8b2 1060 	ldrh.w	r1, [r2, #96]	; 0x60
 8006696:	2200      	movs	r2, #0
 8006698:	4618      	mov	r0, r3
 800669a:	f002 fedf 	bl	800945c <HAL_GPIO_WritePin>
	}
}
 800669e:	bf00      	nop
 80066a0:	3708      	adds	r7, #8
 80066a2:	46bd      	mov	sp, r7
 80066a4:	bd80      	pop	{r7, pc}
 80066a6:	bf00      	nop
 80066a8:	20000a84 	.word	0x20000a84
 80066ac:	200003e0 	.word	0x200003e0
 80066b0:	20000bdc 	.word	0x20000bdc
 80066b4:	20000bc0 	.word	0x20000bc0
 80066b8:	20000c2c 	.word	0x20000c2c
 80066bc:	200008bc 	.word	0x200008bc

080066c0 <HAL_CAN_RxFifo1MsgPendingCallback>:

/* Sensory CAN */
void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
{
 80066c0:	b580      	push	{r7, lr}
 80066c2:	b082      	sub	sp, #8
 80066c4:	af00      	add	r7, sp, #0
 80066c6:	6078      	str	r0, [r7, #4]
	if (hcan == &hcan2)
 80066c8:	687b      	ldr	r3, [r7, #4]
 80066ca:	4a16      	ldr	r2, [pc, #88]	; (8006724 <HAL_CAN_RxFifo1MsgPendingCallback+0x64>)
 80066cc:	4293      	cmp	r3, r2
 80066ce:	d124      	bne.n	800671a <HAL_CAN_RxFifo1MsgPendingCallback+0x5a>
	{
		HAL_GPIO_WritePin(mcu.can_rx_led.type, mcu.can_rx_led.pin, GPIO_PIN_SET);
 80066d0:	4b15      	ldr	r3, [pc, #84]	; (8006728 <HAL_CAN_RxFifo1MsgPendingCallback+0x68>)
 80066d2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80066d4:	4a14      	ldr	r2, [pc, #80]	; (8006728 <HAL_CAN_RxFifo1MsgPendingCallback+0x68>)
 80066d6:	f8b2 1060 	ldrh.w	r1, [r2, #96]	; 0x60
 80066da:	2201      	movs	r2, #1
 80066dc:	4618      	mov	r0, r3
 80066de:	f002 febd 	bl	800945c <HAL_GPIO_WritePin>

		HAL_CAN_GetRxMessage(&hcan2, CAN_RX_FIFO1, &RxHeader2, RxData2);
 80066e2:	4b12      	ldr	r3, [pc, #72]	; (800672c <HAL_CAN_RxFifo1MsgPendingCallback+0x6c>)
 80066e4:	4a12      	ldr	r2, [pc, #72]	; (8006730 <HAL_CAN_RxFifo1MsgPendingCallback+0x70>)
 80066e6:	2101      	movs	r1, #1
 80066e8:	480e      	ldr	r0, [pc, #56]	; (8006724 <HAL_CAN_RxFifo1MsgPendingCallback+0x64>)
 80066ea:	f001 fd24 	bl	8008136 <HAL_CAN_GetRxMessage>
		can2_msgs_rx++;
 80066ee:	4b11      	ldr	r3, [pc, #68]	; (8006734 <HAL_CAN_RxFifo1MsgPendingCallback+0x74>)
 80066f0:	881b      	ldrh	r3, [r3, #0]
 80066f2:	3301      	adds	r3, #1
 80066f4:	b29a      	uxth	r2, r3
 80066f6:	4b0f      	ldr	r3, [pc, #60]	; (8006734 <HAL_CAN_RxFifo1MsgPendingCallback+0x74>)
 80066f8:	801a      	strh	r2, [r3, #0]
		process_can2_rx_msg(&teleData, RxHeader2.StdId, RxData2);
 80066fa:	4b0d      	ldr	r3, [pc, #52]	; (8006730 <HAL_CAN_RxFifo1MsgPendingCallback+0x70>)
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	4a0b      	ldr	r2, [pc, #44]	; (800672c <HAL_CAN_RxFifo1MsgPendingCallback+0x6c>)
 8006700:	4619      	mov	r1, r3
 8006702:	480d      	ldr	r0, [pc, #52]	; (8006738 <HAL_CAN_RxFifo1MsgPendingCallback+0x78>)
 8006704:	f7fe f8c8 	bl	8004898 <process_can2_rx_msg>

		HAL_GPIO_WritePin(mcu.can_rx_led.type, mcu.can_rx_led.pin, GPIO_PIN_RESET);
 8006708:	4b07      	ldr	r3, [pc, #28]	; (8006728 <HAL_CAN_RxFifo1MsgPendingCallback+0x68>)
 800670a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800670c:	4a06      	ldr	r2, [pc, #24]	; (8006728 <HAL_CAN_RxFifo1MsgPendingCallback+0x68>)
 800670e:	f8b2 1060 	ldrh.w	r1, [r2, #96]	; 0x60
 8006712:	2200      	movs	r2, #0
 8006714:	4618      	mov	r0, r3
 8006716:	f002 fea1 	bl	800945c <HAL_GPIO_WritePin>
	}
}
 800671a:	bf00      	nop
 800671c:	3708      	adds	r7, #8
 800671e:	46bd      	mov	sp, r7
 8006720:	bd80      	pop	{r7, pc}
 8006722:	bf00      	nop
 8006724:	20000aac 	.word	0x20000aac
 8006728:	200003e0 	.word	0x200003e0
 800672c:	20000c20 	.word	0x20000c20
 8006730:	20000bfc 	.word	0x20000bfc
 8006734:	20000c2e 	.word	0x20000c2e
 8006738:	200008bc 	.word	0x200008bc
 800673c:	00000000 	.word	0x00000000

08006740 <HAL_ADC_ConvCpltCallback>:


void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
{
 8006740:	b580      	push	{r7, lr}
 8006742:	b082      	sub	sp, #8
 8006744:	af00      	add	r7, sp, #0
 8006746:	6078      	str	r0, [r7, #4]
	if (hadc == &hadc1)
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	4a87      	ldr	r2, [pc, #540]	; (8006968 <HAL_ADC_ConvCpltCallback+0x228>)
 800674c:	4293      	cmp	r3, r2
 800674e:	d17c      	bne.n	800684a <HAL_ADC_ConvCpltCallback+0x10a>
	{
		adc1_conv_cplt++;
 8006750:	4b86      	ldr	r3, [pc, #536]	; (800696c <HAL_ADC_ConvCpltCallback+0x22c>)
 8006752:	881b      	ldrh	r3, [r3, #0]
 8006754:	b29b      	uxth	r3, r3
 8006756:	3301      	adds	r3, #1
 8006758:	b29a      	uxth	r2, r3
 800675a:	4b84      	ldr	r3, [pc, #528]	; (800696c <HAL_ADC_ConvCpltCallback+0x22c>)
 800675c:	801a      	strh	r2, [r3, #0]

		if (adc1_conv_cplt < ADC_SAMPLES)
 800675e:	4b83      	ldr	r3, [pc, #524]	; (800696c <HAL_ADC_ConvCpltCallback+0x22c>)
 8006760:	881b      	ldrh	r3, [r3, #0]
 8006762:	b29b      	uxth	r3, r3
 8006764:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006768:	d21b      	bcs.n	80067a2 <HAL_ADC_ConvCpltCallback+0x62>
		{
			adc1_ch1_sum += adc1results[0];
 800676a:	4b81      	ldr	r3, [pc, #516]	; (8006970 <HAL_ADC_ConvCpltCallback+0x230>)
 800676c:	881b      	ldrh	r3, [r3, #0]
 800676e:	b29b      	uxth	r3, r3
 8006770:	461a      	mov	r2, r3
 8006772:	4b80      	ldr	r3, [pc, #512]	; (8006974 <HAL_ADC_ConvCpltCallback+0x234>)
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	4413      	add	r3, r2
 8006778:	4a7e      	ldr	r2, [pc, #504]	; (8006974 <HAL_ADC_ConvCpltCallback+0x234>)
 800677a:	6013      	str	r3, [r2, #0]
			adc1_ch2_sum += adc1results[1];
 800677c:	4b7c      	ldr	r3, [pc, #496]	; (8006970 <HAL_ADC_ConvCpltCallback+0x230>)
 800677e:	885b      	ldrh	r3, [r3, #2]
 8006780:	b29b      	uxth	r3, r3
 8006782:	461a      	mov	r2, r3
 8006784:	4b7c      	ldr	r3, [pc, #496]	; (8006978 <HAL_ADC_ConvCpltCallback+0x238>)
 8006786:	681b      	ldr	r3, [r3, #0]
 8006788:	4413      	add	r3, r2
 800678a:	4a7b      	ldr	r2, [pc, #492]	; (8006978 <HAL_ADC_ConvCpltCallback+0x238>)
 800678c:	6013      	str	r3, [r2, #0]
			adc1_ch3_sum += adc1results[2];
 800678e:	4b78      	ldr	r3, [pc, #480]	; (8006970 <HAL_ADC_ConvCpltCallback+0x230>)
 8006790:	889b      	ldrh	r3, [r3, #4]
 8006792:	b29b      	uxth	r3, r3
 8006794:	461a      	mov	r2, r3
 8006796:	4b79      	ldr	r3, [pc, #484]	; (800697c <HAL_ADC_ConvCpltCallback+0x23c>)
 8006798:	681b      	ldr	r3, [r3, #0]
 800679a:	4413      	add	r3, r2
 800679c:	4a77      	ldr	r2, [pc, #476]	; (800697c <HAL_ADC_ConvCpltCallback+0x23c>)
 800679e:	6013      	str	r3, [r2, #0]
			adc2_ch12_sum = 0;
			adc2_ch13_sum = 0;
			adc2_ch15_sum = 0;
		}
	}
}
 80067a0:	e0d3      	b.n	800694a <HAL_ADC_ConvCpltCallback+0x20a>
			adc1_conv_cplt = 0;
 80067a2:	4b72      	ldr	r3, [pc, #456]	; (800696c <HAL_ADC_ConvCpltCallback+0x22c>)
 80067a4:	2200      	movs	r2, #0
 80067a6:	801a      	strh	r2, [r3, #0]
			adc1_ch1_value = (float)(adc1_ch1_sum) / ADC_SAMPLES;
 80067a8:	4b72      	ldr	r3, [pc, #456]	; (8006974 <HAL_ADC_ConvCpltCallback+0x234>)
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	ee07 3a90 	vmov	s15, r3
 80067b0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80067b4:	eddf 6a72 	vldr	s13, [pc, #456]	; 8006980 <HAL_ADC_ConvCpltCallback+0x240>
 80067b8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80067bc:	4b71      	ldr	r3, [pc, #452]	; (8006984 <HAL_ADC_ConvCpltCallback+0x244>)
 80067be:	edc3 7a00 	vstr	s15, [r3]
			adc1_ch2_value = (float)(adc1_ch2_sum) / ADC_SAMPLES;
 80067c2:	4b6d      	ldr	r3, [pc, #436]	; (8006978 <HAL_ADC_ConvCpltCallback+0x238>)
 80067c4:	681b      	ldr	r3, [r3, #0]
 80067c6:	ee07 3a90 	vmov	s15, r3
 80067ca:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80067ce:	eddf 6a6c 	vldr	s13, [pc, #432]	; 8006980 <HAL_ADC_ConvCpltCallback+0x240>
 80067d2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80067d6:	4b6c      	ldr	r3, [pc, #432]	; (8006988 <HAL_ADC_ConvCpltCallback+0x248>)
 80067d8:	edc3 7a00 	vstr	s15, [r3]
			adc1_ch3_value = (float)(adc1_ch3_sum) / ADC_SAMPLES;
 80067dc:	4b67      	ldr	r3, [pc, #412]	; (800697c <HAL_ADC_ConvCpltCallback+0x23c>)
 80067de:	681b      	ldr	r3, [r3, #0]
 80067e0:	ee07 3a90 	vmov	s15, r3
 80067e4:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80067e8:	eddf 6a65 	vldr	s13, [pc, #404]	; 8006980 <HAL_ADC_ConvCpltCallback+0x240>
 80067ec:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80067f0:	4b66      	ldr	r3, [pc, #408]	; (800698c <HAL_ADC_ConvCpltCallback+0x24c>)
 80067f2:	edc3 7a00 	vstr	s15, [r3]
			linear_roll  = 74.8 - 75.0 * (adc1_ch1_value / 4096);
 80067f6:	4b63      	ldr	r3, [pc, #396]	; (8006984 <HAL_ADC_ConvCpltCallback+0x244>)
 80067f8:	edd3 7a00 	vldr	s15, [r3]
 80067fc:	ed9f 7a64 	vldr	s14, [pc, #400]	; 8006990 <HAL_ADC_ConvCpltCallback+0x250>
 8006800:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006804:	ee16 0a90 	vmov	r0, s13
 8006808:	f7f9 fe9e 	bl	8000548 <__aeabi_f2d>
 800680c:	a352      	add	r3, pc, #328	; (adr r3, 8006958 <HAL_ADC_ConvCpltCallback+0x218>)
 800680e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006812:	f7f9 fef1 	bl	80005f8 <__aeabi_dmul>
 8006816:	4602      	mov	r2, r0
 8006818:	460b      	mov	r3, r1
 800681a:	a151      	add	r1, pc, #324	; (adr r1, 8006960 <HAL_ADC_ConvCpltCallback+0x220>)
 800681c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006820:	f7f9 fd32 	bl	8000288 <__aeabi_dsub>
 8006824:	4602      	mov	r2, r0
 8006826:	460b      	mov	r3, r1
 8006828:	4610      	mov	r0, r2
 800682a:	4619      	mov	r1, r3
 800682c:	f7fa f9dc 	bl	8000be8 <__aeabi_d2f>
 8006830:	4603      	mov	r3, r0
 8006832:	4a58      	ldr	r2, [pc, #352]	; (8006994 <HAL_ADC_ConvCpltCallback+0x254>)
 8006834:	6013      	str	r3, [r2, #0]
			adc1_ch1_sum = 0;
 8006836:	4b4f      	ldr	r3, [pc, #316]	; (8006974 <HAL_ADC_ConvCpltCallback+0x234>)
 8006838:	2200      	movs	r2, #0
 800683a:	601a      	str	r2, [r3, #0]
			adc1_ch2_sum = 0;
 800683c:	4b4e      	ldr	r3, [pc, #312]	; (8006978 <HAL_ADC_ConvCpltCallback+0x238>)
 800683e:	2200      	movs	r2, #0
 8006840:	601a      	str	r2, [r3, #0]
			adc1_ch3_sum = 0;
 8006842:	4b4e      	ldr	r3, [pc, #312]	; (800697c <HAL_ADC_ConvCpltCallback+0x23c>)
 8006844:	2200      	movs	r2, #0
 8006846:	601a      	str	r2, [r3, #0]
}
 8006848:	e07f      	b.n	800694a <HAL_ADC_ConvCpltCallback+0x20a>
	else if (hadc == &hadc2)
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	4a52      	ldr	r2, [pc, #328]	; (8006998 <HAL_ADC_ConvCpltCallback+0x258>)
 800684e:	4293      	cmp	r3, r2
 8006850:	d17b      	bne.n	800694a <HAL_ADC_ConvCpltCallback+0x20a>
		adc2_conv_cplt++;
 8006852:	4b52      	ldr	r3, [pc, #328]	; (800699c <HAL_ADC_ConvCpltCallback+0x25c>)
 8006854:	881b      	ldrh	r3, [r3, #0]
 8006856:	b29b      	uxth	r3, r3
 8006858:	3301      	adds	r3, #1
 800685a:	b29a      	uxth	r2, r3
 800685c:	4b4f      	ldr	r3, [pc, #316]	; (800699c <HAL_ADC_ConvCpltCallback+0x25c>)
 800685e:	801a      	strh	r2, [r3, #0]
		if (adc2_conv_cplt < ADC_SAMPLES)
 8006860:	4b4e      	ldr	r3, [pc, #312]	; (800699c <HAL_ADC_ConvCpltCallback+0x25c>)
 8006862:	881b      	ldrh	r3, [r3, #0]
 8006864:	b29b      	uxth	r3, r3
 8006866:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800686a:	d21b      	bcs.n	80068a4 <HAL_ADC_ConvCpltCallback+0x164>
			adc2_ch12_sum += adc2results[0];
 800686c:	4b4c      	ldr	r3, [pc, #304]	; (80069a0 <HAL_ADC_ConvCpltCallback+0x260>)
 800686e:	881b      	ldrh	r3, [r3, #0]
 8006870:	b29b      	uxth	r3, r3
 8006872:	461a      	mov	r2, r3
 8006874:	4b4b      	ldr	r3, [pc, #300]	; (80069a4 <HAL_ADC_ConvCpltCallback+0x264>)
 8006876:	681b      	ldr	r3, [r3, #0]
 8006878:	4413      	add	r3, r2
 800687a:	4a4a      	ldr	r2, [pc, #296]	; (80069a4 <HAL_ADC_ConvCpltCallback+0x264>)
 800687c:	6013      	str	r3, [r2, #0]
			adc2_ch13_sum += adc2results[1];
 800687e:	4b48      	ldr	r3, [pc, #288]	; (80069a0 <HAL_ADC_ConvCpltCallback+0x260>)
 8006880:	885b      	ldrh	r3, [r3, #2]
 8006882:	b29b      	uxth	r3, r3
 8006884:	461a      	mov	r2, r3
 8006886:	4b48      	ldr	r3, [pc, #288]	; (80069a8 <HAL_ADC_ConvCpltCallback+0x268>)
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	4413      	add	r3, r2
 800688c:	4a46      	ldr	r2, [pc, #280]	; (80069a8 <HAL_ADC_ConvCpltCallback+0x268>)
 800688e:	6013      	str	r3, [r2, #0]
			adc2_ch15_sum += adc2results[2];
 8006890:	4b43      	ldr	r3, [pc, #268]	; (80069a0 <HAL_ADC_ConvCpltCallback+0x260>)
 8006892:	889b      	ldrh	r3, [r3, #4]
 8006894:	b29b      	uxth	r3, r3
 8006896:	461a      	mov	r2, r3
 8006898:	4b44      	ldr	r3, [pc, #272]	; (80069ac <HAL_ADC_ConvCpltCallback+0x26c>)
 800689a:	681b      	ldr	r3, [r3, #0]
 800689c:	4413      	add	r3, r2
 800689e:	4a43      	ldr	r2, [pc, #268]	; (80069ac <HAL_ADC_ConvCpltCallback+0x26c>)
 80068a0:	6013      	str	r3, [r2, #0]
}
 80068a2:	e052      	b.n	800694a <HAL_ADC_ConvCpltCallback+0x20a>
			adc2_conv_cplt = 0;
 80068a4:	4b3d      	ldr	r3, [pc, #244]	; (800699c <HAL_ADC_ConvCpltCallback+0x25c>)
 80068a6:	2200      	movs	r2, #0
 80068a8:	801a      	strh	r2, [r3, #0]
			adc2_ch12_value = (float)(adc2_ch12_sum) / ADC_SAMPLES;
 80068aa:	4b3e      	ldr	r3, [pc, #248]	; (80069a4 <HAL_ADC_ConvCpltCallback+0x264>)
 80068ac:	681b      	ldr	r3, [r3, #0]
 80068ae:	ee07 3a90 	vmov	s15, r3
 80068b2:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80068b6:	eddf 6a32 	vldr	s13, [pc, #200]	; 8006980 <HAL_ADC_ConvCpltCallback+0x240>
 80068ba:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80068be:	4b3c      	ldr	r3, [pc, #240]	; (80069b0 <HAL_ADC_ConvCpltCallback+0x270>)
 80068c0:	edc3 7a00 	vstr	s15, [r3]
			adc2_ch13_value = (float)(adc2_ch13_sum) / ADC_SAMPLES;
 80068c4:	4b38      	ldr	r3, [pc, #224]	; (80069a8 <HAL_ADC_ConvCpltCallback+0x268>)
 80068c6:	681b      	ldr	r3, [r3, #0]
 80068c8:	ee07 3a90 	vmov	s15, r3
 80068cc:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80068d0:	eddf 6a2b 	vldr	s13, [pc, #172]	; 8006980 <HAL_ADC_ConvCpltCallback+0x240>
 80068d4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80068d8:	4b36      	ldr	r3, [pc, #216]	; (80069b4 <HAL_ADC_ConvCpltCallback+0x274>)
 80068da:	edc3 7a00 	vstr	s15, [r3]
			adc2_ch15_value = (float)(adc2_ch15_sum) / ADC_SAMPLES;
 80068de:	4b33      	ldr	r3, [pc, #204]	; (80069ac <HAL_ADC_ConvCpltCallback+0x26c>)
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	ee07 3a90 	vmov	s15, r3
 80068e6:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80068ea:	eddf 6a25 	vldr	s13, [pc, #148]	; 8006980 <HAL_ADC_ConvCpltCallback+0x240>
 80068ee:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80068f2:	4b31      	ldr	r3, [pc, #196]	; (80069b8 <HAL_ADC_ConvCpltCallback+0x278>)
 80068f4:	edc3 7a00 	vstr	s15, [r3]
			linear_heave = 74.8 - 75.0 * (adc2_ch15_value / 4096);
 80068f8:	4b2f      	ldr	r3, [pc, #188]	; (80069b8 <HAL_ADC_ConvCpltCallback+0x278>)
 80068fa:	edd3 7a00 	vldr	s15, [r3]
 80068fe:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8006990 <HAL_ADC_ConvCpltCallback+0x250>
 8006902:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006906:	ee16 0a90 	vmov	r0, s13
 800690a:	f7f9 fe1d 	bl	8000548 <__aeabi_f2d>
 800690e:	a312      	add	r3, pc, #72	; (adr r3, 8006958 <HAL_ADC_ConvCpltCallback+0x218>)
 8006910:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006914:	f7f9 fe70 	bl	80005f8 <__aeabi_dmul>
 8006918:	4602      	mov	r2, r0
 800691a:	460b      	mov	r3, r1
 800691c:	a110      	add	r1, pc, #64	; (adr r1, 8006960 <HAL_ADC_ConvCpltCallback+0x220>)
 800691e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8006922:	f7f9 fcb1 	bl	8000288 <__aeabi_dsub>
 8006926:	4602      	mov	r2, r0
 8006928:	460b      	mov	r3, r1
 800692a:	4610      	mov	r0, r2
 800692c:	4619      	mov	r1, r3
 800692e:	f7fa f95b 	bl	8000be8 <__aeabi_d2f>
 8006932:	4603      	mov	r3, r0
 8006934:	4a21      	ldr	r2, [pc, #132]	; (80069bc <HAL_ADC_ConvCpltCallback+0x27c>)
 8006936:	6013      	str	r3, [r2, #0]
			adc2_ch12_sum = 0;
 8006938:	4b1a      	ldr	r3, [pc, #104]	; (80069a4 <HAL_ADC_ConvCpltCallback+0x264>)
 800693a:	2200      	movs	r2, #0
 800693c:	601a      	str	r2, [r3, #0]
			adc2_ch13_sum = 0;
 800693e:	4b1a      	ldr	r3, [pc, #104]	; (80069a8 <HAL_ADC_ConvCpltCallback+0x268>)
 8006940:	2200      	movs	r2, #0
 8006942:	601a      	str	r2, [r3, #0]
			adc2_ch15_sum = 0;
 8006944:	4b19      	ldr	r3, [pc, #100]	; (80069ac <HAL_ADC_ConvCpltCallback+0x26c>)
 8006946:	2200      	movs	r2, #0
 8006948:	601a      	str	r2, [r3, #0]
}
 800694a:	bf00      	nop
 800694c:	3708      	adds	r7, #8
 800694e:	46bd      	mov	sp, r7
 8006950:	bd80      	pop	{r7, pc}
 8006952:	bf00      	nop
 8006954:	f3af 8000 	nop.w
 8006958:	00000000 	.word	0x00000000
 800695c:	4052c000 	.word	0x4052c000
 8006960:	33333333 	.word	0x33333333
 8006964:	4052b333 	.word	0x4052b333
 8006968:	20000934 	.word	0x20000934
 800696c:	20000b4c 	.word	0x20000b4c
 8006970:	20000b2c 	.word	0x20000b2c
 8006974:	20000b34 	.word	0x20000b34
 8006978:	20000b38 	.word	0x20000b38
 800697c:	20000b3c 	.word	0x20000b3c
 8006980:	447a0000 	.word	0x447a0000
 8006984:	20000b40 	.word	0x20000b40
 8006988:	20000b44 	.word	0x20000b44
 800698c:	20000b48 	.word	0x20000b48
 8006990:	45800000 	.word	0x45800000
 8006994:	20000b74 	.word	0x20000b74
 8006998:	2000097c 	.word	0x2000097c
 800699c:	20000b70 	.word	0x20000b70
 80069a0:	20000b50 	.word	0x20000b50
 80069a4:	20000b58 	.word	0x20000b58
 80069a8:	20000b5c 	.word	0x20000b5c
 80069ac:	20000b60 	.word	0x20000b60
 80069b0:	20000b64 	.word	0x20000b64
 80069b4:	20000b68 	.word	0x20000b68
 80069b8:	20000b6c 	.word	0x20000b6c
 80069bc:	20000b78 	.word	0x20000b78

080069c0 <CanTxTPMSmessage>:



HAL_StatusTypeDef CanTxTPMSmessage(TelemetryData_t* teleData)
{
 80069c0:	b580      	push	{r7, lr}
 80069c2:	b084      	sub	sp, #16
 80069c4:	af00      	add	r7, sp, #0
 80069c6:	6078      	str	r0, [r7, #4]
	HAL_StatusTypeDef result;

	TxHeader2.DLC = 8;
 80069c8:	4b51      	ldr	r3, [pc, #324]	; (8006b10 <CanTxTPMSmessage+0x150>)
 80069ca:	2208      	movs	r2, #8
 80069cc:	611a      	str	r2, [r3, #16]
	TxHeader2.IDE = CAN_ID_STD;
 80069ce:	4b50      	ldr	r3, [pc, #320]	; (8006b10 <CanTxTPMSmessage+0x150>)
 80069d0:	2200      	movs	r2, #0
 80069d2:	609a      	str	r2, [r3, #8]
	TxHeader2.RTR = CAN_RTR_DATA;
 80069d4:	4b4e      	ldr	r3, [pc, #312]	; (8006b10 <CanTxTPMSmessage+0x150>)
 80069d6:	2200      	movs	r2, #0
 80069d8:	60da      	str	r2, [r3, #12]
	TxHeader2.StdId = 0x4F2;
 80069da:	4b4d      	ldr	r3, [pc, #308]	; (8006b10 <CanTxTPMSmessage+0x150>)
 80069dc:	f240 42f2 	movw	r2, #1266	; 0x4f2
 80069e0:	601a      	str	r2, [r3, #0]
	TxHeader2.TransmitGlobalTime = DISABLE;
 80069e2:	4b4b      	ldr	r3, [pc, #300]	; (8006b10 <CanTxTPMSmessage+0x150>)
 80069e4:	2200      	movs	r2, #0
 80069e6:	751a      	strb	r2, [r3, #20]
	TxData2[0] = teleData->tpms.fr_press >> 8;    /* Gives a resolution of 1mBar */
 80069e8:	687b      	ldr	r3, [r7, #4]
 80069ea:	8f5b      	ldrh	r3, [r3, #58]	; 0x3a
 80069ec:	0a1b      	lsrs	r3, r3, #8
 80069ee:	b29b      	uxth	r3, r3
 80069f0:	b2da      	uxtb	r2, r3
 80069f2:	4b48      	ldr	r3, [pc, #288]	; (8006b14 <CanTxTPMSmessage+0x154>)
 80069f4:	701a      	strb	r2, [r3, #0]
	TxData2[1] = teleData->tpms.fr_press;
 80069f6:	687b      	ldr	r3, [r7, #4]
 80069f8:	8f5b      	ldrh	r3, [r3, #58]	; 0x3a
 80069fa:	b2da      	uxtb	r2, r3
 80069fc:	4b45      	ldr	r3, [pc, #276]	; (8006b14 <CanTxTPMSmessage+0x154>)
 80069fe:	705a      	strb	r2, [r3, #1]
	TxData2[2] = teleData->tpms.fl_press >> 8;
 8006a00:	687b      	ldr	r3, [r7, #4]
 8006a02:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a04:	0a1b      	lsrs	r3, r3, #8
 8006a06:	b29b      	uxth	r3, r3
 8006a08:	b2da      	uxtb	r2, r3
 8006a0a:	4b42      	ldr	r3, [pc, #264]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a0c:	709a      	strb	r2, [r3, #2]
	TxData2[3] = teleData->tpms.fl_press;
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8006a12:	b2da      	uxtb	r2, r3
 8006a14:	4b3f      	ldr	r3, [pc, #252]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a16:	70da      	strb	r2, [r3, #3]
	TxData2[4] = teleData->tpms.rr_press >> 8;
 8006a18:	687b      	ldr	r3, [r7, #4]
 8006a1a:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8006a1e:	0a1b      	lsrs	r3, r3, #8
 8006a20:	b29b      	uxth	r3, r3
 8006a22:	b2da      	uxtb	r2, r3
 8006a24:	4b3b      	ldr	r3, [pc, #236]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a26:	711a      	strb	r2, [r3, #4]
	TxData2[5] = teleData->tpms.rr_press;
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	f8b3 3042 	ldrh.w	r3, [r3, #66]	; 0x42
 8006a2e:	b2da      	uxtb	r2, r3
 8006a30:	4b38      	ldr	r3, [pc, #224]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a32:	715a      	strb	r2, [r3, #5]
	TxData2[6] = teleData->tpms.rl_press >> 8;
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006a3a:	0a1b      	lsrs	r3, r3, #8
 8006a3c:	b29b      	uxth	r3, r3
 8006a3e:	b2da      	uxtb	r2, r3
 8006a40:	4b34      	ldr	r3, [pc, #208]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a42:	719a      	strb	r2, [r3, #6]
	TxData2[7] = teleData->tpms.rl_press;
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	f8b3 3046 	ldrh.w	r3, [r3, #70]	; 0x46
 8006a4a:	b2da      	uxtb	r2, r3
 8006a4c:	4b31      	ldr	r3, [pc, #196]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a4e:	71da      	strb	r2, [r3, #7]
	result = HAL_CAN_AddTxMessage(&hcan2, &TxHeader2, TxData2, &TxMailbox);
 8006a50:	4b31      	ldr	r3, [pc, #196]	; (8006b18 <CanTxTPMSmessage+0x158>)
 8006a52:	4a30      	ldr	r2, [pc, #192]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a54:	492e      	ldr	r1, [pc, #184]	; (8006b10 <CanTxTPMSmessage+0x150>)
 8006a56:	4831      	ldr	r0, [pc, #196]	; (8006b1c <CanTxTPMSmessage+0x15c>)
 8006a58:	f001 fa92 	bl	8007f80 <HAL_CAN_AddTxMessage>
 8006a5c:	4603      	mov	r3, r0
 8006a5e:	73fb      	strb	r3, [r7, #15]
	if (result != HAL_OK)
 8006a60:	7bfb      	ldrb	r3, [r7, #15]
 8006a62:	2b00      	cmp	r3, #0
 8006a64:	d001      	beq.n	8006a6a <CanTxTPMSmessage+0xaa>
		return result;
 8006a66:	7bfb      	ldrb	r3, [r7, #15]
 8006a68:	e04e      	b.n	8006b08 <CanTxTPMSmessage+0x148>


	TxHeader2.DLC = 8;
 8006a6a:	4b29      	ldr	r3, [pc, #164]	; (8006b10 <CanTxTPMSmessage+0x150>)
 8006a6c:	2208      	movs	r2, #8
 8006a6e:	611a      	str	r2, [r3, #16]
	TxHeader2.IDE = CAN_ID_STD;
 8006a70:	4b27      	ldr	r3, [pc, #156]	; (8006b10 <CanTxTPMSmessage+0x150>)
 8006a72:	2200      	movs	r2, #0
 8006a74:	609a      	str	r2, [r3, #8]
	TxHeader2.RTR = CAN_RTR_DATA;
 8006a76:	4b26      	ldr	r3, [pc, #152]	; (8006b10 <CanTxTPMSmessage+0x150>)
 8006a78:	2200      	movs	r2, #0
 8006a7a:	60da      	str	r2, [r3, #12]
	TxHeader2.StdId = 0x4F3;
 8006a7c:	4b24      	ldr	r3, [pc, #144]	; (8006b10 <CanTxTPMSmessage+0x150>)
 8006a7e:	f240 42f3 	movw	r2, #1267	; 0x4f3
 8006a82:	601a      	str	r2, [r3, #0]
	TxHeader2.TransmitGlobalTime = DISABLE;
 8006a84:	4b22      	ldr	r3, [pc, #136]	; (8006b10 <CanTxTPMSmessage+0x150>)
 8006a86:	2200      	movs	r2, #0
 8006a88:	751a      	strb	r2, [r3, #20]
	TxData2[0] = teleData->tpms.fr_temp >> 8;
 8006a8a:	687b      	ldr	r3, [r7, #4]
 8006a8c:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8006a8e:	0a1b      	lsrs	r3, r3, #8
 8006a90:	b29b      	uxth	r3, r3
 8006a92:	b2da      	uxtb	r2, r3
 8006a94:	4b1f      	ldr	r3, [pc, #124]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006a96:	701a      	strb	r2, [r3, #0]
	TxData2[1] = teleData->tpms.fr_temp;
 8006a98:	687b      	ldr	r3, [r7, #4]
 8006a9a:	8f9b      	ldrh	r3, [r3, #60]	; 0x3c
 8006a9c:	b2da      	uxtb	r2, r3
 8006a9e:	4b1d      	ldr	r3, [pc, #116]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006aa0:	705a      	strb	r2, [r3, #1]
	TxData2[2] = teleData->tpms.fl_temp >> 8;
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8006aa8:	0a1b      	lsrs	r3, r3, #8
 8006aaa:	b29b      	uxth	r3, r3
 8006aac:	b2da      	uxtb	r2, r3
 8006aae:	4b19      	ldr	r3, [pc, #100]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006ab0:	709a      	strb	r2, [r3, #2]
	TxData2[3] = teleData->tpms.fl_temp;
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	f8b3 3040 	ldrh.w	r3, [r3, #64]	; 0x40
 8006ab8:	b2da      	uxtb	r2, r3
 8006aba:	4b16      	ldr	r3, [pc, #88]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006abc:	70da      	strb	r2, [r3, #3]
	TxData2[4] = teleData->tpms.rr_temp >> 8;
 8006abe:	687b      	ldr	r3, [r7, #4]
 8006ac0:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8006ac4:	0a1b      	lsrs	r3, r3, #8
 8006ac6:	b29b      	uxth	r3, r3
 8006ac8:	b2da      	uxtb	r2, r3
 8006aca:	4b12      	ldr	r3, [pc, #72]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006acc:	711a      	strb	r2, [r3, #4]
	TxData2[5] = teleData->tpms.rr_temp;
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 8006ad4:	b2da      	uxtb	r2, r3
 8006ad6:	4b0f      	ldr	r3, [pc, #60]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006ad8:	715a      	strb	r2, [r3, #5]
	TxData2[6] = teleData->tpms.rl_temp >> 8;
 8006ada:	687b      	ldr	r3, [r7, #4]
 8006adc:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
 8006ae0:	0a1b      	lsrs	r3, r3, #8
 8006ae2:	b29b      	uxth	r3, r3
 8006ae4:	b2da      	uxtb	r2, r3
 8006ae6:	4b0b      	ldr	r3, [pc, #44]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006ae8:	719a      	strb	r2, [r3, #6]
	TxData2[7] = teleData->tpms.rl_temp;
 8006aea:	687b      	ldr	r3, [r7, #4]
 8006aec:	f8b3 3048 	ldrh.w	r3, [r3, #72]	; 0x48
 8006af0:	b2da      	uxtb	r2, r3
 8006af2:	4b08      	ldr	r3, [pc, #32]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006af4:	71da      	strb	r2, [r3, #7]
	result = HAL_CAN_AddTxMessage(&hcan2, &TxHeader2, TxData2, &TxMailbox);
 8006af6:	4b08      	ldr	r3, [pc, #32]	; (8006b18 <CanTxTPMSmessage+0x158>)
 8006af8:	4a06      	ldr	r2, [pc, #24]	; (8006b14 <CanTxTPMSmessage+0x154>)
 8006afa:	4905      	ldr	r1, [pc, #20]	; (8006b10 <CanTxTPMSmessage+0x150>)
 8006afc:	4807      	ldr	r0, [pc, #28]	; (8006b1c <CanTxTPMSmessage+0x15c>)
 8006afe:	f001 fa3f 	bl	8007f80 <HAL_CAN_AddTxMessage>
 8006b02:	4603      	mov	r3, r0
 8006b04:	73fb      	strb	r3, [r7, #15]

	return result;
 8006b06:	7bfb      	ldrb	r3, [r7, #15]
}
 8006b08:	4618      	mov	r0, r3
 8006b0a:	3710      	adds	r7, #16
 8006b0c:	46bd      	mov	sp, r7
 8006b0e:	bd80      	pop	{r7, pc}
 8006b10:	20000be4 	.word	0x20000be4
 8006b14:	20000c18 	.word	0x20000c18
 8006b18:	20000c28 	.word	0x20000c28
 8006b1c:	20000aac 	.word	0x20000aac

08006b20 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8006b20:	b480      	push	{r7}
 8006b22:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8006b24:	b672      	cpsid	i
}
 8006b26:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8006b28:	e7fe      	b.n	8006b28 <Error_Handler+0x8>
	...

08006b2c <HAL_MspInit>:
 8006b2c:	b480      	push	{r7}
 8006b2e:	b083      	sub	sp, #12
 8006b30:	af00      	add	r7, sp, #0
 8006b32:	2300      	movs	r3, #0
 8006b34:	607b      	str	r3, [r7, #4]
 8006b36:	4b10      	ldr	r3, [pc, #64]	; (8006b78 <HAL_MspInit+0x4c>)
 8006b38:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b3a:	4a0f      	ldr	r2, [pc, #60]	; (8006b78 <HAL_MspInit+0x4c>)
 8006b3c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8006b40:	6453      	str	r3, [r2, #68]	; 0x44
 8006b42:	4b0d      	ldr	r3, [pc, #52]	; (8006b78 <HAL_MspInit+0x4c>)
 8006b44:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006b46:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8006b4a:	607b      	str	r3, [r7, #4]
 8006b4c:	687b      	ldr	r3, [r7, #4]
 8006b4e:	2300      	movs	r3, #0
 8006b50:	603b      	str	r3, [r7, #0]
 8006b52:	4b09      	ldr	r3, [pc, #36]	; (8006b78 <HAL_MspInit+0x4c>)
 8006b54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b56:	4a08      	ldr	r2, [pc, #32]	; (8006b78 <HAL_MspInit+0x4c>)
 8006b58:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8006b5c:	6413      	str	r3, [r2, #64]	; 0x40
 8006b5e:	4b06      	ldr	r3, [pc, #24]	; (8006b78 <HAL_MspInit+0x4c>)
 8006b60:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b62:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006b66:	603b      	str	r3, [r7, #0]
 8006b68:	683b      	ldr	r3, [r7, #0]
 8006b6a:	bf00      	nop
 8006b6c:	370c      	adds	r7, #12
 8006b6e:	46bd      	mov	sp, r7
 8006b70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b74:	4770      	bx	lr
 8006b76:	bf00      	nop
 8006b78:	40023800 	.word	0x40023800

08006b7c <HAL_ADC_MspInit>:
 8006b7c:	b580      	push	{r7, lr}
 8006b7e:	b08c      	sub	sp, #48	; 0x30
 8006b80:	af00      	add	r7, sp, #0
 8006b82:	6078      	str	r0, [r7, #4]
 8006b84:	f107 031c 	add.w	r3, r7, #28
 8006b88:	2200      	movs	r2, #0
 8006b8a:	601a      	str	r2, [r3, #0]
 8006b8c:	605a      	str	r2, [r3, #4]
 8006b8e:	609a      	str	r2, [r3, #8]
 8006b90:	60da      	str	r2, [r3, #12]
 8006b92:	611a      	str	r2, [r3, #16]
 8006b94:	687b      	ldr	r3, [r7, #4]
 8006b96:	681b      	ldr	r3, [r3, #0]
 8006b98:	4a5e      	ldr	r2, [pc, #376]	; (8006d14 <HAL_ADC_MspInit+0x198>)
 8006b9a:	4293      	cmp	r3, r2
 8006b9c:	d158      	bne.n	8006c50 <HAL_ADC_MspInit+0xd4>
 8006b9e:	2300      	movs	r3, #0
 8006ba0:	61bb      	str	r3, [r7, #24]
 8006ba2:	4b5d      	ldr	r3, [pc, #372]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006ba4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ba6:	4a5c      	ldr	r2, [pc, #368]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006ba8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006bac:	6453      	str	r3, [r2, #68]	; 0x44
 8006bae:	4b5a      	ldr	r3, [pc, #360]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006bb0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006bb2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006bb6:	61bb      	str	r3, [r7, #24]
 8006bb8:	69bb      	ldr	r3, [r7, #24]
 8006bba:	2300      	movs	r3, #0
 8006bbc:	617b      	str	r3, [r7, #20]
 8006bbe:	4b56      	ldr	r3, [pc, #344]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006bc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006bc2:	4a55      	ldr	r2, [pc, #340]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006bc4:	f043 0301 	orr.w	r3, r3, #1
 8006bc8:	6313      	str	r3, [r2, #48]	; 0x30
 8006bca:	4b53      	ldr	r3, [pc, #332]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006bcc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006bce:	f003 0301 	and.w	r3, r3, #1
 8006bd2:	617b      	str	r3, [r7, #20]
 8006bd4:	697b      	ldr	r3, [r7, #20]
 8006bd6:	230e      	movs	r3, #14
 8006bd8:	61fb      	str	r3, [r7, #28]
 8006bda:	2303      	movs	r3, #3
 8006bdc:	623b      	str	r3, [r7, #32]
 8006bde:	2300      	movs	r3, #0
 8006be0:	627b      	str	r3, [r7, #36]	; 0x24
 8006be2:	f107 031c 	add.w	r3, r7, #28
 8006be6:	4619      	mov	r1, r3
 8006be8:	484c      	ldr	r0, [pc, #304]	; (8006d1c <HAL_ADC_MspInit+0x1a0>)
 8006bea:	f002 fa83 	bl	80090f4 <HAL_GPIO_Init>
 8006bee:	4b4c      	ldr	r3, [pc, #304]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006bf0:	4a4c      	ldr	r2, [pc, #304]	; (8006d24 <HAL_ADC_MspInit+0x1a8>)
 8006bf2:	601a      	str	r2, [r3, #0]
 8006bf4:	4b4a      	ldr	r3, [pc, #296]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006bf6:	2200      	movs	r2, #0
 8006bf8:	605a      	str	r2, [r3, #4]
 8006bfa:	4b49      	ldr	r3, [pc, #292]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006bfc:	2200      	movs	r2, #0
 8006bfe:	609a      	str	r2, [r3, #8]
 8006c00:	4b47      	ldr	r3, [pc, #284]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c02:	2200      	movs	r2, #0
 8006c04:	60da      	str	r2, [r3, #12]
 8006c06:	4b46      	ldr	r3, [pc, #280]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c08:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006c0c:	611a      	str	r2, [r3, #16]
 8006c0e:	4b44      	ldr	r3, [pc, #272]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c10:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006c14:	615a      	str	r2, [r3, #20]
 8006c16:	4b42      	ldr	r3, [pc, #264]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c18:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8006c1c:	619a      	str	r2, [r3, #24]
 8006c1e:	4b40      	ldr	r3, [pc, #256]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c20:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006c24:	61da      	str	r2, [r3, #28]
 8006c26:	4b3e      	ldr	r3, [pc, #248]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c28:	2200      	movs	r2, #0
 8006c2a:	621a      	str	r2, [r3, #32]
 8006c2c:	4b3c      	ldr	r3, [pc, #240]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c2e:	2200      	movs	r2, #0
 8006c30:	625a      	str	r2, [r3, #36]	; 0x24
 8006c32:	483b      	ldr	r0, [pc, #236]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c34:	f001 feee 	bl	8008a14 <HAL_DMA_Init>
 8006c38:	4603      	mov	r3, r0
 8006c3a:	2b00      	cmp	r3, #0
 8006c3c:	d001      	beq.n	8006c42 <HAL_ADC_MspInit+0xc6>
 8006c3e:	f7ff ff6f 	bl	8006b20 <Error_Handler>
 8006c42:	687b      	ldr	r3, [r7, #4]
 8006c44:	4a36      	ldr	r2, [pc, #216]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c46:	639a      	str	r2, [r3, #56]	; 0x38
 8006c48:	4a35      	ldr	r2, [pc, #212]	; (8006d20 <HAL_ADC_MspInit+0x1a4>)
 8006c4a:	687b      	ldr	r3, [r7, #4]
 8006c4c:	6393      	str	r3, [r2, #56]	; 0x38
 8006c4e:	e05d      	b.n	8006d0c <HAL_ADC_MspInit+0x190>
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	4a34      	ldr	r2, [pc, #208]	; (8006d28 <HAL_ADC_MspInit+0x1ac>)
 8006c56:	4293      	cmp	r3, r2
 8006c58:	d158      	bne.n	8006d0c <HAL_ADC_MspInit+0x190>
 8006c5a:	2300      	movs	r3, #0
 8006c5c:	613b      	str	r3, [r7, #16]
 8006c5e:	4b2e      	ldr	r3, [pc, #184]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006c60:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c62:	4a2d      	ldr	r2, [pc, #180]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006c64:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c68:	6453      	str	r3, [r2, #68]	; 0x44
 8006c6a:	4b2b      	ldr	r3, [pc, #172]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006c6c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006c6e:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8006c72:	613b      	str	r3, [r7, #16]
 8006c74:	693b      	ldr	r3, [r7, #16]
 8006c76:	2300      	movs	r3, #0
 8006c78:	60fb      	str	r3, [r7, #12]
 8006c7a:	4b27      	ldr	r3, [pc, #156]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006c7c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c7e:	4a26      	ldr	r2, [pc, #152]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006c80:	f043 0304 	orr.w	r3, r3, #4
 8006c84:	6313      	str	r3, [r2, #48]	; 0x30
 8006c86:	4b24      	ldr	r3, [pc, #144]	; (8006d18 <HAL_ADC_MspInit+0x19c>)
 8006c88:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006c8a:	f003 0304 	and.w	r3, r3, #4
 8006c8e:	60fb      	str	r3, [r7, #12]
 8006c90:	68fb      	ldr	r3, [r7, #12]
 8006c92:	232c      	movs	r3, #44	; 0x2c
 8006c94:	61fb      	str	r3, [r7, #28]
 8006c96:	2303      	movs	r3, #3
 8006c98:	623b      	str	r3, [r7, #32]
 8006c9a:	2300      	movs	r3, #0
 8006c9c:	627b      	str	r3, [r7, #36]	; 0x24
 8006c9e:	f107 031c 	add.w	r3, r7, #28
 8006ca2:	4619      	mov	r1, r3
 8006ca4:	4821      	ldr	r0, [pc, #132]	; (8006d2c <HAL_ADC_MspInit+0x1b0>)
 8006ca6:	f002 fa25 	bl	80090f4 <HAL_GPIO_Init>
 8006caa:	4b21      	ldr	r3, [pc, #132]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cac:	4a21      	ldr	r2, [pc, #132]	; (8006d34 <HAL_ADC_MspInit+0x1b8>)
 8006cae:	601a      	str	r2, [r3, #0]
 8006cb0:	4b1f      	ldr	r3, [pc, #124]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cb2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
 8006cb6:	605a      	str	r2, [r3, #4]
 8006cb8:	4b1d      	ldr	r3, [pc, #116]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cba:	2200      	movs	r2, #0
 8006cbc:	609a      	str	r2, [r3, #8]
 8006cbe:	4b1c      	ldr	r3, [pc, #112]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cc0:	2200      	movs	r2, #0
 8006cc2:	60da      	str	r2, [r3, #12]
 8006cc4:	4b1a      	ldr	r3, [pc, #104]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cc6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8006cca:	611a      	str	r2, [r3, #16]
 8006ccc:	4b18      	ldr	r3, [pc, #96]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cce:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8006cd2:	615a      	str	r2, [r3, #20]
 8006cd4:	4b16      	ldr	r3, [pc, #88]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cd6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8006cda:	619a      	str	r2, [r3, #24]
 8006cdc:	4b14      	ldr	r3, [pc, #80]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cde:	f44f 7280 	mov.w	r2, #256	; 0x100
 8006ce2:	61da      	str	r2, [r3, #28]
 8006ce4:	4b12      	ldr	r3, [pc, #72]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006ce6:	2200      	movs	r2, #0
 8006ce8:	621a      	str	r2, [r3, #32]
 8006cea:	4b11      	ldr	r3, [pc, #68]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cec:	2200      	movs	r2, #0
 8006cee:	625a      	str	r2, [r3, #36]	; 0x24
 8006cf0:	480f      	ldr	r0, [pc, #60]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006cf2:	f001 fe8f 	bl	8008a14 <HAL_DMA_Init>
 8006cf6:	4603      	mov	r3, r0
 8006cf8:	2b00      	cmp	r3, #0
 8006cfa:	d001      	beq.n	8006d00 <HAL_ADC_MspInit+0x184>
 8006cfc:	f7ff ff10 	bl	8006b20 <Error_Handler>
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	4a0b      	ldr	r2, [pc, #44]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006d04:	639a      	str	r2, [r3, #56]	; 0x38
 8006d06:	4a0a      	ldr	r2, [pc, #40]	; (8006d30 <HAL_ADC_MspInit+0x1b4>)
 8006d08:	687b      	ldr	r3, [r7, #4]
 8006d0a:	6393      	str	r3, [r2, #56]	; 0x38
 8006d0c:	bf00      	nop
 8006d0e:	3730      	adds	r7, #48	; 0x30
 8006d10:	46bd      	mov	sp, r7
 8006d12:	bd80      	pop	{r7, pc}
 8006d14:	40012000 	.word	0x40012000
 8006d18:	40023800 	.word	0x40023800
 8006d1c:	40020000 	.word	0x40020000
 8006d20:	200009c4 	.word	0x200009c4
 8006d24:	40026410 	.word	0x40026410
 8006d28:	40012100 	.word	0x40012100
 8006d2c:	40020800 	.word	0x40020800
 8006d30:	20000a24 	.word	0x20000a24
 8006d34:	40026440 	.word	0x40026440

08006d38 <HAL_CAN_MspInit>:
 8006d38:	b580      	push	{r7, lr}
 8006d3a:	b08c      	sub	sp, #48	; 0x30
 8006d3c:	af00      	add	r7, sp, #0
 8006d3e:	6078      	str	r0, [r7, #4]
 8006d40:	f107 031c 	add.w	r3, r7, #28
 8006d44:	2200      	movs	r2, #0
 8006d46:	601a      	str	r2, [r3, #0]
 8006d48:	605a      	str	r2, [r3, #4]
 8006d4a:	609a      	str	r2, [r3, #8]
 8006d4c:	60da      	str	r2, [r3, #12]
 8006d4e:	611a      	str	r2, [r3, #16]
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	681b      	ldr	r3, [r3, #0]
 8006d54:	4a4b      	ldr	r2, [pc, #300]	; (8006e84 <HAL_CAN_MspInit+0x14c>)
 8006d56:	4293      	cmp	r3, r2
 8006d58:	d13e      	bne.n	8006dd8 <HAL_CAN_MspInit+0xa0>
 8006d5a:	4b4b      	ldr	r3, [pc, #300]	; (8006e88 <HAL_CAN_MspInit+0x150>)
 8006d5c:	681b      	ldr	r3, [r3, #0]
 8006d5e:	3301      	adds	r3, #1
 8006d60:	4a49      	ldr	r2, [pc, #292]	; (8006e88 <HAL_CAN_MspInit+0x150>)
 8006d62:	6013      	str	r3, [r2, #0]
 8006d64:	4b48      	ldr	r3, [pc, #288]	; (8006e88 <HAL_CAN_MspInit+0x150>)
 8006d66:	681b      	ldr	r3, [r3, #0]
 8006d68:	2b01      	cmp	r3, #1
 8006d6a:	d10d      	bne.n	8006d88 <HAL_CAN_MspInit+0x50>
 8006d6c:	2300      	movs	r3, #0
 8006d6e:	61bb      	str	r3, [r7, #24]
 8006d70:	4b46      	ldr	r3, [pc, #280]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006d72:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d74:	4a45      	ldr	r2, [pc, #276]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006d76:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8006d7a:	6413      	str	r3, [r2, #64]	; 0x40
 8006d7c:	4b43      	ldr	r3, [pc, #268]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006d7e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d80:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006d84:	61bb      	str	r3, [r7, #24]
 8006d86:	69bb      	ldr	r3, [r7, #24]
 8006d88:	2300      	movs	r3, #0
 8006d8a:	617b      	str	r3, [r7, #20]
 8006d8c:	4b3f      	ldr	r3, [pc, #252]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006d8e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d90:	4a3e      	ldr	r2, [pc, #248]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006d92:	f043 0302 	orr.w	r3, r3, #2
 8006d96:	6313      	str	r3, [r2, #48]	; 0x30
 8006d98:	4b3c      	ldr	r3, [pc, #240]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006d9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006d9c:	f003 0302 	and.w	r3, r3, #2
 8006da0:	617b      	str	r3, [r7, #20]
 8006da2:	697b      	ldr	r3, [r7, #20]
 8006da4:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006da8:	61fb      	str	r3, [r7, #28]
 8006daa:	2302      	movs	r3, #2
 8006dac:	623b      	str	r3, [r7, #32]
 8006dae:	2300      	movs	r3, #0
 8006db0:	627b      	str	r3, [r7, #36]	; 0x24
 8006db2:	2303      	movs	r3, #3
 8006db4:	62bb      	str	r3, [r7, #40]	; 0x28
 8006db6:	2309      	movs	r3, #9
 8006db8:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006dba:	f107 031c 	add.w	r3, r7, #28
 8006dbe:	4619      	mov	r1, r3
 8006dc0:	4833      	ldr	r0, [pc, #204]	; (8006e90 <HAL_CAN_MspInit+0x158>)
 8006dc2:	f002 f997 	bl	80090f4 <HAL_GPIO_Init>
 8006dc6:	2200      	movs	r2, #0
 8006dc8:	2100      	movs	r1, #0
 8006dca:	2014      	movs	r0, #20
 8006dcc:	f001 fdeb 	bl	80089a6 <HAL_NVIC_SetPriority>
 8006dd0:	2014      	movs	r0, #20
 8006dd2:	f001 fe04 	bl	80089de <HAL_NVIC_EnableIRQ>
 8006dd6:	e050      	b.n	8006e7a <HAL_CAN_MspInit+0x142>
 8006dd8:	687b      	ldr	r3, [r7, #4]
 8006dda:	681b      	ldr	r3, [r3, #0]
 8006ddc:	4a2d      	ldr	r2, [pc, #180]	; (8006e94 <HAL_CAN_MspInit+0x15c>)
 8006dde:	4293      	cmp	r3, r2
 8006de0:	d14b      	bne.n	8006e7a <HAL_CAN_MspInit+0x142>
 8006de2:	2300      	movs	r3, #0
 8006de4:	613b      	str	r3, [r7, #16]
 8006de6:	4b29      	ldr	r3, [pc, #164]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006de8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006dea:	4a28      	ldr	r2, [pc, #160]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006dec:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8006df0:	6413      	str	r3, [r2, #64]	; 0x40
 8006df2:	4b26      	ldr	r3, [pc, #152]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006df4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006df6:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8006dfa:	613b      	str	r3, [r7, #16]
 8006dfc:	693b      	ldr	r3, [r7, #16]
 8006dfe:	4b22      	ldr	r3, [pc, #136]	; (8006e88 <HAL_CAN_MspInit+0x150>)
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	3301      	adds	r3, #1
 8006e04:	4a20      	ldr	r2, [pc, #128]	; (8006e88 <HAL_CAN_MspInit+0x150>)
 8006e06:	6013      	str	r3, [r2, #0]
 8006e08:	4b1f      	ldr	r3, [pc, #124]	; (8006e88 <HAL_CAN_MspInit+0x150>)
 8006e0a:	681b      	ldr	r3, [r3, #0]
 8006e0c:	2b01      	cmp	r3, #1
 8006e0e:	d10d      	bne.n	8006e2c <HAL_CAN_MspInit+0xf4>
 8006e10:	2300      	movs	r3, #0
 8006e12:	60fb      	str	r3, [r7, #12]
 8006e14:	4b1d      	ldr	r3, [pc, #116]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006e16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e18:	4a1c      	ldr	r2, [pc, #112]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006e1a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8006e1e:	6413      	str	r3, [r2, #64]	; 0x40
 8006e20:	4b1a      	ldr	r3, [pc, #104]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006e22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e24:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8006e28:	60fb      	str	r3, [r7, #12]
 8006e2a:	68fb      	ldr	r3, [r7, #12]
 8006e2c:	2300      	movs	r3, #0
 8006e2e:	60bb      	str	r3, [r7, #8]
 8006e30:	4b16      	ldr	r3, [pc, #88]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006e32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e34:	4a15      	ldr	r2, [pc, #84]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006e36:	f043 0302 	orr.w	r3, r3, #2
 8006e3a:	6313      	str	r3, [r2, #48]	; 0x30
 8006e3c:	4b13      	ldr	r3, [pc, #76]	; (8006e8c <HAL_CAN_MspInit+0x154>)
 8006e3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006e40:	f003 0302 	and.w	r3, r3, #2
 8006e44:	60bb      	str	r3, [r7, #8]
 8006e46:	68bb      	ldr	r3, [r7, #8]
 8006e48:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8006e4c:	61fb      	str	r3, [r7, #28]
 8006e4e:	2302      	movs	r3, #2
 8006e50:	623b      	str	r3, [r7, #32]
 8006e52:	2300      	movs	r3, #0
 8006e54:	627b      	str	r3, [r7, #36]	; 0x24
 8006e56:	2303      	movs	r3, #3
 8006e58:	62bb      	str	r3, [r7, #40]	; 0x28
 8006e5a:	2309      	movs	r3, #9
 8006e5c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006e5e:	f107 031c 	add.w	r3, r7, #28
 8006e62:	4619      	mov	r1, r3
 8006e64:	480a      	ldr	r0, [pc, #40]	; (8006e90 <HAL_CAN_MspInit+0x158>)
 8006e66:	f002 f945 	bl	80090f4 <HAL_GPIO_Init>
 8006e6a:	2200      	movs	r2, #0
 8006e6c:	2100      	movs	r1, #0
 8006e6e:	2041      	movs	r0, #65	; 0x41
 8006e70:	f001 fd99 	bl	80089a6 <HAL_NVIC_SetPriority>
 8006e74:	2041      	movs	r0, #65	; 0x41
 8006e76:	f001 fdb2 	bl	80089de <HAL_NVIC_EnableIRQ>
 8006e7a:	bf00      	nop
 8006e7c:	3730      	adds	r7, #48	; 0x30
 8006e7e:	46bd      	mov	sp, r7
 8006e80:	bd80      	pop	{r7, pc}
 8006e82:	bf00      	nop
 8006e84:	40006400 	.word	0x40006400
 8006e88:	20000c30 	.word	0x20000c30
 8006e8c:	40023800 	.word	0x40023800
 8006e90:	40020400 	.word	0x40020400
 8006e94:	40006800 	.word	0x40006800

08006e98 <HAL_SPI_MspInit>:
 8006e98:	b580      	push	{r7, lr}
 8006e9a:	b08a      	sub	sp, #40	; 0x28
 8006e9c:	af00      	add	r7, sp, #0
 8006e9e:	6078      	str	r0, [r7, #4]
 8006ea0:	f107 0314 	add.w	r3, r7, #20
 8006ea4:	2200      	movs	r2, #0
 8006ea6:	601a      	str	r2, [r3, #0]
 8006ea8:	605a      	str	r2, [r3, #4]
 8006eaa:	609a      	str	r2, [r3, #8]
 8006eac:	60da      	str	r2, [r3, #12]
 8006eae:	611a      	str	r2, [r3, #16]
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	681b      	ldr	r3, [r3, #0]
 8006eb4:	4a19      	ldr	r2, [pc, #100]	; (8006f1c <HAL_SPI_MspInit+0x84>)
 8006eb6:	4293      	cmp	r3, r2
 8006eb8:	d12b      	bne.n	8006f12 <HAL_SPI_MspInit+0x7a>
 8006eba:	2300      	movs	r3, #0
 8006ebc:	613b      	str	r3, [r7, #16]
 8006ebe:	4b18      	ldr	r3, [pc, #96]	; (8006f20 <HAL_SPI_MspInit+0x88>)
 8006ec0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ec2:	4a17      	ldr	r2, [pc, #92]	; (8006f20 <HAL_SPI_MspInit+0x88>)
 8006ec4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8006ec8:	6453      	str	r3, [r2, #68]	; 0x44
 8006eca:	4b15      	ldr	r3, [pc, #84]	; (8006f20 <HAL_SPI_MspInit+0x88>)
 8006ecc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006ece:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8006ed2:	613b      	str	r3, [r7, #16]
 8006ed4:	693b      	ldr	r3, [r7, #16]
 8006ed6:	2300      	movs	r3, #0
 8006ed8:	60fb      	str	r3, [r7, #12]
 8006eda:	4b11      	ldr	r3, [pc, #68]	; (8006f20 <HAL_SPI_MspInit+0x88>)
 8006edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006ede:	4a10      	ldr	r2, [pc, #64]	; (8006f20 <HAL_SPI_MspInit+0x88>)
 8006ee0:	f043 0301 	orr.w	r3, r3, #1
 8006ee4:	6313      	str	r3, [r2, #48]	; 0x30
 8006ee6:	4b0e      	ldr	r3, [pc, #56]	; (8006f20 <HAL_SPI_MspInit+0x88>)
 8006ee8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006eea:	f003 0301 	and.w	r3, r3, #1
 8006eee:	60fb      	str	r3, [r7, #12]
 8006ef0:	68fb      	ldr	r3, [r7, #12]
 8006ef2:	23e0      	movs	r3, #224	; 0xe0
 8006ef4:	617b      	str	r3, [r7, #20]
 8006ef6:	2302      	movs	r3, #2
 8006ef8:	61bb      	str	r3, [r7, #24]
 8006efa:	2300      	movs	r3, #0
 8006efc:	61fb      	str	r3, [r7, #28]
 8006efe:	2303      	movs	r3, #3
 8006f00:	623b      	str	r3, [r7, #32]
 8006f02:	2305      	movs	r3, #5
 8006f04:	627b      	str	r3, [r7, #36]	; 0x24
 8006f06:	f107 0314 	add.w	r3, r7, #20
 8006f0a:	4619      	mov	r1, r3
 8006f0c:	4805      	ldr	r0, [pc, #20]	; (8006f24 <HAL_SPI_MspInit+0x8c>)
 8006f0e:	f002 f8f1 	bl	80090f4 <HAL_GPIO_Init>
 8006f12:	bf00      	nop
 8006f14:	3728      	adds	r7, #40	; 0x28
 8006f16:	46bd      	mov	sp, r7
 8006f18:	bd80      	pop	{r7, pc}
 8006f1a:	bf00      	nop
 8006f1c:	40013000 	.word	0x40013000
 8006f20:	40023800 	.word	0x40023800
 8006f24:	40020000 	.word	0x40020000

08006f28 <NMI_Handler>:
 8006f28:	b480      	push	{r7}
 8006f2a:	af00      	add	r7, sp, #0
 8006f2c:	e7fe      	b.n	8006f2c <NMI_Handler+0x4>

08006f2e <HardFault_Handler>:
 8006f2e:	b480      	push	{r7}
 8006f30:	af00      	add	r7, sp, #0
 8006f32:	e7fe      	b.n	8006f32 <HardFault_Handler+0x4>

08006f34 <MemManage_Handler>:
 8006f34:	b480      	push	{r7}
 8006f36:	af00      	add	r7, sp, #0
 8006f38:	e7fe      	b.n	8006f38 <MemManage_Handler+0x4>

08006f3a <BusFault_Handler>:
 8006f3a:	b480      	push	{r7}
 8006f3c:	af00      	add	r7, sp, #0
 8006f3e:	e7fe      	b.n	8006f3e <BusFault_Handler+0x4>

08006f40 <UsageFault_Handler>:
 8006f40:	b480      	push	{r7}
 8006f42:	af00      	add	r7, sp, #0
 8006f44:	e7fe      	b.n	8006f44 <UsageFault_Handler+0x4>

08006f46 <SVC_Handler>:
 8006f46:	b480      	push	{r7}
 8006f48:	af00      	add	r7, sp, #0
 8006f4a:	bf00      	nop
 8006f4c:	46bd      	mov	sp, r7
 8006f4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f52:	4770      	bx	lr

08006f54 <DebugMon_Handler>:
 8006f54:	b480      	push	{r7}
 8006f56:	af00      	add	r7, sp, #0
 8006f58:	bf00      	nop
 8006f5a:	46bd      	mov	sp, r7
 8006f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f60:	4770      	bx	lr

08006f62 <PendSV_Handler>:
 8006f62:	b480      	push	{r7}
 8006f64:	af00      	add	r7, sp, #0
 8006f66:	bf00      	nop
 8006f68:	46bd      	mov	sp, r7
 8006f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f6e:	4770      	bx	lr

08006f70 <SysTick_Handler>:
 8006f70:	b580      	push	{r7, lr}
 8006f72:	af00      	add	r7, sp, #0
 8006f74:	f000 f998 	bl	80072a8 <HAL_IncTick>
 8006f78:	bf00      	nop
 8006f7a:	bd80      	pop	{r7, pc}

08006f7c <EXTI2_IRQHandler>:
 8006f7c:	b580      	push	{r7, lr}
 8006f7e:	af00      	add	r7, sp, #0
 8006f80:	2004      	movs	r0, #4
 8006f82:	f002 fa85 	bl	8009490 <HAL_GPIO_EXTI_IRQHandler>
 8006f86:	bf00      	nop
 8006f88:	bd80      	pop	{r7, pc}
	...

08006f8c <CAN1_RX0_IRQHandler>:
 8006f8c:	b580      	push	{r7, lr}
 8006f8e:	af00      	add	r7, sp, #0
 8006f90:	4802      	ldr	r0, [pc, #8]	; (8006f9c <CAN1_RX0_IRQHandler+0x10>)
 8006f92:	f001 fa08 	bl	80083a6 <HAL_CAN_IRQHandler>
 8006f96:	bf00      	nop
 8006f98:	bd80      	pop	{r7, pc}
 8006f9a:	bf00      	nop
 8006f9c:	20000a84 	.word	0x20000a84

08006fa0 <EXTI15_10_IRQHandler>:
 8006fa0:	b580      	push	{r7, lr}
 8006fa2:	af00      	add	r7, sp, #0
 8006fa4:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8006fa8:	f002 fa72 	bl	8009490 <HAL_GPIO_EXTI_IRQHandler>
 8006fac:	bf00      	nop
 8006fae:	bd80      	pop	{r7, pc}

08006fb0 <DMA2_Stream0_IRQHandler>:
 8006fb0:	b580      	push	{r7, lr}
 8006fb2:	af00      	add	r7, sp, #0
 8006fb4:	4802      	ldr	r0, [pc, #8]	; (8006fc0 <DMA2_Stream0_IRQHandler+0x10>)
 8006fb6:	f001 fe33 	bl	8008c20 <HAL_DMA_IRQHandler>
 8006fba:	bf00      	nop
 8006fbc:	bd80      	pop	{r7, pc}
 8006fbe:	bf00      	nop
 8006fc0:	200009c4 	.word	0x200009c4

08006fc4 <DMA2_Stream2_IRQHandler>:
 8006fc4:	b580      	push	{r7, lr}
 8006fc6:	af00      	add	r7, sp, #0
 8006fc8:	4802      	ldr	r0, [pc, #8]	; (8006fd4 <DMA2_Stream2_IRQHandler+0x10>)
 8006fca:	f001 fe29 	bl	8008c20 <HAL_DMA_IRQHandler>
 8006fce:	bf00      	nop
 8006fd0:	bd80      	pop	{r7, pc}
 8006fd2:	bf00      	nop
 8006fd4:	20000a24 	.word	0x20000a24

08006fd8 <CAN2_RX1_IRQHandler>:
 8006fd8:	b580      	push	{r7, lr}
 8006fda:	af00      	add	r7, sp, #0
 8006fdc:	4802      	ldr	r0, [pc, #8]	; (8006fe8 <CAN2_RX1_IRQHandler+0x10>)
 8006fde:	f001 f9e2 	bl	80083a6 <HAL_CAN_IRQHandler>
 8006fe2:	bf00      	nop
 8006fe4:	bd80      	pop	{r7, pc}
 8006fe6:	bf00      	nop
 8006fe8:	20000aac 	.word	0x20000aac

08006fec <OTG_FS_IRQHandler>:
 8006fec:	b580      	push	{r7, lr}
 8006fee:	af00      	add	r7, sp, #0
 8006ff0:	4802      	ldr	r0, [pc, #8]	; (8006ffc <OTG_FS_IRQHandler+0x10>)
 8006ff2:	f002 fbb5 	bl	8009760 <HAL_PCD_IRQHandler>
 8006ff6:	bf00      	nop
 8006ff8:	bd80      	pop	{r7, pc}
 8006ffa:	bf00      	nop
 8006ffc:	20002124 	.word	0x20002124

08007000 <_getpid>:
 8007000:	b480      	push	{r7}
 8007002:	af00      	add	r7, sp, #0
 8007004:	2301      	movs	r3, #1
 8007006:	4618      	mov	r0, r3
 8007008:	46bd      	mov	sp, r7
 800700a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800700e:	4770      	bx	lr

08007010 <_kill>:
 8007010:	b580      	push	{r7, lr}
 8007012:	b082      	sub	sp, #8
 8007014:	af00      	add	r7, sp, #0
 8007016:	6078      	str	r0, [r7, #4]
 8007018:	6039      	str	r1, [r7, #0]
 800701a:	f00a fc31 	bl	8011880 <__errno>
 800701e:	4603      	mov	r3, r0
 8007020:	2216      	movs	r2, #22
 8007022:	601a      	str	r2, [r3, #0]
 8007024:	f04f 33ff 	mov.w	r3, #4294967295
 8007028:	4618      	mov	r0, r3
 800702a:	3708      	adds	r7, #8
 800702c:	46bd      	mov	sp, r7
 800702e:	bd80      	pop	{r7, pc}

08007030 <_exit>:
 8007030:	b580      	push	{r7, lr}
 8007032:	b082      	sub	sp, #8
 8007034:	af00      	add	r7, sp, #0
 8007036:	6078      	str	r0, [r7, #4]
 8007038:	f04f 31ff 	mov.w	r1, #4294967295
 800703c:	6878      	ldr	r0, [r7, #4]
 800703e:	f7ff ffe7 	bl	8007010 <_kill>
 8007042:	e7fe      	b.n	8007042 <_exit+0x12>

08007044 <_read>:
 8007044:	b580      	push	{r7, lr}
 8007046:	b086      	sub	sp, #24
 8007048:	af00      	add	r7, sp, #0
 800704a:	60f8      	str	r0, [r7, #12]
 800704c:	60b9      	str	r1, [r7, #8]
 800704e:	607a      	str	r2, [r7, #4]
 8007050:	2300      	movs	r3, #0
 8007052:	617b      	str	r3, [r7, #20]
 8007054:	e00a      	b.n	800706c <_read+0x28>
 8007056:	f3af 8000 	nop.w
 800705a:	4601      	mov	r1, r0
 800705c:	68bb      	ldr	r3, [r7, #8]
 800705e:	1c5a      	adds	r2, r3, #1
 8007060:	60ba      	str	r2, [r7, #8]
 8007062:	b2ca      	uxtb	r2, r1
 8007064:	701a      	strb	r2, [r3, #0]
 8007066:	697b      	ldr	r3, [r7, #20]
 8007068:	3301      	adds	r3, #1
 800706a:	617b      	str	r3, [r7, #20]
 800706c:	697a      	ldr	r2, [r7, #20]
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	429a      	cmp	r2, r3
 8007072:	dbf0      	blt.n	8007056 <_read+0x12>
 8007074:	687b      	ldr	r3, [r7, #4]
 8007076:	4618      	mov	r0, r3
 8007078:	3718      	adds	r7, #24
 800707a:	46bd      	mov	sp, r7
 800707c:	bd80      	pop	{r7, pc}

0800707e <_write>:
 800707e:	b580      	push	{r7, lr}
 8007080:	b086      	sub	sp, #24
 8007082:	af00      	add	r7, sp, #0
 8007084:	60f8      	str	r0, [r7, #12]
 8007086:	60b9      	str	r1, [r7, #8]
 8007088:	607a      	str	r2, [r7, #4]
 800708a:	2300      	movs	r3, #0
 800708c:	617b      	str	r3, [r7, #20]
 800708e:	e009      	b.n	80070a4 <_write+0x26>
 8007090:	68bb      	ldr	r3, [r7, #8]
 8007092:	1c5a      	adds	r2, r3, #1
 8007094:	60ba      	str	r2, [r7, #8]
 8007096:	781b      	ldrb	r3, [r3, #0]
 8007098:	4618      	mov	r0, r3
 800709a:	f3af 8000 	nop.w
 800709e:	697b      	ldr	r3, [r7, #20]
 80070a0:	3301      	adds	r3, #1
 80070a2:	617b      	str	r3, [r7, #20]
 80070a4:	697a      	ldr	r2, [r7, #20]
 80070a6:	687b      	ldr	r3, [r7, #4]
 80070a8:	429a      	cmp	r2, r3
 80070aa:	dbf1      	blt.n	8007090 <_write+0x12>
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	4618      	mov	r0, r3
 80070b0:	3718      	adds	r7, #24
 80070b2:	46bd      	mov	sp, r7
 80070b4:	bd80      	pop	{r7, pc}

080070b6 <_close>:
 80070b6:	b480      	push	{r7}
 80070b8:	b083      	sub	sp, #12
 80070ba:	af00      	add	r7, sp, #0
 80070bc:	6078      	str	r0, [r7, #4]
 80070be:	f04f 33ff 	mov.w	r3, #4294967295
 80070c2:	4618      	mov	r0, r3
 80070c4:	370c      	adds	r7, #12
 80070c6:	46bd      	mov	sp, r7
 80070c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070cc:	4770      	bx	lr

080070ce <_fstat>:
 80070ce:	b480      	push	{r7}
 80070d0:	b083      	sub	sp, #12
 80070d2:	af00      	add	r7, sp, #0
 80070d4:	6078      	str	r0, [r7, #4]
 80070d6:	6039      	str	r1, [r7, #0]
 80070d8:	683b      	ldr	r3, [r7, #0]
 80070da:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80070de:	605a      	str	r2, [r3, #4]
 80070e0:	2300      	movs	r3, #0
 80070e2:	4618      	mov	r0, r3
 80070e4:	370c      	adds	r7, #12
 80070e6:	46bd      	mov	sp, r7
 80070e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070ec:	4770      	bx	lr

080070ee <_isatty>:
 80070ee:	b480      	push	{r7}
 80070f0:	b083      	sub	sp, #12
 80070f2:	af00      	add	r7, sp, #0
 80070f4:	6078      	str	r0, [r7, #4]
 80070f6:	2301      	movs	r3, #1
 80070f8:	4618      	mov	r0, r3
 80070fa:	370c      	adds	r7, #12
 80070fc:	46bd      	mov	sp, r7
 80070fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007102:	4770      	bx	lr

08007104 <_lseek>:
 8007104:	b480      	push	{r7}
 8007106:	b085      	sub	sp, #20
 8007108:	af00      	add	r7, sp, #0
 800710a:	60f8      	str	r0, [r7, #12]
 800710c:	60b9      	str	r1, [r7, #8]
 800710e:	607a      	str	r2, [r7, #4]
 8007110:	2300      	movs	r3, #0
 8007112:	4618      	mov	r0, r3
 8007114:	3714      	adds	r7, #20
 8007116:	46bd      	mov	sp, r7
 8007118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800711c:	4770      	bx	lr
	...

08007120 <_sbrk>:
 8007120:	b580      	push	{r7, lr}
 8007122:	b086      	sub	sp, #24
 8007124:	af00      	add	r7, sp, #0
 8007126:	6078      	str	r0, [r7, #4]
 8007128:	4a14      	ldr	r2, [pc, #80]	; (800717c <_sbrk+0x5c>)
 800712a:	4b15      	ldr	r3, [pc, #84]	; (8007180 <_sbrk+0x60>)
 800712c:	1ad3      	subs	r3, r2, r3
 800712e:	617b      	str	r3, [r7, #20]
 8007130:	697b      	ldr	r3, [r7, #20]
 8007132:	613b      	str	r3, [r7, #16]
 8007134:	4b13      	ldr	r3, [pc, #76]	; (8007184 <_sbrk+0x64>)
 8007136:	681b      	ldr	r3, [r3, #0]
 8007138:	2b00      	cmp	r3, #0
 800713a:	d102      	bne.n	8007142 <_sbrk+0x22>
 800713c:	4b11      	ldr	r3, [pc, #68]	; (8007184 <_sbrk+0x64>)
 800713e:	4a12      	ldr	r2, [pc, #72]	; (8007188 <_sbrk+0x68>)
 8007140:	601a      	str	r2, [r3, #0]
 8007142:	4b10      	ldr	r3, [pc, #64]	; (8007184 <_sbrk+0x64>)
 8007144:	681a      	ldr	r2, [r3, #0]
 8007146:	687b      	ldr	r3, [r7, #4]
 8007148:	4413      	add	r3, r2
 800714a:	693a      	ldr	r2, [r7, #16]
 800714c:	429a      	cmp	r2, r3
 800714e:	d207      	bcs.n	8007160 <_sbrk+0x40>
 8007150:	f00a fb96 	bl	8011880 <__errno>
 8007154:	4603      	mov	r3, r0
 8007156:	220c      	movs	r2, #12
 8007158:	601a      	str	r2, [r3, #0]
 800715a:	f04f 33ff 	mov.w	r3, #4294967295
 800715e:	e009      	b.n	8007174 <_sbrk+0x54>
 8007160:	4b08      	ldr	r3, [pc, #32]	; (8007184 <_sbrk+0x64>)
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	60fb      	str	r3, [r7, #12]
 8007166:	4b07      	ldr	r3, [pc, #28]	; (8007184 <_sbrk+0x64>)
 8007168:	681a      	ldr	r2, [r3, #0]
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	4413      	add	r3, r2
 800716e:	4a05      	ldr	r2, [pc, #20]	; (8007184 <_sbrk+0x64>)
 8007170:	6013      	str	r3, [r2, #0]
 8007172:	68fb      	ldr	r3, [r7, #12]
 8007174:	4618      	mov	r0, r3
 8007176:	3718      	adds	r7, #24
 8007178:	46bd      	mov	sp, r7
 800717a:	bd80      	pop	{r7, pc}
 800717c:	20020000 	.word	0x20020000
 8007180:	00000400 	.word	0x00000400
 8007184:	20000c34 	.word	0x20000c34
 8007188:	200029a0 	.word	0x200029a0

0800718c <SystemInit>:
 800718c:	b480      	push	{r7}
 800718e:	af00      	add	r7, sp, #0
 8007190:	4b06      	ldr	r3, [pc, #24]	; (80071ac <SystemInit+0x20>)
 8007192:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007196:	4a05      	ldr	r2, [pc, #20]	; (80071ac <SystemInit+0x20>)
 8007198:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800719c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80071a0:	bf00      	nop
 80071a2:	46bd      	mov	sp, r7
 80071a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071a8:	4770      	bx	lr
 80071aa:	bf00      	nop
 80071ac:	e000ed00 	.word	0xe000ed00

080071b0 <Reset_Handler>:
 80071b0:	f8df d034 	ldr.w	sp, [pc, #52]	; 80071e8 <LoopFillZerobss+0x12>
 80071b4:	480d      	ldr	r0, [pc, #52]	; (80071ec <LoopFillZerobss+0x16>)
 80071b6:	490e      	ldr	r1, [pc, #56]	; (80071f0 <LoopFillZerobss+0x1a>)
 80071b8:	4a0e      	ldr	r2, [pc, #56]	; (80071f4 <LoopFillZerobss+0x1e>)
 80071ba:	2300      	movs	r3, #0
 80071bc:	e002      	b.n	80071c4 <LoopCopyDataInit>

080071be <CopyDataInit>:
 80071be:	58d4      	ldr	r4, [r2, r3]
 80071c0:	50c4      	str	r4, [r0, r3]
 80071c2:	3304      	adds	r3, #4

080071c4 <LoopCopyDataInit>:
 80071c4:	18c4      	adds	r4, r0, r3
 80071c6:	428c      	cmp	r4, r1
 80071c8:	d3f9      	bcc.n	80071be <CopyDataInit>
 80071ca:	4a0b      	ldr	r2, [pc, #44]	; (80071f8 <LoopFillZerobss+0x22>)
 80071cc:	4c0b      	ldr	r4, [pc, #44]	; (80071fc <LoopFillZerobss+0x26>)
 80071ce:	2300      	movs	r3, #0
 80071d0:	e001      	b.n	80071d6 <LoopFillZerobss>

080071d2 <FillZerobss>:
 80071d2:	6013      	str	r3, [r2, #0]
 80071d4:	3204      	adds	r2, #4

080071d6 <LoopFillZerobss>:
 80071d6:	42a2      	cmp	r2, r4
 80071d8:	d3fb      	bcc.n	80071d2 <FillZerobss>
 80071da:	f7ff ffd7 	bl	800718c <SystemInit>
 80071de:	f00a fb55 	bl	801188c <__libc_init_array>
 80071e2:	f7fe fb7f 	bl	80058e4 <main>
 80071e6:	4770      	bx	lr
 80071e8:	20020000 	.word	0x20020000
 80071ec:	20000000 	.word	0x20000000
 80071f0:	200002e8 	.word	0x200002e8
 80071f4:	080146fc 	.word	0x080146fc
 80071f8:	200002e8 	.word	0x200002e8
 80071fc:	2000299c 	.word	0x2000299c

08007200 <ADC_IRQHandler>:
 8007200:	e7fe      	b.n	8007200 <ADC_IRQHandler>
	...

08007204 <HAL_Init>:
 8007204:	b580      	push	{r7, lr}
 8007206:	af00      	add	r7, sp, #0
 8007208:	4b0e      	ldr	r3, [pc, #56]	; (8007244 <HAL_Init+0x40>)
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	4a0d      	ldr	r2, [pc, #52]	; (8007244 <HAL_Init+0x40>)
 800720e:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007212:	6013      	str	r3, [r2, #0]
 8007214:	4b0b      	ldr	r3, [pc, #44]	; (8007244 <HAL_Init+0x40>)
 8007216:	681b      	ldr	r3, [r3, #0]
 8007218:	4a0a      	ldr	r2, [pc, #40]	; (8007244 <HAL_Init+0x40>)
 800721a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800721e:	6013      	str	r3, [r2, #0]
 8007220:	4b08      	ldr	r3, [pc, #32]	; (8007244 <HAL_Init+0x40>)
 8007222:	681b      	ldr	r3, [r3, #0]
 8007224:	4a07      	ldr	r2, [pc, #28]	; (8007244 <HAL_Init+0x40>)
 8007226:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800722a:	6013      	str	r3, [r2, #0]
 800722c:	2003      	movs	r0, #3
 800722e:	f001 fbaf 	bl	8008990 <HAL_NVIC_SetPriorityGrouping>
 8007232:	200f      	movs	r0, #15
 8007234:	f000 f808 	bl	8007248 <HAL_InitTick>
 8007238:	f7ff fc78 	bl	8006b2c <HAL_MspInit>
 800723c:	2300      	movs	r3, #0
 800723e:	4618      	mov	r0, r3
 8007240:	bd80      	pop	{r7, pc}
 8007242:	bf00      	nop
 8007244:	40023c00 	.word	0x40023c00

08007248 <HAL_InitTick>:
 8007248:	b580      	push	{r7, lr}
 800724a:	b082      	sub	sp, #8
 800724c:	af00      	add	r7, sp, #0
 800724e:	6078      	str	r0, [r7, #4]
 8007250:	4b12      	ldr	r3, [pc, #72]	; (800729c <HAL_InitTick+0x54>)
 8007252:	681a      	ldr	r2, [r3, #0]
 8007254:	4b12      	ldr	r3, [pc, #72]	; (80072a0 <HAL_InitTick+0x58>)
 8007256:	781b      	ldrb	r3, [r3, #0]
 8007258:	4619      	mov	r1, r3
 800725a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800725e:	fbb3 f3f1 	udiv	r3, r3, r1
 8007262:	fbb2 f3f3 	udiv	r3, r2, r3
 8007266:	4618      	mov	r0, r3
 8007268:	f001 fbc7 	bl	80089fa <HAL_SYSTICK_Config>
 800726c:	4603      	mov	r3, r0
 800726e:	2b00      	cmp	r3, #0
 8007270:	d001      	beq.n	8007276 <HAL_InitTick+0x2e>
 8007272:	2301      	movs	r3, #1
 8007274:	e00e      	b.n	8007294 <HAL_InitTick+0x4c>
 8007276:	687b      	ldr	r3, [r7, #4]
 8007278:	2b0f      	cmp	r3, #15
 800727a:	d80a      	bhi.n	8007292 <HAL_InitTick+0x4a>
 800727c:	2200      	movs	r2, #0
 800727e:	6879      	ldr	r1, [r7, #4]
 8007280:	f04f 30ff 	mov.w	r0, #4294967295
 8007284:	f001 fb8f 	bl	80089a6 <HAL_NVIC_SetPriority>
 8007288:	4a06      	ldr	r2, [pc, #24]	; (80072a4 <HAL_InitTick+0x5c>)
 800728a:	687b      	ldr	r3, [r7, #4]
 800728c:	6013      	str	r3, [r2, #0]
 800728e:	2300      	movs	r3, #0
 8007290:	e000      	b.n	8007294 <HAL_InitTick+0x4c>
 8007292:	2301      	movs	r3, #1
 8007294:	4618      	mov	r0, r3
 8007296:	3708      	adds	r7, #8
 8007298:	46bd      	mov	sp, r7
 800729a:	bd80      	pop	{r7, pc}
 800729c:	20000024 	.word	0x20000024
 80072a0:	2000002c 	.word	0x2000002c
 80072a4:	20000028 	.word	0x20000028

080072a8 <HAL_IncTick>:
 80072a8:	b480      	push	{r7}
 80072aa:	af00      	add	r7, sp, #0
 80072ac:	4b06      	ldr	r3, [pc, #24]	; (80072c8 <HAL_IncTick+0x20>)
 80072ae:	781b      	ldrb	r3, [r3, #0]
 80072b0:	461a      	mov	r2, r3
 80072b2:	4b06      	ldr	r3, [pc, #24]	; (80072cc <HAL_IncTick+0x24>)
 80072b4:	681b      	ldr	r3, [r3, #0]
 80072b6:	4413      	add	r3, r2
 80072b8:	4a04      	ldr	r2, [pc, #16]	; (80072cc <HAL_IncTick+0x24>)
 80072ba:	6013      	str	r3, [r2, #0]
 80072bc:	bf00      	nop
 80072be:	46bd      	mov	sp, r7
 80072c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072c4:	4770      	bx	lr
 80072c6:	bf00      	nop
 80072c8:	2000002c 	.word	0x2000002c
 80072cc:	20000c38 	.word	0x20000c38

080072d0 <HAL_GetTick>:
 80072d0:	b480      	push	{r7}
 80072d2:	af00      	add	r7, sp, #0
 80072d4:	4b03      	ldr	r3, [pc, #12]	; (80072e4 <HAL_GetTick+0x14>)
 80072d6:	681b      	ldr	r3, [r3, #0]
 80072d8:	4618      	mov	r0, r3
 80072da:	46bd      	mov	sp, r7
 80072dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072e0:	4770      	bx	lr
 80072e2:	bf00      	nop
 80072e4:	20000c38 	.word	0x20000c38

080072e8 <HAL_Delay>:
 80072e8:	b580      	push	{r7, lr}
 80072ea:	b084      	sub	sp, #16
 80072ec:	af00      	add	r7, sp, #0
 80072ee:	6078      	str	r0, [r7, #4]
 80072f0:	f7ff ffee 	bl	80072d0 <HAL_GetTick>
 80072f4:	60b8      	str	r0, [r7, #8]
 80072f6:	687b      	ldr	r3, [r7, #4]
 80072f8:	60fb      	str	r3, [r7, #12]
 80072fa:	68fb      	ldr	r3, [r7, #12]
 80072fc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007300:	d005      	beq.n	800730e <HAL_Delay+0x26>
 8007302:	4b0a      	ldr	r3, [pc, #40]	; (800732c <HAL_Delay+0x44>)
 8007304:	781b      	ldrb	r3, [r3, #0]
 8007306:	461a      	mov	r2, r3
 8007308:	68fb      	ldr	r3, [r7, #12]
 800730a:	4413      	add	r3, r2
 800730c:	60fb      	str	r3, [r7, #12]
 800730e:	bf00      	nop
 8007310:	f7ff ffde 	bl	80072d0 <HAL_GetTick>
 8007314:	4602      	mov	r2, r0
 8007316:	68bb      	ldr	r3, [r7, #8]
 8007318:	1ad3      	subs	r3, r2, r3
 800731a:	68fa      	ldr	r2, [r7, #12]
 800731c:	429a      	cmp	r2, r3
 800731e:	d8f7      	bhi.n	8007310 <HAL_Delay+0x28>
 8007320:	bf00      	nop
 8007322:	bf00      	nop
 8007324:	3710      	adds	r7, #16
 8007326:	46bd      	mov	sp, r7
 8007328:	bd80      	pop	{r7, pc}
 800732a:	bf00      	nop
 800732c:	2000002c 	.word	0x2000002c

08007330 <HAL_ADC_Init>:
 8007330:	b580      	push	{r7, lr}
 8007332:	b084      	sub	sp, #16
 8007334:	af00      	add	r7, sp, #0
 8007336:	6078      	str	r0, [r7, #4]
 8007338:	2300      	movs	r3, #0
 800733a:	73fb      	strb	r3, [r7, #15]
 800733c:	687b      	ldr	r3, [r7, #4]
 800733e:	2b00      	cmp	r3, #0
 8007340:	d101      	bne.n	8007346 <HAL_ADC_Init+0x16>
 8007342:	2301      	movs	r3, #1
 8007344:	e033      	b.n	80073ae <HAL_ADC_Init+0x7e>
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800734a:	2b00      	cmp	r3, #0
 800734c:	d109      	bne.n	8007362 <HAL_ADC_Init+0x32>
 800734e:	6878      	ldr	r0, [r7, #4]
 8007350:	f7ff fc14 	bl	8006b7c <HAL_ADC_MspInit>
 8007354:	687b      	ldr	r3, [r7, #4]
 8007356:	2200      	movs	r2, #0
 8007358:	645a      	str	r2, [r3, #68]	; 0x44
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	2200      	movs	r2, #0
 800735e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007362:	687b      	ldr	r3, [r7, #4]
 8007364:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007366:	f003 0310 	and.w	r3, r3, #16
 800736a:	2b00      	cmp	r3, #0
 800736c:	d118      	bne.n	80073a0 <HAL_ADC_Init+0x70>
 800736e:	687b      	ldr	r3, [r7, #4]
 8007370:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007372:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8007376:	f023 0302 	bic.w	r3, r3, #2
 800737a:	f043 0202 	orr.w	r2, r3, #2
 800737e:	687b      	ldr	r3, [r7, #4]
 8007380:	641a      	str	r2, [r3, #64]	; 0x40
 8007382:	6878      	ldr	r0, [r7, #4]
 8007384:	f000 fa5e 	bl	8007844 <ADC_Init>
 8007388:	687b      	ldr	r3, [r7, #4]
 800738a:	2200      	movs	r2, #0
 800738c:	645a      	str	r2, [r3, #68]	; 0x44
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007392:	f023 0303 	bic.w	r3, r3, #3
 8007396:	f043 0201 	orr.w	r2, r3, #1
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	641a      	str	r2, [r3, #64]	; 0x40
 800739e:	e001      	b.n	80073a4 <HAL_ADC_Init+0x74>
 80073a0:	2301      	movs	r3, #1
 80073a2:	73fb      	strb	r3, [r7, #15]
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	2200      	movs	r2, #0
 80073a8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073ac:	7bfb      	ldrb	r3, [r7, #15]
 80073ae:	4618      	mov	r0, r3
 80073b0:	3710      	adds	r7, #16
 80073b2:	46bd      	mov	sp, r7
 80073b4:	bd80      	pop	{r7, pc}
	...

080073b8 <HAL_ADC_Start_DMA>:
 80073b8:	b580      	push	{r7, lr}
 80073ba:	b086      	sub	sp, #24
 80073bc:	af00      	add	r7, sp, #0
 80073be:	60f8      	str	r0, [r7, #12]
 80073c0:	60b9      	str	r1, [r7, #8]
 80073c2:	607a      	str	r2, [r7, #4]
 80073c4:	2300      	movs	r3, #0
 80073c6:	613b      	str	r3, [r7, #16]
 80073c8:	68fb      	ldr	r3, [r7, #12]
 80073ca:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80073ce:	2b01      	cmp	r3, #1
 80073d0:	d101      	bne.n	80073d6 <HAL_ADC_Start_DMA+0x1e>
 80073d2:	2302      	movs	r3, #2
 80073d4:	e0e9      	b.n	80075aa <HAL_ADC_Start_DMA+0x1f2>
 80073d6:	68fb      	ldr	r3, [r7, #12]
 80073d8:	2201      	movs	r2, #1
 80073da:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80073de:	68fb      	ldr	r3, [r7, #12]
 80073e0:	681b      	ldr	r3, [r3, #0]
 80073e2:	689b      	ldr	r3, [r3, #8]
 80073e4:	f003 0301 	and.w	r3, r3, #1
 80073e8:	2b01      	cmp	r3, #1
 80073ea:	d018      	beq.n	800741e <HAL_ADC_Start_DMA+0x66>
 80073ec:	68fb      	ldr	r3, [r7, #12]
 80073ee:	681b      	ldr	r3, [r3, #0]
 80073f0:	689a      	ldr	r2, [r3, #8]
 80073f2:	68fb      	ldr	r3, [r7, #12]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	f042 0201 	orr.w	r2, r2, #1
 80073fa:	609a      	str	r2, [r3, #8]
 80073fc:	4b6d      	ldr	r3, [pc, #436]	; (80075b4 <HAL_ADC_Start_DMA+0x1fc>)
 80073fe:	681b      	ldr	r3, [r3, #0]
 8007400:	4a6d      	ldr	r2, [pc, #436]	; (80075b8 <HAL_ADC_Start_DMA+0x200>)
 8007402:	fba2 2303 	umull	r2, r3, r2, r3
 8007406:	0c9a      	lsrs	r2, r3, #18
 8007408:	4613      	mov	r3, r2
 800740a:	005b      	lsls	r3, r3, #1
 800740c:	4413      	add	r3, r2
 800740e:	613b      	str	r3, [r7, #16]
 8007410:	e002      	b.n	8007418 <HAL_ADC_Start_DMA+0x60>
 8007412:	693b      	ldr	r3, [r7, #16]
 8007414:	3b01      	subs	r3, #1
 8007416:	613b      	str	r3, [r7, #16]
 8007418:	693b      	ldr	r3, [r7, #16]
 800741a:	2b00      	cmp	r3, #0
 800741c:	d1f9      	bne.n	8007412 <HAL_ADC_Start_DMA+0x5a>
 800741e:	68fb      	ldr	r3, [r7, #12]
 8007420:	681b      	ldr	r3, [r3, #0]
 8007422:	689b      	ldr	r3, [r3, #8]
 8007424:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007428:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800742c:	d107      	bne.n	800743e <HAL_ADC_Start_DMA+0x86>
 800742e:	68fb      	ldr	r3, [r7, #12]
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	689a      	ldr	r2, [r3, #8]
 8007434:	68fb      	ldr	r3, [r7, #12]
 8007436:	681b      	ldr	r3, [r3, #0]
 8007438:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800743c:	609a      	str	r2, [r3, #8]
 800743e:	68fb      	ldr	r3, [r7, #12]
 8007440:	681b      	ldr	r3, [r3, #0]
 8007442:	689b      	ldr	r3, [r3, #8]
 8007444:	f003 0301 	and.w	r3, r3, #1
 8007448:	2b01      	cmp	r3, #1
 800744a:	f040 80a1 	bne.w	8007590 <HAL_ADC_Start_DMA+0x1d8>
 800744e:	68fb      	ldr	r3, [r7, #12]
 8007450:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007452:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8007456:	f023 0301 	bic.w	r3, r3, #1
 800745a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800745e:	68fb      	ldr	r3, [r7, #12]
 8007460:	641a      	str	r2, [r3, #64]	; 0x40
 8007462:	68fb      	ldr	r3, [r7, #12]
 8007464:	681b      	ldr	r3, [r3, #0]
 8007466:	685b      	ldr	r3, [r3, #4]
 8007468:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800746c:	2b00      	cmp	r3, #0
 800746e:	d007      	beq.n	8007480 <HAL_ADC_Start_DMA+0xc8>
 8007470:	68fb      	ldr	r3, [r7, #12]
 8007472:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007474:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8007478:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 800747c:	68fb      	ldr	r3, [r7, #12]
 800747e:	641a      	str	r2, [r3, #64]	; 0x40
 8007480:	68fb      	ldr	r3, [r7, #12]
 8007482:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007484:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007488:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800748c:	d106      	bne.n	800749c <HAL_ADC_Start_DMA+0xe4>
 800748e:	68fb      	ldr	r3, [r7, #12]
 8007490:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007492:	f023 0206 	bic.w	r2, r3, #6
 8007496:	68fb      	ldr	r3, [r7, #12]
 8007498:	645a      	str	r2, [r3, #68]	; 0x44
 800749a:	e002      	b.n	80074a2 <HAL_ADC_Start_DMA+0xea>
 800749c:	68fb      	ldr	r3, [r7, #12]
 800749e:	2200      	movs	r2, #0
 80074a0:	645a      	str	r2, [r3, #68]	; 0x44
 80074a2:	68fb      	ldr	r3, [r7, #12]
 80074a4:	2200      	movs	r2, #0
 80074a6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80074aa:	4b44      	ldr	r3, [pc, #272]	; (80075bc <HAL_ADC_Start_DMA+0x204>)
 80074ac:	617b      	str	r3, [r7, #20]
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074b2:	4a43      	ldr	r2, [pc, #268]	; (80075c0 <HAL_ADC_Start_DMA+0x208>)
 80074b4:	63da      	str	r2, [r3, #60]	; 0x3c
 80074b6:	68fb      	ldr	r3, [r7, #12]
 80074b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074ba:	4a42      	ldr	r2, [pc, #264]	; (80075c4 <HAL_ADC_Start_DMA+0x20c>)
 80074bc:	641a      	str	r2, [r3, #64]	; 0x40
 80074be:	68fb      	ldr	r3, [r7, #12]
 80074c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80074c2:	4a41      	ldr	r2, [pc, #260]	; (80075c8 <HAL_ADC_Start_DMA+0x210>)
 80074c4:	64da      	str	r2, [r3, #76]	; 0x4c
 80074c6:	68fb      	ldr	r3, [r7, #12]
 80074c8:	681b      	ldr	r3, [r3, #0]
 80074ca:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80074ce:	601a      	str	r2, [r3, #0]
 80074d0:	68fb      	ldr	r3, [r7, #12]
 80074d2:	681b      	ldr	r3, [r3, #0]
 80074d4:	685a      	ldr	r2, [r3, #4]
 80074d6:	68fb      	ldr	r3, [r7, #12]
 80074d8:	681b      	ldr	r3, [r3, #0]
 80074da:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80074de:	605a      	str	r2, [r3, #4]
 80074e0:	68fb      	ldr	r3, [r7, #12]
 80074e2:	681b      	ldr	r3, [r3, #0]
 80074e4:	689a      	ldr	r2, [r3, #8]
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	681b      	ldr	r3, [r3, #0]
 80074ea:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80074ee:	609a      	str	r2, [r3, #8]
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	6b98      	ldr	r0, [r3, #56]	; 0x38
 80074f4:	68fb      	ldr	r3, [r7, #12]
 80074f6:	681b      	ldr	r3, [r3, #0]
 80074f8:	334c      	adds	r3, #76	; 0x4c
 80074fa:	4619      	mov	r1, r3
 80074fc:	68ba      	ldr	r2, [r7, #8]
 80074fe:	687b      	ldr	r3, [r7, #4]
 8007500:	f001 fb36 	bl	8008b70 <HAL_DMA_Start_IT>
 8007504:	697b      	ldr	r3, [r7, #20]
 8007506:	685b      	ldr	r3, [r3, #4]
 8007508:	f003 031f 	and.w	r3, r3, #31
 800750c:	2b00      	cmp	r3, #0
 800750e:	d12a      	bne.n	8007566 <HAL_ADC_Start_DMA+0x1ae>
 8007510:	68fb      	ldr	r3, [r7, #12]
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	4a2d      	ldr	r2, [pc, #180]	; (80075cc <HAL_ADC_Start_DMA+0x214>)
 8007516:	4293      	cmp	r3, r2
 8007518:	d015      	beq.n	8007546 <HAL_ADC_Start_DMA+0x18e>
 800751a:	68fb      	ldr	r3, [r7, #12]
 800751c:	681b      	ldr	r3, [r3, #0]
 800751e:	4a2c      	ldr	r2, [pc, #176]	; (80075d0 <HAL_ADC_Start_DMA+0x218>)
 8007520:	4293      	cmp	r3, r2
 8007522:	d105      	bne.n	8007530 <HAL_ADC_Start_DMA+0x178>
 8007524:	4b25      	ldr	r3, [pc, #148]	; (80075bc <HAL_ADC_Start_DMA+0x204>)
 8007526:	685b      	ldr	r3, [r3, #4]
 8007528:	f003 031f 	and.w	r3, r3, #31
 800752c:	2b00      	cmp	r3, #0
 800752e:	d00a      	beq.n	8007546 <HAL_ADC_Start_DMA+0x18e>
 8007530:	68fb      	ldr	r3, [r7, #12]
 8007532:	681b      	ldr	r3, [r3, #0]
 8007534:	4a27      	ldr	r2, [pc, #156]	; (80075d4 <HAL_ADC_Start_DMA+0x21c>)
 8007536:	4293      	cmp	r3, r2
 8007538:	d136      	bne.n	80075a8 <HAL_ADC_Start_DMA+0x1f0>
 800753a:	4b20      	ldr	r3, [pc, #128]	; (80075bc <HAL_ADC_Start_DMA+0x204>)
 800753c:	685b      	ldr	r3, [r3, #4]
 800753e:	f003 0310 	and.w	r3, r3, #16
 8007542:	2b00      	cmp	r3, #0
 8007544:	d130      	bne.n	80075a8 <HAL_ADC_Start_DMA+0x1f0>
 8007546:	68fb      	ldr	r3, [r7, #12]
 8007548:	681b      	ldr	r3, [r3, #0]
 800754a:	689b      	ldr	r3, [r3, #8]
 800754c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007550:	2b00      	cmp	r3, #0
 8007552:	d129      	bne.n	80075a8 <HAL_ADC_Start_DMA+0x1f0>
 8007554:	68fb      	ldr	r3, [r7, #12]
 8007556:	681b      	ldr	r3, [r3, #0]
 8007558:	689a      	ldr	r2, [r3, #8]
 800755a:	68fb      	ldr	r3, [r7, #12]
 800755c:	681b      	ldr	r3, [r3, #0]
 800755e:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8007562:	609a      	str	r2, [r3, #8]
 8007564:	e020      	b.n	80075a8 <HAL_ADC_Start_DMA+0x1f0>
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	681b      	ldr	r3, [r3, #0]
 800756a:	4a18      	ldr	r2, [pc, #96]	; (80075cc <HAL_ADC_Start_DMA+0x214>)
 800756c:	4293      	cmp	r3, r2
 800756e:	d11b      	bne.n	80075a8 <HAL_ADC_Start_DMA+0x1f0>
 8007570:	68fb      	ldr	r3, [r7, #12]
 8007572:	681b      	ldr	r3, [r3, #0]
 8007574:	689b      	ldr	r3, [r3, #8]
 8007576:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800757a:	2b00      	cmp	r3, #0
 800757c:	d114      	bne.n	80075a8 <HAL_ADC_Start_DMA+0x1f0>
 800757e:	68fb      	ldr	r3, [r7, #12]
 8007580:	681b      	ldr	r3, [r3, #0]
 8007582:	689a      	ldr	r2, [r3, #8]
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	681b      	ldr	r3, [r3, #0]
 8007588:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800758c:	609a      	str	r2, [r3, #8]
 800758e:	e00b      	b.n	80075a8 <HAL_ADC_Start_DMA+0x1f0>
 8007590:	68fb      	ldr	r3, [r7, #12]
 8007592:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007594:	f043 0210 	orr.w	r2, r3, #16
 8007598:	68fb      	ldr	r3, [r7, #12]
 800759a:	641a      	str	r2, [r3, #64]	; 0x40
 800759c:	68fb      	ldr	r3, [r7, #12]
 800759e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80075a0:	f043 0201 	orr.w	r2, r3, #1
 80075a4:	68fb      	ldr	r3, [r7, #12]
 80075a6:	645a      	str	r2, [r3, #68]	; 0x44
 80075a8:	2300      	movs	r3, #0
 80075aa:	4618      	mov	r0, r3
 80075ac:	3718      	adds	r7, #24
 80075ae:	46bd      	mov	sp, r7
 80075b0:	bd80      	pop	{r7, pc}
 80075b2:	bf00      	nop
 80075b4:	20000024 	.word	0x20000024
 80075b8:	431bde83 	.word	0x431bde83
 80075bc:	40012300 	.word	0x40012300
 80075c0:	08007a3d 	.word	0x08007a3d
 80075c4:	08007af7 	.word	0x08007af7
 80075c8:	08007b13 	.word	0x08007b13
 80075cc:	40012000 	.word	0x40012000
 80075d0:	40012100 	.word	0x40012100
 80075d4:	40012200 	.word	0x40012200

080075d8 <HAL_ADC_ConvHalfCpltCallback>:
 80075d8:	b480      	push	{r7}
 80075da:	b083      	sub	sp, #12
 80075dc:	af00      	add	r7, sp, #0
 80075de:	6078      	str	r0, [r7, #4]
 80075e0:	bf00      	nop
 80075e2:	370c      	adds	r7, #12
 80075e4:	46bd      	mov	sp, r7
 80075e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075ea:	4770      	bx	lr

080075ec <HAL_ADC_ErrorCallback>:
 80075ec:	b480      	push	{r7}
 80075ee:	b083      	sub	sp, #12
 80075f0:	af00      	add	r7, sp, #0
 80075f2:	6078      	str	r0, [r7, #4]
 80075f4:	bf00      	nop
 80075f6:	370c      	adds	r7, #12
 80075f8:	46bd      	mov	sp, r7
 80075fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80075fe:	4770      	bx	lr

08007600 <HAL_ADC_ConfigChannel>:
 8007600:	b480      	push	{r7}
 8007602:	b085      	sub	sp, #20
 8007604:	af00      	add	r7, sp, #0
 8007606:	6078      	str	r0, [r7, #4]
 8007608:	6039      	str	r1, [r7, #0]
 800760a:	2300      	movs	r3, #0
 800760c:	60bb      	str	r3, [r7, #8]
 800760e:	687b      	ldr	r3, [r7, #4]
 8007610:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007614:	2b01      	cmp	r3, #1
 8007616:	d101      	bne.n	800761c <HAL_ADC_ConfigChannel+0x1c>
 8007618:	2302      	movs	r3, #2
 800761a:	e105      	b.n	8007828 <HAL_ADC_ConfigChannel+0x228>
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	2201      	movs	r2, #1
 8007620:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007624:	683b      	ldr	r3, [r7, #0]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	2b09      	cmp	r3, #9
 800762a:	d925      	bls.n	8007678 <HAL_ADC_ConfigChannel+0x78>
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	681b      	ldr	r3, [r3, #0]
 8007630:	68d9      	ldr	r1, [r3, #12]
 8007632:	683b      	ldr	r3, [r7, #0]
 8007634:	681b      	ldr	r3, [r3, #0]
 8007636:	b29b      	uxth	r3, r3
 8007638:	461a      	mov	r2, r3
 800763a:	4613      	mov	r3, r2
 800763c:	005b      	lsls	r3, r3, #1
 800763e:	4413      	add	r3, r2
 8007640:	3b1e      	subs	r3, #30
 8007642:	2207      	movs	r2, #7
 8007644:	fa02 f303 	lsl.w	r3, r2, r3
 8007648:	43da      	mvns	r2, r3
 800764a:	687b      	ldr	r3, [r7, #4]
 800764c:	681b      	ldr	r3, [r3, #0]
 800764e:	400a      	ands	r2, r1
 8007650:	60da      	str	r2, [r3, #12]
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	681b      	ldr	r3, [r3, #0]
 8007656:	68d9      	ldr	r1, [r3, #12]
 8007658:	683b      	ldr	r3, [r7, #0]
 800765a:	689a      	ldr	r2, [r3, #8]
 800765c:	683b      	ldr	r3, [r7, #0]
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	b29b      	uxth	r3, r3
 8007662:	4618      	mov	r0, r3
 8007664:	4603      	mov	r3, r0
 8007666:	005b      	lsls	r3, r3, #1
 8007668:	4403      	add	r3, r0
 800766a:	3b1e      	subs	r3, #30
 800766c:	409a      	lsls	r2, r3
 800766e:	687b      	ldr	r3, [r7, #4]
 8007670:	681b      	ldr	r3, [r3, #0]
 8007672:	430a      	orrs	r2, r1
 8007674:	60da      	str	r2, [r3, #12]
 8007676:	e022      	b.n	80076be <HAL_ADC_ConfigChannel+0xbe>
 8007678:	687b      	ldr	r3, [r7, #4]
 800767a:	681b      	ldr	r3, [r3, #0]
 800767c:	6919      	ldr	r1, [r3, #16]
 800767e:	683b      	ldr	r3, [r7, #0]
 8007680:	681b      	ldr	r3, [r3, #0]
 8007682:	b29b      	uxth	r3, r3
 8007684:	461a      	mov	r2, r3
 8007686:	4613      	mov	r3, r2
 8007688:	005b      	lsls	r3, r3, #1
 800768a:	4413      	add	r3, r2
 800768c:	2207      	movs	r2, #7
 800768e:	fa02 f303 	lsl.w	r3, r2, r3
 8007692:	43da      	mvns	r2, r3
 8007694:	687b      	ldr	r3, [r7, #4]
 8007696:	681b      	ldr	r3, [r3, #0]
 8007698:	400a      	ands	r2, r1
 800769a:	611a      	str	r2, [r3, #16]
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	681b      	ldr	r3, [r3, #0]
 80076a0:	6919      	ldr	r1, [r3, #16]
 80076a2:	683b      	ldr	r3, [r7, #0]
 80076a4:	689a      	ldr	r2, [r3, #8]
 80076a6:	683b      	ldr	r3, [r7, #0]
 80076a8:	681b      	ldr	r3, [r3, #0]
 80076aa:	b29b      	uxth	r3, r3
 80076ac:	4618      	mov	r0, r3
 80076ae:	4603      	mov	r3, r0
 80076b0:	005b      	lsls	r3, r3, #1
 80076b2:	4403      	add	r3, r0
 80076b4:	409a      	lsls	r2, r3
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	681b      	ldr	r3, [r3, #0]
 80076ba:	430a      	orrs	r2, r1
 80076bc:	611a      	str	r2, [r3, #16]
 80076be:	683b      	ldr	r3, [r7, #0]
 80076c0:	685b      	ldr	r3, [r3, #4]
 80076c2:	2b06      	cmp	r3, #6
 80076c4:	d824      	bhi.n	8007710 <HAL_ADC_ConfigChannel+0x110>
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80076cc:	683b      	ldr	r3, [r7, #0]
 80076ce:	685a      	ldr	r2, [r3, #4]
 80076d0:	4613      	mov	r3, r2
 80076d2:	009b      	lsls	r3, r3, #2
 80076d4:	4413      	add	r3, r2
 80076d6:	3b05      	subs	r3, #5
 80076d8:	221f      	movs	r2, #31
 80076da:	fa02 f303 	lsl.w	r3, r2, r3
 80076de:	43da      	mvns	r2, r3
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	681b      	ldr	r3, [r3, #0]
 80076e4:	400a      	ands	r2, r1
 80076e6:	635a      	str	r2, [r3, #52]	; 0x34
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	681b      	ldr	r3, [r3, #0]
 80076ec:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80076ee:	683b      	ldr	r3, [r7, #0]
 80076f0:	681b      	ldr	r3, [r3, #0]
 80076f2:	b29b      	uxth	r3, r3
 80076f4:	4618      	mov	r0, r3
 80076f6:	683b      	ldr	r3, [r7, #0]
 80076f8:	685a      	ldr	r2, [r3, #4]
 80076fa:	4613      	mov	r3, r2
 80076fc:	009b      	lsls	r3, r3, #2
 80076fe:	4413      	add	r3, r2
 8007700:	3b05      	subs	r3, #5
 8007702:	fa00 f203 	lsl.w	r2, r0, r3
 8007706:	687b      	ldr	r3, [r7, #4]
 8007708:	681b      	ldr	r3, [r3, #0]
 800770a:	430a      	orrs	r2, r1
 800770c:	635a      	str	r2, [r3, #52]	; 0x34
 800770e:	e04c      	b.n	80077aa <HAL_ADC_ConfigChannel+0x1aa>
 8007710:	683b      	ldr	r3, [r7, #0]
 8007712:	685b      	ldr	r3, [r3, #4]
 8007714:	2b0c      	cmp	r3, #12
 8007716:	d824      	bhi.n	8007762 <HAL_ADC_ConfigChannel+0x162>
 8007718:	687b      	ldr	r3, [r7, #4]
 800771a:	681b      	ldr	r3, [r3, #0]
 800771c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800771e:	683b      	ldr	r3, [r7, #0]
 8007720:	685a      	ldr	r2, [r3, #4]
 8007722:	4613      	mov	r3, r2
 8007724:	009b      	lsls	r3, r3, #2
 8007726:	4413      	add	r3, r2
 8007728:	3b23      	subs	r3, #35	; 0x23
 800772a:	221f      	movs	r2, #31
 800772c:	fa02 f303 	lsl.w	r3, r2, r3
 8007730:	43da      	mvns	r2, r3
 8007732:	687b      	ldr	r3, [r7, #4]
 8007734:	681b      	ldr	r3, [r3, #0]
 8007736:	400a      	ands	r2, r1
 8007738:	631a      	str	r2, [r3, #48]	; 0x30
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	681b      	ldr	r3, [r3, #0]
 800773e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8007740:	683b      	ldr	r3, [r7, #0]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	b29b      	uxth	r3, r3
 8007746:	4618      	mov	r0, r3
 8007748:	683b      	ldr	r3, [r7, #0]
 800774a:	685a      	ldr	r2, [r3, #4]
 800774c:	4613      	mov	r3, r2
 800774e:	009b      	lsls	r3, r3, #2
 8007750:	4413      	add	r3, r2
 8007752:	3b23      	subs	r3, #35	; 0x23
 8007754:	fa00 f203 	lsl.w	r2, r0, r3
 8007758:	687b      	ldr	r3, [r7, #4]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	430a      	orrs	r2, r1
 800775e:	631a      	str	r2, [r3, #48]	; 0x30
 8007760:	e023      	b.n	80077aa <HAL_ADC_ConfigChannel+0x1aa>
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	681b      	ldr	r3, [r3, #0]
 8007766:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007768:	683b      	ldr	r3, [r7, #0]
 800776a:	685a      	ldr	r2, [r3, #4]
 800776c:	4613      	mov	r3, r2
 800776e:	009b      	lsls	r3, r3, #2
 8007770:	4413      	add	r3, r2
 8007772:	3b41      	subs	r3, #65	; 0x41
 8007774:	221f      	movs	r2, #31
 8007776:	fa02 f303 	lsl.w	r3, r2, r3
 800777a:	43da      	mvns	r2, r3
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	681b      	ldr	r3, [r3, #0]
 8007780:	400a      	ands	r2, r1
 8007782:	62da      	str	r2, [r3, #44]	; 0x2c
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	681b      	ldr	r3, [r3, #0]
 8007788:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800778a:	683b      	ldr	r3, [r7, #0]
 800778c:	681b      	ldr	r3, [r3, #0]
 800778e:	b29b      	uxth	r3, r3
 8007790:	4618      	mov	r0, r3
 8007792:	683b      	ldr	r3, [r7, #0]
 8007794:	685a      	ldr	r2, [r3, #4]
 8007796:	4613      	mov	r3, r2
 8007798:	009b      	lsls	r3, r3, #2
 800779a:	4413      	add	r3, r2
 800779c:	3b41      	subs	r3, #65	; 0x41
 800779e:	fa00 f203 	lsl.w	r2, r0, r3
 80077a2:	687b      	ldr	r3, [r7, #4]
 80077a4:	681b      	ldr	r3, [r3, #0]
 80077a6:	430a      	orrs	r2, r1
 80077a8:	62da      	str	r2, [r3, #44]	; 0x2c
 80077aa:	4b22      	ldr	r3, [pc, #136]	; (8007834 <HAL_ADC_ConfigChannel+0x234>)
 80077ac:	60fb      	str	r3, [r7, #12]
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	681b      	ldr	r3, [r3, #0]
 80077b2:	4a21      	ldr	r2, [pc, #132]	; (8007838 <HAL_ADC_ConfigChannel+0x238>)
 80077b4:	4293      	cmp	r3, r2
 80077b6:	d109      	bne.n	80077cc <HAL_ADC_ConfigChannel+0x1cc>
 80077b8:	683b      	ldr	r3, [r7, #0]
 80077ba:	681b      	ldr	r3, [r3, #0]
 80077bc:	2b12      	cmp	r3, #18
 80077be:	d105      	bne.n	80077cc <HAL_ADC_ConfigChannel+0x1cc>
 80077c0:	68fb      	ldr	r3, [r7, #12]
 80077c2:	685b      	ldr	r3, [r3, #4]
 80077c4:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80077c8:	68fb      	ldr	r3, [r7, #12]
 80077ca:	605a      	str	r2, [r3, #4]
 80077cc:	687b      	ldr	r3, [r7, #4]
 80077ce:	681b      	ldr	r3, [r3, #0]
 80077d0:	4a19      	ldr	r2, [pc, #100]	; (8007838 <HAL_ADC_ConfigChannel+0x238>)
 80077d2:	4293      	cmp	r3, r2
 80077d4:	d123      	bne.n	800781e <HAL_ADC_ConfigChannel+0x21e>
 80077d6:	683b      	ldr	r3, [r7, #0]
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	2b10      	cmp	r3, #16
 80077dc:	d003      	beq.n	80077e6 <HAL_ADC_ConfigChannel+0x1e6>
 80077de:	683b      	ldr	r3, [r7, #0]
 80077e0:	681b      	ldr	r3, [r3, #0]
 80077e2:	2b11      	cmp	r3, #17
 80077e4:	d11b      	bne.n	800781e <HAL_ADC_ConfigChannel+0x21e>
 80077e6:	68fb      	ldr	r3, [r7, #12]
 80077e8:	685b      	ldr	r3, [r3, #4]
 80077ea:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80077ee:	68fb      	ldr	r3, [r7, #12]
 80077f0:	605a      	str	r2, [r3, #4]
 80077f2:	683b      	ldr	r3, [r7, #0]
 80077f4:	681b      	ldr	r3, [r3, #0]
 80077f6:	2b10      	cmp	r3, #16
 80077f8:	d111      	bne.n	800781e <HAL_ADC_ConfigChannel+0x21e>
 80077fa:	4b10      	ldr	r3, [pc, #64]	; (800783c <HAL_ADC_ConfigChannel+0x23c>)
 80077fc:	681b      	ldr	r3, [r3, #0]
 80077fe:	4a10      	ldr	r2, [pc, #64]	; (8007840 <HAL_ADC_ConfigChannel+0x240>)
 8007800:	fba2 2303 	umull	r2, r3, r2, r3
 8007804:	0c9a      	lsrs	r2, r3, #18
 8007806:	4613      	mov	r3, r2
 8007808:	009b      	lsls	r3, r3, #2
 800780a:	4413      	add	r3, r2
 800780c:	005b      	lsls	r3, r3, #1
 800780e:	60bb      	str	r3, [r7, #8]
 8007810:	e002      	b.n	8007818 <HAL_ADC_ConfigChannel+0x218>
 8007812:	68bb      	ldr	r3, [r7, #8]
 8007814:	3b01      	subs	r3, #1
 8007816:	60bb      	str	r3, [r7, #8]
 8007818:	68bb      	ldr	r3, [r7, #8]
 800781a:	2b00      	cmp	r3, #0
 800781c:	d1f9      	bne.n	8007812 <HAL_ADC_ConfigChannel+0x212>
 800781e:	687b      	ldr	r3, [r7, #4]
 8007820:	2200      	movs	r2, #0
 8007822:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007826:	2300      	movs	r3, #0
 8007828:	4618      	mov	r0, r3
 800782a:	3714      	adds	r7, #20
 800782c:	46bd      	mov	sp, r7
 800782e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007832:	4770      	bx	lr
 8007834:	40012300 	.word	0x40012300
 8007838:	40012000 	.word	0x40012000
 800783c:	20000024 	.word	0x20000024
 8007840:	431bde83 	.word	0x431bde83

08007844 <ADC_Init>:
 8007844:	b480      	push	{r7}
 8007846:	b085      	sub	sp, #20
 8007848:	af00      	add	r7, sp, #0
 800784a:	6078      	str	r0, [r7, #4]
 800784c:	4b79      	ldr	r3, [pc, #484]	; (8007a34 <ADC_Init+0x1f0>)
 800784e:	60fb      	str	r3, [r7, #12]
 8007850:	68fb      	ldr	r3, [r7, #12]
 8007852:	685b      	ldr	r3, [r3, #4]
 8007854:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8007858:	68fb      	ldr	r3, [r7, #12]
 800785a:	605a      	str	r2, [r3, #4]
 800785c:	68fb      	ldr	r3, [r7, #12]
 800785e:	685a      	ldr	r2, [r3, #4]
 8007860:	687b      	ldr	r3, [r7, #4]
 8007862:	685b      	ldr	r3, [r3, #4]
 8007864:	431a      	orrs	r2, r3
 8007866:	68fb      	ldr	r3, [r7, #12]
 8007868:	605a      	str	r2, [r3, #4]
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	681b      	ldr	r3, [r3, #0]
 800786e:	685a      	ldr	r2, [r3, #4]
 8007870:	687b      	ldr	r3, [r7, #4]
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007878:	605a      	str	r2, [r3, #4]
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	681b      	ldr	r3, [r3, #0]
 800787e:	6859      	ldr	r1, [r3, #4]
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	691b      	ldr	r3, [r3, #16]
 8007884:	021a      	lsls	r2, r3, #8
 8007886:	687b      	ldr	r3, [r7, #4]
 8007888:	681b      	ldr	r3, [r3, #0]
 800788a:	430a      	orrs	r2, r1
 800788c:	605a      	str	r2, [r3, #4]
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	681b      	ldr	r3, [r3, #0]
 8007892:	685a      	ldr	r2, [r3, #4]
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	681b      	ldr	r3, [r3, #0]
 8007898:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800789c:	605a      	str	r2, [r3, #4]
 800789e:	687b      	ldr	r3, [r7, #4]
 80078a0:	681b      	ldr	r3, [r3, #0]
 80078a2:	6859      	ldr	r1, [r3, #4]
 80078a4:	687b      	ldr	r3, [r7, #4]
 80078a6:	689a      	ldr	r2, [r3, #8]
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	430a      	orrs	r2, r1
 80078ae:	605a      	str	r2, [r3, #4]
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	681b      	ldr	r3, [r3, #0]
 80078b4:	689a      	ldr	r2, [r3, #8]
 80078b6:	687b      	ldr	r3, [r7, #4]
 80078b8:	681b      	ldr	r3, [r3, #0]
 80078ba:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80078be:	609a      	str	r2, [r3, #8]
 80078c0:	687b      	ldr	r3, [r7, #4]
 80078c2:	681b      	ldr	r3, [r3, #0]
 80078c4:	6899      	ldr	r1, [r3, #8]
 80078c6:	687b      	ldr	r3, [r7, #4]
 80078c8:	68da      	ldr	r2, [r3, #12]
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	681b      	ldr	r3, [r3, #0]
 80078ce:	430a      	orrs	r2, r1
 80078d0:	609a      	str	r2, [r3, #8]
 80078d2:	687b      	ldr	r3, [r7, #4]
 80078d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80078d6:	4a58      	ldr	r2, [pc, #352]	; (8007a38 <ADC_Init+0x1f4>)
 80078d8:	4293      	cmp	r3, r2
 80078da:	d022      	beq.n	8007922 <ADC_Init+0xde>
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	689a      	ldr	r2, [r3, #8]
 80078e2:	687b      	ldr	r3, [r7, #4]
 80078e4:	681b      	ldr	r3, [r3, #0]
 80078e6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80078ea:	609a      	str	r2, [r3, #8]
 80078ec:	687b      	ldr	r3, [r7, #4]
 80078ee:	681b      	ldr	r3, [r3, #0]
 80078f0:	6899      	ldr	r1, [r3, #8]
 80078f2:	687b      	ldr	r3, [r7, #4]
 80078f4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	681b      	ldr	r3, [r3, #0]
 80078fa:	430a      	orrs	r2, r1
 80078fc:	609a      	str	r2, [r3, #8]
 80078fe:	687b      	ldr	r3, [r7, #4]
 8007900:	681b      	ldr	r3, [r3, #0]
 8007902:	689a      	ldr	r2, [r3, #8]
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	681b      	ldr	r3, [r3, #0]
 8007908:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800790c:	609a      	str	r2, [r3, #8]
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	6899      	ldr	r1, [r3, #8]
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	430a      	orrs	r2, r1
 800791e:	609a      	str	r2, [r3, #8]
 8007920:	e00f      	b.n	8007942 <ADC_Init+0xfe>
 8007922:	687b      	ldr	r3, [r7, #4]
 8007924:	681b      	ldr	r3, [r3, #0]
 8007926:	689a      	ldr	r2, [r3, #8]
 8007928:	687b      	ldr	r3, [r7, #4]
 800792a:	681b      	ldr	r3, [r3, #0]
 800792c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8007930:	609a      	str	r2, [r3, #8]
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	689a      	ldr	r2, [r3, #8]
 8007938:	687b      	ldr	r3, [r7, #4]
 800793a:	681b      	ldr	r3, [r3, #0]
 800793c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8007940:	609a      	str	r2, [r3, #8]
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	689a      	ldr	r2, [r3, #8]
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	681b      	ldr	r3, [r3, #0]
 800794c:	f022 0202 	bic.w	r2, r2, #2
 8007950:	609a      	str	r2, [r3, #8]
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	681b      	ldr	r3, [r3, #0]
 8007956:	6899      	ldr	r1, [r3, #8]
 8007958:	687b      	ldr	r3, [r7, #4]
 800795a:	7e1b      	ldrb	r3, [r3, #24]
 800795c:	005a      	lsls	r2, r3, #1
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	681b      	ldr	r3, [r3, #0]
 8007962:	430a      	orrs	r2, r1
 8007964:	609a      	str	r2, [r3, #8]
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	f893 3020 	ldrb.w	r3, [r3, #32]
 800796c:	2b00      	cmp	r3, #0
 800796e:	d01b      	beq.n	80079a8 <ADC_Init+0x164>
 8007970:	687b      	ldr	r3, [r7, #4]
 8007972:	681b      	ldr	r3, [r3, #0]
 8007974:	685a      	ldr	r2, [r3, #4]
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	681b      	ldr	r3, [r3, #0]
 800797a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800797e:	605a      	str	r2, [r3, #4]
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	685a      	ldr	r2, [r3, #4]
 8007986:	687b      	ldr	r3, [r7, #4]
 8007988:	681b      	ldr	r3, [r3, #0]
 800798a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800798e:	605a      	str	r2, [r3, #4]
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	681b      	ldr	r3, [r3, #0]
 8007994:	6859      	ldr	r1, [r3, #4]
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800799a:	3b01      	subs	r3, #1
 800799c:	035a      	lsls	r2, r3, #13
 800799e:	687b      	ldr	r3, [r7, #4]
 80079a0:	681b      	ldr	r3, [r3, #0]
 80079a2:	430a      	orrs	r2, r1
 80079a4:	605a      	str	r2, [r3, #4]
 80079a6:	e007      	b.n	80079b8 <ADC_Init+0x174>
 80079a8:	687b      	ldr	r3, [r7, #4]
 80079aa:	681b      	ldr	r3, [r3, #0]
 80079ac:	685a      	ldr	r2, [r3, #4]
 80079ae:	687b      	ldr	r3, [r7, #4]
 80079b0:	681b      	ldr	r3, [r3, #0]
 80079b2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80079b6:	605a      	str	r2, [r3, #4]
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	681b      	ldr	r3, [r3, #0]
 80079bc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80079be:	687b      	ldr	r3, [r7, #4]
 80079c0:	681b      	ldr	r3, [r3, #0]
 80079c2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80079c6:	62da      	str	r2, [r3, #44]	; 0x2c
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	681b      	ldr	r3, [r3, #0]
 80079cc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	69db      	ldr	r3, [r3, #28]
 80079d2:	3b01      	subs	r3, #1
 80079d4:	051a      	lsls	r2, r3, #20
 80079d6:	687b      	ldr	r3, [r7, #4]
 80079d8:	681b      	ldr	r3, [r3, #0]
 80079da:	430a      	orrs	r2, r1
 80079dc:	62da      	str	r2, [r3, #44]	; 0x2c
 80079de:	687b      	ldr	r3, [r7, #4]
 80079e0:	681b      	ldr	r3, [r3, #0]
 80079e2:	689a      	ldr	r2, [r3, #8]
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	681b      	ldr	r3, [r3, #0]
 80079e8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80079ec:	609a      	str	r2, [r3, #8]
 80079ee:	687b      	ldr	r3, [r7, #4]
 80079f0:	681b      	ldr	r3, [r3, #0]
 80079f2:	6899      	ldr	r1, [r3, #8]
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80079fa:	025a      	lsls	r2, r3, #9
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	681b      	ldr	r3, [r3, #0]
 8007a00:	430a      	orrs	r2, r1
 8007a02:	609a      	str	r2, [r3, #8]
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	681b      	ldr	r3, [r3, #0]
 8007a08:	689a      	ldr	r2, [r3, #8]
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007a12:	609a      	str	r2, [r3, #8]
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	681b      	ldr	r3, [r3, #0]
 8007a18:	6899      	ldr	r1, [r3, #8]
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	695b      	ldr	r3, [r3, #20]
 8007a1e:	029a      	lsls	r2, r3, #10
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	681b      	ldr	r3, [r3, #0]
 8007a24:	430a      	orrs	r2, r1
 8007a26:	609a      	str	r2, [r3, #8]
 8007a28:	bf00      	nop
 8007a2a:	3714      	adds	r7, #20
 8007a2c:	46bd      	mov	sp, r7
 8007a2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a32:	4770      	bx	lr
 8007a34:	40012300 	.word	0x40012300
 8007a38:	0f000001 	.word	0x0f000001

08007a3c <ADC_DMAConvCplt>:
 8007a3c:	b580      	push	{r7, lr}
 8007a3e:	b084      	sub	sp, #16
 8007a40:	af00      	add	r7, sp, #0
 8007a42:	6078      	str	r0, [r7, #4]
 8007a44:	687b      	ldr	r3, [r7, #4]
 8007a46:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007a48:	60fb      	str	r3, [r7, #12]
 8007a4a:	68fb      	ldr	r3, [r7, #12]
 8007a4c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a4e:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8007a52:	2b00      	cmp	r3, #0
 8007a54:	d13c      	bne.n	8007ad0 <ADC_DMAConvCplt+0x94>
 8007a56:	68fb      	ldr	r3, [r7, #12]
 8007a58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007a5a:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8007a5e:	68fb      	ldr	r3, [r7, #12]
 8007a60:	641a      	str	r2, [r3, #64]	; 0x40
 8007a62:	68fb      	ldr	r3, [r7, #12]
 8007a64:	681b      	ldr	r3, [r3, #0]
 8007a66:	689b      	ldr	r3, [r3, #8]
 8007a68:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8007a6c:	2b00      	cmp	r3, #0
 8007a6e:	d12b      	bne.n	8007ac8 <ADC_DMAConvCplt+0x8c>
 8007a70:	68fb      	ldr	r3, [r7, #12]
 8007a72:	7e1b      	ldrb	r3, [r3, #24]
 8007a74:	2b00      	cmp	r3, #0
 8007a76:	d127      	bne.n	8007ac8 <ADC_DMAConvCplt+0x8c>
 8007a78:	68fb      	ldr	r3, [r7, #12]
 8007a7a:	681b      	ldr	r3, [r3, #0]
 8007a7c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007a7e:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8007a82:	2b00      	cmp	r3, #0
 8007a84:	d006      	beq.n	8007a94 <ADC_DMAConvCplt+0x58>
 8007a86:	68fb      	ldr	r3, [r7, #12]
 8007a88:	681b      	ldr	r3, [r3, #0]
 8007a8a:	689b      	ldr	r3, [r3, #8]
 8007a8c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8007a90:	2b00      	cmp	r3, #0
 8007a92:	d119      	bne.n	8007ac8 <ADC_DMAConvCplt+0x8c>
 8007a94:	68fb      	ldr	r3, [r7, #12]
 8007a96:	681b      	ldr	r3, [r3, #0]
 8007a98:	685a      	ldr	r2, [r3, #4]
 8007a9a:	68fb      	ldr	r3, [r7, #12]
 8007a9c:	681b      	ldr	r3, [r3, #0]
 8007a9e:	f022 0220 	bic.w	r2, r2, #32
 8007aa2:	605a      	str	r2, [r3, #4]
 8007aa4:	68fb      	ldr	r3, [r7, #12]
 8007aa6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007aa8:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8007aac:	68fb      	ldr	r3, [r7, #12]
 8007aae:	641a      	str	r2, [r3, #64]	; 0x40
 8007ab0:	68fb      	ldr	r3, [r7, #12]
 8007ab2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ab4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007ab8:	2b00      	cmp	r3, #0
 8007aba:	d105      	bne.n	8007ac8 <ADC_DMAConvCplt+0x8c>
 8007abc:	68fb      	ldr	r3, [r7, #12]
 8007abe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ac0:	f043 0201 	orr.w	r2, r3, #1
 8007ac4:	68fb      	ldr	r3, [r7, #12]
 8007ac6:	641a      	str	r2, [r3, #64]	; 0x40
 8007ac8:	68f8      	ldr	r0, [r7, #12]
 8007aca:	f7fe fe39 	bl	8006740 <HAL_ADC_ConvCpltCallback>
 8007ace:	e00e      	b.n	8007aee <ADC_DMAConvCplt+0xb2>
 8007ad0:	68fb      	ldr	r3, [r7, #12]
 8007ad2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007ad4:	f003 0310 	and.w	r3, r3, #16
 8007ad8:	2b00      	cmp	r3, #0
 8007ada:	d003      	beq.n	8007ae4 <ADC_DMAConvCplt+0xa8>
 8007adc:	68f8      	ldr	r0, [r7, #12]
 8007ade:	f7ff fd85 	bl	80075ec <HAL_ADC_ErrorCallback>
 8007ae2:	e004      	b.n	8007aee <ADC_DMAConvCplt+0xb2>
 8007ae4:	68fb      	ldr	r3, [r7, #12]
 8007ae6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007ae8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007aea:	6878      	ldr	r0, [r7, #4]
 8007aec:	4798      	blx	r3
 8007aee:	bf00      	nop
 8007af0:	3710      	adds	r7, #16
 8007af2:	46bd      	mov	sp, r7
 8007af4:	bd80      	pop	{r7, pc}

08007af6 <ADC_DMAHalfConvCplt>:
 8007af6:	b580      	push	{r7, lr}
 8007af8:	b084      	sub	sp, #16
 8007afa:	af00      	add	r7, sp, #0
 8007afc:	6078      	str	r0, [r7, #4]
 8007afe:	687b      	ldr	r3, [r7, #4]
 8007b00:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007b02:	60fb      	str	r3, [r7, #12]
 8007b04:	68f8      	ldr	r0, [r7, #12]
 8007b06:	f7ff fd67 	bl	80075d8 <HAL_ADC_ConvHalfCpltCallback>
 8007b0a:	bf00      	nop
 8007b0c:	3710      	adds	r7, #16
 8007b0e:	46bd      	mov	sp, r7
 8007b10:	bd80      	pop	{r7, pc}

08007b12 <ADC_DMAError>:
 8007b12:	b580      	push	{r7, lr}
 8007b14:	b084      	sub	sp, #16
 8007b16:	af00      	add	r7, sp, #0
 8007b18:	6078      	str	r0, [r7, #4]
 8007b1a:	687b      	ldr	r3, [r7, #4]
 8007b1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007b1e:	60fb      	str	r3, [r7, #12]
 8007b20:	68fb      	ldr	r3, [r7, #12]
 8007b22:	2240      	movs	r2, #64	; 0x40
 8007b24:	641a      	str	r2, [r3, #64]	; 0x40
 8007b26:	68fb      	ldr	r3, [r7, #12]
 8007b28:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007b2a:	f043 0204 	orr.w	r2, r3, #4
 8007b2e:	68fb      	ldr	r3, [r7, #12]
 8007b30:	645a      	str	r2, [r3, #68]	; 0x44
 8007b32:	68f8      	ldr	r0, [r7, #12]
 8007b34:	f7ff fd5a 	bl	80075ec <HAL_ADC_ErrorCallback>
 8007b38:	bf00      	nop
 8007b3a:	3710      	adds	r7, #16
 8007b3c:	46bd      	mov	sp, r7
 8007b3e:	bd80      	pop	{r7, pc}

08007b40 <HAL_CAN_Init>:
 8007b40:	b580      	push	{r7, lr}
 8007b42:	b084      	sub	sp, #16
 8007b44:	af00      	add	r7, sp, #0
 8007b46:	6078      	str	r0, [r7, #4]
 8007b48:	687b      	ldr	r3, [r7, #4]
 8007b4a:	2b00      	cmp	r3, #0
 8007b4c:	d101      	bne.n	8007b52 <HAL_CAN_Init+0x12>
 8007b4e:	2301      	movs	r3, #1
 8007b50:	e0ed      	b.n	8007d2e <HAL_CAN_Init+0x1ee>
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007b58:	b2db      	uxtb	r3, r3
 8007b5a:	2b00      	cmp	r3, #0
 8007b5c:	d102      	bne.n	8007b64 <HAL_CAN_Init+0x24>
 8007b5e:	6878      	ldr	r0, [r7, #4]
 8007b60:	f7ff f8ea 	bl	8006d38 <HAL_CAN_MspInit>
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	681b      	ldr	r3, [r3, #0]
 8007b68:	681a      	ldr	r2, [r3, #0]
 8007b6a:	687b      	ldr	r3, [r7, #4]
 8007b6c:	681b      	ldr	r3, [r3, #0]
 8007b6e:	f042 0201 	orr.w	r2, r2, #1
 8007b72:	601a      	str	r2, [r3, #0]
 8007b74:	f7ff fbac 	bl	80072d0 <HAL_GetTick>
 8007b78:	60f8      	str	r0, [r7, #12]
 8007b7a:	e012      	b.n	8007ba2 <HAL_CAN_Init+0x62>
 8007b7c:	f7ff fba8 	bl	80072d0 <HAL_GetTick>
 8007b80:	4602      	mov	r2, r0
 8007b82:	68fb      	ldr	r3, [r7, #12]
 8007b84:	1ad3      	subs	r3, r2, r3
 8007b86:	2b0a      	cmp	r3, #10
 8007b88:	d90b      	bls.n	8007ba2 <HAL_CAN_Init+0x62>
 8007b8a:	687b      	ldr	r3, [r7, #4]
 8007b8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007b8e:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8007b92:	687b      	ldr	r3, [r7, #4]
 8007b94:	625a      	str	r2, [r3, #36]	; 0x24
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	2205      	movs	r2, #5
 8007b9a:	f883 2020 	strb.w	r2, [r3, #32]
 8007b9e:	2301      	movs	r3, #1
 8007ba0:	e0c5      	b.n	8007d2e <HAL_CAN_Init+0x1ee>
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	685b      	ldr	r3, [r3, #4]
 8007ba8:	f003 0301 	and.w	r3, r3, #1
 8007bac:	2b00      	cmp	r3, #0
 8007bae:	d0e5      	beq.n	8007b7c <HAL_CAN_Init+0x3c>
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	681b      	ldr	r3, [r3, #0]
 8007bb4:	681a      	ldr	r2, [r3, #0]
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	681b      	ldr	r3, [r3, #0]
 8007bba:	f022 0202 	bic.w	r2, r2, #2
 8007bbe:	601a      	str	r2, [r3, #0]
 8007bc0:	f7ff fb86 	bl	80072d0 <HAL_GetTick>
 8007bc4:	60f8      	str	r0, [r7, #12]
 8007bc6:	e012      	b.n	8007bee <HAL_CAN_Init+0xae>
 8007bc8:	f7ff fb82 	bl	80072d0 <HAL_GetTick>
 8007bcc:	4602      	mov	r2, r0
 8007bce:	68fb      	ldr	r3, [r7, #12]
 8007bd0:	1ad3      	subs	r3, r2, r3
 8007bd2:	2b0a      	cmp	r3, #10
 8007bd4:	d90b      	bls.n	8007bee <HAL_CAN_Init+0xae>
 8007bd6:	687b      	ldr	r3, [r7, #4]
 8007bd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007bda:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	625a      	str	r2, [r3, #36]	; 0x24
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	2205      	movs	r2, #5
 8007be6:	f883 2020 	strb.w	r2, [r3, #32]
 8007bea:	2301      	movs	r3, #1
 8007bec:	e09f      	b.n	8007d2e <HAL_CAN_Init+0x1ee>
 8007bee:	687b      	ldr	r3, [r7, #4]
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	685b      	ldr	r3, [r3, #4]
 8007bf4:	f003 0302 	and.w	r3, r3, #2
 8007bf8:	2b00      	cmp	r3, #0
 8007bfa:	d1e5      	bne.n	8007bc8 <HAL_CAN_Init+0x88>
 8007bfc:	687b      	ldr	r3, [r7, #4]
 8007bfe:	7e1b      	ldrb	r3, [r3, #24]
 8007c00:	2b01      	cmp	r3, #1
 8007c02:	d108      	bne.n	8007c16 <HAL_CAN_Init+0xd6>
 8007c04:	687b      	ldr	r3, [r7, #4]
 8007c06:	681b      	ldr	r3, [r3, #0]
 8007c08:	681a      	ldr	r2, [r3, #0]
 8007c0a:	687b      	ldr	r3, [r7, #4]
 8007c0c:	681b      	ldr	r3, [r3, #0]
 8007c0e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007c12:	601a      	str	r2, [r3, #0]
 8007c14:	e007      	b.n	8007c26 <HAL_CAN_Init+0xe6>
 8007c16:	687b      	ldr	r3, [r7, #4]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	681a      	ldr	r2, [r3, #0]
 8007c1c:	687b      	ldr	r3, [r7, #4]
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8007c24:	601a      	str	r2, [r3, #0]
 8007c26:	687b      	ldr	r3, [r7, #4]
 8007c28:	7e5b      	ldrb	r3, [r3, #25]
 8007c2a:	2b01      	cmp	r3, #1
 8007c2c:	d108      	bne.n	8007c40 <HAL_CAN_Init+0x100>
 8007c2e:	687b      	ldr	r3, [r7, #4]
 8007c30:	681b      	ldr	r3, [r3, #0]
 8007c32:	681a      	ldr	r2, [r3, #0]
 8007c34:	687b      	ldr	r3, [r7, #4]
 8007c36:	681b      	ldr	r3, [r3, #0]
 8007c38:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007c3c:	601a      	str	r2, [r3, #0]
 8007c3e:	e007      	b.n	8007c50 <HAL_CAN_Init+0x110>
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	681b      	ldr	r3, [r3, #0]
 8007c44:	681a      	ldr	r2, [r3, #0]
 8007c46:	687b      	ldr	r3, [r7, #4]
 8007c48:	681b      	ldr	r3, [r3, #0]
 8007c4a:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007c4e:	601a      	str	r2, [r3, #0]
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	7e9b      	ldrb	r3, [r3, #26]
 8007c54:	2b01      	cmp	r3, #1
 8007c56:	d108      	bne.n	8007c6a <HAL_CAN_Init+0x12a>
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	681a      	ldr	r2, [r3, #0]
 8007c5e:	687b      	ldr	r3, [r7, #4]
 8007c60:	681b      	ldr	r3, [r3, #0]
 8007c62:	f042 0220 	orr.w	r2, r2, #32
 8007c66:	601a      	str	r2, [r3, #0]
 8007c68:	e007      	b.n	8007c7a <HAL_CAN_Init+0x13a>
 8007c6a:	687b      	ldr	r3, [r7, #4]
 8007c6c:	681b      	ldr	r3, [r3, #0]
 8007c6e:	681a      	ldr	r2, [r3, #0]
 8007c70:	687b      	ldr	r3, [r7, #4]
 8007c72:	681b      	ldr	r3, [r3, #0]
 8007c74:	f022 0220 	bic.w	r2, r2, #32
 8007c78:	601a      	str	r2, [r3, #0]
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	7edb      	ldrb	r3, [r3, #27]
 8007c7e:	2b01      	cmp	r3, #1
 8007c80:	d108      	bne.n	8007c94 <HAL_CAN_Init+0x154>
 8007c82:	687b      	ldr	r3, [r7, #4]
 8007c84:	681b      	ldr	r3, [r3, #0]
 8007c86:	681a      	ldr	r2, [r3, #0]
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	681b      	ldr	r3, [r3, #0]
 8007c8c:	f022 0210 	bic.w	r2, r2, #16
 8007c90:	601a      	str	r2, [r3, #0]
 8007c92:	e007      	b.n	8007ca4 <HAL_CAN_Init+0x164>
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	681b      	ldr	r3, [r3, #0]
 8007c98:	681a      	ldr	r2, [r3, #0]
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	681b      	ldr	r3, [r3, #0]
 8007c9e:	f042 0210 	orr.w	r2, r2, #16
 8007ca2:	601a      	str	r2, [r3, #0]
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	7f1b      	ldrb	r3, [r3, #28]
 8007ca8:	2b01      	cmp	r3, #1
 8007caa:	d108      	bne.n	8007cbe <HAL_CAN_Init+0x17e>
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	681b      	ldr	r3, [r3, #0]
 8007cb0:	681a      	ldr	r2, [r3, #0]
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	681b      	ldr	r3, [r3, #0]
 8007cb6:	f042 0208 	orr.w	r2, r2, #8
 8007cba:	601a      	str	r2, [r3, #0]
 8007cbc:	e007      	b.n	8007cce <HAL_CAN_Init+0x18e>
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	681a      	ldr	r2, [r3, #0]
 8007cc4:	687b      	ldr	r3, [r7, #4]
 8007cc6:	681b      	ldr	r3, [r3, #0]
 8007cc8:	f022 0208 	bic.w	r2, r2, #8
 8007ccc:	601a      	str	r2, [r3, #0]
 8007cce:	687b      	ldr	r3, [r7, #4]
 8007cd0:	7f5b      	ldrb	r3, [r3, #29]
 8007cd2:	2b01      	cmp	r3, #1
 8007cd4:	d108      	bne.n	8007ce8 <HAL_CAN_Init+0x1a8>
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	681b      	ldr	r3, [r3, #0]
 8007cda:	681a      	ldr	r2, [r3, #0]
 8007cdc:	687b      	ldr	r3, [r7, #4]
 8007cde:	681b      	ldr	r3, [r3, #0]
 8007ce0:	f042 0204 	orr.w	r2, r2, #4
 8007ce4:	601a      	str	r2, [r3, #0]
 8007ce6:	e007      	b.n	8007cf8 <HAL_CAN_Init+0x1b8>
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	681b      	ldr	r3, [r3, #0]
 8007cec:	681a      	ldr	r2, [r3, #0]
 8007cee:	687b      	ldr	r3, [r7, #4]
 8007cf0:	681b      	ldr	r3, [r3, #0]
 8007cf2:	f022 0204 	bic.w	r2, r2, #4
 8007cf6:	601a      	str	r2, [r3, #0]
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	689a      	ldr	r2, [r3, #8]
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	68db      	ldr	r3, [r3, #12]
 8007d00:	431a      	orrs	r2, r3
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	691b      	ldr	r3, [r3, #16]
 8007d06:	431a      	orrs	r2, r3
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	695b      	ldr	r3, [r3, #20]
 8007d0c:	ea42 0103 	orr.w	r1, r2, r3
 8007d10:	687b      	ldr	r3, [r7, #4]
 8007d12:	685b      	ldr	r3, [r3, #4]
 8007d14:	1e5a      	subs	r2, r3, #1
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	681b      	ldr	r3, [r3, #0]
 8007d1a:	430a      	orrs	r2, r1
 8007d1c:	61da      	str	r2, [r3, #28]
 8007d1e:	687b      	ldr	r3, [r7, #4]
 8007d20:	2200      	movs	r2, #0
 8007d22:	625a      	str	r2, [r3, #36]	; 0x24
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	2201      	movs	r2, #1
 8007d28:	f883 2020 	strb.w	r2, [r3, #32]
 8007d2c:	2300      	movs	r3, #0
 8007d2e:	4618      	mov	r0, r3
 8007d30:	3710      	adds	r7, #16
 8007d32:	46bd      	mov	sp, r7
 8007d34:	bd80      	pop	{r7, pc}
	...

08007d38 <HAL_CAN_ConfigFilter>:
 8007d38:	b480      	push	{r7}
 8007d3a:	b087      	sub	sp, #28
 8007d3c:	af00      	add	r7, sp, #0
 8007d3e:	6078      	str	r0, [r7, #4]
 8007d40:	6039      	str	r1, [r7, #0]
 8007d42:	687b      	ldr	r3, [r7, #4]
 8007d44:	681b      	ldr	r3, [r3, #0]
 8007d46:	617b      	str	r3, [r7, #20]
 8007d48:	687b      	ldr	r3, [r7, #4]
 8007d4a:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007d4e:	74fb      	strb	r3, [r7, #19]
 8007d50:	7cfb      	ldrb	r3, [r7, #19]
 8007d52:	2b01      	cmp	r3, #1
 8007d54:	d003      	beq.n	8007d5e <HAL_CAN_ConfigFilter+0x26>
 8007d56:	7cfb      	ldrb	r3, [r7, #19]
 8007d58:	2b02      	cmp	r3, #2
 8007d5a:	f040 80be 	bne.w	8007eda <HAL_CAN_ConfigFilter+0x1a2>
 8007d5e:	4b65      	ldr	r3, [pc, #404]	; (8007ef4 <HAL_CAN_ConfigFilter+0x1bc>)
 8007d60:	617b      	str	r3, [r7, #20]
 8007d62:	697b      	ldr	r3, [r7, #20]
 8007d64:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8007d68:	f043 0201 	orr.w	r2, r3, #1
 8007d6c:	697b      	ldr	r3, [r7, #20]
 8007d6e:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8007d72:	697b      	ldr	r3, [r7, #20]
 8007d74:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8007d78:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
 8007d7c:	697b      	ldr	r3, [r7, #20]
 8007d7e:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8007d82:	697b      	ldr	r3, [r7, #20]
 8007d84:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
 8007d88:	683b      	ldr	r3, [r7, #0]
 8007d8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007d8c:	021b      	lsls	r3, r3, #8
 8007d8e:	431a      	orrs	r2, r3
 8007d90:	697b      	ldr	r3, [r7, #20]
 8007d92:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8007d96:	683b      	ldr	r3, [r7, #0]
 8007d98:	695b      	ldr	r3, [r3, #20]
 8007d9a:	f003 031f 	and.w	r3, r3, #31
 8007d9e:	2201      	movs	r2, #1
 8007da0:	fa02 f303 	lsl.w	r3, r2, r3
 8007da4:	60fb      	str	r3, [r7, #12]
 8007da6:	697b      	ldr	r3, [r7, #20]
 8007da8:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 8007dac:	68fb      	ldr	r3, [r7, #12]
 8007dae:	43db      	mvns	r3, r3
 8007db0:	401a      	ands	r2, r3
 8007db2:	697b      	ldr	r3, [r7, #20]
 8007db4:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 8007db8:	683b      	ldr	r3, [r7, #0]
 8007dba:	69db      	ldr	r3, [r3, #28]
 8007dbc:	2b00      	cmp	r3, #0
 8007dbe:	d123      	bne.n	8007e08 <HAL_CAN_ConfigFilter+0xd0>
 8007dc0:	697b      	ldr	r3, [r7, #20]
 8007dc2:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8007dc6:	68fb      	ldr	r3, [r7, #12]
 8007dc8:	43db      	mvns	r3, r3
 8007dca:	401a      	ands	r2, r3
 8007dcc:	697b      	ldr	r3, [r7, #20]
 8007dce:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8007dd2:	683b      	ldr	r3, [r7, #0]
 8007dd4:	68db      	ldr	r3, [r3, #12]
 8007dd6:	0419      	lsls	r1, r3, #16
 8007dd8:	683b      	ldr	r3, [r7, #0]
 8007dda:	685b      	ldr	r3, [r3, #4]
 8007ddc:	b29b      	uxth	r3, r3
 8007dde:	683a      	ldr	r2, [r7, #0]
 8007de0:	6952      	ldr	r2, [r2, #20]
 8007de2:	4319      	orrs	r1, r3
 8007de4:	697b      	ldr	r3, [r7, #20]
 8007de6:	3248      	adds	r2, #72	; 0x48
 8007de8:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8007dec:	683b      	ldr	r3, [r7, #0]
 8007dee:	689b      	ldr	r3, [r3, #8]
 8007df0:	0419      	lsls	r1, r3, #16
 8007df2:	683b      	ldr	r3, [r7, #0]
 8007df4:	681b      	ldr	r3, [r3, #0]
 8007df6:	b29a      	uxth	r2, r3
 8007df8:	683b      	ldr	r3, [r7, #0]
 8007dfa:	695b      	ldr	r3, [r3, #20]
 8007dfc:	430a      	orrs	r2, r1
 8007dfe:	6979      	ldr	r1, [r7, #20]
 8007e00:	3348      	adds	r3, #72	; 0x48
 8007e02:	00db      	lsls	r3, r3, #3
 8007e04:	440b      	add	r3, r1
 8007e06:	605a      	str	r2, [r3, #4]
 8007e08:	683b      	ldr	r3, [r7, #0]
 8007e0a:	69db      	ldr	r3, [r3, #28]
 8007e0c:	2b01      	cmp	r3, #1
 8007e0e:	d122      	bne.n	8007e56 <HAL_CAN_ConfigFilter+0x11e>
 8007e10:	697b      	ldr	r3, [r7, #20]
 8007e12:	f8d3 220c 	ldr.w	r2, [r3, #524]	; 0x20c
 8007e16:	68fb      	ldr	r3, [r7, #12]
 8007e18:	431a      	orrs	r2, r3
 8007e1a:	697b      	ldr	r3, [r7, #20]
 8007e1c:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 8007e20:	683b      	ldr	r3, [r7, #0]
 8007e22:	681b      	ldr	r3, [r3, #0]
 8007e24:	0419      	lsls	r1, r3, #16
 8007e26:	683b      	ldr	r3, [r7, #0]
 8007e28:	685b      	ldr	r3, [r3, #4]
 8007e2a:	b29b      	uxth	r3, r3
 8007e2c:	683a      	ldr	r2, [r7, #0]
 8007e2e:	6952      	ldr	r2, [r2, #20]
 8007e30:	4319      	orrs	r1, r3
 8007e32:	697b      	ldr	r3, [r7, #20]
 8007e34:	3248      	adds	r2, #72	; 0x48
 8007e36:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8007e3a:	683b      	ldr	r3, [r7, #0]
 8007e3c:	689b      	ldr	r3, [r3, #8]
 8007e3e:	0419      	lsls	r1, r3, #16
 8007e40:	683b      	ldr	r3, [r7, #0]
 8007e42:	68db      	ldr	r3, [r3, #12]
 8007e44:	b29a      	uxth	r2, r3
 8007e46:	683b      	ldr	r3, [r7, #0]
 8007e48:	695b      	ldr	r3, [r3, #20]
 8007e4a:	430a      	orrs	r2, r1
 8007e4c:	6979      	ldr	r1, [r7, #20]
 8007e4e:	3348      	adds	r3, #72	; 0x48
 8007e50:	00db      	lsls	r3, r3, #3
 8007e52:	440b      	add	r3, r1
 8007e54:	605a      	str	r2, [r3, #4]
 8007e56:	683b      	ldr	r3, [r7, #0]
 8007e58:	699b      	ldr	r3, [r3, #24]
 8007e5a:	2b00      	cmp	r3, #0
 8007e5c:	d109      	bne.n	8007e72 <HAL_CAN_ConfigFilter+0x13a>
 8007e5e:	697b      	ldr	r3, [r7, #20]
 8007e60:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8007e64:	68fb      	ldr	r3, [r7, #12]
 8007e66:	43db      	mvns	r3, r3
 8007e68:	401a      	ands	r2, r3
 8007e6a:	697b      	ldr	r3, [r7, #20]
 8007e6c:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8007e70:	e007      	b.n	8007e82 <HAL_CAN_ConfigFilter+0x14a>
 8007e72:	697b      	ldr	r3, [r7, #20]
 8007e74:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 8007e78:	68fb      	ldr	r3, [r7, #12]
 8007e7a:	431a      	orrs	r2, r3
 8007e7c:	697b      	ldr	r3, [r7, #20]
 8007e7e:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 8007e82:	683b      	ldr	r3, [r7, #0]
 8007e84:	691b      	ldr	r3, [r3, #16]
 8007e86:	2b00      	cmp	r3, #0
 8007e88:	d109      	bne.n	8007e9e <HAL_CAN_ConfigFilter+0x166>
 8007e8a:	697b      	ldr	r3, [r7, #20]
 8007e8c:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 8007e90:	68fb      	ldr	r3, [r7, #12]
 8007e92:	43db      	mvns	r3, r3
 8007e94:	401a      	ands	r2, r3
 8007e96:	697b      	ldr	r3, [r7, #20]
 8007e98:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8007e9c:	e007      	b.n	8007eae <HAL_CAN_ConfigFilter+0x176>
 8007e9e:	697b      	ldr	r3, [r7, #20]
 8007ea0:	f8d3 2214 	ldr.w	r2, [r3, #532]	; 0x214
 8007ea4:	68fb      	ldr	r3, [r7, #12]
 8007ea6:	431a      	orrs	r2, r3
 8007ea8:	697b      	ldr	r3, [r7, #20]
 8007eaa:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 8007eae:	683b      	ldr	r3, [r7, #0]
 8007eb0:	6a1b      	ldr	r3, [r3, #32]
 8007eb2:	2b01      	cmp	r3, #1
 8007eb4:	d107      	bne.n	8007ec6 <HAL_CAN_ConfigFilter+0x18e>
 8007eb6:	697b      	ldr	r3, [r7, #20]
 8007eb8:	f8d3 221c 	ldr.w	r2, [r3, #540]	; 0x21c
 8007ebc:	68fb      	ldr	r3, [r7, #12]
 8007ebe:	431a      	orrs	r2, r3
 8007ec0:	697b      	ldr	r3, [r7, #20]
 8007ec2:	f8c3 221c 	str.w	r2, [r3, #540]	; 0x21c
 8007ec6:	697b      	ldr	r3, [r7, #20]
 8007ec8:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
 8007ecc:	f023 0201 	bic.w	r2, r3, #1
 8007ed0:	697b      	ldr	r3, [r7, #20]
 8007ed2:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
 8007ed6:	2300      	movs	r3, #0
 8007ed8:	e006      	b.n	8007ee8 <HAL_CAN_ConfigFilter+0x1b0>
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007ede:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	625a      	str	r2, [r3, #36]	; 0x24
 8007ee6:	2301      	movs	r3, #1
 8007ee8:	4618      	mov	r0, r3
 8007eea:	371c      	adds	r7, #28
 8007eec:	46bd      	mov	sp, r7
 8007eee:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ef2:	4770      	bx	lr
 8007ef4:	40006400 	.word	0x40006400

08007ef8 <HAL_CAN_Start>:
 8007ef8:	b580      	push	{r7, lr}
 8007efa:	b084      	sub	sp, #16
 8007efc:	af00      	add	r7, sp, #0
 8007efe:	6078      	str	r0, [r7, #4]
 8007f00:	687b      	ldr	r3, [r7, #4]
 8007f02:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007f06:	b2db      	uxtb	r3, r3
 8007f08:	2b01      	cmp	r3, #1
 8007f0a:	d12e      	bne.n	8007f6a <HAL_CAN_Start+0x72>
 8007f0c:	687b      	ldr	r3, [r7, #4]
 8007f0e:	2202      	movs	r2, #2
 8007f10:	f883 2020 	strb.w	r2, [r3, #32]
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	681a      	ldr	r2, [r3, #0]
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	681b      	ldr	r3, [r3, #0]
 8007f1e:	f022 0201 	bic.w	r2, r2, #1
 8007f22:	601a      	str	r2, [r3, #0]
 8007f24:	f7ff f9d4 	bl	80072d0 <HAL_GetTick>
 8007f28:	60f8      	str	r0, [r7, #12]
 8007f2a:	e012      	b.n	8007f52 <HAL_CAN_Start+0x5a>
 8007f2c:	f7ff f9d0 	bl	80072d0 <HAL_GetTick>
 8007f30:	4602      	mov	r2, r0
 8007f32:	68fb      	ldr	r3, [r7, #12]
 8007f34:	1ad3      	subs	r3, r2, r3
 8007f36:	2b0a      	cmp	r3, #10
 8007f38:	d90b      	bls.n	8007f52 <HAL_CAN_Start+0x5a>
 8007f3a:	687b      	ldr	r3, [r7, #4]
 8007f3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007f3e:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	625a      	str	r2, [r3, #36]	; 0x24
 8007f46:	687b      	ldr	r3, [r7, #4]
 8007f48:	2205      	movs	r2, #5
 8007f4a:	f883 2020 	strb.w	r2, [r3, #32]
 8007f4e:	2301      	movs	r3, #1
 8007f50:	e012      	b.n	8007f78 <HAL_CAN_Start+0x80>
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	681b      	ldr	r3, [r3, #0]
 8007f56:	685b      	ldr	r3, [r3, #4]
 8007f58:	f003 0301 	and.w	r3, r3, #1
 8007f5c:	2b00      	cmp	r3, #0
 8007f5e:	d1e5      	bne.n	8007f2c <HAL_CAN_Start+0x34>
 8007f60:	687b      	ldr	r3, [r7, #4]
 8007f62:	2200      	movs	r2, #0
 8007f64:	625a      	str	r2, [r3, #36]	; 0x24
 8007f66:	2300      	movs	r3, #0
 8007f68:	e006      	b.n	8007f78 <HAL_CAN_Start+0x80>
 8007f6a:	687b      	ldr	r3, [r7, #4]
 8007f6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007f6e:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	625a      	str	r2, [r3, #36]	; 0x24
 8007f76:	2301      	movs	r3, #1
 8007f78:	4618      	mov	r0, r3
 8007f7a:	3710      	adds	r7, #16
 8007f7c:	46bd      	mov	sp, r7
 8007f7e:	bd80      	pop	{r7, pc}

08007f80 <HAL_CAN_AddTxMessage>:
 8007f80:	b480      	push	{r7}
 8007f82:	b089      	sub	sp, #36	; 0x24
 8007f84:	af00      	add	r7, sp, #0
 8007f86:	60f8      	str	r0, [r7, #12]
 8007f88:	60b9      	str	r1, [r7, #8]
 8007f8a:	607a      	str	r2, [r7, #4]
 8007f8c:	603b      	str	r3, [r7, #0]
 8007f8e:	68fb      	ldr	r3, [r7, #12]
 8007f90:	f893 3020 	ldrb.w	r3, [r3, #32]
 8007f94:	77fb      	strb	r3, [r7, #31]
 8007f96:	68fb      	ldr	r3, [r7, #12]
 8007f98:	681b      	ldr	r3, [r3, #0]
 8007f9a:	689b      	ldr	r3, [r3, #8]
 8007f9c:	61bb      	str	r3, [r7, #24]
 8007f9e:	7ffb      	ldrb	r3, [r7, #31]
 8007fa0:	2b01      	cmp	r3, #1
 8007fa2:	d003      	beq.n	8007fac <HAL_CAN_AddTxMessage+0x2c>
 8007fa4:	7ffb      	ldrb	r3, [r7, #31]
 8007fa6:	2b02      	cmp	r3, #2
 8007fa8:	f040 80b8 	bne.w	800811c <HAL_CAN_AddTxMessage+0x19c>
 8007fac:	69bb      	ldr	r3, [r7, #24]
 8007fae:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8007fb2:	2b00      	cmp	r3, #0
 8007fb4:	d10a      	bne.n	8007fcc <HAL_CAN_AddTxMessage+0x4c>
 8007fb6:	69bb      	ldr	r3, [r7, #24]
 8007fb8:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8007fbc:	2b00      	cmp	r3, #0
 8007fbe:	d105      	bne.n	8007fcc <HAL_CAN_AddTxMessage+0x4c>
 8007fc0:	69bb      	ldr	r3, [r7, #24]
 8007fc2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007fc6:	2b00      	cmp	r3, #0
 8007fc8:	f000 80a0 	beq.w	800810c <HAL_CAN_AddTxMessage+0x18c>
 8007fcc:	69bb      	ldr	r3, [r7, #24]
 8007fce:	0e1b      	lsrs	r3, r3, #24
 8007fd0:	f003 0303 	and.w	r3, r3, #3
 8007fd4:	617b      	str	r3, [r7, #20]
 8007fd6:	697b      	ldr	r3, [r7, #20]
 8007fd8:	2b02      	cmp	r3, #2
 8007fda:	d907      	bls.n	8007fec <HAL_CAN_AddTxMessage+0x6c>
 8007fdc:	68fb      	ldr	r3, [r7, #12]
 8007fde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007fe0:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8007fe4:	68fb      	ldr	r3, [r7, #12]
 8007fe6:	625a      	str	r2, [r3, #36]	; 0x24
 8007fe8:	2301      	movs	r3, #1
 8007fea:	e09e      	b.n	800812a <HAL_CAN_AddTxMessage+0x1aa>
 8007fec:	2201      	movs	r2, #1
 8007fee:	697b      	ldr	r3, [r7, #20]
 8007ff0:	409a      	lsls	r2, r3
 8007ff2:	683b      	ldr	r3, [r7, #0]
 8007ff4:	601a      	str	r2, [r3, #0]
 8007ff6:	68bb      	ldr	r3, [r7, #8]
 8007ff8:	689b      	ldr	r3, [r3, #8]
 8007ffa:	2b00      	cmp	r3, #0
 8007ffc:	d10d      	bne.n	800801a <HAL_CAN_AddTxMessage+0x9a>
 8007ffe:	68bb      	ldr	r3, [r7, #8]
 8008000:	681b      	ldr	r3, [r3, #0]
 8008002:	055a      	lsls	r2, r3, #21
 8008004:	68bb      	ldr	r3, [r7, #8]
 8008006:	68db      	ldr	r3, [r3, #12]
 8008008:	68f9      	ldr	r1, [r7, #12]
 800800a:	6809      	ldr	r1, [r1, #0]
 800800c:	431a      	orrs	r2, r3
 800800e:	697b      	ldr	r3, [r7, #20]
 8008010:	3318      	adds	r3, #24
 8008012:	011b      	lsls	r3, r3, #4
 8008014:	440b      	add	r3, r1
 8008016:	601a      	str	r2, [r3, #0]
 8008018:	e00f      	b.n	800803a <HAL_CAN_AddTxMessage+0xba>
 800801a:	68bb      	ldr	r3, [r7, #8]
 800801c:	685b      	ldr	r3, [r3, #4]
 800801e:	00da      	lsls	r2, r3, #3
 8008020:	68bb      	ldr	r3, [r7, #8]
 8008022:	689b      	ldr	r3, [r3, #8]
 8008024:	431a      	orrs	r2, r3
 8008026:	68bb      	ldr	r3, [r7, #8]
 8008028:	68db      	ldr	r3, [r3, #12]
 800802a:	68f9      	ldr	r1, [r7, #12]
 800802c:	6809      	ldr	r1, [r1, #0]
 800802e:	431a      	orrs	r2, r3
 8008030:	697b      	ldr	r3, [r7, #20]
 8008032:	3318      	adds	r3, #24
 8008034:	011b      	lsls	r3, r3, #4
 8008036:	440b      	add	r3, r1
 8008038:	601a      	str	r2, [r3, #0]
 800803a:	68fb      	ldr	r3, [r7, #12]
 800803c:	6819      	ldr	r1, [r3, #0]
 800803e:	68bb      	ldr	r3, [r7, #8]
 8008040:	691a      	ldr	r2, [r3, #16]
 8008042:	697b      	ldr	r3, [r7, #20]
 8008044:	3318      	adds	r3, #24
 8008046:	011b      	lsls	r3, r3, #4
 8008048:	440b      	add	r3, r1
 800804a:	3304      	adds	r3, #4
 800804c:	601a      	str	r2, [r3, #0]
 800804e:	68bb      	ldr	r3, [r7, #8]
 8008050:	7d1b      	ldrb	r3, [r3, #20]
 8008052:	2b01      	cmp	r3, #1
 8008054:	d111      	bne.n	800807a <HAL_CAN_AddTxMessage+0xfa>
 8008056:	68fb      	ldr	r3, [r7, #12]
 8008058:	681a      	ldr	r2, [r3, #0]
 800805a:	697b      	ldr	r3, [r7, #20]
 800805c:	3318      	adds	r3, #24
 800805e:	011b      	lsls	r3, r3, #4
 8008060:	4413      	add	r3, r2
 8008062:	3304      	adds	r3, #4
 8008064:	681b      	ldr	r3, [r3, #0]
 8008066:	68fa      	ldr	r2, [r7, #12]
 8008068:	6811      	ldr	r1, [r2, #0]
 800806a:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800806e:	697b      	ldr	r3, [r7, #20]
 8008070:	3318      	adds	r3, #24
 8008072:	011b      	lsls	r3, r3, #4
 8008074:	440b      	add	r3, r1
 8008076:	3304      	adds	r3, #4
 8008078:	601a      	str	r2, [r3, #0]
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	3307      	adds	r3, #7
 800807e:	781b      	ldrb	r3, [r3, #0]
 8008080:	061a      	lsls	r2, r3, #24
 8008082:	687b      	ldr	r3, [r7, #4]
 8008084:	3306      	adds	r3, #6
 8008086:	781b      	ldrb	r3, [r3, #0]
 8008088:	041b      	lsls	r3, r3, #16
 800808a:	431a      	orrs	r2, r3
 800808c:	687b      	ldr	r3, [r7, #4]
 800808e:	3305      	adds	r3, #5
 8008090:	781b      	ldrb	r3, [r3, #0]
 8008092:	021b      	lsls	r3, r3, #8
 8008094:	4313      	orrs	r3, r2
 8008096:	687a      	ldr	r2, [r7, #4]
 8008098:	3204      	adds	r2, #4
 800809a:	7812      	ldrb	r2, [r2, #0]
 800809c:	4610      	mov	r0, r2
 800809e:	68fa      	ldr	r2, [r7, #12]
 80080a0:	6811      	ldr	r1, [r2, #0]
 80080a2:	ea43 0200 	orr.w	r2, r3, r0
 80080a6:	697b      	ldr	r3, [r7, #20]
 80080a8:	011b      	lsls	r3, r3, #4
 80080aa:	440b      	add	r3, r1
 80080ac:	f503 73c6 	add.w	r3, r3, #396	; 0x18c
 80080b0:	601a      	str	r2, [r3, #0]
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	3303      	adds	r3, #3
 80080b6:	781b      	ldrb	r3, [r3, #0]
 80080b8:	061a      	lsls	r2, r3, #24
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	3302      	adds	r3, #2
 80080be:	781b      	ldrb	r3, [r3, #0]
 80080c0:	041b      	lsls	r3, r3, #16
 80080c2:	431a      	orrs	r2, r3
 80080c4:	687b      	ldr	r3, [r7, #4]
 80080c6:	3301      	adds	r3, #1
 80080c8:	781b      	ldrb	r3, [r3, #0]
 80080ca:	021b      	lsls	r3, r3, #8
 80080cc:	4313      	orrs	r3, r2
 80080ce:	687a      	ldr	r2, [r7, #4]
 80080d0:	7812      	ldrb	r2, [r2, #0]
 80080d2:	4610      	mov	r0, r2
 80080d4:	68fa      	ldr	r2, [r7, #12]
 80080d6:	6811      	ldr	r1, [r2, #0]
 80080d8:	ea43 0200 	orr.w	r2, r3, r0
 80080dc:	697b      	ldr	r3, [r7, #20]
 80080de:	011b      	lsls	r3, r3, #4
 80080e0:	440b      	add	r3, r1
 80080e2:	f503 73c4 	add.w	r3, r3, #392	; 0x188
 80080e6:	601a      	str	r2, [r3, #0]
 80080e8:	68fb      	ldr	r3, [r7, #12]
 80080ea:	681a      	ldr	r2, [r3, #0]
 80080ec:	697b      	ldr	r3, [r7, #20]
 80080ee:	3318      	adds	r3, #24
 80080f0:	011b      	lsls	r3, r3, #4
 80080f2:	4413      	add	r3, r2
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	68fa      	ldr	r2, [r7, #12]
 80080f8:	6811      	ldr	r1, [r2, #0]
 80080fa:	f043 0201 	orr.w	r2, r3, #1
 80080fe:	697b      	ldr	r3, [r7, #20]
 8008100:	3318      	adds	r3, #24
 8008102:	011b      	lsls	r3, r3, #4
 8008104:	440b      	add	r3, r1
 8008106:	601a      	str	r2, [r3, #0]
 8008108:	2300      	movs	r3, #0
 800810a:	e00e      	b.n	800812a <HAL_CAN_AddTxMessage+0x1aa>
 800810c:	68fb      	ldr	r3, [r7, #12]
 800810e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008110:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8008114:	68fb      	ldr	r3, [r7, #12]
 8008116:	625a      	str	r2, [r3, #36]	; 0x24
 8008118:	2301      	movs	r3, #1
 800811a:	e006      	b.n	800812a <HAL_CAN_AddTxMessage+0x1aa>
 800811c:	68fb      	ldr	r3, [r7, #12]
 800811e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008120:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8008124:	68fb      	ldr	r3, [r7, #12]
 8008126:	625a      	str	r2, [r3, #36]	; 0x24
 8008128:	2301      	movs	r3, #1
 800812a:	4618      	mov	r0, r3
 800812c:	3724      	adds	r7, #36	; 0x24
 800812e:	46bd      	mov	sp, r7
 8008130:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008134:	4770      	bx	lr

08008136 <HAL_CAN_GetRxMessage>:
 8008136:	b480      	push	{r7}
 8008138:	b087      	sub	sp, #28
 800813a:	af00      	add	r7, sp, #0
 800813c:	60f8      	str	r0, [r7, #12]
 800813e:	60b9      	str	r1, [r7, #8]
 8008140:	607a      	str	r2, [r7, #4]
 8008142:	603b      	str	r3, [r7, #0]
 8008144:	68fb      	ldr	r3, [r7, #12]
 8008146:	f893 3020 	ldrb.w	r3, [r3, #32]
 800814a:	75fb      	strb	r3, [r7, #23]
 800814c:	7dfb      	ldrb	r3, [r7, #23]
 800814e:	2b01      	cmp	r3, #1
 8008150:	d003      	beq.n	800815a <HAL_CAN_GetRxMessage+0x24>
 8008152:	7dfb      	ldrb	r3, [r7, #23]
 8008154:	2b02      	cmp	r3, #2
 8008156:	f040 80f3 	bne.w	8008340 <HAL_CAN_GetRxMessage+0x20a>
 800815a:	68bb      	ldr	r3, [r7, #8]
 800815c:	2b00      	cmp	r3, #0
 800815e:	d10e      	bne.n	800817e <HAL_CAN_GetRxMessage+0x48>
 8008160:	68fb      	ldr	r3, [r7, #12]
 8008162:	681b      	ldr	r3, [r3, #0]
 8008164:	68db      	ldr	r3, [r3, #12]
 8008166:	f003 0303 	and.w	r3, r3, #3
 800816a:	2b00      	cmp	r3, #0
 800816c:	d116      	bne.n	800819c <HAL_CAN_GetRxMessage+0x66>
 800816e:	68fb      	ldr	r3, [r7, #12]
 8008170:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008172:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8008176:	68fb      	ldr	r3, [r7, #12]
 8008178:	625a      	str	r2, [r3, #36]	; 0x24
 800817a:	2301      	movs	r3, #1
 800817c:	e0e7      	b.n	800834e <HAL_CAN_GetRxMessage+0x218>
 800817e:	68fb      	ldr	r3, [r7, #12]
 8008180:	681b      	ldr	r3, [r3, #0]
 8008182:	691b      	ldr	r3, [r3, #16]
 8008184:	f003 0303 	and.w	r3, r3, #3
 8008188:	2b00      	cmp	r3, #0
 800818a:	d107      	bne.n	800819c <HAL_CAN_GetRxMessage+0x66>
 800818c:	68fb      	ldr	r3, [r7, #12]
 800818e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008190:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8008194:	68fb      	ldr	r3, [r7, #12]
 8008196:	625a      	str	r2, [r3, #36]	; 0x24
 8008198:	2301      	movs	r3, #1
 800819a:	e0d8      	b.n	800834e <HAL_CAN_GetRxMessage+0x218>
 800819c:	68fb      	ldr	r3, [r7, #12]
 800819e:	681a      	ldr	r2, [r3, #0]
 80081a0:	68bb      	ldr	r3, [r7, #8]
 80081a2:	331b      	adds	r3, #27
 80081a4:	011b      	lsls	r3, r3, #4
 80081a6:	4413      	add	r3, r2
 80081a8:	681b      	ldr	r3, [r3, #0]
 80081aa:	f003 0204 	and.w	r2, r3, #4
 80081ae:	687b      	ldr	r3, [r7, #4]
 80081b0:	609a      	str	r2, [r3, #8]
 80081b2:	687b      	ldr	r3, [r7, #4]
 80081b4:	689b      	ldr	r3, [r3, #8]
 80081b6:	2b00      	cmp	r3, #0
 80081b8:	d10c      	bne.n	80081d4 <HAL_CAN_GetRxMessage+0x9e>
 80081ba:	68fb      	ldr	r3, [r7, #12]
 80081bc:	681a      	ldr	r2, [r3, #0]
 80081be:	68bb      	ldr	r3, [r7, #8]
 80081c0:	331b      	adds	r3, #27
 80081c2:	011b      	lsls	r3, r3, #4
 80081c4:	4413      	add	r3, r2
 80081c6:	681b      	ldr	r3, [r3, #0]
 80081c8:	0d5b      	lsrs	r3, r3, #21
 80081ca:	f3c3 020a 	ubfx	r2, r3, #0, #11
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	601a      	str	r2, [r3, #0]
 80081d2:	e00b      	b.n	80081ec <HAL_CAN_GetRxMessage+0xb6>
 80081d4:	68fb      	ldr	r3, [r7, #12]
 80081d6:	681a      	ldr	r2, [r3, #0]
 80081d8:	68bb      	ldr	r3, [r7, #8]
 80081da:	331b      	adds	r3, #27
 80081dc:	011b      	lsls	r3, r3, #4
 80081de:	4413      	add	r3, r2
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	08db      	lsrs	r3, r3, #3
 80081e4:	f023 4260 	bic.w	r2, r3, #3758096384	; 0xe0000000
 80081e8:	687b      	ldr	r3, [r7, #4]
 80081ea:	605a      	str	r2, [r3, #4]
 80081ec:	68fb      	ldr	r3, [r7, #12]
 80081ee:	681a      	ldr	r2, [r3, #0]
 80081f0:	68bb      	ldr	r3, [r7, #8]
 80081f2:	331b      	adds	r3, #27
 80081f4:	011b      	lsls	r3, r3, #4
 80081f6:	4413      	add	r3, r2
 80081f8:	681b      	ldr	r3, [r3, #0]
 80081fa:	f003 0202 	and.w	r2, r3, #2
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	60da      	str	r2, [r3, #12]
 8008202:	68fb      	ldr	r3, [r7, #12]
 8008204:	681a      	ldr	r2, [r3, #0]
 8008206:	68bb      	ldr	r3, [r7, #8]
 8008208:	331b      	adds	r3, #27
 800820a:	011b      	lsls	r3, r3, #4
 800820c:	4413      	add	r3, r2
 800820e:	3304      	adds	r3, #4
 8008210:	681b      	ldr	r3, [r3, #0]
 8008212:	f003 020f 	and.w	r2, r3, #15
 8008216:	687b      	ldr	r3, [r7, #4]
 8008218:	611a      	str	r2, [r3, #16]
 800821a:	68fb      	ldr	r3, [r7, #12]
 800821c:	681a      	ldr	r2, [r3, #0]
 800821e:	68bb      	ldr	r3, [r7, #8]
 8008220:	331b      	adds	r3, #27
 8008222:	011b      	lsls	r3, r3, #4
 8008224:	4413      	add	r3, r2
 8008226:	3304      	adds	r3, #4
 8008228:	681b      	ldr	r3, [r3, #0]
 800822a:	0a1b      	lsrs	r3, r3, #8
 800822c:	b2da      	uxtb	r2, r3
 800822e:	687b      	ldr	r3, [r7, #4]
 8008230:	619a      	str	r2, [r3, #24]
 8008232:	68fb      	ldr	r3, [r7, #12]
 8008234:	681a      	ldr	r2, [r3, #0]
 8008236:	68bb      	ldr	r3, [r7, #8]
 8008238:	331b      	adds	r3, #27
 800823a:	011b      	lsls	r3, r3, #4
 800823c:	4413      	add	r3, r2
 800823e:	3304      	adds	r3, #4
 8008240:	681b      	ldr	r3, [r3, #0]
 8008242:	0c1b      	lsrs	r3, r3, #16
 8008244:	b29a      	uxth	r2, r3
 8008246:	687b      	ldr	r3, [r7, #4]
 8008248:	615a      	str	r2, [r3, #20]
 800824a:	68fb      	ldr	r3, [r7, #12]
 800824c:	681a      	ldr	r2, [r3, #0]
 800824e:	68bb      	ldr	r3, [r7, #8]
 8008250:	011b      	lsls	r3, r3, #4
 8008252:	4413      	add	r3, r2
 8008254:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8008258:	681b      	ldr	r3, [r3, #0]
 800825a:	b2da      	uxtb	r2, r3
 800825c:	683b      	ldr	r3, [r7, #0]
 800825e:	701a      	strb	r2, [r3, #0]
 8008260:	68fb      	ldr	r3, [r7, #12]
 8008262:	681a      	ldr	r2, [r3, #0]
 8008264:	68bb      	ldr	r3, [r7, #8]
 8008266:	011b      	lsls	r3, r3, #4
 8008268:	4413      	add	r3, r2
 800826a:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 800826e:	681b      	ldr	r3, [r3, #0]
 8008270:	0a1a      	lsrs	r2, r3, #8
 8008272:	683b      	ldr	r3, [r7, #0]
 8008274:	3301      	adds	r3, #1
 8008276:	b2d2      	uxtb	r2, r2
 8008278:	701a      	strb	r2, [r3, #0]
 800827a:	68fb      	ldr	r3, [r7, #12]
 800827c:	681a      	ldr	r2, [r3, #0]
 800827e:	68bb      	ldr	r3, [r7, #8]
 8008280:	011b      	lsls	r3, r3, #4
 8008282:	4413      	add	r3, r2
 8008284:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 8008288:	681b      	ldr	r3, [r3, #0]
 800828a:	0c1a      	lsrs	r2, r3, #16
 800828c:	683b      	ldr	r3, [r7, #0]
 800828e:	3302      	adds	r3, #2
 8008290:	b2d2      	uxtb	r2, r2
 8008292:	701a      	strb	r2, [r3, #0]
 8008294:	68fb      	ldr	r3, [r7, #12]
 8008296:	681a      	ldr	r2, [r3, #0]
 8008298:	68bb      	ldr	r3, [r7, #8]
 800829a:	011b      	lsls	r3, r3, #4
 800829c:	4413      	add	r3, r2
 800829e:	f503 73dc 	add.w	r3, r3, #440	; 0x1b8
 80082a2:	681b      	ldr	r3, [r3, #0]
 80082a4:	0e1a      	lsrs	r2, r3, #24
 80082a6:	683b      	ldr	r3, [r7, #0]
 80082a8:	3303      	adds	r3, #3
 80082aa:	b2d2      	uxtb	r2, r2
 80082ac:	701a      	strb	r2, [r3, #0]
 80082ae:	68fb      	ldr	r3, [r7, #12]
 80082b0:	681a      	ldr	r2, [r3, #0]
 80082b2:	68bb      	ldr	r3, [r7, #8]
 80082b4:	011b      	lsls	r3, r3, #4
 80082b6:	4413      	add	r3, r2
 80082b8:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80082bc:	681a      	ldr	r2, [r3, #0]
 80082be:	683b      	ldr	r3, [r7, #0]
 80082c0:	3304      	adds	r3, #4
 80082c2:	b2d2      	uxtb	r2, r2
 80082c4:	701a      	strb	r2, [r3, #0]
 80082c6:	68fb      	ldr	r3, [r7, #12]
 80082c8:	681a      	ldr	r2, [r3, #0]
 80082ca:	68bb      	ldr	r3, [r7, #8]
 80082cc:	011b      	lsls	r3, r3, #4
 80082ce:	4413      	add	r3, r2
 80082d0:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80082d4:	681b      	ldr	r3, [r3, #0]
 80082d6:	0a1a      	lsrs	r2, r3, #8
 80082d8:	683b      	ldr	r3, [r7, #0]
 80082da:	3305      	adds	r3, #5
 80082dc:	b2d2      	uxtb	r2, r2
 80082de:	701a      	strb	r2, [r3, #0]
 80082e0:	68fb      	ldr	r3, [r7, #12]
 80082e2:	681a      	ldr	r2, [r3, #0]
 80082e4:	68bb      	ldr	r3, [r7, #8]
 80082e6:	011b      	lsls	r3, r3, #4
 80082e8:	4413      	add	r3, r2
 80082ea:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 80082ee:	681b      	ldr	r3, [r3, #0]
 80082f0:	0c1a      	lsrs	r2, r3, #16
 80082f2:	683b      	ldr	r3, [r7, #0]
 80082f4:	3306      	adds	r3, #6
 80082f6:	b2d2      	uxtb	r2, r2
 80082f8:	701a      	strb	r2, [r3, #0]
 80082fa:	68fb      	ldr	r3, [r7, #12]
 80082fc:	681a      	ldr	r2, [r3, #0]
 80082fe:	68bb      	ldr	r3, [r7, #8]
 8008300:	011b      	lsls	r3, r3, #4
 8008302:	4413      	add	r3, r2
 8008304:	f503 73de 	add.w	r3, r3, #444	; 0x1bc
 8008308:	681b      	ldr	r3, [r3, #0]
 800830a:	0e1a      	lsrs	r2, r3, #24
 800830c:	683b      	ldr	r3, [r7, #0]
 800830e:	3307      	adds	r3, #7
 8008310:	b2d2      	uxtb	r2, r2
 8008312:	701a      	strb	r2, [r3, #0]
 8008314:	68bb      	ldr	r3, [r7, #8]
 8008316:	2b00      	cmp	r3, #0
 8008318:	d108      	bne.n	800832c <HAL_CAN_GetRxMessage+0x1f6>
 800831a:	68fb      	ldr	r3, [r7, #12]
 800831c:	681b      	ldr	r3, [r3, #0]
 800831e:	68da      	ldr	r2, [r3, #12]
 8008320:	68fb      	ldr	r3, [r7, #12]
 8008322:	681b      	ldr	r3, [r3, #0]
 8008324:	f042 0220 	orr.w	r2, r2, #32
 8008328:	60da      	str	r2, [r3, #12]
 800832a:	e007      	b.n	800833c <HAL_CAN_GetRxMessage+0x206>
 800832c:	68fb      	ldr	r3, [r7, #12]
 800832e:	681b      	ldr	r3, [r3, #0]
 8008330:	691a      	ldr	r2, [r3, #16]
 8008332:	68fb      	ldr	r3, [r7, #12]
 8008334:	681b      	ldr	r3, [r3, #0]
 8008336:	f042 0220 	orr.w	r2, r2, #32
 800833a:	611a      	str	r2, [r3, #16]
 800833c:	2300      	movs	r3, #0
 800833e:	e006      	b.n	800834e <HAL_CAN_GetRxMessage+0x218>
 8008340:	68fb      	ldr	r3, [r7, #12]
 8008342:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008344:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8008348:	68fb      	ldr	r3, [r7, #12]
 800834a:	625a      	str	r2, [r3, #36]	; 0x24
 800834c:	2301      	movs	r3, #1
 800834e:	4618      	mov	r0, r3
 8008350:	371c      	adds	r7, #28
 8008352:	46bd      	mov	sp, r7
 8008354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008358:	4770      	bx	lr

0800835a <HAL_CAN_ActivateNotification>:
 800835a:	b480      	push	{r7}
 800835c:	b085      	sub	sp, #20
 800835e:	af00      	add	r7, sp, #0
 8008360:	6078      	str	r0, [r7, #4]
 8008362:	6039      	str	r1, [r7, #0]
 8008364:	687b      	ldr	r3, [r7, #4]
 8008366:	f893 3020 	ldrb.w	r3, [r3, #32]
 800836a:	73fb      	strb	r3, [r7, #15]
 800836c:	7bfb      	ldrb	r3, [r7, #15]
 800836e:	2b01      	cmp	r3, #1
 8008370:	d002      	beq.n	8008378 <HAL_CAN_ActivateNotification+0x1e>
 8008372:	7bfb      	ldrb	r3, [r7, #15]
 8008374:	2b02      	cmp	r3, #2
 8008376:	d109      	bne.n	800838c <HAL_CAN_ActivateNotification+0x32>
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	681b      	ldr	r3, [r3, #0]
 800837c:	6959      	ldr	r1, [r3, #20]
 800837e:	687b      	ldr	r3, [r7, #4]
 8008380:	681b      	ldr	r3, [r3, #0]
 8008382:	683a      	ldr	r2, [r7, #0]
 8008384:	430a      	orrs	r2, r1
 8008386:	615a      	str	r2, [r3, #20]
 8008388:	2300      	movs	r3, #0
 800838a:	e006      	b.n	800839a <HAL_CAN_ActivateNotification+0x40>
 800838c:	687b      	ldr	r3, [r7, #4]
 800838e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008390:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	625a      	str	r2, [r3, #36]	; 0x24
 8008398:	2301      	movs	r3, #1
 800839a:	4618      	mov	r0, r3
 800839c:	3714      	adds	r7, #20
 800839e:	46bd      	mov	sp, r7
 80083a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083a4:	4770      	bx	lr

080083a6 <HAL_CAN_IRQHandler>:
 80083a6:	b580      	push	{r7, lr}
 80083a8:	b08a      	sub	sp, #40	; 0x28
 80083aa:	af00      	add	r7, sp, #0
 80083ac:	6078      	str	r0, [r7, #4]
 80083ae:	2300      	movs	r3, #0
 80083b0:	627b      	str	r3, [r7, #36]	; 0x24
 80083b2:	687b      	ldr	r3, [r7, #4]
 80083b4:	681b      	ldr	r3, [r3, #0]
 80083b6:	695b      	ldr	r3, [r3, #20]
 80083b8:	623b      	str	r3, [r7, #32]
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	681b      	ldr	r3, [r3, #0]
 80083be:	685b      	ldr	r3, [r3, #4]
 80083c0:	61fb      	str	r3, [r7, #28]
 80083c2:	687b      	ldr	r3, [r7, #4]
 80083c4:	681b      	ldr	r3, [r3, #0]
 80083c6:	689b      	ldr	r3, [r3, #8]
 80083c8:	61bb      	str	r3, [r7, #24]
 80083ca:	687b      	ldr	r3, [r7, #4]
 80083cc:	681b      	ldr	r3, [r3, #0]
 80083ce:	68db      	ldr	r3, [r3, #12]
 80083d0:	617b      	str	r3, [r7, #20]
 80083d2:	687b      	ldr	r3, [r7, #4]
 80083d4:	681b      	ldr	r3, [r3, #0]
 80083d6:	691b      	ldr	r3, [r3, #16]
 80083d8:	613b      	str	r3, [r7, #16]
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	681b      	ldr	r3, [r3, #0]
 80083de:	699b      	ldr	r3, [r3, #24]
 80083e0:	60fb      	str	r3, [r7, #12]
 80083e2:	6a3b      	ldr	r3, [r7, #32]
 80083e4:	f003 0301 	and.w	r3, r3, #1
 80083e8:	2b00      	cmp	r3, #0
 80083ea:	d07c      	beq.n	80084e6 <HAL_CAN_IRQHandler+0x140>
 80083ec:	69bb      	ldr	r3, [r7, #24]
 80083ee:	f003 0301 	and.w	r3, r3, #1
 80083f2:	2b00      	cmp	r3, #0
 80083f4:	d023      	beq.n	800843e <HAL_CAN_IRQHandler+0x98>
 80083f6:	687b      	ldr	r3, [r7, #4]
 80083f8:	681b      	ldr	r3, [r3, #0]
 80083fa:	2201      	movs	r2, #1
 80083fc:	609a      	str	r2, [r3, #8]
 80083fe:	69bb      	ldr	r3, [r7, #24]
 8008400:	f003 0302 	and.w	r3, r3, #2
 8008404:	2b00      	cmp	r3, #0
 8008406:	d003      	beq.n	8008410 <HAL_CAN_IRQHandler+0x6a>
 8008408:	6878      	ldr	r0, [r7, #4]
 800840a:	f000 f983 	bl	8008714 <HAL_CAN_TxMailbox0CompleteCallback>
 800840e:	e016      	b.n	800843e <HAL_CAN_IRQHandler+0x98>
 8008410:	69bb      	ldr	r3, [r7, #24]
 8008412:	f003 0304 	and.w	r3, r3, #4
 8008416:	2b00      	cmp	r3, #0
 8008418:	d004      	beq.n	8008424 <HAL_CAN_IRQHandler+0x7e>
 800841a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800841c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8008420:	627b      	str	r3, [r7, #36]	; 0x24
 8008422:	e00c      	b.n	800843e <HAL_CAN_IRQHandler+0x98>
 8008424:	69bb      	ldr	r3, [r7, #24]
 8008426:	f003 0308 	and.w	r3, r3, #8
 800842a:	2b00      	cmp	r3, #0
 800842c:	d004      	beq.n	8008438 <HAL_CAN_IRQHandler+0x92>
 800842e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008430:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8008434:	627b      	str	r3, [r7, #36]	; 0x24
 8008436:	e002      	b.n	800843e <HAL_CAN_IRQHandler+0x98>
 8008438:	6878      	ldr	r0, [r7, #4]
 800843a:	f000 f989 	bl	8008750 <HAL_CAN_TxMailbox0AbortCallback>
 800843e:	69bb      	ldr	r3, [r7, #24]
 8008440:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008444:	2b00      	cmp	r3, #0
 8008446:	d024      	beq.n	8008492 <HAL_CAN_IRQHandler+0xec>
 8008448:	687b      	ldr	r3, [r7, #4]
 800844a:	681b      	ldr	r3, [r3, #0]
 800844c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8008450:	609a      	str	r2, [r3, #8]
 8008452:	69bb      	ldr	r3, [r7, #24]
 8008454:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008458:	2b00      	cmp	r3, #0
 800845a:	d003      	beq.n	8008464 <HAL_CAN_IRQHandler+0xbe>
 800845c:	6878      	ldr	r0, [r7, #4]
 800845e:	f000 f963 	bl	8008728 <HAL_CAN_TxMailbox1CompleteCallback>
 8008462:	e016      	b.n	8008492 <HAL_CAN_IRQHandler+0xec>
 8008464:	69bb      	ldr	r3, [r7, #24]
 8008466:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800846a:	2b00      	cmp	r3, #0
 800846c:	d004      	beq.n	8008478 <HAL_CAN_IRQHandler+0xd2>
 800846e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008470:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8008474:	627b      	str	r3, [r7, #36]	; 0x24
 8008476:	e00c      	b.n	8008492 <HAL_CAN_IRQHandler+0xec>
 8008478:	69bb      	ldr	r3, [r7, #24]
 800847a:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800847e:	2b00      	cmp	r3, #0
 8008480:	d004      	beq.n	800848c <HAL_CAN_IRQHandler+0xe6>
 8008482:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008484:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8008488:	627b      	str	r3, [r7, #36]	; 0x24
 800848a:	e002      	b.n	8008492 <HAL_CAN_IRQHandler+0xec>
 800848c:	6878      	ldr	r0, [r7, #4]
 800848e:	f000 f969 	bl	8008764 <HAL_CAN_TxMailbox1AbortCallback>
 8008492:	69bb      	ldr	r3, [r7, #24]
 8008494:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008498:	2b00      	cmp	r3, #0
 800849a:	d024      	beq.n	80084e6 <HAL_CAN_IRQHandler+0x140>
 800849c:	687b      	ldr	r3, [r7, #4]
 800849e:	681b      	ldr	r3, [r3, #0]
 80084a0:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 80084a4:	609a      	str	r2, [r3, #8]
 80084a6:	69bb      	ldr	r3, [r7, #24]
 80084a8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80084ac:	2b00      	cmp	r3, #0
 80084ae:	d003      	beq.n	80084b8 <HAL_CAN_IRQHandler+0x112>
 80084b0:	6878      	ldr	r0, [r7, #4]
 80084b2:	f000 f943 	bl	800873c <HAL_CAN_TxMailbox2CompleteCallback>
 80084b6:	e016      	b.n	80084e6 <HAL_CAN_IRQHandler+0x140>
 80084b8:	69bb      	ldr	r3, [r7, #24]
 80084ba:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80084be:	2b00      	cmp	r3, #0
 80084c0:	d004      	beq.n	80084cc <HAL_CAN_IRQHandler+0x126>
 80084c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80084c4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80084c8:	627b      	str	r3, [r7, #36]	; 0x24
 80084ca:	e00c      	b.n	80084e6 <HAL_CAN_IRQHandler+0x140>
 80084cc:	69bb      	ldr	r3, [r7, #24]
 80084ce:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d004      	beq.n	80084e0 <HAL_CAN_IRQHandler+0x13a>
 80084d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80084d8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80084dc:	627b      	str	r3, [r7, #36]	; 0x24
 80084de:	e002      	b.n	80084e6 <HAL_CAN_IRQHandler+0x140>
 80084e0:	6878      	ldr	r0, [r7, #4]
 80084e2:	f000 f949 	bl	8008778 <HAL_CAN_TxMailbox2AbortCallback>
 80084e6:	6a3b      	ldr	r3, [r7, #32]
 80084e8:	f003 0308 	and.w	r3, r3, #8
 80084ec:	2b00      	cmp	r3, #0
 80084ee:	d00c      	beq.n	800850a <HAL_CAN_IRQHandler+0x164>
 80084f0:	697b      	ldr	r3, [r7, #20]
 80084f2:	f003 0310 	and.w	r3, r3, #16
 80084f6:	2b00      	cmp	r3, #0
 80084f8:	d007      	beq.n	800850a <HAL_CAN_IRQHandler+0x164>
 80084fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80084fc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008500:	627b      	str	r3, [r7, #36]	; 0x24
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	681b      	ldr	r3, [r3, #0]
 8008506:	2210      	movs	r2, #16
 8008508:	60da      	str	r2, [r3, #12]
 800850a:	6a3b      	ldr	r3, [r7, #32]
 800850c:	f003 0304 	and.w	r3, r3, #4
 8008510:	2b00      	cmp	r3, #0
 8008512:	d00b      	beq.n	800852c <HAL_CAN_IRQHandler+0x186>
 8008514:	697b      	ldr	r3, [r7, #20]
 8008516:	f003 0308 	and.w	r3, r3, #8
 800851a:	2b00      	cmp	r3, #0
 800851c:	d006      	beq.n	800852c <HAL_CAN_IRQHandler+0x186>
 800851e:	687b      	ldr	r3, [r7, #4]
 8008520:	681b      	ldr	r3, [r3, #0]
 8008522:	2208      	movs	r2, #8
 8008524:	60da      	str	r2, [r3, #12]
 8008526:	6878      	ldr	r0, [r7, #4]
 8008528:	f000 f930 	bl	800878c <HAL_CAN_RxFifo0FullCallback>
 800852c:	6a3b      	ldr	r3, [r7, #32]
 800852e:	f003 0302 	and.w	r3, r3, #2
 8008532:	2b00      	cmp	r3, #0
 8008534:	d009      	beq.n	800854a <HAL_CAN_IRQHandler+0x1a4>
 8008536:	687b      	ldr	r3, [r7, #4]
 8008538:	681b      	ldr	r3, [r3, #0]
 800853a:	68db      	ldr	r3, [r3, #12]
 800853c:	f003 0303 	and.w	r3, r3, #3
 8008540:	2b00      	cmp	r3, #0
 8008542:	d002      	beq.n	800854a <HAL_CAN_IRQHandler+0x1a4>
 8008544:	6878      	ldr	r0, [r7, #4]
 8008546:	f7fe f87d 	bl	8006644 <HAL_CAN_RxFifo0MsgPendingCallback>
 800854a:	6a3b      	ldr	r3, [r7, #32]
 800854c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008550:	2b00      	cmp	r3, #0
 8008552:	d00c      	beq.n	800856e <HAL_CAN_IRQHandler+0x1c8>
 8008554:	693b      	ldr	r3, [r7, #16]
 8008556:	f003 0310 	and.w	r3, r3, #16
 800855a:	2b00      	cmp	r3, #0
 800855c:	d007      	beq.n	800856e <HAL_CAN_IRQHandler+0x1c8>
 800855e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008560:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8008564:	627b      	str	r3, [r7, #36]	; 0x24
 8008566:	687b      	ldr	r3, [r7, #4]
 8008568:	681b      	ldr	r3, [r3, #0]
 800856a:	2210      	movs	r2, #16
 800856c:	611a      	str	r2, [r3, #16]
 800856e:	6a3b      	ldr	r3, [r7, #32]
 8008570:	f003 0320 	and.w	r3, r3, #32
 8008574:	2b00      	cmp	r3, #0
 8008576:	d00b      	beq.n	8008590 <HAL_CAN_IRQHandler+0x1ea>
 8008578:	693b      	ldr	r3, [r7, #16]
 800857a:	f003 0308 	and.w	r3, r3, #8
 800857e:	2b00      	cmp	r3, #0
 8008580:	d006      	beq.n	8008590 <HAL_CAN_IRQHandler+0x1ea>
 8008582:	687b      	ldr	r3, [r7, #4]
 8008584:	681b      	ldr	r3, [r3, #0]
 8008586:	2208      	movs	r2, #8
 8008588:	611a      	str	r2, [r3, #16]
 800858a:	6878      	ldr	r0, [r7, #4]
 800858c:	f000 f908 	bl	80087a0 <HAL_CAN_RxFifo1FullCallback>
 8008590:	6a3b      	ldr	r3, [r7, #32]
 8008592:	f003 0310 	and.w	r3, r3, #16
 8008596:	2b00      	cmp	r3, #0
 8008598:	d009      	beq.n	80085ae <HAL_CAN_IRQHandler+0x208>
 800859a:	687b      	ldr	r3, [r7, #4]
 800859c:	681b      	ldr	r3, [r3, #0]
 800859e:	691b      	ldr	r3, [r3, #16]
 80085a0:	f003 0303 	and.w	r3, r3, #3
 80085a4:	2b00      	cmp	r3, #0
 80085a6:	d002      	beq.n	80085ae <HAL_CAN_IRQHandler+0x208>
 80085a8:	6878      	ldr	r0, [r7, #4]
 80085aa:	f7fe f889 	bl	80066c0 <HAL_CAN_RxFifo1MsgPendingCallback>
 80085ae:	6a3b      	ldr	r3, [r7, #32]
 80085b0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80085b4:	2b00      	cmp	r3, #0
 80085b6:	d00b      	beq.n	80085d0 <HAL_CAN_IRQHandler+0x22a>
 80085b8:	69fb      	ldr	r3, [r7, #28]
 80085ba:	f003 0310 	and.w	r3, r3, #16
 80085be:	2b00      	cmp	r3, #0
 80085c0:	d006      	beq.n	80085d0 <HAL_CAN_IRQHandler+0x22a>
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	681b      	ldr	r3, [r3, #0]
 80085c6:	2210      	movs	r2, #16
 80085c8:	605a      	str	r2, [r3, #4]
 80085ca:	6878      	ldr	r0, [r7, #4]
 80085cc:	f000 f8f2 	bl	80087b4 <HAL_CAN_SleepCallback>
 80085d0:	6a3b      	ldr	r3, [r7, #32]
 80085d2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80085d6:	2b00      	cmp	r3, #0
 80085d8:	d00b      	beq.n	80085f2 <HAL_CAN_IRQHandler+0x24c>
 80085da:	69fb      	ldr	r3, [r7, #28]
 80085dc:	f003 0308 	and.w	r3, r3, #8
 80085e0:	2b00      	cmp	r3, #0
 80085e2:	d006      	beq.n	80085f2 <HAL_CAN_IRQHandler+0x24c>
 80085e4:	687b      	ldr	r3, [r7, #4]
 80085e6:	681b      	ldr	r3, [r3, #0]
 80085e8:	2208      	movs	r2, #8
 80085ea:	605a      	str	r2, [r3, #4]
 80085ec:	6878      	ldr	r0, [r7, #4]
 80085ee:	f000 f8eb 	bl	80087c8 <HAL_CAN_WakeUpFromRxMsgCallback>
 80085f2:	6a3b      	ldr	r3, [r7, #32]
 80085f4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80085f8:	2b00      	cmp	r3, #0
 80085fa:	d07b      	beq.n	80086f4 <HAL_CAN_IRQHandler+0x34e>
 80085fc:	69fb      	ldr	r3, [r7, #28]
 80085fe:	f003 0304 	and.w	r3, r3, #4
 8008602:	2b00      	cmp	r3, #0
 8008604:	d072      	beq.n	80086ec <HAL_CAN_IRQHandler+0x346>
 8008606:	6a3b      	ldr	r3, [r7, #32]
 8008608:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800860c:	2b00      	cmp	r3, #0
 800860e:	d008      	beq.n	8008622 <HAL_CAN_IRQHandler+0x27c>
 8008610:	68fb      	ldr	r3, [r7, #12]
 8008612:	f003 0301 	and.w	r3, r3, #1
 8008616:	2b00      	cmp	r3, #0
 8008618:	d003      	beq.n	8008622 <HAL_CAN_IRQHandler+0x27c>
 800861a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800861c:	f043 0301 	orr.w	r3, r3, #1
 8008620:	627b      	str	r3, [r7, #36]	; 0x24
 8008622:	6a3b      	ldr	r3, [r7, #32]
 8008624:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8008628:	2b00      	cmp	r3, #0
 800862a:	d008      	beq.n	800863e <HAL_CAN_IRQHandler+0x298>
 800862c:	68fb      	ldr	r3, [r7, #12]
 800862e:	f003 0302 	and.w	r3, r3, #2
 8008632:	2b00      	cmp	r3, #0
 8008634:	d003      	beq.n	800863e <HAL_CAN_IRQHandler+0x298>
 8008636:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008638:	f043 0302 	orr.w	r3, r3, #2
 800863c:	627b      	str	r3, [r7, #36]	; 0x24
 800863e:	6a3b      	ldr	r3, [r7, #32]
 8008640:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008644:	2b00      	cmp	r3, #0
 8008646:	d008      	beq.n	800865a <HAL_CAN_IRQHandler+0x2b4>
 8008648:	68fb      	ldr	r3, [r7, #12]
 800864a:	f003 0304 	and.w	r3, r3, #4
 800864e:	2b00      	cmp	r3, #0
 8008650:	d003      	beq.n	800865a <HAL_CAN_IRQHandler+0x2b4>
 8008652:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008654:	f043 0304 	orr.w	r3, r3, #4
 8008658:	627b      	str	r3, [r7, #36]	; 0x24
 800865a:	6a3b      	ldr	r3, [r7, #32]
 800865c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008660:	2b00      	cmp	r3, #0
 8008662:	d043      	beq.n	80086ec <HAL_CAN_IRQHandler+0x346>
 8008664:	68fb      	ldr	r3, [r7, #12]
 8008666:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800866a:	2b00      	cmp	r3, #0
 800866c:	d03e      	beq.n	80086ec <HAL_CAN_IRQHandler+0x346>
 800866e:	68fb      	ldr	r3, [r7, #12]
 8008670:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008674:	2b60      	cmp	r3, #96	; 0x60
 8008676:	d02b      	beq.n	80086d0 <HAL_CAN_IRQHandler+0x32a>
 8008678:	2b60      	cmp	r3, #96	; 0x60
 800867a:	d82e      	bhi.n	80086da <HAL_CAN_IRQHandler+0x334>
 800867c:	2b50      	cmp	r3, #80	; 0x50
 800867e:	d022      	beq.n	80086c6 <HAL_CAN_IRQHandler+0x320>
 8008680:	2b50      	cmp	r3, #80	; 0x50
 8008682:	d82a      	bhi.n	80086da <HAL_CAN_IRQHandler+0x334>
 8008684:	2b40      	cmp	r3, #64	; 0x40
 8008686:	d019      	beq.n	80086bc <HAL_CAN_IRQHandler+0x316>
 8008688:	2b40      	cmp	r3, #64	; 0x40
 800868a:	d826      	bhi.n	80086da <HAL_CAN_IRQHandler+0x334>
 800868c:	2b30      	cmp	r3, #48	; 0x30
 800868e:	d010      	beq.n	80086b2 <HAL_CAN_IRQHandler+0x30c>
 8008690:	2b30      	cmp	r3, #48	; 0x30
 8008692:	d822      	bhi.n	80086da <HAL_CAN_IRQHandler+0x334>
 8008694:	2b10      	cmp	r3, #16
 8008696:	d002      	beq.n	800869e <HAL_CAN_IRQHandler+0x2f8>
 8008698:	2b20      	cmp	r3, #32
 800869a:	d005      	beq.n	80086a8 <HAL_CAN_IRQHandler+0x302>
 800869c:	e01d      	b.n	80086da <HAL_CAN_IRQHandler+0x334>
 800869e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086a0:	f043 0308 	orr.w	r3, r3, #8
 80086a4:	627b      	str	r3, [r7, #36]	; 0x24
 80086a6:	e019      	b.n	80086dc <HAL_CAN_IRQHandler+0x336>
 80086a8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086aa:	f043 0310 	orr.w	r3, r3, #16
 80086ae:	627b      	str	r3, [r7, #36]	; 0x24
 80086b0:	e014      	b.n	80086dc <HAL_CAN_IRQHandler+0x336>
 80086b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086b4:	f043 0320 	orr.w	r3, r3, #32
 80086b8:	627b      	str	r3, [r7, #36]	; 0x24
 80086ba:	e00f      	b.n	80086dc <HAL_CAN_IRQHandler+0x336>
 80086bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80086c2:	627b      	str	r3, [r7, #36]	; 0x24
 80086c4:	e00a      	b.n	80086dc <HAL_CAN_IRQHandler+0x336>
 80086c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80086cc:	627b      	str	r3, [r7, #36]	; 0x24
 80086ce:	e005      	b.n	80086dc <HAL_CAN_IRQHandler+0x336>
 80086d0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80086d6:	627b      	str	r3, [r7, #36]	; 0x24
 80086d8:	e000      	b.n	80086dc <HAL_CAN_IRQHandler+0x336>
 80086da:	bf00      	nop
 80086dc:	687b      	ldr	r3, [r7, #4]
 80086de:	681b      	ldr	r3, [r3, #0]
 80086e0:	699a      	ldr	r2, [r3, #24]
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 80086ea:	619a      	str	r2, [r3, #24]
 80086ec:	687b      	ldr	r3, [r7, #4]
 80086ee:	681b      	ldr	r3, [r3, #0]
 80086f0:	2204      	movs	r2, #4
 80086f2:	605a      	str	r2, [r3, #4]
 80086f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80086f6:	2b00      	cmp	r3, #0
 80086f8:	d008      	beq.n	800870c <HAL_CAN_IRQHandler+0x366>
 80086fa:	687b      	ldr	r3, [r7, #4]
 80086fc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80086fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008700:	431a      	orrs	r2, r3
 8008702:	687b      	ldr	r3, [r7, #4]
 8008704:	625a      	str	r2, [r3, #36]	; 0x24
 8008706:	6878      	ldr	r0, [r7, #4]
 8008708:	f000 f868 	bl	80087dc <HAL_CAN_ErrorCallback>
 800870c:	bf00      	nop
 800870e:	3728      	adds	r7, #40	; 0x28
 8008710:	46bd      	mov	sp, r7
 8008712:	bd80      	pop	{r7, pc}

08008714 <HAL_CAN_TxMailbox0CompleteCallback>:
 8008714:	b480      	push	{r7}
 8008716:	b083      	sub	sp, #12
 8008718:	af00      	add	r7, sp, #0
 800871a:	6078      	str	r0, [r7, #4]
 800871c:	bf00      	nop
 800871e:	370c      	adds	r7, #12
 8008720:	46bd      	mov	sp, r7
 8008722:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008726:	4770      	bx	lr

08008728 <HAL_CAN_TxMailbox1CompleteCallback>:
 8008728:	b480      	push	{r7}
 800872a:	b083      	sub	sp, #12
 800872c:	af00      	add	r7, sp, #0
 800872e:	6078      	str	r0, [r7, #4]
 8008730:	bf00      	nop
 8008732:	370c      	adds	r7, #12
 8008734:	46bd      	mov	sp, r7
 8008736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800873a:	4770      	bx	lr

0800873c <HAL_CAN_TxMailbox2CompleteCallback>:
 800873c:	b480      	push	{r7}
 800873e:	b083      	sub	sp, #12
 8008740:	af00      	add	r7, sp, #0
 8008742:	6078      	str	r0, [r7, #4]
 8008744:	bf00      	nop
 8008746:	370c      	adds	r7, #12
 8008748:	46bd      	mov	sp, r7
 800874a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800874e:	4770      	bx	lr

08008750 <HAL_CAN_TxMailbox0AbortCallback>:
 8008750:	b480      	push	{r7}
 8008752:	b083      	sub	sp, #12
 8008754:	af00      	add	r7, sp, #0
 8008756:	6078      	str	r0, [r7, #4]
 8008758:	bf00      	nop
 800875a:	370c      	adds	r7, #12
 800875c:	46bd      	mov	sp, r7
 800875e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008762:	4770      	bx	lr

08008764 <HAL_CAN_TxMailbox1AbortCallback>:
 8008764:	b480      	push	{r7}
 8008766:	b083      	sub	sp, #12
 8008768:	af00      	add	r7, sp, #0
 800876a:	6078      	str	r0, [r7, #4]
 800876c:	bf00      	nop
 800876e:	370c      	adds	r7, #12
 8008770:	46bd      	mov	sp, r7
 8008772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008776:	4770      	bx	lr

08008778 <HAL_CAN_TxMailbox2AbortCallback>:
 8008778:	b480      	push	{r7}
 800877a:	b083      	sub	sp, #12
 800877c:	af00      	add	r7, sp, #0
 800877e:	6078      	str	r0, [r7, #4]
 8008780:	bf00      	nop
 8008782:	370c      	adds	r7, #12
 8008784:	46bd      	mov	sp, r7
 8008786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800878a:	4770      	bx	lr

0800878c <HAL_CAN_RxFifo0FullCallback>:
 800878c:	b480      	push	{r7}
 800878e:	b083      	sub	sp, #12
 8008790:	af00      	add	r7, sp, #0
 8008792:	6078      	str	r0, [r7, #4]
 8008794:	bf00      	nop
 8008796:	370c      	adds	r7, #12
 8008798:	46bd      	mov	sp, r7
 800879a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800879e:	4770      	bx	lr

080087a0 <HAL_CAN_RxFifo1FullCallback>:
 80087a0:	b480      	push	{r7}
 80087a2:	b083      	sub	sp, #12
 80087a4:	af00      	add	r7, sp, #0
 80087a6:	6078      	str	r0, [r7, #4]
 80087a8:	bf00      	nop
 80087aa:	370c      	adds	r7, #12
 80087ac:	46bd      	mov	sp, r7
 80087ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087b2:	4770      	bx	lr

080087b4 <HAL_CAN_SleepCallback>:
 80087b4:	b480      	push	{r7}
 80087b6:	b083      	sub	sp, #12
 80087b8:	af00      	add	r7, sp, #0
 80087ba:	6078      	str	r0, [r7, #4]
 80087bc:	bf00      	nop
 80087be:	370c      	adds	r7, #12
 80087c0:	46bd      	mov	sp, r7
 80087c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087c6:	4770      	bx	lr

080087c8 <HAL_CAN_WakeUpFromRxMsgCallback>:
 80087c8:	b480      	push	{r7}
 80087ca:	b083      	sub	sp, #12
 80087cc:	af00      	add	r7, sp, #0
 80087ce:	6078      	str	r0, [r7, #4]
 80087d0:	bf00      	nop
 80087d2:	370c      	adds	r7, #12
 80087d4:	46bd      	mov	sp, r7
 80087d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087da:	4770      	bx	lr

080087dc <HAL_CAN_ErrorCallback>:
 80087dc:	b480      	push	{r7}
 80087de:	b083      	sub	sp, #12
 80087e0:	af00      	add	r7, sp, #0
 80087e2:	6078      	str	r0, [r7, #4]
 80087e4:	bf00      	nop
 80087e6:	370c      	adds	r7, #12
 80087e8:	46bd      	mov	sp, r7
 80087ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087ee:	4770      	bx	lr

080087f0 <__NVIC_SetPriorityGrouping>:
 80087f0:	b480      	push	{r7}
 80087f2:	b085      	sub	sp, #20
 80087f4:	af00      	add	r7, sp, #0
 80087f6:	6078      	str	r0, [r7, #4]
 80087f8:	687b      	ldr	r3, [r7, #4]
 80087fa:	f003 0307 	and.w	r3, r3, #7
 80087fe:	60fb      	str	r3, [r7, #12]
 8008800:	4b0c      	ldr	r3, [pc, #48]	; (8008834 <__NVIC_SetPriorityGrouping+0x44>)
 8008802:	68db      	ldr	r3, [r3, #12]
 8008804:	60bb      	str	r3, [r7, #8]
 8008806:	68ba      	ldr	r2, [r7, #8]
 8008808:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 800880c:	4013      	ands	r3, r2
 800880e:	60bb      	str	r3, [r7, #8]
 8008810:	68fb      	ldr	r3, [r7, #12]
 8008812:	021a      	lsls	r2, r3, #8
 8008814:	68bb      	ldr	r3, [r7, #8]
 8008816:	4313      	orrs	r3, r2
 8008818:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800881c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008820:	60bb      	str	r3, [r7, #8]
 8008822:	4a04      	ldr	r2, [pc, #16]	; (8008834 <__NVIC_SetPriorityGrouping+0x44>)
 8008824:	68bb      	ldr	r3, [r7, #8]
 8008826:	60d3      	str	r3, [r2, #12]
 8008828:	bf00      	nop
 800882a:	3714      	adds	r7, #20
 800882c:	46bd      	mov	sp, r7
 800882e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008832:	4770      	bx	lr
 8008834:	e000ed00 	.word	0xe000ed00

08008838 <__NVIC_GetPriorityGrouping>:
 8008838:	b480      	push	{r7}
 800883a:	af00      	add	r7, sp, #0
 800883c:	4b04      	ldr	r3, [pc, #16]	; (8008850 <__NVIC_GetPriorityGrouping+0x18>)
 800883e:	68db      	ldr	r3, [r3, #12]
 8008840:	0a1b      	lsrs	r3, r3, #8
 8008842:	f003 0307 	and.w	r3, r3, #7
 8008846:	4618      	mov	r0, r3
 8008848:	46bd      	mov	sp, r7
 800884a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800884e:	4770      	bx	lr
 8008850:	e000ed00 	.word	0xe000ed00

08008854 <__NVIC_EnableIRQ>:
 8008854:	b480      	push	{r7}
 8008856:	b083      	sub	sp, #12
 8008858:	af00      	add	r7, sp, #0
 800885a:	4603      	mov	r3, r0
 800885c:	71fb      	strb	r3, [r7, #7]
 800885e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008862:	2b00      	cmp	r3, #0
 8008864:	db0b      	blt.n	800887e <__NVIC_EnableIRQ+0x2a>
 8008866:	79fb      	ldrb	r3, [r7, #7]
 8008868:	f003 021f 	and.w	r2, r3, #31
 800886c:	4907      	ldr	r1, [pc, #28]	; (800888c <__NVIC_EnableIRQ+0x38>)
 800886e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008872:	095b      	lsrs	r3, r3, #5
 8008874:	2001      	movs	r0, #1
 8008876:	fa00 f202 	lsl.w	r2, r0, r2
 800887a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800887e:	bf00      	nop
 8008880:	370c      	adds	r7, #12
 8008882:	46bd      	mov	sp, r7
 8008884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008888:	4770      	bx	lr
 800888a:	bf00      	nop
 800888c:	e000e100 	.word	0xe000e100

08008890 <__NVIC_SetPriority>:
 8008890:	b480      	push	{r7}
 8008892:	b083      	sub	sp, #12
 8008894:	af00      	add	r7, sp, #0
 8008896:	4603      	mov	r3, r0
 8008898:	6039      	str	r1, [r7, #0]
 800889a:	71fb      	strb	r3, [r7, #7]
 800889c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80088a0:	2b00      	cmp	r3, #0
 80088a2:	db0a      	blt.n	80088ba <__NVIC_SetPriority+0x2a>
 80088a4:	683b      	ldr	r3, [r7, #0]
 80088a6:	b2da      	uxtb	r2, r3
 80088a8:	490c      	ldr	r1, [pc, #48]	; (80088dc <__NVIC_SetPriority+0x4c>)
 80088aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80088ae:	0112      	lsls	r2, r2, #4
 80088b0:	b2d2      	uxtb	r2, r2
 80088b2:	440b      	add	r3, r1
 80088b4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80088b8:	e00a      	b.n	80088d0 <__NVIC_SetPriority+0x40>
 80088ba:	683b      	ldr	r3, [r7, #0]
 80088bc:	b2da      	uxtb	r2, r3
 80088be:	4908      	ldr	r1, [pc, #32]	; (80088e0 <__NVIC_SetPriority+0x50>)
 80088c0:	79fb      	ldrb	r3, [r7, #7]
 80088c2:	f003 030f 	and.w	r3, r3, #15
 80088c6:	3b04      	subs	r3, #4
 80088c8:	0112      	lsls	r2, r2, #4
 80088ca:	b2d2      	uxtb	r2, r2
 80088cc:	440b      	add	r3, r1
 80088ce:	761a      	strb	r2, [r3, #24]
 80088d0:	bf00      	nop
 80088d2:	370c      	adds	r7, #12
 80088d4:	46bd      	mov	sp, r7
 80088d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088da:	4770      	bx	lr
 80088dc:	e000e100 	.word	0xe000e100
 80088e0:	e000ed00 	.word	0xe000ed00

080088e4 <NVIC_EncodePriority>:
 80088e4:	b480      	push	{r7}
 80088e6:	b089      	sub	sp, #36	; 0x24
 80088e8:	af00      	add	r7, sp, #0
 80088ea:	60f8      	str	r0, [r7, #12]
 80088ec:	60b9      	str	r1, [r7, #8]
 80088ee:	607a      	str	r2, [r7, #4]
 80088f0:	68fb      	ldr	r3, [r7, #12]
 80088f2:	f003 0307 	and.w	r3, r3, #7
 80088f6:	61fb      	str	r3, [r7, #28]
 80088f8:	69fb      	ldr	r3, [r7, #28]
 80088fa:	f1c3 0307 	rsb	r3, r3, #7
 80088fe:	2b04      	cmp	r3, #4
 8008900:	bf28      	it	cs
 8008902:	2304      	movcs	r3, #4
 8008904:	61bb      	str	r3, [r7, #24]
 8008906:	69fb      	ldr	r3, [r7, #28]
 8008908:	3304      	adds	r3, #4
 800890a:	2b06      	cmp	r3, #6
 800890c:	d902      	bls.n	8008914 <NVIC_EncodePriority+0x30>
 800890e:	69fb      	ldr	r3, [r7, #28]
 8008910:	3b03      	subs	r3, #3
 8008912:	e000      	b.n	8008916 <NVIC_EncodePriority+0x32>
 8008914:	2300      	movs	r3, #0
 8008916:	617b      	str	r3, [r7, #20]
 8008918:	f04f 32ff 	mov.w	r2, #4294967295
 800891c:	69bb      	ldr	r3, [r7, #24]
 800891e:	fa02 f303 	lsl.w	r3, r2, r3
 8008922:	43da      	mvns	r2, r3
 8008924:	68bb      	ldr	r3, [r7, #8]
 8008926:	401a      	ands	r2, r3
 8008928:	697b      	ldr	r3, [r7, #20]
 800892a:	409a      	lsls	r2, r3
 800892c:	f04f 31ff 	mov.w	r1, #4294967295
 8008930:	697b      	ldr	r3, [r7, #20]
 8008932:	fa01 f303 	lsl.w	r3, r1, r3
 8008936:	43d9      	mvns	r1, r3
 8008938:	687b      	ldr	r3, [r7, #4]
 800893a:	400b      	ands	r3, r1
 800893c:	4313      	orrs	r3, r2
 800893e:	4618      	mov	r0, r3
 8008940:	3724      	adds	r7, #36	; 0x24
 8008942:	46bd      	mov	sp, r7
 8008944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008948:	4770      	bx	lr
	...

0800894c <SysTick_Config>:
 800894c:	b580      	push	{r7, lr}
 800894e:	b082      	sub	sp, #8
 8008950:	af00      	add	r7, sp, #0
 8008952:	6078      	str	r0, [r7, #4]
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	3b01      	subs	r3, #1
 8008958:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 800895c:	d301      	bcc.n	8008962 <SysTick_Config+0x16>
 800895e:	2301      	movs	r3, #1
 8008960:	e00f      	b.n	8008982 <SysTick_Config+0x36>
 8008962:	4a0a      	ldr	r2, [pc, #40]	; (800898c <SysTick_Config+0x40>)
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	3b01      	subs	r3, #1
 8008968:	6053      	str	r3, [r2, #4]
 800896a:	210f      	movs	r1, #15
 800896c:	f04f 30ff 	mov.w	r0, #4294967295
 8008970:	f7ff ff8e 	bl	8008890 <__NVIC_SetPriority>
 8008974:	4b05      	ldr	r3, [pc, #20]	; (800898c <SysTick_Config+0x40>)
 8008976:	2200      	movs	r2, #0
 8008978:	609a      	str	r2, [r3, #8]
 800897a:	4b04      	ldr	r3, [pc, #16]	; (800898c <SysTick_Config+0x40>)
 800897c:	2207      	movs	r2, #7
 800897e:	601a      	str	r2, [r3, #0]
 8008980:	2300      	movs	r3, #0
 8008982:	4618      	mov	r0, r3
 8008984:	3708      	adds	r7, #8
 8008986:	46bd      	mov	sp, r7
 8008988:	bd80      	pop	{r7, pc}
 800898a:	bf00      	nop
 800898c:	e000e010 	.word	0xe000e010

08008990 <HAL_NVIC_SetPriorityGrouping>:
 8008990:	b580      	push	{r7, lr}
 8008992:	b082      	sub	sp, #8
 8008994:	af00      	add	r7, sp, #0
 8008996:	6078      	str	r0, [r7, #4]
 8008998:	6878      	ldr	r0, [r7, #4]
 800899a:	f7ff ff29 	bl	80087f0 <__NVIC_SetPriorityGrouping>
 800899e:	bf00      	nop
 80089a0:	3708      	adds	r7, #8
 80089a2:	46bd      	mov	sp, r7
 80089a4:	bd80      	pop	{r7, pc}

080089a6 <HAL_NVIC_SetPriority>:
 80089a6:	b580      	push	{r7, lr}
 80089a8:	b086      	sub	sp, #24
 80089aa:	af00      	add	r7, sp, #0
 80089ac:	4603      	mov	r3, r0
 80089ae:	60b9      	str	r1, [r7, #8]
 80089b0:	607a      	str	r2, [r7, #4]
 80089b2:	73fb      	strb	r3, [r7, #15]
 80089b4:	2300      	movs	r3, #0
 80089b6:	617b      	str	r3, [r7, #20]
 80089b8:	f7ff ff3e 	bl	8008838 <__NVIC_GetPriorityGrouping>
 80089bc:	6178      	str	r0, [r7, #20]
 80089be:	687a      	ldr	r2, [r7, #4]
 80089c0:	68b9      	ldr	r1, [r7, #8]
 80089c2:	6978      	ldr	r0, [r7, #20]
 80089c4:	f7ff ff8e 	bl	80088e4 <NVIC_EncodePriority>
 80089c8:	4602      	mov	r2, r0
 80089ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80089ce:	4611      	mov	r1, r2
 80089d0:	4618      	mov	r0, r3
 80089d2:	f7ff ff5d 	bl	8008890 <__NVIC_SetPriority>
 80089d6:	bf00      	nop
 80089d8:	3718      	adds	r7, #24
 80089da:	46bd      	mov	sp, r7
 80089dc:	bd80      	pop	{r7, pc}

080089de <HAL_NVIC_EnableIRQ>:
 80089de:	b580      	push	{r7, lr}
 80089e0:	b082      	sub	sp, #8
 80089e2:	af00      	add	r7, sp, #0
 80089e4:	4603      	mov	r3, r0
 80089e6:	71fb      	strb	r3, [r7, #7]
 80089e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80089ec:	4618      	mov	r0, r3
 80089ee:	f7ff ff31 	bl	8008854 <__NVIC_EnableIRQ>
 80089f2:	bf00      	nop
 80089f4:	3708      	adds	r7, #8
 80089f6:	46bd      	mov	sp, r7
 80089f8:	bd80      	pop	{r7, pc}

080089fa <HAL_SYSTICK_Config>:
 80089fa:	b580      	push	{r7, lr}
 80089fc:	b082      	sub	sp, #8
 80089fe:	af00      	add	r7, sp, #0
 8008a00:	6078      	str	r0, [r7, #4]
 8008a02:	6878      	ldr	r0, [r7, #4]
 8008a04:	f7ff ffa2 	bl	800894c <SysTick_Config>
 8008a08:	4603      	mov	r3, r0
 8008a0a:	4618      	mov	r0, r3
 8008a0c:	3708      	adds	r7, #8
 8008a0e:	46bd      	mov	sp, r7
 8008a10:	bd80      	pop	{r7, pc}
	...

08008a14 <HAL_DMA_Init>:
 8008a14:	b580      	push	{r7, lr}
 8008a16:	b086      	sub	sp, #24
 8008a18:	af00      	add	r7, sp, #0
 8008a1a:	6078      	str	r0, [r7, #4]
 8008a1c:	2300      	movs	r3, #0
 8008a1e:	617b      	str	r3, [r7, #20]
 8008a20:	f7fe fc56 	bl	80072d0 <HAL_GetTick>
 8008a24:	6138      	str	r0, [r7, #16]
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	2b00      	cmp	r3, #0
 8008a2a:	d101      	bne.n	8008a30 <HAL_DMA_Init+0x1c>
 8008a2c:	2301      	movs	r3, #1
 8008a2e:	e099      	b.n	8008b64 <HAL_DMA_Init+0x150>
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	2202      	movs	r2, #2
 8008a34:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008a38:	687b      	ldr	r3, [r7, #4]
 8008a3a:	2200      	movs	r2, #0
 8008a3c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008a40:	687b      	ldr	r3, [r7, #4]
 8008a42:	681b      	ldr	r3, [r3, #0]
 8008a44:	681a      	ldr	r2, [r3, #0]
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	681b      	ldr	r3, [r3, #0]
 8008a4a:	f022 0201 	bic.w	r2, r2, #1
 8008a4e:	601a      	str	r2, [r3, #0]
 8008a50:	e00f      	b.n	8008a72 <HAL_DMA_Init+0x5e>
 8008a52:	f7fe fc3d 	bl	80072d0 <HAL_GetTick>
 8008a56:	4602      	mov	r2, r0
 8008a58:	693b      	ldr	r3, [r7, #16]
 8008a5a:	1ad3      	subs	r3, r2, r3
 8008a5c:	2b05      	cmp	r3, #5
 8008a5e:	d908      	bls.n	8008a72 <HAL_DMA_Init+0x5e>
 8008a60:	687b      	ldr	r3, [r7, #4]
 8008a62:	2220      	movs	r2, #32
 8008a64:	655a      	str	r2, [r3, #84]	; 0x54
 8008a66:	687b      	ldr	r3, [r7, #4]
 8008a68:	2203      	movs	r2, #3
 8008a6a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008a6e:	2303      	movs	r3, #3
 8008a70:	e078      	b.n	8008b64 <HAL_DMA_Init+0x150>
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	681b      	ldr	r3, [r3, #0]
 8008a76:	681b      	ldr	r3, [r3, #0]
 8008a78:	f003 0301 	and.w	r3, r3, #1
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	d1e8      	bne.n	8008a52 <HAL_DMA_Init+0x3e>
 8008a80:	687b      	ldr	r3, [r7, #4]
 8008a82:	681b      	ldr	r3, [r3, #0]
 8008a84:	681b      	ldr	r3, [r3, #0]
 8008a86:	617b      	str	r3, [r7, #20]
 8008a88:	697a      	ldr	r2, [r7, #20]
 8008a8a:	4b38      	ldr	r3, [pc, #224]	; (8008b6c <HAL_DMA_Init+0x158>)
 8008a8c:	4013      	ands	r3, r2
 8008a8e:	617b      	str	r3, [r7, #20]
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	685a      	ldr	r2, [r3, #4]
 8008a94:	687b      	ldr	r3, [r7, #4]
 8008a96:	689b      	ldr	r3, [r3, #8]
 8008a98:	431a      	orrs	r2, r3
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	68db      	ldr	r3, [r3, #12]
 8008a9e:	431a      	orrs	r2, r3
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	691b      	ldr	r3, [r3, #16]
 8008aa4:	431a      	orrs	r2, r3
 8008aa6:	687b      	ldr	r3, [r7, #4]
 8008aa8:	695b      	ldr	r3, [r3, #20]
 8008aaa:	431a      	orrs	r2, r3
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	699b      	ldr	r3, [r3, #24]
 8008ab0:	431a      	orrs	r2, r3
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	69db      	ldr	r3, [r3, #28]
 8008ab6:	431a      	orrs	r2, r3
 8008ab8:	687b      	ldr	r3, [r7, #4]
 8008aba:	6a1b      	ldr	r3, [r3, #32]
 8008abc:	4313      	orrs	r3, r2
 8008abe:	697a      	ldr	r2, [r7, #20]
 8008ac0:	4313      	orrs	r3, r2
 8008ac2:	617b      	str	r3, [r7, #20]
 8008ac4:	687b      	ldr	r3, [r7, #4]
 8008ac6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008ac8:	2b04      	cmp	r3, #4
 8008aca:	d107      	bne.n	8008adc <HAL_DMA_Init+0xc8>
 8008acc:	687b      	ldr	r3, [r7, #4]
 8008ace:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8008ad0:	687b      	ldr	r3, [r7, #4]
 8008ad2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008ad4:	4313      	orrs	r3, r2
 8008ad6:	697a      	ldr	r2, [r7, #20]
 8008ad8:	4313      	orrs	r3, r2
 8008ada:	617b      	str	r3, [r7, #20]
 8008adc:	687b      	ldr	r3, [r7, #4]
 8008ade:	681b      	ldr	r3, [r3, #0]
 8008ae0:	697a      	ldr	r2, [r7, #20]
 8008ae2:	601a      	str	r2, [r3, #0]
 8008ae4:	687b      	ldr	r3, [r7, #4]
 8008ae6:	681b      	ldr	r3, [r3, #0]
 8008ae8:	695b      	ldr	r3, [r3, #20]
 8008aea:	617b      	str	r3, [r7, #20]
 8008aec:	697b      	ldr	r3, [r7, #20]
 8008aee:	f023 0307 	bic.w	r3, r3, #7
 8008af2:	617b      	str	r3, [r7, #20]
 8008af4:	687b      	ldr	r3, [r7, #4]
 8008af6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008af8:	697a      	ldr	r2, [r7, #20]
 8008afa:	4313      	orrs	r3, r2
 8008afc:	617b      	str	r3, [r7, #20]
 8008afe:	687b      	ldr	r3, [r7, #4]
 8008b00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008b02:	2b04      	cmp	r3, #4
 8008b04:	d117      	bne.n	8008b36 <HAL_DMA_Init+0x122>
 8008b06:	687b      	ldr	r3, [r7, #4]
 8008b08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008b0a:	697a      	ldr	r2, [r7, #20]
 8008b0c:	4313      	orrs	r3, r2
 8008b0e:	617b      	str	r3, [r7, #20]
 8008b10:	687b      	ldr	r3, [r7, #4]
 8008b12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b14:	2b00      	cmp	r3, #0
 8008b16:	d00e      	beq.n	8008b36 <HAL_DMA_Init+0x122>
 8008b18:	6878      	ldr	r0, [r7, #4]
 8008b1a:	f000 fa6f 	bl	8008ffc <DMA_CheckFifoParam>
 8008b1e:	4603      	mov	r3, r0
 8008b20:	2b00      	cmp	r3, #0
 8008b22:	d008      	beq.n	8008b36 <HAL_DMA_Init+0x122>
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	2240      	movs	r2, #64	; 0x40
 8008b28:	655a      	str	r2, [r3, #84]	; 0x54
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	2201      	movs	r2, #1
 8008b2e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008b32:	2301      	movs	r3, #1
 8008b34:	e016      	b.n	8008b64 <HAL_DMA_Init+0x150>
 8008b36:	687b      	ldr	r3, [r7, #4]
 8008b38:	681b      	ldr	r3, [r3, #0]
 8008b3a:	697a      	ldr	r2, [r7, #20]
 8008b3c:	615a      	str	r2, [r3, #20]
 8008b3e:	6878      	ldr	r0, [r7, #4]
 8008b40:	f000 fa26 	bl	8008f90 <DMA_CalcBaseAndBitshift>
 8008b44:	4603      	mov	r3, r0
 8008b46:	60fb      	str	r3, [r7, #12]
 8008b48:	687b      	ldr	r3, [r7, #4]
 8008b4a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008b4c:	223f      	movs	r2, #63	; 0x3f
 8008b4e:	409a      	lsls	r2, r3
 8008b50:	68fb      	ldr	r3, [r7, #12]
 8008b52:	609a      	str	r2, [r3, #8]
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	2200      	movs	r2, #0
 8008b58:	655a      	str	r2, [r3, #84]	; 0x54
 8008b5a:	687b      	ldr	r3, [r7, #4]
 8008b5c:	2201      	movs	r2, #1
 8008b5e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008b62:	2300      	movs	r3, #0
 8008b64:	4618      	mov	r0, r3
 8008b66:	3718      	adds	r7, #24
 8008b68:	46bd      	mov	sp, r7
 8008b6a:	bd80      	pop	{r7, pc}
 8008b6c:	f010803f 	.word	0xf010803f

08008b70 <HAL_DMA_Start_IT>:
 8008b70:	b580      	push	{r7, lr}
 8008b72:	b086      	sub	sp, #24
 8008b74:	af00      	add	r7, sp, #0
 8008b76:	60f8      	str	r0, [r7, #12]
 8008b78:	60b9      	str	r1, [r7, #8]
 8008b7a:	607a      	str	r2, [r7, #4]
 8008b7c:	603b      	str	r3, [r7, #0]
 8008b7e:	2300      	movs	r3, #0
 8008b80:	75fb      	strb	r3, [r7, #23]
 8008b82:	68fb      	ldr	r3, [r7, #12]
 8008b84:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008b86:	613b      	str	r3, [r7, #16]
 8008b88:	68fb      	ldr	r3, [r7, #12]
 8008b8a:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8008b8e:	2b01      	cmp	r3, #1
 8008b90:	d101      	bne.n	8008b96 <HAL_DMA_Start_IT+0x26>
 8008b92:	2302      	movs	r3, #2
 8008b94:	e040      	b.n	8008c18 <HAL_DMA_Start_IT+0xa8>
 8008b96:	68fb      	ldr	r3, [r7, #12]
 8008b98:	2201      	movs	r2, #1
 8008b9a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008b9e:	68fb      	ldr	r3, [r7, #12]
 8008ba0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008ba4:	b2db      	uxtb	r3, r3
 8008ba6:	2b01      	cmp	r3, #1
 8008ba8:	d12f      	bne.n	8008c0a <HAL_DMA_Start_IT+0x9a>
 8008baa:	68fb      	ldr	r3, [r7, #12]
 8008bac:	2202      	movs	r2, #2
 8008bae:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008bb2:	68fb      	ldr	r3, [r7, #12]
 8008bb4:	2200      	movs	r2, #0
 8008bb6:	655a      	str	r2, [r3, #84]	; 0x54
 8008bb8:	683b      	ldr	r3, [r7, #0]
 8008bba:	687a      	ldr	r2, [r7, #4]
 8008bbc:	68b9      	ldr	r1, [r7, #8]
 8008bbe:	68f8      	ldr	r0, [r7, #12]
 8008bc0:	f000 f9b8 	bl	8008f34 <DMA_SetConfig>
 8008bc4:	68fb      	ldr	r3, [r7, #12]
 8008bc6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008bc8:	223f      	movs	r2, #63	; 0x3f
 8008bca:	409a      	lsls	r2, r3
 8008bcc:	693b      	ldr	r3, [r7, #16]
 8008bce:	609a      	str	r2, [r3, #8]
 8008bd0:	68fb      	ldr	r3, [r7, #12]
 8008bd2:	681b      	ldr	r3, [r3, #0]
 8008bd4:	681a      	ldr	r2, [r3, #0]
 8008bd6:	68fb      	ldr	r3, [r7, #12]
 8008bd8:	681b      	ldr	r3, [r3, #0]
 8008bda:	f042 0216 	orr.w	r2, r2, #22
 8008bde:	601a      	str	r2, [r3, #0]
 8008be0:	68fb      	ldr	r3, [r7, #12]
 8008be2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008be4:	2b00      	cmp	r3, #0
 8008be6:	d007      	beq.n	8008bf8 <HAL_DMA_Start_IT+0x88>
 8008be8:	68fb      	ldr	r3, [r7, #12]
 8008bea:	681b      	ldr	r3, [r3, #0]
 8008bec:	681a      	ldr	r2, [r3, #0]
 8008bee:	68fb      	ldr	r3, [r7, #12]
 8008bf0:	681b      	ldr	r3, [r3, #0]
 8008bf2:	f042 0208 	orr.w	r2, r2, #8
 8008bf6:	601a      	str	r2, [r3, #0]
 8008bf8:	68fb      	ldr	r3, [r7, #12]
 8008bfa:	681b      	ldr	r3, [r3, #0]
 8008bfc:	681a      	ldr	r2, [r3, #0]
 8008bfe:	68fb      	ldr	r3, [r7, #12]
 8008c00:	681b      	ldr	r3, [r3, #0]
 8008c02:	f042 0201 	orr.w	r2, r2, #1
 8008c06:	601a      	str	r2, [r3, #0]
 8008c08:	e005      	b.n	8008c16 <HAL_DMA_Start_IT+0xa6>
 8008c0a:	68fb      	ldr	r3, [r7, #12]
 8008c0c:	2200      	movs	r2, #0
 8008c0e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008c12:	2302      	movs	r3, #2
 8008c14:	75fb      	strb	r3, [r7, #23]
 8008c16:	7dfb      	ldrb	r3, [r7, #23]
 8008c18:	4618      	mov	r0, r3
 8008c1a:	3718      	adds	r7, #24
 8008c1c:	46bd      	mov	sp, r7
 8008c1e:	bd80      	pop	{r7, pc}

08008c20 <HAL_DMA_IRQHandler>:
 8008c20:	b580      	push	{r7, lr}
 8008c22:	b086      	sub	sp, #24
 8008c24:	af00      	add	r7, sp, #0
 8008c26:	6078      	str	r0, [r7, #4]
 8008c28:	2300      	movs	r3, #0
 8008c2a:	60bb      	str	r3, [r7, #8]
 8008c2c:	4b8e      	ldr	r3, [pc, #568]	; (8008e68 <HAL_DMA_IRQHandler+0x248>)
 8008c2e:	681b      	ldr	r3, [r3, #0]
 8008c30:	4a8e      	ldr	r2, [pc, #568]	; (8008e6c <HAL_DMA_IRQHandler+0x24c>)
 8008c32:	fba2 2303 	umull	r2, r3, r2, r3
 8008c36:	0a9b      	lsrs	r3, r3, #10
 8008c38:	617b      	str	r3, [r7, #20]
 8008c3a:	687b      	ldr	r3, [r7, #4]
 8008c3c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008c3e:	613b      	str	r3, [r7, #16]
 8008c40:	693b      	ldr	r3, [r7, #16]
 8008c42:	681b      	ldr	r3, [r3, #0]
 8008c44:	60fb      	str	r3, [r7, #12]
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008c4a:	2208      	movs	r2, #8
 8008c4c:	409a      	lsls	r2, r3
 8008c4e:	68fb      	ldr	r3, [r7, #12]
 8008c50:	4013      	ands	r3, r2
 8008c52:	2b00      	cmp	r3, #0
 8008c54:	d01a      	beq.n	8008c8c <HAL_DMA_IRQHandler+0x6c>
 8008c56:	687b      	ldr	r3, [r7, #4]
 8008c58:	681b      	ldr	r3, [r3, #0]
 8008c5a:	681b      	ldr	r3, [r3, #0]
 8008c5c:	f003 0304 	and.w	r3, r3, #4
 8008c60:	2b00      	cmp	r3, #0
 8008c62:	d013      	beq.n	8008c8c <HAL_DMA_IRQHandler+0x6c>
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	681b      	ldr	r3, [r3, #0]
 8008c68:	681a      	ldr	r2, [r3, #0]
 8008c6a:	687b      	ldr	r3, [r7, #4]
 8008c6c:	681b      	ldr	r3, [r3, #0]
 8008c6e:	f022 0204 	bic.w	r2, r2, #4
 8008c72:	601a      	str	r2, [r3, #0]
 8008c74:	687b      	ldr	r3, [r7, #4]
 8008c76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008c78:	2208      	movs	r2, #8
 8008c7a:	409a      	lsls	r2, r3
 8008c7c:	693b      	ldr	r3, [r7, #16]
 8008c7e:	609a      	str	r2, [r3, #8]
 8008c80:	687b      	ldr	r3, [r7, #4]
 8008c82:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c84:	f043 0201 	orr.w	r2, r3, #1
 8008c88:	687b      	ldr	r3, [r7, #4]
 8008c8a:	655a      	str	r2, [r3, #84]	; 0x54
 8008c8c:	687b      	ldr	r3, [r7, #4]
 8008c8e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008c90:	2201      	movs	r2, #1
 8008c92:	409a      	lsls	r2, r3
 8008c94:	68fb      	ldr	r3, [r7, #12]
 8008c96:	4013      	ands	r3, r2
 8008c98:	2b00      	cmp	r3, #0
 8008c9a:	d012      	beq.n	8008cc2 <HAL_DMA_IRQHandler+0xa2>
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	695b      	ldr	r3, [r3, #20]
 8008ca2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8008ca6:	2b00      	cmp	r3, #0
 8008ca8:	d00b      	beq.n	8008cc2 <HAL_DMA_IRQHandler+0xa2>
 8008caa:	687b      	ldr	r3, [r7, #4]
 8008cac:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008cae:	2201      	movs	r2, #1
 8008cb0:	409a      	lsls	r2, r3
 8008cb2:	693b      	ldr	r3, [r7, #16]
 8008cb4:	609a      	str	r2, [r3, #8]
 8008cb6:	687b      	ldr	r3, [r7, #4]
 8008cb8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008cba:	f043 0202 	orr.w	r2, r3, #2
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	655a      	str	r2, [r3, #84]	; 0x54
 8008cc2:	687b      	ldr	r3, [r7, #4]
 8008cc4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008cc6:	2204      	movs	r2, #4
 8008cc8:	409a      	lsls	r2, r3
 8008cca:	68fb      	ldr	r3, [r7, #12]
 8008ccc:	4013      	ands	r3, r2
 8008cce:	2b00      	cmp	r3, #0
 8008cd0:	d012      	beq.n	8008cf8 <HAL_DMA_IRQHandler+0xd8>
 8008cd2:	687b      	ldr	r3, [r7, #4]
 8008cd4:	681b      	ldr	r3, [r3, #0]
 8008cd6:	681b      	ldr	r3, [r3, #0]
 8008cd8:	f003 0302 	and.w	r3, r3, #2
 8008cdc:	2b00      	cmp	r3, #0
 8008cde:	d00b      	beq.n	8008cf8 <HAL_DMA_IRQHandler+0xd8>
 8008ce0:	687b      	ldr	r3, [r7, #4]
 8008ce2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008ce4:	2204      	movs	r2, #4
 8008ce6:	409a      	lsls	r2, r3
 8008ce8:	693b      	ldr	r3, [r7, #16]
 8008cea:	609a      	str	r2, [r3, #8]
 8008cec:	687b      	ldr	r3, [r7, #4]
 8008cee:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008cf0:	f043 0204 	orr.w	r2, r3, #4
 8008cf4:	687b      	ldr	r3, [r7, #4]
 8008cf6:	655a      	str	r2, [r3, #84]	; 0x54
 8008cf8:	687b      	ldr	r3, [r7, #4]
 8008cfa:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008cfc:	2210      	movs	r2, #16
 8008cfe:	409a      	lsls	r2, r3
 8008d00:	68fb      	ldr	r3, [r7, #12]
 8008d02:	4013      	ands	r3, r2
 8008d04:	2b00      	cmp	r3, #0
 8008d06:	d043      	beq.n	8008d90 <HAL_DMA_IRQHandler+0x170>
 8008d08:	687b      	ldr	r3, [r7, #4]
 8008d0a:	681b      	ldr	r3, [r3, #0]
 8008d0c:	681b      	ldr	r3, [r3, #0]
 8008d0e:	f003 0308 	and.w	r3, r3, #8
 8008d12:	2b00      	cmp	r3, #0
 8008d14:	d03c      	beq.n	8008d90 <HAL_DMA_IRQHandler+0x170>
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008d1a:	2210      	movs	r2, #16
 8008d1c:	409a      	lsls	r2, r3
 8008d1e:	693b      	ldr	r3, [r7, #16]
 8008d20:	609a      	str	r2, [r3, #8]
 8008d22:	687b      	ldr	r3, [r7, #4]
 8008d24:	681b      	ldr	r3, [r3, #0]
 8008d26:	681b      	ldr	r3, [r3, #0]
 8008d28:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008d2c:	2b00      	cmp	r3, #0
 8008d2e:	d018      	beq.n	8008d62 <HAL_DMA_IRQHandler+0x142>
 8008d30:	687b      	ldr	r3, [r7, #4]
 8008d32:	681b      	ldr	r3, [r3, #0]
 8008d34:	681b      	ldr	r3, [r3, #0]
 8008d36:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008d3a:	2b00      	cmp	r3, #0
 8008d3c:	d108      	bne.n	8008d50 <HAL_DMA_IRQHandler+0x130>
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008d42:	2b00      	cmp	r3, #0
 8008d44:	d024      	beq.n	8008d90 <HAL_DMA_IRQHandler+0x170>
 8008d46:	687b      	ldr	r3, [r7, #4]
 8008d48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008d4a:	6878      	ldr	r0, [r7, #4]
 8008d4c:	4798      	blx	r3
 8008d4e:	e01f      	b.n	8008d90 <HAL_DMA_IRQHandler+0x170>
 8008d50:	687b      	ldr	r3, [r7, #4]
 8008d52:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d54:	2b00      	cmp	r3, #0
 8008d56:	d01b      	beq.n	8008d90 <HAL_DMA_IRQHandler+0x170>
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d5c:	6878      	ldr	r0, [r7, #4]
 8008d5e:	4798      	blx	r3
 8008d60:	e016      	b.n	8008d90 <HAL_DMA_IRQHandler+0x170>
 8008d62:	687b      	ldr	r3, [r7, #4]
 8008d64:	681b      	ldr	r3, [r3, #0]
 8008d66:	681b      	ldr	r3, [r3, #0]
 8008d68:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008d6c:	2b00      	cmp	r3, #0
 8008d6e:	d107      	bne.n	8008d80 <HAL_DMA_IRQHandler+0x160>
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	681b      	ldr	r3, [r3, #0]
 8008d74:	681a      	ldr	r2, [r3, #0]
 8008d76:	687b      	ldr	r3, [r7, #4]
 8008d78:	681b      	ldr	r3, [r3, #0]
 8008d7a:	f022 0208 	bic.w	r2, r2, #8
 8008d7e:	601a      	str	r2, [r3, #0]
 8008d80:	687b      	ldr	r3, [r7, #4]
 8008d82:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008d84:	2b00      	cmp	r3, #0
 8008d86:	d003      	beq.n	8008d90 <HAL_DMA_IRQHandler+0x170>
 8008d88:	687b      	ldr	r3, [r7, #4]
 8008d8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008d8c:	6878      	ldr	r0, [r7, #4]
 8008d8e:	4798      	blx	r3
 8008d90:	687b      	ldr	r3, [r7, #4]
 8008d92:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008d94:	2220      	movs	r2, #32
 8008d96:	409a      	lsls	r2, r3
 8008d98:	68fb      	ldr	r3, [r7, #12]
 8008d9a:	4013      	ands	r3, r2
 8008d9c:	2b00      	cmp	r3, #0
 8008d9e:	f000 808f 	beq.w	8008ec0 <HAL_DMA_IRQHandler+0x2a0>
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	681b      	ldr	r3, [r3, #0]
 8008da6:	681b      	ldr	r3, [r3, #0]
 8008da8:	f003 0310 	and.w	r3, r3, #16
 8008dac:	2b00      	cmp	r3, #0
 8008dae:	f000 8087 	beq.w	8008ec0 <HAL_DMA_IRQHandler+0x2a0>
 8008db2:	687b      	ldr	r3, [r7, #4]
 8008db4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008db6:	2220      	movs	r2, #32
 8008db8:	409a      	lsls	r2, r3
 8008dba:	693b      	ldr	r3, [r7, #16]
 8008dbc:	609a      	str	r2, [r3, #8]
 8008dbe:	687b      	ldr	r3, [r7, #4]
 8008dc0:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8008dc4:	b2db      	uxtb	r3, r3
 8008dc6:	2b05      	cmp	r3, #5
 8008dc8:	d136      	bne.n	8008e38 <HAL_DMA_IRQHandler+0x218>
 8008dca:	687b      	ldr	r3, [r7, #4]
 8008dcc:	681b      	ldr	r3, [r3, #0]
 8008dce:	681a      	ldr	r2, [r3, #0]
 8008dd0:	687b      	ldr	r3, [r7, #4]
 8008dd2:	681b      	ldr	r3, [r3, #0]
 8008dd4:	f022 0216 	bic.w	r2, r2, #22
 8008dd8:	601a      	str	r2, [r3, #0]
 8008dda:	687b      	ldr	r3, [r7, #4]
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	695a      	ldr	r2, [r3, #20]
 8008de0:	687b      	ldr	r3, [r7, #4]
 8008de2:	681b      	ldr	r3, [r3, #0]
 8008de4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8008de8:	615a      	str	r2, [r3, #20]
 8008dea:	687b      	ldr	r3, [r7, #4]
 8008dec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008dee:	2b00      	cmp	r3, #0
 8008df0:	d103      	bne.n	8008dfa <HAL_DMA_IRQHandler+0x1da>
 8008df2:	687b      	ldr	r3, [r7, #4]
 8008df4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008df6:	2b00      	cmp	r3, #0
 8008df8:	d007      	beq.n	8008e0a <HAL_DMA_IRQHandler+0x1ea>
 8008dfa:	687b      	ldr	r3, [r7, #4]
 8008dfc:	681b      	ldr	r3, [r3, #0]
 8008dfe:	681a      	ldr	r2, [r3, #0]
 8008e00:	687b      	ldr	r3, [r7, #4]
 8008e02:	681b      	ldr	r3, [r3, #0]
 8008e04:	f022 0208 	bic.w	r2, r2, #8
 8008e08:	601a      	str	r2, [r3, #0]
 8008e0a:	687b      	ldr	r3, [r7, #4]
 8008e0c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008e0e:	223f      	movs	r2, #63	; 0x3f
 8008e10:	409a      	lsls	r2, r3
 8008e12:	693b      	ldr	r3, [r7, #16]
 8008e14:	609a      	str	r2, [r3, #8]
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	2201      	movs	r2, #1
 8008e1a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008e1e:	687b      	ldr	r3, [r7, #4]
 8008e20:	2200      	movs	r2, #0
 8008e22:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008e26:	687b      	ldr	r3, [r7, #4]
 8008e28:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008e2a:	2b00      	cmp	r3, #0
 8008e2c:	d07e      	beq.n	8008f2c <HAL_DMA_IRQHandler+0x30c>
 8008e2e:	687b      	ldr	r3, [r7, #4]
 8008e30:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008e32:	6878      	ldr	r0, [r7, #4]
 8008e34:	4798      	blx	r3
 8008e36:	e079      	b.n	8008f2c <HAL_DMA_IRQHandler+0x30c>
 8008e38:	687b      	ldr	r3, [r7, #4]
 8008e3a:	681b      	ldr	r3, [r3, #0]
 8008e3c:	681b      	ldr	r3, [r3, #0]
 8008e3e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8008e42:	2b00      	cmp	r3, #0
 8008e44:	d01d      	beq.n	8008e82 <HAL_DMA_IRQHandler+0x262>
 8008e46:	687b      	ldr	r3, [r7, #4]
 8008e48:	681b      	ldr	r3, [r3, #0]
 8008e4a:	681b      	ldr	r3, [r3, #0]
 8008e4c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8008e50:	2b00      	cmp	r3, #0
 8008e52:	d10d      	bne.n	8008e70 <HAL_DMA_IRQHandler+0x250>
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008e58:	2b00      	cmp	r3, #0
 8008e5a:	d031      	beq.n	8008ec0 <HAL_DMA_IRQHandler+0x2a0>
 8008e5c:	687b      	ldr	r3, [r7, #4]
 8008e5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8008e60:	6878      	ldr	r0, [r7, #4]
 8008e62:	4798      	blx	r3
 8008e64:	e02c      	b.n	8008ec0 <HAL_DMA_IRQHandler+0x2a0>
 8008e66:	bf00      	nop
 8008e68:	20000024 	.word	0x20000024
 8008e6c:	1b4e81b5 	.word	0x1b4e81b5
 8008e70:	687b      	ldr	r3, [r7, #4]
 8008e72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008e74:	2b00      	cmp	r3, #0
 8008e76:	d023      	beq.n	8008ec0 <HAL_DMA_IRQHandler+0x2a0>
 8008e78:	687b      	ldr	r3, [r7, #4]
 8008e7a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008e7c:	6878      	ldr	r0, [r7, #4]
 8008e7e:	4798      	blx	r3
 8008e80:	e01e      	b.n	8008ec0 <HAL_DMA_IRQHandler+0x2a0>
 8008e82:	687b      	ldr	r3, [r7, #4]
 8008e84:	681b      	ldr	r3, [r3, #0]
 8008e86:	681b      	ldr	r3, [r3, #0]
 8008e88:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008e8c:	2b00      	cmp	r3, #0
 8008e8e:	d10f      	bne.n	8008eb0 <HAL_DMA_IRQHandler+0x290>
 8008e90:	687b      	ldr	r3, [r7, #4]
 8008e92:	681b      	ldr	r3, [r3, #0]
 8008e94:	681a      	ldr	r2, [r3, #0]
 8008e96:	687b      	ldr	r3, [r7, #4]
 8008e98:	681b      	ldr	r3, [r3, #0]
 8008e9a:	f022 0210 	bic.w	r2, r2, #16
 8008e9e:	601a      	str	r2, [r3, #0]
 8008ea0:	687b      	ldr	r3, [r7, #4]
 8008ea2:	2201      	movs	r2, #1
 8008ea4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008ea8:	687b      	ldr	r3, [r7, #4]
 8008eaa:	2200      	movs	r2, #0
 8008eac:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008eb0:	687b      	ldr	r3, [r7, #4]
 8008eb2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008eb4:	2b00      	cmp	r3, #0
 8008eb6:	d003      	beq.n	8008ec0 <HAL_DMA_IRQHandler+0x2a0>
 8008eb8:	687b      	ldr	r3, [r7, #4]
 8008eba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008ebc:	6878      	ldr	r0, [r7, #4]
 8008ebe:	4798      	blx	r3
 8008ec0:	687b      	ldr	r3, [r7, #4]
 8008ec2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ec4:	2b00      	cmp	r3, #0
 8008ec6:	d032      	beq.n	8008f2e <HAL_DMA_IRQHandler+0x30e>
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ecc:	f003 0301 	and.w	r3, r3, #1
 8008ed0:	2b00      	cmp	r3, #0
 8008ed2:	d022      	beq.n	8008f1a <HAL_DMA_IRQHandler+0x2fa>
 8008ed4:	687b      	ldr	r3, [r7, #4]
 8008ed6:	2205      	movs	r2, #5
 8008ed8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	681b      	ldr	r3, [r3, #0]
 8008ee0:	681a      	ldr	r2, [r3, #0]
 8008ee2:	687b      	ldr	r3, [r7, #4]
 8008ee4:	681b      	ldr	r3, [r3, #0]
 8008ee6:	f022 0201 	bic.w	r2, r2, #1
 8008eea:	601a      	str	r2, [r3, #0]
 8008eec:	68bb      	ldr	r3, [r7, #8]
 8008eee:	3301      	adds	r3, #1
 8008ef0:	60bb      	str	r3, [r7, #8]
 8008ef2:	697a      	ldr	r2, [r7, #20]
 8008ef4:	429a      	cmp	r2, r3
 8008ef6:	d307      	bcc.n	8008f08 <HAL_DMA_IRQHandler+0x2e8>
 8008ef8:	687b      	ldr	r3, [r7, #4]
 8008efa:	681b      	ldr	r3, [r3, #0]
 8008efc:	681b      	ldr	r3, [r3, #0]
 8008efe:	f003 0301 	and.w	r3, r3, #1
 8008f02:	2b00      	cmp	r3, #0
 8008f04:	d1f2      	bne.n	8008eec <HAL_DMA_IRQHandler+0x2cc>
 8008f06:	e000      	b.n	8008f0a <HAL_DMA_IRQHandler+0x2ea>
 8008f08:	bf00      	nop
 8008f0a:	687b      	ldr	r3, [r7, #4]
 8008f0c:	2201      	movs	r2, #1
 8008f0e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8008f12:	687b      	ldr	r3, [r7, #4]
 8008f14:	2200      	movs	r2, #0
 8008f16:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8008f1a:	687b      	ldr	r3, [r7, #4]
 8008f1c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008f1e:	2b00      	cmp	r3, #0
 8008f20:	d005      	beq.n	8008f2e <HAL_DMA_IRQHandler+0x30e>
 8008f22:	687b      	ldr	r3, [r7, #4]
 8008f24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008f26:	6878      	ldr	r0, [r7, #4]
 8008f28:	4798      	blx	r3
 8008f2a:	e000      	b.n	8008f2e <HAL_DMA_IRQHandler+0x30e>
 8008f2c:	bf00      	nop
 8008f2e:	3718      	adds	r7, #24
 8008f30:	46bd      	mov	sp, r7
 8008f32:	bd80      	pop	{r7, pc}

08008f34 <DMA_SetConfig>:
 8008f34:	b480      	push	{r7}
 8008f36:	b085      	sub	sp, #20
 8008f38:	af00      	add	r7, sp, #0
 8008f3a:	60f8      	str	r0, [r7, #12]
 8008f3c:	60b9      	str	r1, [r7, #8]
 8008f3e:	607a      	str	r2, [r7, #4]
 8008f40:	603b      	str	r3, [r7, #0]
 8008f42:	68fb      	ldr	r3, [r7, #12]
 8008f44:	681b      	ldr	r3, [r3, #0]
 8008f46:	681a      	ldr	r2, [r3, #0]
 8008f48:	68fb      	ldr	r3, [r7, #12]
 8008f4a:	681b      	ldr	r3, [r3, #0]
 8008f4c:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8008f50:	601a      	str	r2, [r3, #0]
 8008f52:	68fb      	ldr	r3, [r7, #12]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	683a      	ldr	r2, [r7, #0]
 8008f58:	605a      	str	r2, [r3, #4]
 8008f5a:	68fb      	ldr	r3, [r7, #12]
 8008f5c:	689b      	ldr	r3, [r3, #8]
 8008f5e:	2b40      	cmp	r3, #64	; 0x40
 8008f60:	d108      	bne.n	8008f74 <DMA_SetConfig+0x40>
 8008f62:	68fb      	ldr	r3, [r7, #12]
 8008f64:	681b      	ldr	r3, [r3, #0]
 8008f66:	687a      	ldr	r2, [r7, #4]
 8008f68:	609a      	str	r2, [r3, #8]
 8008f6a:	68fb      	ldr	r3, [r7, #12]
 8008f6c:	681b      	ldr	r3, [r3, #0]
 8008f6e:	68ba      	ldr	r2, [r7, #8]
 8008f70:	60da      	str	r2, [r3, #12]
 8008f72:	e007      	b.n	8008f84 <DMA_SetConfig+0x50>
 8008f74:	68fb      	ldr	r3, [r7, #12]
 8008f76:	681b      	ldr	r3, [r3, #0]
 8008f78:	68ba      	ldr	r2, [r7, #8]
 8008f7a:	609a      	str	r2, [r3, #8]
 8008f7c:	68fb      	ldr	r3, [r7, #12]
 8008f7e:	681b      	ldr	r3, [r3, #0]
 8008f80:	687a      	ldr	r2, [r7, #4]
 8008f82:	60da      	str	r2, [r3, #12]
 8008f84:	bf00      	nop
 8008f86:	3714      	adds	r7, #20
 8008f88:	46bd      	mov	sp, r7
 8008f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f8e:	4770      	bx	lr

08008f90 <DMA_CalcBaseAndBitshift>:
 8008f90:	b480      	push	{r7}
 8008f92:	b085      	sub	sp, #20
 8008f94:	af00      	add	r7, sp, #0
 8008f96:	6078      	str	r0, [r7, #4]
 8008f98:	687b      	ldr	r3, [r7, #4]
 8008f9a:	681b      	ldr	r3, [r3, #0]
 8008f9c:	b2db      	uxtb	r3, r3
 8008f9e:	3b10      	subs	r3, #16
 8008fa0:	4a14      	ldr	r2, [pc, #80]	; (8008ff4 <DMA_CalcBaseAndBitshift+0x64>)
 8008fa2:	fba2 2303 	umull	r2, r3, r2, r3
 8008fa6:	091b      	lsrs	r3, r3, #4
 8008fa8:	60fb      	str	r3, [r7, #12]
 8008faa:	4a13      	ldr	r2, [pc, #76]	; (8008ff8 <DMA_CalcBaseAndBitshift+0x68>)
 8008fac:	68fb      	ldr	r3, [r7, #12]
 8008fae:	4413      	add	r3, r2
 8008fb0:	781b      	ldrb	r3, [r3, #0]
 8008fb2:	461a      	mov	r2, r3
 8008fb4:	687b      	ldr	r3, [r7, #4]
 8008fb6:	65da      	str	r2, [r3, #92]	; 0x5c
 8008fb8:	68fb      	ldr	r3, [r7, #12]
 8008fba:	2b03      	cmp	r3, #3
 8008fbc:	d909      	bls.n	8008fd2 <DMA_CalcBaseAndBitshift+0x42>
 8008fbe:	687b      	ldr	r3, [r7, #4]
 8008fc0:	681b      	ldr	r3, [r3, #0]
 8008fc2:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8008fc6:	f023 0303 	bic.w	r3, r3, #3
 8008fca:	1d1a      	adds	r2, r3, #4
 8008fcc:	687b      	ldr	r3, [r7, #4]
 8008fce:	659a      	str	r2, [r3, #88]	; 0x58
 8008fd0:	e007      	b.n	8008fe2 <DMA_CalcBaseAndBitshift+0x52>
 8008fd2:	687b      	ldr	r3, [r7, #4]
 8008fd4:	681b      	ldr	r3, [r3, #0]
 8008fd6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8008fda:	f023 0303 	bic.w	r3, r3, #3
 8008fde:	687a      	ldr	r2, [r7, #4]
 8008fe0:	6593      	str	r3, [r2, #88]	; 0x58
 8008fe2:	687b      	ldr	r3, [r7, #4]
 8008fe4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008fe6:	4618      	mov	r0, r3
 8008fe8:	3714      	adds	r7, #20
 8008fea:	46bd      	mov	sp, r7
 8008fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ff0:	4770      	bx	lr
 8008ff2:	bf00      	nop
 8008ff4:	aaaaaaab 	.word	0xaaaaaaab
 8008ff8:	080142bc 	.word	0x080142bc

08008ffc <DMA_CheckFifoParam>:
 8008ffc:	b480      	push	{r7}
 8008ffe:	b085      	sub	sp, #20
 8009000:	af00      	add	r7, sp, #0
 8009002:	6078      	str	r0, [r7, #4]
 8009004:	2300      	movs	r3, #0
 8009006:	73fb      	strb	r3, [r7, #15]
 8009008:	687b      	ldr	r3, [r7, #4]
 800900a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800900c:	60bb      	str	r3, [r7, #8]
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	699b      	ldr	r3, [r3, #24]
 8009012:	2b00      	cmp	r3, #0
 8009014:	d11f      	bne.n	8009056 <DMA_CheckFifoParam+0x5a>
 8009016:	68bb      	ldr	r3, [r7, #8]
 8009018:	2b03      	cmp	r3, #3
 800901a:	d856      	bhi.n	80090ca <DMA_CheckFifoParam+0xce>
 800901c:	a201      	add	r2, pc, #4	; (adr r2, 8009024 <DMA_CheckFifoParam+0x28>)
 800901e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009022:	bf00      	nop
 8009024:	08009035 	.word	0x08009035
 8009028:	08009047 	.word	0x08009047
 800902c:	08009035 	.word	0x08009035
 8009030:	080090cb 	.word	0x080090cb
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009038:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800903c:	2b00      	cmp	r3, #0
 800903e:	d046      	beq.n	80090ce <DMA_CheckFifoParam+0xd2>
 8009040:	2301      	movs	r3, #1
 8009042:	73fb      	strb	r3, [r7, #15]
 8009044:	e043      	b.n	80090ce <DMA_CheckFifoParam+0xd2>
 8009046:	687b      	ldr	r3, [r7, #4]
 8009048:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800904a:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800904e:	d140      	bne.n	80090d2 <DMA_CheckFifoParam+0xd6>
 8009050:	2301      	movs	r3, #1
 8009052:	73fb      	strb	r3, [r7, #15]
 8009054:	e03d      	b.n	80090d2 <DMA_CheckFifoParam+0xd6>
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	699b      	ldr	r3, [r3, #24]
 800905a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800905e:	d121      	bne.n	80090a4 <DMA_CheckFifoParam+0xa8>
 8009060:	68bb      	ldr	r3, [r7, #8]
 8009062:	2b03      	cmp	r3, #3
 8009064:	d837      	bhi.n	80090d6 <DMA_CheckFifoParam+0xda>
 8009066:	a201      	add	r2, pc, #4	; (adr r2, 800906c <DMA_CheckFifoParam+0x70>)
 8009068:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800906c:	0800907d 	.word	0x0800907d
 8009070:	08009083 	.word	0x08009083
 8009074:	0800907d 	.word	0x0800907d
 8009078:	08009095 	.word	0x08009095
 800907c:	2301      	movs	r3, #1
 800907e:	73fb      	strb	r3, [r7, #15]
 8009080:	e030      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 8009082:	687b      	ldr	r3, [r7, #4]
 8009084:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009086:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800908a:	2b00      	cmp	r3, #0
 800908c:	d025      	beq.n	80090da <DMA_CheckFifoParam+0xde>
 800908e:	2301      	movs	r3, #1
 8009090:	73fb      	strb	r3, [r7, #15]
 8009092:	e022      	b.n	80090da <DMA_CheckFifoParam+0xde>
 8009094:	687b      	ldr	r3, [r7, #4]
 8009096:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009098:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800909c:	d11f      	bne.n	80090de <DMA_CheckFifoParam+0xe2>
 800909e:	2301      	movs	r3, #1
 80090a0:	73fb      	strb	r3, [r7, #15]
 80090a2:	e01c      	b.n	80090de <DMA_CheckFifoParam+0xe2>
 80090a4:	68bb      	ldr	r3, [r7, #8]
 80090a6:	2b02      	cmp	r3, #2
 80090a8:	d903      	bls.n	80090b2 <DMA_CheckFifoParam+0xb6>
 80090aa:	68bb      	ldr	r3, [r7, #8]
 80090ac:	2b03      	cmp	r3, #3
 80090ae:	d003      	beq.n	80090b8 <DMA_CheckFifoParam+0xbc>
 80090b0:	e018      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090b2:	2301      	movs	r3, #1
 80090b4:	73fb      	strb	r3, [r7, #15]
 80090b6:	e015      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090b8:	687b      	ldr	r3, [r7, #4]
 80090ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80090bc:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80090c0:	2b00      	cmp	r3, #0
 80090c2:	d00e      	beq.n	80090e2 <DMA_CheckFifoParam+0xe6>
 80090c4:	2301      	movs	r3, #1
 80090c6:	73fb      	strb	r3, [r7, #15]
 80090c8:	e00b      	b.n	80090e2 <DMA_CheckFifoParam+0xe6>
 80090ca:	bf00      	nop
 80090cc:	e00a      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090ce:	bf00      	nop
 80090d0:	e008      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090d2:	bf00      	nop
 80090d4:	e006      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090d6:	bf00      	nop
 80090d8:	e004      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090da:	bf00      	nop
 80090dc:	e002      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090de:	bf00      	nop
 80090e0:	e000      	b.n	80090e4 <DMA_CheckFifoParam+0xe8>
 80090e2:	bf00      	nop
 80090e4:	7bfb      	ldrb	r3, [r7, #15]
 80090e6:	4618      	mov	r0, r3
 80090e8:	3714      	adds	r7, #20
 80090ea:	46bd      	mov	sp, r7
 80090ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090f0:	4770      	bx	lr
 80090f2:	bf00      	nop

080090f4 <HAL_GPIO_Init>:
 80090f4:	b480      	push	{r7}
 80090f6:	b089      	sub	sp, #36	; 0x24
 80090f8:	af00      	add	r7, sp, #0
 80090fa:	6078      	str	r0, [r7, #4]
 80090fc:	6039      	str	r1, [r7, #0]
 80090fe:	2300      	movs	r3, #0
 8009100:	617b      	str	r3, [r7, #20]
 8009102:	2300      	movs	r3, #0
 8009104:	613b      	str	r3, [r7, #16]
 8009106:	2300      	movs	r3, #0
 8009108:	61bb      	str	r3, [r7, #24]
 800910a:	2300      	movs	r3, #0
 800910c:	61fb      	str	r3, [r7, #28]
 800910e:	e16b      	b.n	80093e8 <HAL_GPIO_Init+0x2f4>
 8009110:	2201      	movs	r2, #1
 8009112:	69fb      	ldr	r3, [r7, #28]
 8009114:	fa02 f303 	lsl.w	r3, r2, r3
 8009118:	617b      	str	r3, [r7, #20]
 800911a:	683b      	ldr	r3, [r7, #0]
 800911c:	681b      	ldr	r3, [r3, #0]
 800911e:	697a      	ldr	r2, [r7, #20]
 8009120:	4013      	ands	r3, r2
 8009122:	613b      	str	r3, [r7, #16]
 8009124:	693a      	ldr	r2, [r7, #16]
 8009126:	697b      	ldr	r3, [r7, #20]
 8009128:	429a      	cmp	r2, r3
 800912a:	f040 815a 	bne.w	80093e2 <HAL_GPIO_Init+0x2ee>
 800912e:	683b      	ldr	r3, [r7, #0]
 8009130:	685b      	ldr	r3, [r3, #4]
 8009132:	f003 0303 	and.w	r3, r3, #3
 8009136:	2b01      	cmp	r3, #1
 8009138:	d005      	beq.n	8009146 <HAL_GPIO_Init+0x52>
 800913a:	683b      	ldr	r3, [r7, #0]
 800913c:	685b      	ldr	r3, [r3, #4]
 800913e:	f003 0303 	and.w	r3, r3, #3
 8009142:	2b02      	cmp	r3, #2
 8009144:	d130      	bne.n	80091a8 <HAL_GPIO_Init+0xb4>
 8009146:	687b      	ldr	r3, [r7, #4]
 8009148:	689b      	ldr	r3, [r3, #8]
 800914a:	61bb      	str	r3, [r7, #24]
 800914c:	69fb      	ldr	r3, [r7, #28]
 800914e:	005b      	lsls	r3, r3, #1
 8009150:	2203      	movs	r2, #3
 8009152:	fa02 f303 	lsl.w	r3, r2, r3
 8009156:	43db      	mvns	r3, r3
 8009158:	69ba      	ldr	r2, [r7, #24]
 800915a:	4013      	ands	r3, r2
 800915c:	61bb      	str	r3, [r7, #24]
 800915e:	683b      	ldr	r3, [r7, #0]
 8009160:	68da      	ldr	r2, [r3, #12]
 8009162:	69fb      	ldr	r3, [r7, #28]
 8009164:	005b      	lsls	r3, r3, #1
 8009166:	fa02 f303 	lsl.w	r3, r2, r3
 800916a:	69ba      	ldr	r2, [r7, #24]
 800916c:	4313      	orrs	r3, r2
 800916e:	61bb      	str	r3, [r7, #24]
 8009170:	687b      	ldr	r3, [r7, #4]
 8009172:	69ba      	ldr	r2, [r7, #24]
 8009174:	609a      	str	r2, [r3, #8]
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	685b      	ldr	r3, [r3, #4]
 800917a:	61bb      	str	r3, [r7, #24]
 800917c:	2201      	movs	r2, #1
 800917e:	69fb      	ldr	r3, [r7, #28]
 8009180:	fa02 f303 	lsl.w	r3, r2, r3
 8009184:	43db      	mvns	r3, r3
 8009186:	69ba      	ldr	r2, [r7, #24]
 8009188:	4013      	ands	r3, r2
 800918a:	61bb      	str	r3, [r7, #24]
 800918c:	683b      	ldr	r3, [r7, #0]
 800918e:	685b      	ldr	r3, [r3, #4]
 8009190:	091b      	lsrs	r3, r3, #4
 8009192:	f003 0201 	and.w	r2, r3, #1
 8009196:	69fb      	ldr	r3, [r7, #28]
 8009198:	fa02 f303 	lsl.w	r3, r2, r3
 800919c:	69ba      	ldr	r2, [r7, #24]
 800919e:	4313      	orrs	r3, r2
 80091a0:	61bb      	str	r3, [r7, #24]
 80091a2:	687b      	ldr	r3, [r7, #4]
 80091a4:	69ba      	ldr	r2, [r7, #24]
 80091a6:	605a      	str	r2, [r3, #4]
 80091a8:	683b      	ldr	r3, [r7, #0]
 80091aa:	685b      	ldr	r3, [r3, #4]
 80091ac:	f003 0303 	and.w	r3, r3, #3
 80091b0:	2b03      	cmp	r3, #3
 80091b2:	d017      	beq.n	80091e4 <HAL_GPIO_Init+0xf0>
 80091b4:	687b      	ldr	r3, [r7, #4]
 80091b6:	68db      	ldr	r3, [r3, #12]
 80091b8:	61bb      	str	r3, [r7, #24]
 80091ba:	69fb      	ldr	r3, [r7, #28]
 80091bc:	005b      	lsls	r3, r3, #1
 80091be:	2203      	movs	r2, #3
 80091c0:	fa02 f303 	lsl.w	r3, r2, r3
 80091c4:	43db      	mvns	r3, r3
 80091c6:	69ba      	ldr	r2, [r7, #24]
 80091c8:	4013      	ands	r3, r2
 80091ca:	61bb      	str	r3, [r7, #24]
 80091cc:	683b      	ldr	r3, [r7, #0]
 80091ce:	689a      	ldr	r2, [r3, #8]
 80091d0:	69fb      	ldr	r3, [r7, #28]
 80091d2:	005b      	lsls	r3, r3, #1
 80091d4:	fa02 f303 	lsl.w	r3, r2, r3
 80091d8:	69ba      	ldr	r2, [r7, #24]
 80091da:	4313      	orrs	r3, r2
 80091dc:	61bb      	str	r3, [r7, #24]
 80091de:	687b      	ldr	r3, [r7, #4]
 80091e0:	69ba      	ldr	r2, [r7, #24]
 80091e2:	60da      	str	r2, [r3, #12]
 80091e4:	683b      	ldr	r3, [r7, #0]
 80091e6:	685b      	ldr	r3, [r3, #4]
 80091e8:	f003 0303 	and.w	r3, r3, #3
 80091ec:	2b02      	cmp	r3, #2
 80091ee:	d123      	bne.n	8009238 <HAL_GPIO_Init+0x144>
 80091f0:	69fb      	ldr	r3, [r7, #28]
 80091f2:	08da      	lsrs	r2, r3, #3
 80091f4:	687b      	ldr	r3, [r7, #4]
 80091f6:	3208      	adds	r2, #8
 80091f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80091fc:	61bb      	str	r3, [r7, #24]
 80091fe:	69fb      	ldr	r3, [r7, #28]
 8009200:	f003 0307 	and.w	r3, r3, #7
 8009204:	009b      	lsls	r3, r3, #2
 8009206:	220f      	movs	r2, #15
 8009208:	fa02 f303 	lsl.w	r3, r2, r3
 800920c:	43db      	mvns	r3, r3
 800920e:	69ba      	ldr	r2, [r7, #24]
 8009210:	4013      	ands	r3, r2
 8009212:	61bb      	str	r3, [r7, #24]
 8009214:	683b      	ldr	r3, [r7, #0]
 8009216:	691a      	ldr	r2, [r3, #16]
 8009218:	69fb      	ldr	r3, [r7, #28]
 800921a:	f003 0307 	and.w	r3, r3, #7
 800921e:	009b      	lsls	r3, r3, #2
 8009220:	fa02 f303 	lsl.w	r3, r2, r3
 8009224:	69ba      	ldr	r2, [r7, #24]
 8009226:	4313      	orrs	r3, r2
 8009228:	61bb      	str	r3, [r7, #24]
 800922a:	69fb      	ldr	r3, [r7, #28]
 800922c:	08da      	lsrs	r2, r3, #3
 800922e:	687b      	ldr	r3, [r7, #4]
 8009230:	3208      	adds	r2, #8
 8009232:	69b9      	ldr	r1, [r7, #24]
 8009234:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8009238:	687b      	ldr	r3, [r7, #4]
 800923a:	681b      	ldr	r3, [r3, #0]
 800923c:	61bb      	str	r3, [r7, #24]
 800923e:	69fb      	ldr	r3, [r7, #28]
 8009240:	005b      	lsls	r3, r3, #1
 8009242:	2203      	movs	r2, #3
 8009244:	fa02 f303 	lsl.w	r3, r2, r3
 8009248:	43db      	mvns	r3, r3
 800924a:	69ba      	ldr	r2, [r7, #24]
 800924c:	4013      	ands	r3, r2
 800924e:	61bb      	str	r3, [r7, #24]
 8009250:	683b      	ldr	r3, [r7, #0]
 8009252:	685b      	ldr	r3, [r3, #4]
 8009254:	f003 0203 	and.w	r2, r3, #3
 8009258:	69fb      	ldr	r3, [r7, #28]
 800925a:	005b      	lsls	r3, r3, #1
 800925c:	fa02 f303 	lsl.w	r3, r2, r3
 8009260:	69ba      	ldr	r2, [r7, #24]
 8009262:	4313      	orrs	r3, r2
 8009264:	61bb      	str	r3, [r7, #24]
 8009266:	687b      	ldr	r3, [r7, #4]
 8009268:	69ba      	ldr	r2, [r7, #24]
 800926a:	601a      	str	r2, [r3, #0]
 800926c:	683b      	ldr	r3, [r7, #0]
 800926e:	685b      	ldr	r3, [r3, #4]
 8009270:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8009274:	2b00      	cmp	r3, #0
 8009276:	f000 80b4 	beq.w	80093e2 <HAL_GPIO_Init+0x2ee>
 800927a:	2300      	movs	r3, #0
 800927c:	60fb      	str	r3, [r7, #12]
 800927e:	4b60      	ldr	r3, [pc, #384]	; (8009400 <HAL_GPIO_Init+0x30c>)
 8009280:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009282:	4a5f      	ldr	r2, [pc, #380]	; (8009400 <HAL_GPIO_Init+0x30c>)
 8009284:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8009288:	6453      	str	r3, [r2, #68]	; 0x44
 800928a:	4b5d      	ldr	r3, [pc, #372]	; (8009400 <HAL_GPIO_Init+0x30c>)
 800928c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800928e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8009292:	60fb      	str	r3, [r7, #12]
 8009294:	68fb      	ldr	r3, [r7, #12]
 8009296:	4a5b      	ldr	r2, [pc, #364]	; (8009404 <HAL_GPIO_Init+0x310>)
 8009298:	69fb      	ldr	r3, [r7, #28]
 800929a:	089b      	lsrs	r3, r3, #2
 800929c:	3302      	adds	r3, #2
 800929e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80092a2:	61bb      	str	r3, [r7, #24]
 80092a4:	69fb      	ldr	r3, [r7, #28]
 80092a6:	f003 0303 	and.w	r3, r3, #3
 80092aa:	009b      	lsls	r3, r3, #2
 80092ac:	220f      	movs	r2, #15
 80092ae:	fa02 f303 	lsl.w	r3, r2, r3
 80092b2:	43db      	mvns	r3, r3
 80092b4:	69ba      	ldr	r2, [r7, #24]
 80092b6:	4013      	ands	r3, r2
 80092b8:	61bb      	str	r3, [r7, #24]
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	4a52      	ldr	r2, [pc, #328]	; (8009408 <HAL_GPIO_Init+0x314>)
 80092be:	4293      	cmp	r3, r2
 80092c0:	d02b      	beq.n	800931a <HAL_GPIO_Init+0x226>
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	4a51      	ldr	r2, [pc, #324]	; (800940c <HAL_GPIO_Init+0x318>)
 80092c6:	4293      	cmp	r3, r2
 80092c8:	d025      	beq.n	8009316 <HAL_GPIO_Init+0x222>
 80092ca:	687b      	ldr	r3, [r7, #4]
 80092cc:	4a50      	ldr	r2, [pc, #320]	; (8009410 <HAL_GPIO_Init+0x31c>)
 80092ce:	4293      	cmp	r3, r2
 80092d0:	d01f      	beq.n	8009312 <HAL_GPIO_Init+0x21e>
 80092d2:	687b      	ldr	r3, [r7, #4]
 80092d4:	4a4f      	ldr	r2, [pc, #316]	; (8009414 <HAL_GPIO_Init+0x320>)
 80092d6:	4293      	cmp	r3, r2
 80092d8:	d019      	beq.n	800930e <HAL_GPIO_Init+0x21a>
 80092da:	687b      	ldr	r3, [r7, #4]
 80092dc:	4a4e      	ldr	r2, [pc, #312]	; (8009418 <HAL_GPIO_Init+0x324>)
 80092de:	4293      	cmp	r3, r2
 80092e0:	d013      	beq.n	800930a <HAL_GPIO_Init+0x216>
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	4a4d      	ldr	r2, [pc, #308]	; (800941c <HAL_GPIO_Init+0x328>)
 80092e6:	4293      	cmp	r3, r2
 80092e8:	d00d      	beq.n	8009306 <HAL_GPIO_Init+0x212>
 80092ea:	687b      	ldr	r3, [r7, #4]
 80092ec:	4a4c      	ldr	r2, [pc, #304]	; (8009420 <HAL_GPIO_Init+0x32c>)
 80092ee:	4293      	cmp	r3, r2
 80092f0:	d007      	beq.n	8009302 <HAL_GPIO_Init+0x20e>
 80092f2:	687b      	ldr	r3, [r7, #4]
 80092f4:	4a4b      	ldr	r2, [pc, #300]	; (8009424 <HAL_GPIO_Init+0x330>)
 80092f6:	4293      	cmp	r3, r2
 80092f8:	d101      	bne.n	80092fe <HAL_GPIO_Init+0x20a>
 80092fa:	2307      	movs	r3, #7
 80092fc:	e00e      	b.n	800931c <HAL_GPIO_Init+0x228>
 80092fe:	2308      	movs	r3, #8
 8009300:	e00c      	b.n	800931c <HAL_GPIO_Init+0x228>
 8009302:	2306      	movs	r3, #6
 8009304:	e00a      	b.n	800931c <HAL_GPIO_Init+0x228>
 8009306:	2305      	movs	r3, #5
 8009308:	e008      	b.n	800931c <HAL_GPIO_Init+0x228>
 800930a:	2304      	movs	r3, #4
 800930c:	e006      	b.n	800931c <HAL_GPIO_Init+0x228>
 800930e:	2303      	movs	r3, #3
 8009310:	e004      	b.n	800931c <HAL_GPIO_Init+0x228>
 8009312:	2302      	movs	r3, #2
 8009314:	e002      	b.n	800931c <HAL_GPIO_Init+0x228>
 8009316:	2301      	movs	r3, #1
 8009318:	e000      	b.n	800931c <HAL_GPIO_Init+0x228>
 800931a:	2300      	movs	r3, #0
 800931c:	69fa      	ldr	r2, [r7, #28]
 800931e:	f002 0203 	and.w	r2, r2, #3
 8009322:	0092      	lsls	r2, r2, #2
 8009324:	4093      	lsls	r3, r2
 8009326:	69ba      	ldr	r2, [r7, #24]
 8009328:	4313      	orrs	r3, r2
 800932a:	61bb      	str	r3, [r7, #24]
 800932c:	4935      	ldr	r1, [pc, #212]	; (8009404 <HAL_GPIO_Init+0x310>)
 800932e:	69fb      	ldr	r3, [r7, #28]
 8009330:	089b      	lsrs	r3, r3, #2
 8009332:	3302      	adds	r3, #2
 8009334:	69ba      	ldr	r2, [r7, #24]
 8009336:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800933a:	4b3b      	ldr	r3, [pc, #236]	; (8009428 <HAL_GPIO_Init+0x334>)
 800933c:	689b      	ldr	r3, [r3, #8]
 800933e:	61bb      	str	r3, [r7, #24]
 8009340:	693b      	ldr	r3, [r7, #16]
 8009342:	43db      	mvns	r3, r3
 8009344:	69ba      	ldr	r2, [r7, #24]
 8009346:	4013      	ands	r3, r2
 8009348:	61bb      	str	r3, [r7, #24]
 800934a:	683b      	ldr	r3, [r7, #0]
 800934c:	685b      	ldr	r3, [r3, #4]
 800934e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009352:	2b00      	cmp	r3, #0
 8009354:	d003      	beq.n	800935e <HAL_GPIO_Init+0x26a>
 8009356:	69ba      	ldr	r2, [r7, #24]
 8009358:	693b      	ldr	r3, [r7, #16]
 800935a:	4313      	orrs	r3, r2
 800935c:	61bb      	str	r3, [r7, #24]
 800935e:	4a32      	ldr	r2, [pc, #200]	; (8009428 <HAL_GPIO_Init+0x334>)
 8009360:	69bb      	ldr	r3, [r7, #24]
 8009362:	6093      	str	r3, [r2, #8]
 8009364:	4b30      	ldr	r3, [pc, #192]	; (8009428 <HAL_GPIO_Init+0x334>)
 8009366:	68db      	ldr	r3, [r3, #12]
 8009368:	61bb      	str	r3, [r7, #24]
 800936a:	693b      	ldr	r3, [r7, #16]
 800936c:	43db      	mvns	r3, r3
 800936e:	69ba      	ldr	r2, [r7, #24]
 8009370:	4013      	ands	r3, r2
 8009372:	61bb      	str	r3, [r7, #24]
 8009374:	683b      	ldr	r3, [r7, #0]
 8009376:	685b      	ldr	r3, [r3, #4]
 8009378:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800937c:	2b00      	cmp	r3, #0
 800937e:	d003      	beq.n	8009388 <HAL_GPIO_Init+0x294>
 8009380:	69ba      	ldr	r2, [r7, #24]
 8009382:	693b      	ldr	r3, [r7, #16]
 8009384:	4313      	orrs	r3, r2
 8009386:	61bb      	str	r3, [r7, #24]
 8009388:	4a27      	ldr	r2, [pc, #156]	; (8009428 <HAL_GPIO_Init+0x334>)
 800938a:	69bb      	ldr	r3, [r7, #24]
 800938c:	60d3      	str	r3, [r2, #12]
 800938e:	4b26      	ldr	r3, [pc, #152]	; (8009428 <HAL_GPIO_Init+0x334>)
 8009390:	685b      	ldr	r3, [r3, #4]
 8009392:	61bb      	str	r3, [r7, #24]
 8009394:	693b      	ldr	r3, [r7, #16]
 8009396:	43db      	mvns	r3, r3
 8009398:	69ba      	ldr	r2, [r7, #24]
 800939a:	4013      	ands	r3, r2
 800939c:	61bb      	str	r3, [r7, #24]
 800939e:	683b      	ldr	r3, [r7, #0]
 80093a0:	685b      	ldr	r3, [r3, #4]
 80093a2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80093a6:	2b00      	cmp	r3, #0
 80093a8:	d003      	beq.n	80093b2 <HAL_GPIO_Init+0x2be>
 80093aa:	69ba      	ldr	r2, [r7, #24]
 80093ac:	693b      	ldr	r3, [r7, #16]
 80093ae:	4313      	orrs	r3, r2
 80093b0:	61bb      	str	r3, [r7, #24]
 80093b2:	4a1d      	ldr	r2, [pc, #116]	; (8009428 <HAL_GPIO_Init+0x334>)
 80093b4:	69bb      	ldr	r3, [r7, #24]
 80093b6:	6053      	str	r3, [r2, #4]
 80093b8:	4b1b      	ldr	r3, [pc, #108]	; (8009428 <HAL_GPIO_Init+0x334>)
 80093ba:	681b      	ldr	r3, [r3, #0]
 80093bc:	61bb      	str	r3, [r7, #24]
 80093be:	693b      	ldr	r3, [r7, #16]
 80093c0:	43db      	mvns	r3, r3
 80093c2:	69ba      	ldr	r2, [r7, #24]
 80093c4:	4013      	ands	r3, r2
 80093c6:	61bb      	str	r3, [r7, #24]
 80093c8:	683b      	ldr	r3, [r7, #0]
 80093ca:	685b      	ldr	r3, [r3, #4]
 80093cc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80093d0:	2b00      	cmp	r3, #0
 80093d2:	d003      	beq.n	80093dc <HAL_GPIO_Init+0x2e8>
 80093d4:	69ba      	ldr	r2, [r7, #24]
 80093d6:	693b      	ldr	r3, [r7, #16]
 80093d8:	4313      	orrs	r3, r2
 80093da:	61bb      	str	r3, [r7, #24]
 80093dc:	4a12      	ldr	r2, [pc, #72]	; (8009428 <HAL_GPIO_Init+0x334>)
 80093de:	69bb      	ldr	r3, [r7, #24]
 80093e0:	6013      	str	r3, [r2, #0]
 80093e2:	69fb      	ldr	r3, [r7, #28]
 80093e4:	3301      	adds	r3, #1
 80093e6:	61fb      	str	r3, [r7, #28]
 80093e8:	69fb      	ldr	r3, [r7, #28]
 80093ea:	2b0f      	cmp	r3, #15
 80093ec:	f67f ae90 	bls.w	8009110 <HAL_GPIO_Init+0x1c>
 80093f0:	bf00      	nop
 80093f2:	bf00      	nop
 80093f4:	3724      	adds	r7, #36	; 0x24
 80093f6:	46bd      	mov	sp, r7
 80093f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80093fc:	4770      	bx	lr
 80093fe:	bf00      	nop
 8009400:	40023800 	.word	0x40023800
 8009404:	40013800 	.word	0x40013800
 8009408:	40020000 	.word	0x40020000
 800940c:	40020400 	.word	0x40020400
 8009410:	40020800 	.word	0x40020800
 8009414:	40020c00 	.word	0x40020c00
 8009418:	40021000 	.word	0x40021000
 800941c:	40021400 	.word	0x40021400
 8009420:	40021800 	.word	0x40021800
 8009424:	40021c00 	.word	0x40021c00
 8009428:	40013c00 	.word	0x40013c00

0800942c <HAL_GPIO_ReadPin>:
 800942c:	b480      	push	{r7}
 800942e:	b085      	sub	sp, #20
 8009430:	af00      	add	r7, sp, #0
 8009432:	6078      	str	r0, [r7, #4]
 8009434:	460b      	mov	r3, r1
 8009436:	807b      	strh	r3, [r7, #2]
 8009438:	687b      	ldr	r3, [r7, #4]
 800943a:	691a      	ldr	r2, [r3, #16]
 800943c:	887b      	ldrh	r3, [r7, #2]
 800943e:	4013      	ands	r3, r2
 8009440:	2b00      	cmp	r3, #0
 8009442:	d002      	beq.n	800944a <HAL_GPIO_ReadPin+0x1e>
 8009444:	2301      	movs	r3, #1
 8009446:	73fb      	strb	r3, [r7, #15]
 8009448:	e001      	b.n	800944e <HAL_GPIO_ReadPin+0x22>
 800944a:	2300      	movs	r3, #0
 800944c:	73fb      	strb	r3, [r7, #15]
 800944e:	7bfb      	ldrb	r3, [r7, #15]
 8009450:	4618      	mov	r0, r3
 8009452:	3714      	adds	r7, #20
 8009454:	46bd      	mov	sp, r7
 8009456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800945a:	4770      	bx	lr

0800945c <HAL_GPIO_WritePin>:
 800945c:	b480      	push	{r7}
 800945e:	b083      	sub	sp, #12
 8009460:	af00      	add	r7, sp, #0
 8009462:	6078      	str	r0, [r7, #4]
 8009464:	460b      	mov	r3, r1
 8009466:	807b      	strh	r3, [r7, #2]
 8009468:	4613      	mov	r3, r2
 800946a:	707b      	strb	r3, [r7, #1]
 800946c:	787b      	ldrb	r3, [r7, #1]
 800946e:	2b00      	cmp	r3, #0
 8009470:	d003      	beq.n	800947a <HAL_GPIO_WritePin+0x1e>
 8009472:	887a      	ldrh	r2, [r7, #2]
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	619a      	str	r2, [r3, #24]
 8009478:	e003      	b.n	8009482 <HAL_GPIO_WritePin+0x26>
 800947a:	887b      	ldrh	r3, [r7, #2]
 800947c:	041a      	lsls	r2, r3, #16
 800947e:	687b      	ldr	r3, [r7, #4]
 8009480:	619a      	str	r2, [r3, #24]
 8009482:	bf00      	nop
 8009484:	370c      	adds	r7, #12
 8009486:	46bd      	mov	sp, r7
 8009488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800948c:	4770      	bx	lr
	...

08009490 <HAL_GPIO_EXTI_IRQHandler>:
 8009490:	b580      	push	{r7, lr}
 8009492:	b082      	sub	sp, #8
 8009494:	af00      	add	r7, sp, #0
 8009496:	4603      	mov	r3, r0
 8009498:	80fb      	strh	r3, [r7, #6]
 800949a:	4b08      	ldr	r3, [pc, #32]	; (80094bc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 800949c:	695a      	ldr	r2, [r3, #20]
 800949e:	88fb      	ldrh	r3, [r7, #6]
 80094a0:	4013      	ands	r3, r2
 80094a2:	2b00      	cmp	r3, #0
 80094a4:	d006      	beq.n	80094b4 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80094a6:	4a05      	ldr	r2, [pc, #20]	; (80094bc <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80094a8:	88fb      	ldrh	r3, [r7, #6]
 80094aa:	6153      	str	r3, [r2, #20]
 80094ac:	88fb      	ldrh	r3, [r7, #6]
 80094ae:	4618      	mov	r0, r3
 80094b0:	f7fc f9f8 	bl	80058a4 <HAL_GPIO_EXTI_Callback>
 80094b4:	bf00      	nop
 80094b6:	3708      	adds	r7, #8
 80094b8:	46bd      	mov	sp, r7
 80094ba:	bd80      	pop	{r7, pc}
 80094bc:	40013c00 	.word	0x40013c00

080094c0 <HAL_PCD_Init>:
 80094c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80094c2:	b08f      	sub	sp, #60	; 0x3c
 80094c4:	af0a      	add	r7, sp, #40	; 0x28
 80094c6:	6078      	str	r0, [r7, #4]
 80094c8:	687b      	ldr	r3, [r7, #4]
 80094ca:	2b00      	cmp	r3, #0
 80094cc:	d101      	bne.n	80094d2 <HAL_PCD_Init+0x12>
 80094ce:	2301      	movs	r3, #1
 80094d0:	e10f      	b.n	80096f2 <HAL_PCD_Init+0x232>
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	681b      	ldr	r3, [r3, #0]
 80094d6:	60bb      	str	r3, [r7, #8]
 80094d8:	687b      	ldr	r3, [r7, #4]
 80094da:	f893 34bd 	ldrb.w	r3, [r3, #1213]	; 0x4bd
 80094de:	b2db      	uxtb	r3, r3
 80094e0:	2b00      	cmp	r3, #0
 80094e2:	d106      	bne.n	80094f2 <HAL_PCD_Init+0x32>
 80094e4:	687b      	ldr	r3, [r7, #4]
 80094e6:	2200      	movs	r2, #0
 80094e8:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 80094ec:	6878      	ldr	r0, [r7, #4]
 80094ee:	f005 ffbf 	bl	800f470 <HAL_PCD_MspInit>
 80094f2:	687b      	ldr	r3, [r7, #4]
 80094f4:	2203      	movs	r2, #3
 80094f6:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80094fa:	68bb      	ldr	r3, [r7, #8]
 80094fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80094fe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009502:	2b00      	cmp	r3, #0
 8009504:	d102      	bne.n	800950c <HAL_PCD_Init+0x4c>
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	2200      	movs	r2, #0
 800950a:	611a      	str	r2, [r3, #16]
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	681b      	ldr	r3, [r3, #0]
 8009510:	4618      	mov	r0, r3
 8009512:	f002 face 	bl	800bab2 <USB_DisableGlobalInt>
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	681b      	ldr	r3, [r3, #0]
 800951a:	603b      	str	r3, [r7, #0]
 800951c:	687e      	ldr	r6, [r7, #4]
 800951e:	466d      	mov	r5, sp
 8009520:	f106 0410 	add.w	r4, r6, #16
 8009524:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009526:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8009528:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800952a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800952c:	e894 0003 	ldmia.w	r4, {r0, r1}
 8009530:	e885 0003 	stmia.w	r5, {r0, r1}
 8009534:	1d33      	adds	r3, r6, #4
 8009536:	cb0e      	ldmia	r3, {r1, r2, r3}
 8009538:	6838      	ldr	r0, [r7, #0]
 800953a:	f002 f9a5 	bl	800b888 <USB_CoreInit>
 800953e:	4603      	mov	r3, r0
 8009540:	2b00      	cmp	r3, #0
 8009542:	d005      	beq.n	8009550 <HAL_PCD_Init+0x90>
 8009544:	687b      	ldr	r3, [r7, #4]
 8009546:	2202      	movs	r2, #2
 8009548:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 800954c:	2301      	movs	r3, #1
 800954e:	e0d0      	b.n	80096f2 <HAL_PCD_Init+0x232>
 8009550:	687b      	ldr	r3, [r7, #4]
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	2100      	movs	r1, #0
 8009556:	4618      	mov	r0, r3
 8009558:	f002 fabc 	bl	800bad4 <USB_SetCurrentMode>
 800955c:	2300      	movs	r3, #0
 800955e:	73fb      	strb	r3, [r7, #15]
 8009560:	e04a      	b.n	80095f8 <HAL_PCD_Init+0x138>
 8009562:	7bfa      	ldrb	r2, [r7, #15]
 8009564:	6879      	ldr	r1, [r7, #4]
 8009566:	4613      	mov	r3, r2
 8009568:	00db      	lsls	r3, r3, #3
 800956a:	4413      	add	r3, r2
 800956c:	009b      	lsls	r3, r3, #2
 800956e:	440b      	add	r3, r1
 8009570:	333d      	adds	r3, #61	; 0x3d
 8009572:	2201      	movs	r2, #1
 8009574:	701a      	strb	r2, [r3, #0]
 8009576:	7bfa      	ldrb	r2, [r7, #15]
 8009578:	6879      	ldr	r1, [r7, #4]
 800957a:	4613      	mov	r3, r2
 800957c:	00db      	lsls	r3, r3, #3
 800957e:	4413      	add	r3, r2
 8009580:	009b      	lsls	r3, r3, #2
 8009582:	440b      	add	r3, r1
 8009584:	333c      	adds	r3, #60	; 0x3c
 8009586:	7bfa      	ldrb	r2, [r7, #15]
 8009588:	701a      	strb	r2, [r3, #0]
 800958a:	7bfa      	ldrb	r2, [r7, #15]
 800958c:	7bfb      	ldrb	r3, [r7, #15]
 800958e:	b298      	uxth	r0, r3
 8009590:	6879      	ldr	r1, [r7, #4]
 8009592:	4613      	mov	r3, r2
 8009594:	00db      	lsls	r3, r3, #3
 8009596:	4413      	add	r3, r2
 8009598:	009b      	lsls	r3, r3, #2
 800959a:	440b      	add	r3, r1
 800959c:	3344      	adds	r3, #68	; 0x44
 800959e:	4602      	mov	r2, r0
 80095a0:	801a      	strh	r2, [r3, #0]
 80095a2:	7bfa      	ldrb	r2, [r7, #15]
 80095a4:	6879      	ldr	r1, [r7, #4]
 80095a6:	4613      	mov	r3, r2
 80095a8:	00db      	lsls	r3, r3, #3
 80095aa:	4413      	add	r3, r2
 80095ac:	009b      	lsls	r3, r3, #2
 80095ae:	440b      	add	r3, r1
 80095b0:	3340      	adds	r3, #64	; 0x40
 80095b2:	2200      	movs	r2, #0
 80095b4:	701a      	strb	r2, [r3, #0]
 80095b6:	7bfa      	ldrb	r2, [r7, #15]
 80095b8:	6879      	ldr	r1, [r7, #4]
 80095ba:	4613      	mov	r3, r2
 80095bc:	00db      	lsls	r3, r3, #3
 80095be:	4413      	add	r3, r2
 80095c0:	009b      	lsls	r3, r3, #2
 80095c2:	440b      	add	r3, r1
 80095c4:	3348      	adds	r3, #72	; 0x48
 80095c6:	2200      	movs	r2, #0
 80095c8:	601a      	str	r2, [r3, #0]
 80095ca:	7bfa      	ldrb	r2, [r7, #15]
 80095cc:	6879      	ldr	r1, [r7, #4]
 80095ce:	4613      	mov	r3, r2
 80095d0:	00db      	lsls	r3, r3, #3
 80095d2:	4413      	add	r3, r2
 80095d4:	009b      	lsls	r3, r3, #2
 80095d6:	440b      	add	r3, r1
 80095d8:	334c      	adds	r3, #76	; 0x4c
 80095da:	2200      	movs	r2, #0
 80095dc:	601a      	str	r2, [r3, #0]
 80095de:	7bfa      	ldrb	r2, [r7, #15]
 80095e0:	6879      	ldr	r1, [r7, #4]
 80095e2:	4613      	mov	r3, r2
 80095e4:	00db      	lsls	r3, r3, #3
 80095e6:	4413      	add	r3, r2
 80095e8:	009b      	lsls	r3, r3, #2
 80095ea:	440b      	add	r3, r1
 80095ec:	3354      	adds	r3, #84	; 0x54
 80095ee:	2200      	movs	r2, #0
 80095f0:	601a      	str	r2, [r3, #0]
 80095f2:	7bfb      	ldrb	r3, [r7, #15]
 80095f4:	3301      	adds	r3, #1
 80095f6:	73fb      	strb	r3, [r7, #15]
 80095f8:	7bfa      	ldrb	r2, [r7, #15]
 80095fa:	687b      	ldr	r3, [r7, #4]
 80095fc:	685b      	ldr	r3, [r3, #4]
 80095fe:	429a      	cmp	r2, r3
 8009600:	d3af      	bcc.n	8009562 <HAL_PCD_Init+0xa2>
 8009602:	2300      	movs	r3, #0
 8009604:	73fb      	strb	r3, [r7, #15]
 8009606:	e044      	b.n	8009692 <HAL_PCD_Init+0x1d2>
 8009608:	7bfa      	ldrb	r2, [r7, #15]
 800960a:	6879      	ldr	r1, [r7, #4]
 800960c:	4613      	mov	r3, r2
 800960e:	00db      	lsls	r3, r3, #3
 8009610:	4413      	add	r3, r2
 8009612:	009b      	lsls	r3, r3, #2
 8009614:	440b      	add	r3, r1
 8009616:	f203 237d 	addw	r3, r3, #637	; 0x27d
 800961a:	2200      	movs	r2, #0
 800961c:	701a      	strb	r2, [r3, #0]
 800961e:	7bfa      	ldrb	r2, [r7, #15]
 8009620:	6879      	ldr	r1, [r7, #4]
 8009622:	4613      	mov	r3, r2
 8009624:	00db      	lsls	r3, r3, #3
 8009626:	4413      	add	r3, r2
 8009628:	009b      	lsls	r3, r3, #2
 800962a:	440b      	add	r3, r1
 800962c:	f503 731f 	add.w	r3, r3, #636	; 0x27c
 8009630:	7bfa      	ldrb	r2, [r7, #15]
 8009632:	701a      	strb	r2, [r3, #0]
 8009634:	7bfa      	ldrb	r2, [r7, #15]
 8009636:	6879      	ldr	r1, [r7, #4]
 8009638:	4613      	mov	r3, r2
 800963a:	00db      	lsls	r3, r3, #3
 800963c:	4413      	add	r3, r2
 800963e:	009b      	lsls	r3, r3, #2
 8009640:	440b      	add	r3, r1
 8009642:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8009646:	2200      	movs	r2, #0
 8009648:	701a      	strb	r2, [r3, #0]
 800964a:	7bfa      	ldrb	r2, [r7, #15]
 800964c:	6879      	ldr	r1, [r7, #4]
 800964e:	4613      	mov	r3, r2
 8009650:	00db      	lsls	r3, r3, #3
 8009652:	4413      	add	r3, r2
 8009654:	009b      	lsls	r3, r3, #2
 8009656:	440b      	add	r3, r1
 8009658:	f503 7322 	add.w	r3, r3, #648	; 0x288
 800965c:	2200      	movs	r2, #0
 800965e:	601a      	str	r2, [r3, #0]
 8009660:	7bfa      	ldrb	r2, [r7, #15]
 8009662:	6879      	ldr	r1, [r7, #4]
 8009664:	4613      	mov	r3, r2
 8009666:	00db      	lsls	r3, r3, #3
 8009668:	4413      	add	r3, r2
 800966a:	009b      	lsls	r3, r3, #2
 800966c:	440b      	add	r3, r1
 800966e:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 8009672:	2200      	movs	r2, #0
 8009674:	601a      	str	r2, [r3, #0]
 8009676:	7bfa      	ldrb	r2, [r7, #15]
 8009678:	6879      	ldr	r1, [r7, #4]
 800967a:	4613      	mov	r3, r2
 800967c:	00db      	lsls	r3, r3, #3
 800967e:	4413      	add	r3, r2
 8009680:	009b      	lsls	r3, r3, #2
 8009682:	440b      	add	r3, r1
 8009684:	f503 7325 	add.w	r3, r3, #660	; 0x294
 8009688:	2200      	movs	r2, #0
 800968a:	601a      	str	r2, [r3, #0]
 800968c:	7bfb      	ldrb	r3, [r7, #15]
 800968e:	3301      	adds	r3, #1
 8009690:	73fb      	strb	r3, [r7, #15]
 8009692:	7bfa      	ldrb	r2, [r7, #15]
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	685b      	ldr	r3, [r3, #4]
 8009698:	429a      	cmp	r2, r3
 800969a:	d3b5      	bcc.n	8009608 <HAL_PCD_Init+0x148>
 800969c:	687b      	ldr	r3, [r7, #4]
 800969e:	681b      	ldr	r3, [r3, #0]
 80096a0:	603b      	str	r3, [r7, #0]
 80096a2:	687e      	ldr	r6, [r7, #4]
 80096a4:	466d      	mov	r5, sp
 80096a6:	f106 0410 	add.w	r4, r6, #16
 80096aa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80096ac:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80096ae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80096b0:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80096b2:	e894 0003 	ldmia.w	r4, {r0, r1}
 80096b6:	e885 0003 	stmia.w	r5, {r0, r1}
 80096ba:	1d33      	adds	r3, r6, #4
 80096bc:	cb0e      	ldmia	r3, {r1, r2, r3}
 80096be:	6838      	ldr	r0, [r7, #0]
 80096c0:	f002 fa54 	bl	800bb6c <USB_DevInit>
 80096c4:	4603      	mov	r3, r0
 80096c6:	2b00      	cmp	r3, #0
 80096c8:	d005      	beq.n	80096d6 <HAL_PCD_Init+0x216>
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	2202      	movs	r2, #2
 80096ce:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80096d2:	2301      	movs	r3, #1
 80096d4:	e00d      	b.n	80096f2 <HAL_PCD_Init+0x232>
 80096d6:	687b      	ldr	r3, [r7, #4]
 80096d8:	2200      	movs	r2, #0
 80096da:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 80096de:	687b      	ldr	r3, [r7, #4]
 80096e0:	2201      	movs	r2, #1
 80096e2:	f883 24bd 	strb.w	r2, [r3, #1213]	; 0x4bd
 80096e6:	687b      	ldr	r3, [r7, #4]
 80096e8:	681b      	ldr	r3, [r3, #0]
 80096ea:	4618      	mov	r0, r3
 80096ec:	f003 fba3 	bl	800ce36 <USB_DevDisconnect>
 80096f0:	2300      	movs	r3, #0
 80096f2:	4618      	mov	r0, r3
 80096f4:	3714      	adds	r7, #20
 80096f6:	46bd      	mov	sp, r7
 80096f8:	bdf0      	pop	{r4, r5, r6, r7, pc}

080096fa <HAL_PCD_Start>:
 80096fa:	b580      	push	{r7, lr}
 80096fc:	b084      	sub	sp, #16
 80096fe:	af00      	add	r7, sp, #0
 8009700:	6078      	str	r0, [r7, #4]
 8009702:	687b      	ldr	r3, [r7, #4]
 8009704:	681b      	ldr	r3, [r3, #0]
 8009706:	60fb      	str	r3, [r7, #12]
 8009708:	687b      	ldr	r3, [r7, #4]
 800970a:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 800970e:	2b01      	cmp	r3, #1
 8009710:	d101      	bne.n	8009716 <HAL_PCD_Start+0x1c>
 8009712:	2302      	movs	r3, #2
 8009714:	e020      	b.n	8009758 <HAL_PCD_Start+0x5e>
 8009716:	687b      	ldr	r3, [r7, #4]
 8009718:	2201      	movs	r2, #1
 800971a:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009722:	2b01      	cmp	r3, #1
 8009724:	d109      	bne.n	800973a <HAL_PCD_Start+0x40>
 8009726:	687b      	ldr	r3, [r7, #4]
 8009728:	699b      	ldr	r3, [r3, #24]
 800972a:	2b01      	cmp	r3, #1
 800972c:	d005      	beq.n	800973a <HAL_PCD_Start+0x40>
 800972e:	68fb      	ldr	r3, [r7, #12]
 8009730:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009732:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 8009736:	68fb      	ldr	r3, [r7, #12]
 8009738:	639a      	str	r2, [r3, #56]	; 0x38
 800973a:	687b      	ldr	r3, [r7, #4]
 800973c:	681b      	ldr	r3, [r3, #0]
 800973e:	4618      	mov	r0, r3
 8009740:	f002 f9a6 	bl	800ba90 <USB_EnableGlobalInt>
 8009744:	687b      	ldr	r3, [r7, #4]
 8009746:	681b      	ldr	r3, [r3, #0]
 8009748:	4618      	mov	r0, r3
 800974a:	f003 fb53 	bl	800cdf4 <USB_DevConnect>
 800974e:	687b      	ldr	r3, [r7, #4]
 8009750:	2200      	movs	r2, #0
 8009752:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 8009756:	2300      	movs	r3, #0
 8009758:	4618      	mov	r0, r3
 800975a:	3710      	adds	r7, #16
 800975c:	46bd      	mov	sp, r7
 800975e:	bd80      	pop	{r7, pc}

08009760 <HAL_PCD_IRQHandler>:
 8009760:	b590      	push	{r4, r7, lr}
 8009762:	b08d      	sub	sp, #52	; 0x34
 8009764:	af00      	add	r7, sp, #0
 8009766:	6078      	str	r0, [r7, #4]
 8009768:	687b      	ldr	r3, [r7, #4]
 800976a:	681b      	ldr	r3, [r3, #0]
 800976c:	623b      	str	r3, [r7, #32]
 800976e:	6a3b      	ldr	r3, [r7, #32]
 8009770:	61fb      	str	r3, [r7, #28]
 8009772:	687b      	ldr	r3, [r7, #4]
 8009774:	681b      	ldr	r3, [r3, #0]
 8009776:	4618      	mov	r0, r3
 8009778:	f003 fc11 	bl	800cf9e <USB_GetMode>
 800977c:	4603      	mov	r3, r0
 800977e:	2b00      	cmp	r3, #0
 8009780:	f040 848a 	bne.w	800a098 <HAL_PCD_IRQHandler+0x938>
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	681b      	ldr	r3, [r3, #0]
 8009788:	4618      	mov	r0, r3
 800978a:	f003 fb75 	bl	800ce78 <USB_ReadInterrupts>
 800978e:	4603      	mov	r3, r0
 8009790:	2b00      	cmp	r3, #0
 8009792:	f000 8480 	beq.w	800a096 <HAL_PCD_IRQHandler+0x936>
 8009796:	69fb      	ldr	r3, [r7, #28]
 8009798:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800979c:	689b      	ldr	r3, [r3, #8]
 800979e:	0a1b      	lsrs	r3, r3, #8
 80097a0:	f3c3 020d 	ubfx	r2, r3, #0, #14
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	f8c3 24fc 	str.w	r2, [r3, #1276]	; 0x4fc
 80097aa:	687b      	ldr	r3, [r7, #4]
 80097ac:	681b      	ldr	r3, [r3, #0]
 80097ae:	4618      	mov	r0, r3
 80097b0:	f003 fb62 	bl	800ce78 <USB_ReadInterrupts>
 80097b4:	4603      	mov	r3, r0
 80097b6:	f003 0302 	and.w	r3, r3, #2
 80097ba:	2b02      	cmp	r3, #2
 80097bc:	d107      	bne.n	80097ce <HAL_PCD_IRQHandler+0x6e>
 80097be:	687b      	ldr	r3, [r7, #4]
 80097c0:	681b      	ldr	r3, [r3, #0]
 80097c2:	695a      	ldr	r2, [r3, #20]
 80097c4:	687b      	ldr	r3, [r7, #4]
 80097c6:	681b      	ldr	r3, [r3, #0]
 80097c8:	f002 0202 	and.w	r2, r2, #2
 80097cc:	615a      	str	r2, [r3, #20]
 80097ce:	687b      	ldr	r3, [r7, #4]
 80097d0:	681b      	ldr	r3, [r3, #0]
 80097d2:	4618      	mov	r0, r3
 80097d4:	f003 fb50 	bl	800ce78 <USB_ReadInterrupts>
 80097d8:	4603      	mov	r3, r0
 80097da:	f003 0310 	and.w	r3, r3, #16
 80097de:	2b10      	cmp	r3, #16
 80097e0:	d161      	bne.n	80098a6 <HAL_PCD_IRQHandler+0x146>
 80097e2:	687b      	ldr	r3, [r7, #4]
 80097e4:	681b      	ldr	r3, [r3, #0]
 80097e6:	699a      	ldr	r2, [r3, #24]
 80097e8:	687b      	ldr	r3, [r7, #4]
 80097ea:	681b      	ldr	r3, [r3, #0]
 80097ec:	f022 0210 	bic.w	r2, r2, #16
 80097f0:	619a      	str	r2, [r3, #24]
 80097f2:	6a3b      	ldr	r3, [r7, #32]
 80097f4:	6a1b      	ldr	r3, [r3, #32]
 80097f6:	61bb      	str	r3, [r7, #24]
 80097f8:	69bb      	ldr	r3, [r7, #24]
 80097fa:	f003 020f 	and.w	r2, r3, #15
 80097fe:	4613      	mov	r3, r2
 8009800:	00db      	lsls	r3, r3, #3
 8009802:	4413      	add	r3, r2
 8009804:	009b      	lsls	r3, r3, #2
 8009806:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800980a:	687a      	ldr	r2, [r7, #4]
 800980c:	4413      	add	r3, r2
 800980e:	3304      	adds	r3, #4
 8009810:	617b      	str	r3, [r7, #20]
 8009812:	69bb      	ldr	r3, [r7, #24]
 8009814:	0c5b      	lsrs	r3, r3, #17
 8009816:	f003 030f 	and.w	r3, r3, #15
 800981a:	2b02      	cmp	r3, #2
 800981c:	d124      	bne.n	8009868 <HAL_PCD_IRQHandler+0x108>
 800981e:	69ba      	ldr	r2, [r7, #24]
 8009820:	f647 73f0 	movw	r3, #32752	; 0x7ff0
 8009824:	4013      	ands	r3, r2
 8009826:	2b00      	cmp	r3, #0
 8009828:	d035      	beq.n	8009896 <HAL_PCD_IRQHandler+0x136>
 800982a:	697b      	ldr	r3, [r7, #20]
 800982c:	6919      	ldr	r1, [r3, #16]
 800982e:	69bb      	ldr	r3, [r7, #24]
 8009830:	091b      	lsrs	r3, r3, #4
 8009832:	b29b      	uxth	r3, r3
 8009834:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009838:	b29b      	uxth	r3, r3
 800983a:	461a      	mov	r2, r3
 800983c:	6a38      	ldr	r0, [r7, #32]
 800983e:	f003 f987 	bl	800cb50 <USB_ReadPacket>
 8009842:	697b      	ldr	r3, [r7, #20]
 8009844:	691a      	ldr	r2, [r3, #16]
 8009846:	69bb      	ldr	r3, [r7, #24]
 8009848:	091b      	lsrs	r3, r3, #4
 800984a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800984e:	441a      	add	r2, r3
 8009850:	697b      	ldr	r3, [r7, #20]
 8009852:	611a      	str	r2, [r3, #16]
 8009854:	697b      	ldr	r3, [r7, #20]
 8009856:	6a1a      	ldr	r2, [r3, #32]
 8009858:	69bb      	ldr	r3, [r7, #24]
 800985a:	091b      	lsrs	r3, r3, #4
 800985c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009860:	441a      	add	r2, r3
 8009862:	697b      	ldr	r3, [r7, #20]
 8009864:	621a      	str	r2, [r3, #32]
 8009866:	e016      	b.n	8009896 <HAL_PCD_IRQHandler+0x136>
 8009868:	69bb      	ldr	r3, [r7, #24]
 800986a:	0c5b      	lsrs	r3, r3, #17
 800986c:	f003 030f 	and.w	r3, r3, #15
 8009870:	2b06      	cmp	r3, #6
 8009872:	d110      	bne.n	8009896 <HAL_PCD_IRQHandler+0x136>
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800987a:	2208      	movs	r2, #8
 800987c:	4619      	mov	r1, r3
 800987e:	6a38      	ldr	r0, [r7, #32]
 8009880:	f003 f966 	bl	800cb50 <USB_ReadPacket>
 8009884:	697b      	ldr	r3, [r7, #20]
 8009886:	6a1a      	ldr	r2, [r3, #32]
 8009888:	69bb      	ldr	r3, [r7, #24]
 800988a:	091b      	lsrs	r3, r3, #4
 800988c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009890:	441a      	add	r2, r3
 8009892:	697b      	ldr	r3, [r7, #20]
 8009894:	621a      	str	r2, [r3, #32]
 8009896:	687b      	ldr	r3, [r7, #4]
 8009898:	681b      	ldr	r3, [r3, #0]
 800989a:	699a      	ldr	r2, [r3, #24]
 800989c:	687b      	ldr	r3, [r7, #4]
 800989e:	681b      	ldr	r3, [r3, #0]
 80098a0:	f042 0210 	orr.w	r2, r2, #16
 80098a4:	619a      	str	r2, [r3, #24]
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	681b      	ldr	r3, [r3, #0]
 80098aa:	4618      	mov	r0, r3
 80098ac:	f003 fae4 	bl	800ce78 <USB_ReadInterrupts>
 80098b0:	4603      	mov	r3, r0
 80098b2:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80098b6:	f5b3 2f00 	cmp.w	r3, #524288	; 0x80000
 80098ba:	f040 80a7 	bne.w	8009a0c <HAL_PCD_IRQHandler+0x2ac>
 80098be:	2300      	movs	r3, #0
 80098c0:	627b      	str	r3, [r7, #36]	; 0x24
 80098c2:	687b      	ldr	r3, [r7, #4]
 80098c4:	681b      	ldr	r3, [r3, #0]
 80098c6:	4618      	mov	r0, r3
 80098c8:	f003 fae9 	bl	800ce9e <USB_ReadDevAllOutEpInterrupt>
 80098cc:	62b8      	str	r0, [r7, #40]	; 0x28
 80098ce:	e099      	b.n	8009a04 <HAL_PCD_IRQHandler+0x2a4>
 80098d0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80098d2:	f003 0301 	and.w	r3, r3, #1
 80098d6:	2b00      	cmp	r3, #0
 80098d8:	f000 808e 	beq.w	80099f8 <HAL_PCD_IRQHandler+0x298>
 80098dc:	687b      	ldr	r3, [r7, #4]
 80098de:	681b      	ldr	r3, [r3, #0]
 80098e0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80098e2:	b2d2      	uxtb	r2, r2
 80098e4:	4611      	mov	r1, r2
 80098e6:	4618      	mov	r0, r3
 80098e8:	f003 fb0d 	bl	800cf06 <USB_ReadDevOutEPInterrupt>
 80098ec:	6138      	str	r0, [r7, #16]
 80098ee:	693b      	ldr	r3, [r7, #16]
 80098f0:	f003 0301 	and.w	r3, r3, #1
 80098f4:	2b00      	cmp	r3, #0
 80098f6:	d00c      	beq.n	8009912 <HAL_PCD_IRQHandler+0x1b2>
 80098f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80098fa:	015a      	lsls	r2, r3, #5
 80098fc:	69fb      	ldr	r3, [r7, #28]
 80098fe:	4413      	add	r3, r2
 8009900:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009904:	461a      	mov	r2, r3
 8009906:	2301      	movs	r3, #1
 8009908:	6093      	str	r3, [r2, #8]
 800990a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800990c:	6878      	ldr	r0, [r7, #4]
 800990e:	f000 fec3 	bl	800a698 <PCD_EP_OutXfrComplete_int>
 8009912:	693b      	ldr	r3, [r7, #16]
 8009914:	f003 0308 	and.w	r3, r3, #8
 8009918:	2b00      	cmp	r3, #0
 800991a:	d00c      	beq.n	8009936 <HAL_PCD_IRQHandler+0x1d6>
 800991c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800991e:	015a      	lsls	r2, r3, #5
 8009920:	69fb      	ldr	r3, [r7, #28]
 8009922:	4413      	add	r3, r2
 8009924:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009928:	461a      	mov	r2, r3
 800992a:	2308      	movs	r3, #8
 800992c:	6093      	str	r3, [r2, #8]
 800992e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009930:	6878      	ldr	r0, [r7, #4]
 8009932:	f000 ff99 	bl	800a868 <PCD_EP_OutSetupPacket_int>
 8009936:	693b      	ldr	r3, [r7, #16]
 8009938:	f003 0310 	and.w	r3, r3, #16
 800993c:	2b00      	cmp	r3, #0
 800993e:	d008      	beq.n	8009952 <HAL_PCD_IRQHandler+0x1f2>
 8009940:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009942:	015a      	lsls	r2, r3, #5
 8009944:	69fb      	ldr	r3, [r7, #28]
 8009946:	4413      	add	r3, r2
 8009948:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800994c:	461a      	mov	r2, r3
 800994e:	2310      	movs	r3, #16
 8009950:	6093      	str	r3, [r2, #8]
 8009952:	693b      	ldr	r3, [r7, #16]
 8009954:	f003 0302 	and.w	r3, r3, #2
 8009958:	2b00      	cmp	r3, #0
 800995a:	d030      	beq.n	80099be <HAL_PCD_IRQHandler+0x25e>
 800995c:	6a3b      	ldr	r3, [r7, #32]
 800995e:	695b      	ldr	r3, [r3, #20]
 8009960:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009964:	2b80      	cmp	r3, #128	; 0x80
 8009966:	d109      	bne.n	800997c <HAL_PCD_IRQHandler+0x21c>
 8009968:	69fb      	ldr	r3, [r7, #28]
 800996a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800996e:	685b      	ldr	r3, [r3, #4]
 8009970:	69fa      	ldr	r2, [r7, #28]
 8009972:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009976:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800997a:	6053      	str	r3, [r2, #4]
 800997c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800997e:	4613      	mov	r3, r2
 8009980:	00db      	lsls	r3, r3, #3
 8009982:	4413      	add	r3, r2
 8009984:	009b      	lsls	r3, r3, #2
 8009986:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800998a:	687a      	ldr	r2, [r7, #4]
 800998c:	4413      	add	r3, r2
 800998e:	3304      	adds	r3, #4
 8009990:	617b      	str	r3, [r7, #20]
 8009992:	697b      	ldr	r3, [r7, #20]
 8009994:	78db      	ldrb	r3, [r3, #3]
 8009996:	2b01      	cmp	r3, #1
 8009998:	d108      	bne.n	80099ac <HAL_PCD_IRQHandler+0x24c>
 800999a:	697b      	ldr	r3, [r7, #20]
 800999c:	2200      	movs	r2, #0
 800999e:	70da      	strb	r2, [r3, #3]
 80099a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099a2:	b2db      	uxtb	r3, r3
 80099a4:	4619      	mov	r1, r3
 80099a6:	6878      	ldr	r0, [r7, #4]
 80099a8:	f005 fe68 	bl	800f67c <HAL_PCD_ISOOUTIncompleteCallback>
 80099ac:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099ae:	015a      	lsls	r2, r3, #5
 80099b0:	69fb      	ldr	r3, [r7, #28]
 80099b2:	4413      	add	r3, r2
 80099b4:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80099b8:	461a      	mov	r2, r3
 80099ba:	2302      	movs	r3, #2
 80099bc:	6093      	str	r3, [r2, #8]
 80099be:	693b      	ldr	r3, [r7, #16]
 80099c0:	f003 0320 	and.w	r3, r3, #32
 80099c4:	2b00      	cmp	r3, #0
 80099c6:	d008      	beq.n	80099da <HAL_PCD_IRQHandler+0x27a>
 80099c8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099ca:	015a      	lsls	r2, r3, #5
 80099cc:	69fb      	ldr	r3, [r7, #28]
 80099ce:	4413      	add	r3, r2
 80099d0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80099d4:	461a      	mov	r2, r3
 80099d6:	2320      	movs	r3, #32
 80099d8:	6093      	str	r3, [r2, #8]
 80099da:	693b      	ldr	r3, [r7, #16]
 80099dc:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80099e0:	2b00      	cmp	r3, #0
 80099e2:	d009      	beq.n	80099f8 <HAL_PCD_IRQHandler+0x298>
 80099e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099e6:	015a      	lsls	r2, r3, #5
 80099e8:	69fb      	ldr	r3, [r7, #28]
 80099ea:	4413      	add	r3, r2
 80099ec:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80099f0:	461a      	mov	r2, r3
 80099f2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80099f6:	6093      	str	r3, [r2, #8]
 80099f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80099fa:	3301      	adds	r3, #1
 80099fc:	627b      	str	r3, [r7, #36]	; 0x24
 80099fe:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009a00:	085b      	lsrs	r3, r3, #1
 8009a02:	62bb      	str	r3, [r7, #40]	; 0x28
 8009a04:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009a06:	2b00      	cmp	r3, #0
 8009a08:	f47f af62 	bne.w	80098d0 <HAL_PCD_IRQHandler+0x170>
 8009a0c:	687b      	ldr	r3, [r7, #4]
 8009a0e:	681b      	ldr	r3, [r3, #0]
 8009a10:	4618      	mov	r0, r3
 8009a12:	f003 fa31 	bl	800ce78 <USB_ReadInterrupts>
 8009a16:	4603      	mov	r3, r0
 8009a18:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8009a1c:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8009a20:	f040 80db 	bne.w	8009bda <HAL_PCD_IRQHandler+0x47a>
 8009a24:	687b      	ldr	r3, [r7, #4]
 8009a26:	681b      	ldr	r3, [r3, #0]
 8009a28:	4618      	mov	r0, r3
 8009a2a:	f003 fa52 	bl	800ced2 <USB_ReadDevAllInEpInterrupt>
 8009a2e:	62b8      	str	r0, [r7, #40]	; 0x28
 8009a30:	2300      	movs	r3, #0
 8009a32:	627b      	str	r3, [r7, #36]	; 0x24
 8009a34:	e0cd      	b.n	8009bd2 <HAL_PCD_IRQHandler+0x472>
 8009a36:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009a38:	f003 0301 	and.w	r3, r3, #1
 8009a3c:	2b00      	cmp	r3, #0
 8009a3e:	f000 80c2 	beq.w	8009bc6 <HAL_PCD_IRQHandler+0x466>
 8009a42:	687b      	ldr	r3, [r7, #4]
 8009a44:	681b      	ldr	r3, [r3, #0]
 8009a46:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009a48:	b2d2      	uxtb	r2, r2
 8009a4a:	4611      	mov	r1, r2
 8009a4c:	4618      	mov	r0, r3
 8009a4e:	f003 fa78 	bl	800cf42 <USB_ReadDevInEPInterrupt>
 8009a52:	6138      	str	r0, [r7, #16]
 8009a54:	693b      	ldr	r3, [r7, #16]
 8009a56:	f003 0301 	and.w	r3, r3, #1
 8009a5a:	2b00      	cmp	r3, #0
 8009a5c:	d057      	beq.n	8009b0e <HAL_PCD_IRQHandler+0x3ae>
 8009a5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a60:	f003 030f 	and.w	r3, r3, #15
 8009a64:	2201      	movs	r2, #1
 8009a66:	fa02 f303 	lsl.w	r3, r2, r3
 8009a6a:	60fb      	str	r3, [r7, #12]
 8009a6c:	69fb      	ldr	r3, [r7, #28]
 8009a6e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009a72:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8009a74:	68fb      	ldr	r3, [r7, #12]
 8009a76:	43db      	mvns	r3, r3
 8009a78:	69f9      	ldr	r1, [r7, #28]
 8009a7a:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 8009a7e:	4013      	ands	r3, r2
 8009a80:	634b      	str	r3, [r1, #52]	; 0x34
 8009a82:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009a84:	015a      	lsls	r2, r3, #5
 8009a86:	69fb      	ldr	r3, [r7, #28]
 8009a88:	4413      	add	r3, r2
 8009a8a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009a8e:	461a      	mov	r2, r3
 8009a90:	2301      	movs	r3, #1
 8009a92:	6093      	str	r3, [r2, #8]
 8009a94:	687b      	ldr	r3, [r7, #4]
 8009a96:	691b      	ldr	r3, [r3, #16]
 8009a98:	2b01      	cmp	r3, #1
 8009a9a:	d132      	bne.n	8009b02 <HAL_PCD_IRQHandler+0x3a2>
 8009a9c:	6879      	ldr	r1, [r7, #4]
 8009a9e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009aa0:	4613      	mov	r3, r2
 8009aa2:	00db      	lsls	r3, r3, #3
 8009aa4:	4413      	add	r3, r2
 8009aa6:	009b      	lsls	r3, r3, #2
 8009aa8:	440b      	add	r3, r1
 8009aaa:	334c      	adds	r3, #76	; 0x4c
 8009aac:	6819      	ldr	r1, [r3, #0]
 8009aae:	6878      	ldr	r0, [r7, #4]
 8009ab0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009ab2:	4613      	mov	r3, r2
 8009ab4:	00db      	lsls	r3, r3, #3
 8009ab6:	4413      	add	r3, r2
 8009ab8:	009b      	lsls	r3, r3, #2
 8009aba:	4403      	add	r3, r0
 8009abc:	3348      	adds	r3, #72	; 0x48
 8009abe:	681b      	ldr	r3, [r3, #0]
 8009ac0:	4419      	add	r1, r3
 8009ac2:	6878      	ldr	r0, [r7, #4]
 8009ac4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009ac6:	4613      	mov	r3, r2
 8009ac8:	00db      	lsls	r3, r3, #3
 8009aca:	4413      	add	r3, r2
 8009acc:	009b      	lsls	r3, r3, #2
 8009ace:	4403      	add	r3, r0
 8009ad0:	334c      	adds	r3, #76	; 0x4c
 8009ad2:	6019      	str	r1, [r3, #0]
 8009ad4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ad6:	2b00      	cmp	r3, #0
 8009ad8:	d113      	bne.n	8009b02 <HAL_PCD_IRQHandler+0x3a2>
 8009ada:	6879      	ldr	r1, [r7, #4]
 8009adc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009ade:	4613      	mov	r3, r2
 8009ae0:	00db      	lsls	r3, r3, #3
 8009ae2:	4413      	add	r3, r2
 8009ae4:	009b      	lsls	r3, r3, #2
 8009ae6:	440b      	add	r3, r1
 8009ae8:	3354      	adds	r3, #84	; 0x54
 8009aea:	681b      	ldr	r3, [r3, #0]
 8009aec:	2b00      	cmp	r3, #0
 8009aee:	d108      	bne.n	8009b02 <HAL_PCD_IRQHandler+0x3a2>
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	6818      	ldr	r0, [r3, #0]
 8009af4:	687b      	ldr	r3, [r7, #4]
 8009af6:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8009afa:	461a      	mov	r2, r3
 8009afc:	2101      	movs	r1, #1
 8009afe:	f003 fa7f 	bl	800d000 <USB_EP0_OutStart>
 8009b02:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b04:	b2db      	uxtb	r3, r3
 8009b06:	4619      	mov	r1, r3
 8009b08:	6878      	ldr	r0, [r7, #4]
 8009b0a:	f005 fd32 	bl	800f572 <HAL_PCD_DataInStageCallback>
 8009b0e:	693b      	ldr	r3, [r7, #16]
 8009b10:	f003 0308 	and.w	r3, r3, #8
 8009b14:	2b00      	cmp	r3, #0
 8009b16:	d008      	beq.n	8009b2a <HAL_PCD_IRQHandler+0x3ca>
 8009b18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b1a:	015a      	lsls	r2, r3, #5
 8009b1c:	69fb      	ldr	r3, [r7, #28]
 8009b1e:	4413      	add	r3, r2
 8009b20:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009b24:	461a      	mov	r2, r3
 8009b26:	2308      	movs	r3, #8
 8009b28:	6093      	str	r3, [r2, #8]
 8009b2a:	693b      	ldr	r3, [r7, #16]
 8009b2c:	f003 0310 	and.w	r3, r3, #16
 8009b30:	2b00      	cmp	r3, #0
 8009b32:	d008      	beq.n	8009b46 <HAL_PCD_IRQHandler+0x3e6>
 8009b34:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b36:	015a      	lsls	r2, r3, #5
 8009b38:	69fb      	ldr	r3, [r7, #28]
 8009b3a:	4413      	add	r3, r2
 8009b3c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009b40:	461a      	mov	r2, r3
 8009b42:	2310      	movs	r3, #16
 8009b44:	6093      	str	r3, [r2, #8]
 8009b46:	693b      	ldr	r3, [r7, #16]
 8009b48:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009b4c:	2b00      	cmp	r3, #0
 8009b4e:	d008      	beq.n	8009b62 <HAL_PCD_IRQHandler+0x402>
 8009b50:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b52:	015a      	lsls	r2, r3, #5
 8009b54:	69fb      	ldr	r3, [r7, #28]
 8009b56:	4413      	add	r3, r2
 8009b58:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009b5c:	461a      	mov	r2, r3
 8009b5e:	2340      	movs	r3, #64	; 0x40
 8009b60:	6093      	str	r3, [r2, #8]
 8009b62:	693b      	ldr	r3, [r7, #16]
 8009b64:	f003 0302 	and.w	r3, r3, #2
 8009b68:	2b00      	cmp	r3, #0
 8009b6a:	d023      	beq.n	8009bb4 <HAL_PCD_IRQHandler+0x454>
 8009b6c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009b6e:	6a38      	ldr	r0, [r7, #32]
 8009b70:	f002 f960 	bl	800be34 <USB_FlushTxFifo>
 8009b74:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009b76:	4613      	mov	r3, r2
 8009b78:	00db      	lsls	r3, r3, #3
 8009b7a:	4413      	add	r3, r2
 8009b7c:	009b      	lsls	r3, r3, #2
 8009b7e:	3338      	adds	r3, #56	; 0x38
 8009b80:	687a      	ldr	r2, [r7, #4]
 8009b82:	4413      	add	r3, r2
 8009b84:	3304      	adds	r3, #4
 8009b86:	617b      	str	r3, [r7, #20]
 8009b88:	697b      	ldr	r3, [r7, #20]
 8009b8a:	78db      	ldrb	r3, [r3, #3]
 8009b8c:	2b01      	cmp	r3, #1
 8009b8e:	d108      	bne.n	8009ba2 <HAL_PCD_IRQHandler+0x442>
 8009b90:	697b      	ldr	r3, [r7, #20]
 8009b92:	2200      	movs	r2, #0
 8009b94:	70da      	strb	r2, [r3, #3]
 8009b96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b98:	b2db      	uxtb	r3, r3
 8009b9a:	4619      	mov	r1, r3
 8009b9c:	6878      	ldr	r0, [r7, #4]
 8009b9e:	f005 fd7f 	bl	800f6a0 <HAL_PCD_ISOINIncompleteCallback>
 8009ba2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ba4:	015a      	lsls	r2, r3, #5
 8009ba6:	69fb      	ldr	r3, [r7, #28]
 8009ba8:	4413      	add	r3, r2
 8009baa:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009bae:	461a      	mov	r2, r3
 8009bb0:	2302      	movs	r3, #2
 8009bb2:	6093      	str	r3, [r2, #8]
 8009bb4:	693b      	ldr	r3, [r7, #16]
 8009bb6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009bba:	2b00      	cmp	r3, #0
 8009bbc:	d003      	beq.n	8009bc6 <HAL_PCD_IRQHandler+0x466>
 8009bbe:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8009bc0:	6878      	ldr	r0, [r7, #4]
 8009bc2:	f000 fcdb 	bl	800a57c <PCD_WriteEmptyTxFifo>
 8009bc6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009bc8:	3301      	adds	r3, #1
 8009bca:	627b      	str	r3, [r7, #36]	; 0x24
 8009bcc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009bce:	085b      	lsrs	r3, r3, #1
 8009bd0:	62bb      	str	r3, [r7, #40]	; 0x28
 8009bd2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009bd4:	2b00      	cmp	r3, #0
 8009bd6:	f47f af2e 	bne.w	8009a36 <HAL_PCD_IRQHandler+0x2d6>
 8009bda:	687b      	ldr	r3, [r7, #4]
 8009bdc:	681b      	ldr	r3, [r3, #0]
 8009bde:	4618      	mov	r0, r3
 8009be0:	f003 f94a 	bl	800ce78 <USB_ReadInterrupts>
 8009be4:	4603      	mov	r3, r0
 8009be6:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8009bea:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8009bee:	d122      	bne.n	8009c36 <HAL_PCD_IRQHandler+0x4d6>
 8009bf0:	69fb      	ldr	r3, [r7, #28]
 8009bf2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009bf6:	685b      	ldr	r3, [r3, #4]
 8009bf8:	69fa      	ldr	r2, [r7, #28]
 8009bfa:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009bfe:	f023 0301 	bic.w	r3, r3, #1
 8009c02:	6053      	str	r3, [r2, #4]
 8009c04:	687b      	ldr	r3, [r7, #4]
 8009c06:	f893 34f4 	ldrb.w	r3, [r3, #1268]	; 0x4f4
 8009c0a:	2b01      	cmp	r3, #1
 8009c0c:	d108      	bne.n	8009c20 <HAL_PCD_IRQHandler+0x4c0>
 8009c0e:	687b      	ldr	r3, [r7, #4]
 8009c10:	2200      	movs	r2, #0
 8009c12:	f883 24f4 	strb.w	r2, [r3, #1268]	; 0x4f4
 8009c16:	2100      	movs	r1, #0
 8009c18:	6878      	ldr	r0, [r7, #4]
 8009c1a:	f000 fec3 	bl	800a9a4 <HAL_PCDEx_LPM_Callback>
 8009c1e:	e002      	b.n	8009c26 <HAL_PCD_IRQHandler+0x4c6>
 8009c20:	6878      	ldr	r0, [r7, #4]
 8009c22:	f005 fd1d 	bl	800f660 <HAL_PCD_ResumeCallback>
 8009c26:	687b      	ldr	r3, [r7, #4]
 8009c28:	681b      	ldr	r3, [r3, #0]
 8009c2a:	695a      	ldr	r2, [r3, #20]
 8009c2c:	687b      	ldr	r3, [r7, #4]
 8009c2e:	681b      	ldr	r3, [r3, #0]
 8009c30:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 8009c34:	615a      	str	r2, [r3, #20]
 8009c36:	687b      	ldr	r3, [r7, #4]
 8009c38:	681b      	ldr	r3, [r3, #0]
 8009c3a:	4618      	mov	r0, r3
 8009c3c:	f003 f91c 	bl	800ce78 <USB_ReadInterrupts>
 8009c40:	4603      	mov	r3, r0
 8009c42:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009c46:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009c4a:	d112      	bne.n	8009c72 <HAL_PCD_IRQHandler+0x512>
 8009c4c:	69fb      	ldr	r3, [r7, #28]
 8009c4e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009c52:	689b      	ldr	r3, [r3, #8]
 8009c54:	f003 0301 	and.w	r3, r3, #1
 8009c58:	2b01      	cmp	r3, #1
 8009c5a:	d102      	bne.n	8009c62 <HAL_PCD_IRQHandler+0x502>
 8009c5c:	6878      	ldr	r0, [r7, #4]
 8009c5e:	f005 fcd9 	bl	800f614 <HAL_PCD_SuspendCallback>
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	681b      	ldr	r3, [r3, #0]
 8009c66:	695a      	ldr	r2, [r3, #20]
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	681b      	ldr	r3, [r3, #0]
 8009c6c:	f402 6200 	and.w	r2, r2, #2048	; 0x800
 8009c70:	615a      	str	r2, [r3, #20]
 8009c72:	687b      	ldr	r3, [r7, #4]
 8009c74:	681b      	ldr	r3, [r3, #0]
 8009c76:	4618      	mov	r0, r3
 8009c78:	f003 f8fe 	bl	800ce78 <USB_ReadInterrupts>
 8009c7c:	4603      	mov	r3, r0
 8009c7e:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8009c82:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009c86:	f040 80b7 	bne.w	8009df8 <HAL_PCD_IRQHandler+0x698>
 8009c8a:	69fb      	ldr	r3, [r7, #28]
 8009c8c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009c90:	685b      	ldr	r3, [r3, #4]
 8009c92:	69fa      	ldr	r2, [r7, #28]
 8009c94:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009c98:	f023 0301 	bic.w	r3, r3, #1
 8009c9c:	6053      	str	r3, [r2, #4]
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	681b      	ldr	r3, [r3, #0]
 8009ca2:	2110      	movs	r1, #16
 8009ca4:	4618      	mov	r0, r3
 8009ca6:	f002 f8c5 	bl	800be34 <USB_FlushTxFifo>
 8009caa:	2300      	movs	r3, #0
 8009cac:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009cae:	e046      	b.n	8009d3e <HAL_PCD_IRQHandler+0x5de>
 8009cb0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009cb2:	015a      	lsls	r2, r3, #5
 8009cb4:	69fb      	ldr	r3, [r7, #28]
 8009cb6:	4413      	add	r3, r2
 8009cb8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009cbc:	461a      	mov	r2, r3
 8009cbe:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8009cc2:	6093      	str	r3, [r2, #8]
 8009cc4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009cc6:	015a      	lsls	r2, r3, #5
 8009cc8:	69fb      	ldr	r3, [r7, #28]
 8009cca:	4413      	add	r3, r2
 8009ccc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009cd0:	681b      	ldr	r3, [r3, #0]
 8009cd2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009cd4:	0151      	lsls	r1, r2, #5
 8009cd6:	69fa      	ldr	r2, [r7, #28]
 8009cd8:	440a      	add	r2, r1
 8009cda:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 8009cde:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8009ce2:	6013      	str	r3, [r2, #0]
 8009ce4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009ce6:	015a      	lsls	r2, r3, #5
 8009ce8:	69fb      	ldr	r3, [r7, #28]
 8009cea:	4413      	add	r3, r2
 8009cec:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009cf0:	461a      	mov	r2, r3
 8009cf2:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 8009cf6:	6093      	str	r3, [r2, #8]
 8009cf8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009cfa:	015a      	lsls	r2, r3, #5
 8009cfc:	69fb      	ldr	r3, [r7, #28]
 8009cfe:	4413      	add	r3, r2
 8009d00:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009d04:	681b      	ldr	r3, [r3, #0]
 8009d06:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009d08:	0151      	lsls	r1, r2, #5
 8009d0a:	69fa      	ldr	r2, [r7, #28]
 8009d0c:	440a      	add	r2, r1
 8009d0e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009d12:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8009d16:	6013      	str	r3, [r2, #0]
 8009d18:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d1a:	015a      	lsls	r2, r3, #5
 8009d1c:	69fb      	ldr	r3, [r7, #28]
 8009d1e:	4413      	add	r3, r2
 8009d20:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009d24:	681b      	ldr	r3, [r3, #0]
 8009d26:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009d28:	0151      	lsls	r1, r2, #5
 8009d2a:	69fa      	ldr	r2, [r7, #28]
 8009d2c:	440a      	add	r2, r1
 8009d2e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 8009d32:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8009d36:	6013      	str	r3, [r2, #0]
 8009d38:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d3a:	3301      	adds	r3, #1
 8009d3c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	685b      	ldr	r3, [r3, #4]
 8009d42:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009d44:	429a      	cmp	r2, r3
 8009d46:	d3b3      	bcc.n	8009cb0 <HAL_PCD_IRQHandler+0x550>
 8009d48:	69fb      	ldr	r3, [r7, #28]
 8009d4a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009d4e:	69db      	ldr	r3, [r3, #28]
 8009d50:	69fa      	ldr	r2, [r7, #28]
 8009d52:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009d56:	f043 1301 	orr.w	r3, r3, #65537	; 0x10001
 8009d5a:	61d3      	str	r3, [r2, #28]
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009d60:	2b00      	cmp	r3, #0
 8009d62:	d016      	beq.n	8009d92 <HAL_PCD_IRQHandler+0x632>
 8009d64:	69fb      	ldr	r3, [r7, #28]
 8009d66:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009d6a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8009d6e:	69fa      	ldr	r2, [r7, #28]
 8009d70:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009d74:	f043 030b 	orr.w	r3, r3, #11
 8009d78:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8009d7c:	69fb      	ldr	r3, [r7, #28]
 8009d7e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009d82:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009d84:	69fa      	ldr	r2, [r7, #28]
 8009d86:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009d8a:	f043 030b 	orr.w	r3, r3, #11
 8009d8e:	6453      	str	r3, [r2, #68]	; 0x44
 8009d90:	e015      	b.n	8009dbe <HAL_PCD_IRQHandler+0x65e>
 8009d92:	69fb      	ldr	r3, [r7, #28]
 8009d94:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009d98:	695b      	ldr	r3, [r3, #20]
 8009d9a:	69fa      	ldr	r2, [r7, #28]
 8009d9c:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009da0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8009da4:	f043 032b 	orr.w	r3, r3, #43	; 0x2b
 8009da8:	6153      	str	r3, [r2, #20]
 8009daa:	69fb      	ldr	r3, [r7, #28]
 8009dac:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009db0:	691b      	ldr	r3, [r3, #16]
 8009db2:	69fa      	ldr	r2, [r7, #28]
 8009db4:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009db8:	f043 030b 	orr.w	r3, r3, #11
 8009dbc:	6113      	str	r3, [r2, #16]
 8009dbe:	69fb      	ldr	r3, [r7, #28]
 8009dc0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009dc4:	681b      	ldr	r3, [r3, #0]
 8009dc6:	69fa      	ldr	r2, [r7, #28]
 8009dc8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8009dcc:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 8009dd0:	6013      	str	r3, [r2, #0]
 8009dd2:	687b      	ldr	r3, [r7, #4]
 8009dd4:	6818      	ldr	r0, [r3, #0]
 8009dd6:	687b      	ldr	r3, [r7, #4]
 8009dd8:	691b      	ldr	r3, [r3, #16]
 8009dda:	b2d9      	uxtb	r1, r3
 8009ddc:	687b      	ldr	r3, [r7, #4]
 8009dde:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 8009de2:	461a      	mov	r2, r3
 8009de4:	f003 f90c 	bl	800d000 <USB_EP0_OutStart>
 8009de8:	687b      	ldr	r3, [r7, #4]
 8009dea:	681b      	ldr	r3, [r3, #0]
 8009dec:	695a      	ldr	r2, [r3, #20]
 8009dee:	687b      	ldr	r3, [r7, #4]
 8009df0:	681b      	ldr	r3, [r3, #0]
 8009df2:	f402 5280 	and.w	r2, r2, #4096	; 0x1000
 8009df6:	615a      	str	r2, [r3, #20]
 8009df8:	687b      	ldr	r3, [r7, #4]
 8009dfa:	681b      	ldr	r3, [r3, #0]
 8009dfc:	4618      	mov	r0, r3
 8009dfe:	f003 f83b 	bl	800ce78 <USB_ReadInterrupts>
 8009e02:	4603      	mov	r3, r0
 8009e04:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8009e08:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8009e0c:	d124      	bne.n	8009e58 <HAL_PCD_IRQHandler+0x6f8>
 8009e0e:	687b      	ldr	r3, [r7, #4]
 8009e10:	681b      	ldr	r3, [r3, #0]
 8009e12:	4618      	mov	r0, r3
 8009e14:	f003 f8d1 	bl	800cfba <USB_ActivateSetup>
 8009e18:	687b      	ldr	r3, [r7, #4]
 8009e1a:	681b      	ldr	r3, [r3, #0]
 8009e1c:	4618      	mov	r0, r3
 8009e1e:	f002 f886 	bl	800bf2e <USB_GetDevSpeed>
 8009e22:	4603      	mov	r3, r0
 8009e24:	461a      	mov	r2, r3
 8009e26:	687b      	ldr	r3, [r7, #4]
 8009e28:	60da      	str	r2, [r3, #12]
 8009e2a:	687b      	ldr	r3, [r7, #4]
 8009e2c:	681c      	ldr	r4, [r3, #0]
 8009e2e:	f001 fa29 	bl	800b284 <HAL_RCC_GetHCLKFreq>
 8009e32:	4601      	mov	r1, r0
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	68db      	ldr	r3, [r3, #12]
 8009e38:	b2db      	uxtb	r3, r3
 8009e3a:	461a      	mov	r2, r3
 8009e3c:	4620      	mov	r0, r4
 8009e3e:	f001 fd85 	bl	800b94c <USB_SetTurnaroundTime>
 8009e42:	6878      	ldr	r0, [r7, #4]
 8009e44:	f005 fbbd 	bl	800f5c2 <HAL_PCD_ResetCallback>
 8009e48:	687b      	ldr	r3, [r7, #4]
 8009e4a:	681b      	ldr	r3, [r3, #0]
 8009e4c:	695a      	ldr	r2, [r3, #20]
 8009e4e:	687b      	ldr	r3, [r7, #4]
 8009e50:	681b      	ldr	r3, [r3, #0]
 8009e52:	f402 5200 	and.w	r2, r2, #8192	; 0x2000
 8009e56:	615a      	str	r2, [r3, #20]
 8009e58:	687b      	ldr	r3, [r7, #4]
 8009e5a:	681b      	ldr	r3, [r3, #0]
 8009e5c:	4618      	mov	r0, r3
 8009e5e:	f003 f80b 	bl	800ce78 <USB_ReadInterrupts>
 8009e62:	4603      	mov	r3, r0
 8009e64:	f003 0308 	and.w	r3, r3, #8
 8009e68:	2b08      	cmp	r3, #8
 8009e6a:	d10a      	bne.n	8009e82 <HAL_PCD_IRQHandler+0x722>
 8009e6c:	6878      	ldr	r0, [r7, #4]
 8009e6e:	f005 fb9a 	bl	800f5a6 <HAL_PCD_SOFCallback>
 8009e72:	687b      	ldr	r3, [r7, #4]
 8009e74:	681b      	ldr	r3, [r3, #0]
 8009e76:	695a      	ldr	r2, [r3, #20]
 8009e78:	687b      	ldr	r3, [r7, #4]
 8009e7a:	681b      	ldr	r3, [r3, #0]
 8009e7c:	f002 0208 	and.w	r2, r2, #8
 8009e80:	615a      	str	r2, [r3, #20]
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	681b      	ldr	r3, [r3, #0]
 8009e86:	4618      	mov	r0, r3
 8009e88:	f002 fff6 	bl	800ce78 <USB_ReadInterrupts>
 8009e8c:	4603      	mov	r3, r0
 8009e8e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009e92:	2b80      	cmp	r3, #128	; 0x80
 8009e94:	d122      	bne.n	8009edc <HAL_PCD_IRQHandler+0x77c>
 8009e96:	6a3b      	ldr	r3, [r7, #32]
 8009e98:	699b      	ldr	r3, [r3, #24]
 8009e9a:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8009e9e:	6a3b      	ldr	r3, [r7, #32]
 8009ea0:	619a      	str	r2, [r3, #24]
 8009ea2:	2301      	movs	r3, #1
 8009ea4:	627b      	str	r3, [r7, #36]	; 0x24
 8009ea6:	e014      	b.n	8009ed2 <HAL_PCD_IRQHandler+0x772>
 8009ea8:	6879      	ldr	r1, [r7, #4]
 8009eaa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009eac:	4613      	mov	r3, r2
 8009eae:	00db      	lsls	r3, r3, #3
 8009eb0:	4413      	add	r3, r2
 8009eb2:	009b      	lsls	r3, r3, #2
 8009eb4:	440b      	add	r3, r1
 8009eb6:	f203 237f 	addw	r3, r3, #639	; 0x27f
 8009eba:	781b      	ldrb	r3, [r3, #0]
 8009ebc:	2b01      	cmp	r3, #1
 8009ebe:	d105      	bne.n	8009ecc <HAL_PCD_IRQHandler+0x76c>
 8009ec0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ec2:	b2db      	uxtb	r3, r3
 8009ec4:	4619      	mov	r1, r3
 8009ec6:	6878      	ldr	r0, [r7, #4]
 8009ec8:	f000 fb27 	bl	800a51a <HAL_PCD_EP_Abort>
 8009ecc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009ece:	3301      	adds	r3, #1
 8009ed0:	627b      	str	r3, [r7, #36]	; 0x24
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	685b      	ldr	r3, [r3, #4]
 8009ed6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009ed8:	429a      	cmp	r2, r3
 8009eda:	d3e5      	bcc.n	8009ea8 <HAL_PCD_IRQHandler+0x748>
 8009edc:	687b      	ldr	r3, [r7, #4]
 8009ede:	681b      	ldr	r3, [r3, #0]
 8009ee0:	4618      	mov	r0, r3
 8009ee2:	f002 ffc9 	bl	800ce78 <USB_ReadInterrupts>
 8009ee6:	4603      	mov	r3, r0
 8009ee8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009eec:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8009ef0:	d13b      	bne.n	8009f6a <HAL_PCD_IRQHandler+0x80a>
 8009ef2:	2301      	movs	r3, #1
 8009ef4:	627b      	str	r3, [r7, #36]	; 0x24
 8009ef6:	e02b      	b.n	8009f50 <HAL_PCD_IRQHandler+0x7f0>
 8009ef8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009efa:	015a      	lsls	r2, r3, #5
 8009efc:	69fb      	ldr	r3, [r7, #28]
 8009efe:	4413      	add	r3, r2
 8009f00:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8009f04:	681b      	ldr	r3, [r3, #0]
 8009f06:	61bb      	str	r3, [r7, #24]
 8009f08:	6879      	ldr	r1, [r7, #4]
 8009f0a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009f0c:	4613      	mov	r3, r2
 8009f0e:	00db      	lsls	r3, r3, #3
 8009f10:	4413      	add	r3, r2
 8009f12:	009b      	lsls	r3, r3, #2
 8009f14:	440b      	add	r3, r1
 8009f16:	3340      	adds	r3, #64	; 0x40
 8009f18:	781b      	ldrb	r3, [r3, #0]
 8009f1a:	2b01      	cmp	r3, #1
 8009f1c:	d115      	bne.n	8009f4a <HAL_PCD_IRQHandler+0x7ea>
 8009f1e:	69bb      	ldr	r3, [r7, #24]
 8009f20:	2b00      	cmp	r3, #0
 8009f22:	da12      	bge.n	8009f4a <HAL_PCD_IRQHandler+0x7ea>
 8009f24:	6879      	ldr	r1, [r7, #4]
 8009f26:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009f28:	4613      	mov	r3, r2
 8009f2a:	00db      	lsls	r3, r3, #3
 8009f2c:	4413      	add	r3, r2
 8009f2e:	009b      	lsls	r3, r3, #2
 8009f30:	440b      	add	r3, r1
 8009f32:	333f      	adds	r3, #63	; 0x3f
 8009f34:	2201      	movs	r2, #1
 8009f36:	701a      	strb	r2, [r3, #0]
 8009f38:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009f3a:	b2db      	uxtb	r3, r3
 8009f3c:	f063 037f 	orn	r3, r3, #127	; 0x7f
 8009f40:	b2db      	uxtb	r3, r3
 8009f42:	4619      	mov	r1, r3
 8009f44:	6878      	ldr	r0, [r7, #4]
 8009f46:	f000 fae8 	bl	800a51a <HAL_PCD_EP_Abort>
 8009f4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009f4c:	3301      	adds	r3, #1
 8009f4e:	627b      	str	r3, [r7, #36]	; 0x24
 8009f50:	687b      	ldr	r3, [r7, #4]
 8009f52:	685b      	ldr	r3, [r3, #4]
 8009f54:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009f56:	429a      	cmp	r2, r3
 8009f58:	d3ce      	bcc.n	8009ef8 <HAL_PCD_IRQHandler+0x798>
 8009f5a:	687b      	ldr	r3, [r7, #4]
 8009f5c:	681b      	ldr	r3, [r3, #0]
 8009f5e:	695a      	ldr	r2, [r3, #20]
 8009f60:	687b      	ldr	r3, [r7, #4]
 8009f62:	681b      	ldr	r3, [r3, #0]
 8009f64:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8009f68:	615a      	str	r2, [r3, #20]
 8009f6a:	687b      	ldr	r3, [r7, #4]
 8009f6c:	681b      	ldr	r3, [r3, #0]
 8009f6e:	4618      	mov	r0, r3
 8009f70:	f002 ff82 	bl	800ce78 <USB_ReadInterrupts>
 8009f74:	4603      	mov	r3, r0
 8009f76:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8009f7a:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8009f7e:	d155      	bne.n	800a02c <HAL_PCD_IRQHandler+0x8cc>
 8009f80:	2301      	movs	r3, #1
 8009f82:	627b      	str	r3, [r7, #36]	; 0x24
 8009f84:	e045      	b.n	800a012 <HAL_PCD_IRQHandler+0x8b2>
 8009f86:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009f88:	015a      	lsls	r2, r3, #5
 8009f8a:	69fb      	ldr	r3, [r7, #28]
 8009f8c:	4413      	add	r3, r2
 8009f8e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8009f92:	681b      	ldr	r3, [r3, #0]
 8009f94:	61bb      	str	r3, [r7, #24]
 8009f96:	6879      	ldr	r1, [r7, #4]
 8009f98:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009f9a:	4613      	mov	r3, r2
 8009f9c:	00db      	lsls	r3, r3, #3
 8009f9e:	4413      	add	r3, r2
 8009fa0:	009b      	lsls	r3, r3, #2
 8009fa2:	440b      	add	r3, r1
 8009fa4:	f503 7320 	add.w	r3, r3, #640	; 0x280
 8009fa8:	781b      	ldrb	r3, [r3, #0]
 8009faa:	2b01      	cmp	r3, #1
 8009fac:	d12e      	bne.n	800a00c <HAL_PCD_IRQHandler+0x8ac>
 8009fae:	69bb      	ldr	r3, [r7, #24]
 8009fb0:	2b00      	cmp	r3, #0
 8009fb2:	da2b      	bge.n	800a00c <HAL_PCD_IRQHandler+0x8ac>
 8009fb4:	69bb      	ldr	r3, [r7, #24]
 8009fb6:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	f8d3 34fc 	ldr.w	r3, [r3, #1276]	; 0x4fc
 8009fc0:	f003 0301 	and.w	r3, r3, #1
 8009fc4:	429a      	cmp	r2, r3
 8009fc6:	d121      	bne.n	800a00c <HAL_PCD_IRQHandler+0x8ac>
 8009fc8:	6879      	ldr	r1, [r7, #4]
 8009fca:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009fcc:	4613      	mov	r3, r2
 8009fce:	00db      	lsls	r3, r3, #3
 8009fd0:	4413      	add	r3, r2
 8009fd2:	009b      	lsls	r3, r3, #2
 8009fd4:	440b      	add	r3, r1
 8009fd6:	f203 237f 	addw	r3, r3, #639	; 0x27f
 8009fda:	2201      	movs	r2, #1
 8009fdc:	701a      	strb	r2, [r3, #0]
 8009fde:	6a3b      	ldr	r3, [r7, #32]
 8009fe0:	699b      	ldr	r3, [r3, #24]
 8009fe2:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8009fe6:	6a3b      	ldr	r3, [r7, #32]
 8009fe8:	619a      	str	r2, [r3, #24]
 8009fea:	6a3b      	ldr	r3, [r7, #32]
 8009fec:	695b      	ldr	r3, [r3, #20]
 8009fee:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009ff2:	2b00      	cmp	r3, #0
 8009ff4:	d10a      	bne.n	800a00c <HAL_PCD_IRQHandler+0x8ac>
 8009ff6:	69fb      	ldr	r3, [r7, #28]
 8009ff8:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8009ffc:	685b      	ldr	r3, [r3, #4]
 8009ffe:	69fa      	ldr	r2, [r7, #28]
 800a000:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800a004:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800a008:	6053      	str	r3, [r2, #4]
 800a00a:	e007      	b.n	800a01c <HAL_PCD_IRQHandler+0x8bc>
 800a00c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a00e:	3301      	adds	r3, #1
 800a010:	627b      	str	r3, [r7, #36]	; 0x24
 800a012:	687b      	ldr	r3, [r7, #4]
 800a014:	685b      	ldr	r3, [r3, #4]
 800a016:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800a018:	429a      	cmp	r2, r3
 800a01a:	d3b4      	bcc.n	8009f86 <HAL_PCD_IRQHandler+0x826>
 800a01c:	687b      	ldr	r3, [r7, #4]
 800a01e:	681b      	ldr	r3, [r3, #0]
 800a020:	695a      	ldr	r2, [r3, #20]
 800a022:	687b      	ldr	r3, [r7, #4]
 800a024:	681b      	ldr	r3, [r3, #0]
 800a026:	f402 1200 	and.w	r2, r2, #2097152	; 0x200000
 800a02a:	615a      	str	r2, [r3, #20]
 800a02c:	687b      	ldr	r3, [r7, #4]
 800a02e:	681b      	ldr	r3, [r3, #0]
 800a030:	4618      	mov	r0, r3
 800a032:	f002 ff21 	bl	800ce78 <USB_ReadInterrupts>
 800a036:	4603      	mov	r3, r0
 800a038:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800a03c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a040:	d10a      	bne.n	800a058 <HAL_PCD_IRQHandler+0x8f8>
 800a042:	6878      	ldr	r0, [r7, #4]
 800a044:	f005 fb3e 	bl	800f6c4 <HAL_PCD_ConnectCallback>
 800a048:	687b      	ldr	r3, [r7, #4]
 800a04a:	681b      	ldr	r3, [r3, #0]
 800a04c:	695a      	ldr	r2, [r3, #20]
 800a04e:	687b      	ldr	r3, [r7, #4]
 800a050:	681b      	ldr	r3, [r3, #0]
 800a052:	f002 4280 	and.w	r2, r2, #1073741824	; 0x40000000
 800a056:	615a      	str	r2, [r3, #20]
 800a058:	687b      	ldr	r3, [r7, #4]
 800a05a:	681b      	ldr	r3, [r3, #0]
 800a05c:	4618      	mov	r0, r3
 800a05e:	f002 ff0b 	bl	800ce78 <USB_ReadInterrupts>
 800a062:	4603      	mov	r3, r0
 800a064:	f003 0304 	and.w	r3, r3, #4
 800a068:	2b04      	cmp	r3, #4
 800a06a:	d115      	bne.n	800a098 <HAL_PCD_IRQHandler+0x938>
 800a06c:	687b      	ldr	r3, [r7, #4]
 800a06e:	681b      	ldr	r3, [r3, #0]
 800a070:	685b      	ldr	r3, [r3, #4]
 800a072:	61bb      	str	r3, [r7, #24]
 800a074:	69bb      	ldr	r3, [r7, #24]
 800a076:	f003 0304 	and.w	r3, r3, #4
 800a07a:	2b00      	cmp	r3, #0
 800a07c:	d002      	beq.n	800a084 <HAL_PCD_IRQHandler+0x924>
 800a07e:	6878      	ldr	r0, [r7, #4]
 800a080:	f005 fb2e 	bl	800f6e0 <HAL_PCD_DisconnectCallback>
 800a084:	687b      	ldr	r3, [r7, #4]
 800a086:	681b      	ldr	r3, [r3, #0]
 800a088:	6859      	ldr	r1, [r3, #4]
 800a08a:	687b      	ldr	r3, [r7, #4]
 800a08c:	681b      	ldr	r3, [r3, #0]
 800a08e:	69ba      	ldr	r2, [r7, #24]
 800a090:	430a      	orrs	r2, r1
 800a092:	605a      	str	r2, [r3, #4]
 800a094:	e000      	b.n	800a098 <HAL_PCD_IRQHandler+0x938>
 800a096:	bf00      	nop
 800a098:	3734      	adds	r7, #52	; 0x34
 800a09a:	46bd      	mov	sp, r7
 800a09c:	bd90      	pop	{r4, r7, pc}

0800a09e <HAL_PCD_SetAddress>:
 800a09e:	b580      	push	{r7, lr}
 800a0a0:	b082      	sub	sp, #8
 800a0a2:	af00      	add	r7, sp, #0
 800a0a4:	6078      	str	r0, [r7, #4]
 800a0a6:	460b      	mov	r3, r1
 800a0a8:	70fb      	strb	r3, [r7, #3]
 800a0aa:	687b      	ldr	r3, [r7, #4]
 800a0ac:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 800a0b0:	2b01      	cmp	r3, #1
 800a0b2:	d101      	bne.n	800a0b8 <HAL_PCD_SetAddress+0x1a>
 800a0b4:	2302      	movs	r3, #2
 800a0b6:	e013      	b.n	800a0e0 <HAL_PCD_SetAddress+0x42>
 800a0b8:	687b      	ldr	r3, [r7, #4]
 800a0ba:	2201      	movs	r2, #1
 800a0bc:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a0c0:	687b      	ldr	r3, [r7, #4]
 800a0c2:	78fa      	ldrb	r2, [r7, #3]
 800a0c4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 800a0c8:	687b      	ldr	r3, [r7, #4]
 800a0ca:	681b      	ldr	r3, [r3, #0]
 800a0cc:	78fa      	ldrb	r2, [r7, #3]
 800a0ce:	4611      	mov	r1, r2
 800a0d0:	4618      	mov	r0, r3
 800a0d2:	f002 fe69 	bl	800cda8 <USB_SetDevAddress>
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	2200      	movs	r2, #0
 800a0da:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a0de:	2300      	movs	r3, #0
 800a0e0:	4618      	mov	r0, r3
 800a0e2:	3708      	adds	r7, #8
 800a0e4:	46bd      	mov	sp, r7
 800a0e6:	bd80      	pop	{r7, pc}

0800a0e8 <HAL_PCD_EP_Open>:
 800a0e8:	b580      	push	{r7, lr}
 800a0ea:	b084      	sub	sp, #16
 800a0ec:	af00      	add	r7, sp, #0
 800a0ee:	6078      	str	r0, [r7, #4]
 800a0f0:	4608      	mov	r0, r1
 800a0f2:	4611      	mov	r1, r2
 800a0f4:	461a      	mov	r2, r3
 800a0f6:	4603      	mov	r3, r0
 800a0f8:	70fb      	strb	r3, [r7, #3]
 800a0fa:	460b      	mov	r3, r1
 800a0fc:	803b      	strh	r3, [r7, #0]
 800a0fe:	4613      	mov	r3, r2
 800a100:	70bb      	strb	r3, [r7, #2]
 800a102:	2300      	movs	r3, #0
 800a104:	72fb      	strb	r3, [r7, #11]
 800a106:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a10a:	2b00      	cmp	r3, #0
 800a10c:	da0f      	bge.n	800a12e <HAL_PCD_EP_Open+0x46>
 800a10e:	78fb      	ldrb	r3, [r7, #3]
 800a110:	f003 020f 	and.w	r2, r3, #15
 800a114:	4613      	mov	r3, r2
 800a116:	00db      	lsls	r3, r3, #3
 800a118:	4413      	add	r3, r2
 800a11a:	009b      	lsls	r3, r3, #2
 800a11c:	3338      	adds	r3, #56	; 0x38
 800a11e:	687a      	ldr	r2, [r7, #4]
 800a120:	4413      	add	r3, r2
 800a122:	3304      	adds	r3, #4
 800a124:	60fb      	str	r3, [r7, #12]
 800a126:	68fb      	ldr	r3, [r7, #12]
 800a128:	2201      	movs	r2, #1
 800a12a:	705a      	strb	r2, [r3, #1]
 800a12c:	e00f      	b.n	800a14e <HAL_PCD_EP_Open+0x66>
 800a12e:	78fb      	ldrb	r3, [r7, #3]
 800a130:	f003 020f 	and.w	r2, r3, #15
 800a134:	4613      	mov	r3, r2
 800a136:	00db      	lsls	r3, r3, #3
 800a138:	4413      	add	r3, r2
 800a13a:	009b      	lsls	r3, r3, #2
 800a13c:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800a140:	687a      	ldr	r2, [r7, #4]
 800a142:	4413      	add	r3, r2
 800a144:	3304      	adds	r3, #4
 800a146:	60fb      	str	r3, [r7, #12]
 800a148:	68fb      	ldr	r3, [r7, #12]
 800a14a:	2200      	movs	r2, #0
 800a14c:	705a      	strb	r2, [r3, #1]
 800a14e:	78fb      	ldrb	r3, [r7, #3]
 800a150:	f003 030f 	and.w	r3, r3, #15
 800a154:	b2da      	uxtb	r2, r3
 800a156:	68fb      	ldr	r3, [r7, #12]
 800a158:	701a      	strb	r2, [r3, #0]
 800a15a:	883a      	ldrh	r2, [r7, #0]
 800a15c:	68fb      	ldr	r3, [r7, #12]
 800a15e:	60da      	str	r2, [r3, #12]
 800a160:	68fb      	ldr	r3, [r7, #12]
 800a162:	78ba      	ldrb	r2, [r7, #2]
 800a164:	711a      	strb	r2, [r3, #4]
 800a166:	68fb      	ldr	r3, [r7, #12]
 800a168:	785b      	ldrb	r3, [r3, #1]
 800a16a:	2b00      	cmp	r3, #0
 800a16c:	d004      	beq.n	800a178 <HAL_PCD_EP_Open+0x90>
 800a16e:	68fb      	ldr	r3, [r7, #12]
 800a170:	781b      	ldrb	r3, [r3, #0]
 800a172:	b29a      	uxth	r2, r3
 800a174:	68fb      	ldr	r3, [r7, #12]
 800a176:	811a      	strh	r2, [r3, #8]
 800a178:	78bb      	ldrb	r3, [r7, #2]
 800a17a:	2b02      	cmp	r3, #2
 800a17c:	d102      	bne.n	800a184 <HAL_PCD_EP_Open+0x9c>
 800a17e:	68fb      	ldr	r3, [r7, #12]
 800a180:	2200      	movs	r2, #0
 800a182:	715a      	strb	r2, [r3, #5]
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 800a18a:	2b01      	cmp	r3, #1
 800a18c:	d101      	bne.n	800a192 <HAL_PCD_EP_Open+0xaa>
 800a18e:	2302      	movs	r3, #2
 800a190:	e00e      	b.n	800a1b0 <HAL_PCD_EP_Open+0xc8>
 800a192:	687b      	ldr	r3, [r7, #4]
 800a194:	2201      	movs	r2, #1
 800a196:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a19a:	687b      	ldr	r3, [r7, #4]
 800a19c:	681b      	ldr	r3, [r3, #0]
 800a19e:	68f9      	ldr	r1, [r7, #12]
 800a1a0:	4618      	mov	r0, r3
 800a1a2:	f001 fee9 	bl	800bf78 <USB_ActivateEndpoint>
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	2200      	movs	r2, #0
 800a1aa:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a1ae:	7afb      	ldrb	r3, [r7, #11]
 800a1b0:	4618      	mov	r0, r3
 800a1b2:	3710      	adds	r7, #16
 800a1b4:	46bd      	mov	sp, r7
 800a1b6:	bd80      	pop	{r7, pc}

0800a1b8 <HAL_PCD_EP_Close>:
 800a1b8:	b580      	push	{r7, lr}
 800a1ba:	b084      	sub	sp, #16
 800a1bc:	af00      	add	r7, sp, #0
 800a1be:	6078      	str	r0, [r7, #4]
 800a1c0:	460b      	mov	r3, r1
 800a1c2:	70fb      	strb	r3, [r7, #3]
 800a1c4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a1c8:	2b00      	cmp	r3, #0
 800a1ca:	da0f      	bge.n	800a1ec <HAL_PCD_EP_Close+0x34>
 800a1cc:	78fb      	ldrb	r3, [r7, #3]
 800a1ce:	f003 020f 	and.w	r2, r3, #15
 800a1d2:	4613      	mov	r3, r2
 800a1d4:	00db      	lsls	r3, r3, #3
 800a1d6:	4413      	add	r3, r2
 800a1d8:	009b      	lsls	r3, r3, #2
 800a1da:	3338      	adds	r3, #56	; 0x38
 800a1dc:	687a      	ldr	r2, [r7, #4]
 800a1de:	4413      	add	r3, r2
 800a1e0:	3304      	adds	r3, #4
 800a1e2:	60fb      	str	r3, [r7, #12]
 800a1e4:	68fb      	ldr	r3, [r7, #12]
 800a1e6:	2201      	movs	r2, #1
 800a1e8:	705a      	strb	r2, [r3, #1]
 800a1ea:	e00f      	b.n	800a20c <HAL_PCD_EP_Close+0x54>
 800a1ec:	78fb      	ldrb	r3, [r7, #3]
 800a1ee:	f003 020f 	and.w	r2, r3, #15
 800a1f2:	4613      	mov	r3, r2
 800a1f4:	00db      	lsls	r3, r3, #3
 800a1f6:	4413      	add	r3, r2
 800a1f8:	009b      	lsls	r3, r3, #2
 800a1fa:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800a1fe:	687a      	ldr	r2, [r7, #4]
 800a200:	4413      	add	r3, r2
 800a202:	3304      	adds	r3, #4
 800a204:	60fb      	str	r3, [r7, #12]
 800a206:	68fb      	ldr	r3, [r7, #12]
 800a208:	2200      	movs	r2, #0
 800a20a:	705a      	strb	r2, [r3, #1]
 800a20c:	78fb      	ldrb	r3, [r7, #3]
 800a20e:	f003 030f 	and.w	r3, r3, #15
 800a212:	b2da      	uxtb	r2, r3
 800a214:	68fb      	ldr	r3, [r7, #12]
 800a216:	701a      	strb	r2, [r3, #0]
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 800a21e:	2b01      	cmp	r3, #1
 800a220:	d101      	bne.n	800a226 <HAL_PCD_EP_Close+0x6e>
 800a222:	2302      	movs	r3, #2
 800a224:	e00e      	b.n	800a244 <HAL_PCD_EP_Close+0x8c>
 800a226:	687b      	ldr	r3, [r7, #4]
 800a228:	2201      	movs	r2, #1
 800a22a:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a22e:	687b      	ldr	r3, [r7, #4]
 800a230:	681b      	ldr	r3, [r3, #0]
 800a232:	68f9      	ldr	r1, [r7, #12]
 800a234:	4618      	mov	r0, r3
 800a236:	f001 ff27 	bl	800c088 <USB_DeactivateEndpoint>
 800a23a:	687b      	ldr	r3, [r7, #4]
 800a23c:	2200      	movs	r2, #0
 800a23e:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a242:	2300      	movs	r3, #0
 800a244:	4618      	mov	r0, r3
 800a246:	3710      	adds	r7, #16
 800a248:	46bd      	mov	sp, r7
 800a24a:	bd80      	pop	{r7, pc}

0800a24c <HAL_PCD_EP_Receive>:
 800a24c:	b580      	push	{r7, lr}
 800a24e:	b086      	sub	sp, #24
 800a250:	af00      	add	r7, sp, #0
 800a252:	60f8      	str	r0, [r7, #12]
 800a254:	607a      	str	r2, [r7, #4]
 800a256:	603b      	str	r3, [r7, #0]
 800a258:	460b      	mov	r3, r1
 800a25a:	72fb      	strb	r3, [r7, #11]
 800a25c:	7afb      	ldrb	r3, [r7, #11]
 800a25e:	f003 020f 	and.w	r2, r3, #15
 800a262:	4613      	mov	r3, r2
 800a264:	00db      	lsls	r3, r3, #3
 800a266:	4413      	add	r3, r2
 800a268:	009b      	lsls	r3, r3, #2
 800a26a:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800a26e:	68fa      	ldr	r2, [r7, #12]
 800a270:	4413      	add	r3, r2
 800a272:	3304      	adds	r3, #4
 800a274:	617b      	str	r3, [r7, #20]
 800a276:	697b      	ldr	r3, [r7, #20]
 800a278:	687a      	ldr	r2, [r7, #4]
 800a27a:	611a      	str	r2, [r3, #16]
 800a27c:	697b      	ldr	r3, [r7, #20]
 800a27e:	683a      	ldr	r2, [r7, #0]
 800a280:	619a      	str	r2, [r3, #24]
 800a282:	697b      	ldr	r3, [r7, #20]
 800a284:	2200      	movs	r2, #0
 800a286:	621a      	str	r2, [r3, #32]
 800a288:	697b      	ldr	r3, [r7, #20]
 800a28a:	2200      	movs	r2, #0
 800a28c:	705a      	strb	r2, [r3, #1]
 800a28e:	7afb      	ldrb	r3, [r7, #11]
 800a290:	f003 030f 	and.w	r3, r3, #15
 800a294:	b2da      	uxtb	r2, r3
 800a296:	697b      	ldr	r3, [r7, #20]
 800a298:	701a      	strb	r2, [r3, #0]
 800a29a:	68fb      	ldr	r3, [r7, #12]
 800a29c:	691b      	ldr	r3, [r3, #16]
 800a29e:	2b01      	cmp	r3, #1
 800a2a0:	d102      	bne.n	800a2a8 <HAL_PCD_EP_Receive+0x5c>
 800a2a2:	687a      	ldr	r2, [r7, #4]
 800a2a4:	697b      	ldr	r3, [r7, #20]
 800a2a6:	615a      	str	r2, [r3, #20]
 800a2a8:	7afb      	ldrb	r3, [r7, #11]
 800a2aa:	f003 030f 	and.w	r3, r3, #15
 800a2ae:	2b00      	cmp	r3, #0
 800a2b0:	d109      	bne.n	800a2c6 <HAL_PCD_EP_Receive+0x7a>
 800a2b2:	68fb      	ldr	r3, [r7, #12]
 800a2b4:	6818      	ldr	r0, [r3, #0]
 800a2b6:	68fb      	ldr	r3, [r7, #12]
 800a2b8:	691b      	ldr	r3, [r3, #16]
 800a2ba:	b2db      	uxtb	r3, r3
 800a2bc:	461a      	mov	r2, r3
 800a2be:	6979      	ldr	r1, [r7, #20]
 800a2c0:	f002 fa06 	bl	800c6d0 <USB_EP0StartXfer>
 800a2c4:	e008      	b.n	800a2d8 <HAL_PCD_EP_Receive+0x8c>
 800a2c6:	68fb      	ldr	r3, [r7, #12]
 800a2c8:	6818      	ldr	r0, [r3, #0]
 800a2ca:	68fb      	ldr	r3, [r7, #12]
 800a2cc:	691b      	ldr	r3, [r3, #16]
 800a2ce:	b2db      	uxtb	r3, r3
 800a2d0:	461a      	mov	r2, r3
 800a2d2:	6979      	ldr	r1, [r7, #20]
 800a2d4:	f001 ffb4 	bl	800c240 <USB_EPStartXfer>
 800a2d8:	2300      	movs	r3, #0
 800a2da:	4618      	mov	r0, r3
 800a2dc:	3718      	adds	r7, #24
 800a2de:	46bd      	mov	sp, r7
 800a2e0:	bd80      	pop	{r7, pc}

0800a2e2 <HAL_PCD_EP_GetRxCount>:
 800a2e2:	b480      	push	{r7}
 800a2e4:	b083      	sub	sp, #12
 800a2e6:	af00      	add	r7, sp, #0
 800a2e8:	6078      	str	r0, [r7, #4]
 800a2ea:	460b      	mov	r3, r1
 800a2ec:	70fb      	strb	r3, [r7, #3]
 800a2ee:	78fb      	ldrb	r3, [r7, #3]
 800a2f0:	f003 020f 	and.w	r2, r3, #15
 800a2f4:	6879      	ldr	r1, [r7, #4]
 800a2f6:	4613      	mov	r3, r2
 800a2f8:	00db      	lsls	r3, r3, #3
 800a2fa:	4413      	add	r3, r2
 800a2fc:	009b      	lsls	r3, r3, #2
 800a2fe:	440b      	add	r3, r1
 800a300:	f503 7327 	add.w	r3, r3, #668	; 0x29c
 800a304:	681b      	ldr	r3, [r3, #0]
 800a306:	4618      	mov	r0, r3
 800a308:	370c      	adds	r7, #12
 800a30a:	46bd      	mov	sp, r7
 800a30c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a310:	4770      	bx	lr

0800a312 <HAL_PCD_EP_Transmit>:
 800a312:	b580      	push	{r7, lr}
 800a314:	b086      	sub	sp, #24
 800a316:	af00      	add	r7, sp, #0
 800a318:	60f8      	str	r0, [r7, #12]
 800a31a:	607a      	str	r2, [r7, #4]
 800a31c:	603b      	str	r3, [r7, #0]
 800a31e:	460b      	mov	r3, r1
 800a320:	72fb      	strb	r3, [r7, #11]
 800a322:	7afb      	ldrb	r3, [r7, #11]
 800a324:	f003 020f 	and.w	r2, r3, #15
 800a328:	4613      	mov	r3, r2
 800a32a:	00db      	lsls	r3, r3, #3
 800a32c:	4413      	add	r3, r2
 800a32e:	009b      	lsls	r3, r3, #2
 800a330:	3338      	adds	r3, #56	; 0x38
 800a332:	68fa      	ldr	r2, [r7, #12]
 800a334:	4413      	add	r3, r2
 800a336:	3304      	adds	r3, #4
 800a338:	617b      	str	r3, [r7, #20]
 800a33a:	697b      	ldr	r3, [r7, #20]
 800a33c:	687a      	ldr	r2, [r7, #4]
 800a33e:	611a      	str	r2, [r3, #16]
 800a340:	697b      	ldr	r3, [r7, #20]
 800a342:	683a      	ldr	r2, [r7, #0]
 800a344:	619a      	str	r2, [r3, #24]
 800a346:	697b      	ldr	r3, [r7, #20]
 800a348:	2200      	movs	r2, #0
 800a34a:	621a      	str	r2, [r3, #32]
 800a34c:	697b      	ldr	r3, [r7, #20]
 800a34e:	2201      	movs	r2, #1
 800a350:	705a      	strb	r2, [r3, #1]
 800a352:	7afb      	ldrb	r3, [r7, #11]
 800a354:	f003 030f 	and.w	r3, r3, #15
 800a358:	b2da      	uxtb	r2, r3
 800a35a:	697b      	ldr	r3, [r7, #20]
 800a35c:	701a      	strb	r2, [r3, #0]
 800a35e:	68fb      	ldr	r3, [r7, #12]
 800a360:	691b      	ldr	r3, [r3, #16]
 800a362:	2b01      	cmp	r3, #1
 800a364:	d102      	bne.n	800a36c <HAL_PCD_EP_Transmit+0x5a>
 800a366:	687a      	ldr	r2, [r7, #4]
 800a368:	697b      	ldr	r3, [r7, #20]
 800a36a:	615a      	str	r2, [r3, #20]
 800a36c:	7afb      	ldrb	r3, [r7, #11]
 800a36e:	f003 030f 	and.w	r3, r3, #15
 800a372:	2b00      	cmp	r3, #0
 800a374:	d109      	bne.n	800a38a <HAL_PCD_EP_Transmit+0x78>
 800a376:	68fb      	ldr	r3, [r7, #12]
 800a378:	6818      	ldr	r0, [r3, #0]
 800a37a:	68fb      	ldr	r3, [r7, #12]
 800a37c:	691b      	ldr	r3, [r3, #16]
 800a37e:	b2db      	uxtb	r3, r3
 800a380:	461a      	mov	r2, r3
 800a382:	6979      	ldr	r1, [r7, #20]
 800a384:	f002 f9a4 	bl	800c6d0 <USB_EP0StartXfer>
 800a388:	e008      	b.n	800a39c <HAL_PCD_EP_Transmit+0x8a>
 800a38a:	68fb      	ldr	r3, [r7, #12]
 800a38c:	6818      	ldr	r0, [r3, #0]
 800a38e:	68fb      	ldr	r3, [r7, #12]
 800a390:	691b      	ldr	r3, [r3, #16]
 800a392:	b2db      	uxtb	r3, r3
 800a394:	461a      	mov	r2, r3
 800a396:	6979      	ldr	r1, [r7, #20]
 800a398:	f001 ff52 	bl	800c240 <USB_EPStartXfer>
 800a39c:	2300      	movs	r3, #0
 800a39e:	4618      	mov	r0, r3
 800a3a0:	3718      	adds	r7, #24
 800a3a2:	46bd      	mov	sp, r7
 800a3a4:	bd80      	pop	{r7, pc}

0800a3a6 <HAL_PCD_EP_SetStall>:
 800a3a6:	b580      	push	{r7, lr}
 800a3a8:	b084      	sub	sp, #16
 800a3aa:	af00      	add	r7, sp, #0
 800a3ac:	6078      	str	r0, [r7, #4]
 800a3ae:	460b      	mov	r3, r1
 800a3b0:	70fb      	strb	r3, [r7, #3]
 800a3b2:	78fb      	ldrb	r3, [r7, #3]
 800a3b4:	f003 020f 	and.w	r2, r3, #15
 800a3b8:	687b      	ldr	r3, [r7, #4]
 800a3ba:	685b      	ldr	r3, [r3, #4]
 800a3bc:	429a      	cmp	r2, r3
 800a3be:	d901      	bls.n	800a3c4 <HAL_PCD_EP_SetStall+0x1e>
 800a3c0:	2301      	movs	r3, #1
 800a3c2:	e050      	b.n	800a466 <HAL_PCD_EP_SetStall+0xc0>
 800a3c4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a3c8:	2b00      	cmp	r3, #0
 800a3ca:	da0f      	bge.n	800a3ec <HAL_PCD_EP_SetStall+0x46>
 800a3cc:	78fb      	ldrb	r3, [r7, #3]
 800a3ce:	f003 020f 	and.w	r2, r3, #15
 800a3d2:	4613      	mov	r3, r2
 800a3d4:	00db      	lsls	r3, r3, #3
 800a3d6:	4413      	add	r3, r2
 800a3d8:	009b      	lsls	r3, r3, #2
 800a3da:	3338      	adds	r3, #56	; 0x38
 800a3dc:	687a      	ldr	r2, [r7, #4]
 800a3de:	4413      	add	r3, r2
 800a3e0:	3304      	adds	r3, #4
 800a3e2:	60fb      	str	r3, [r7, #12]
 800a3e4:	68fb      	ldr	r3, [r7, #12]
 800a3e6:	2201      	movs	r2, #1
 800a3e8:	705a      	strb	r2, [r3, #1]
 800a3ea:	e00d      	b.n	800a408 <HAL_PCD_EP_SetStall+0x62>
 800a3ec:	78fa      	ldrb	r2, [r7, #3]
 800a3ee:	4613      	mov	r3, r2
 800a3f0:	00db      	lsls	r3, r3, #3
 800a3f2:	4413      	add	r3, r2
 800a3f4:	009b      	lsls	r3, r3, #2
 800a3f6:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800a3fa:	687a      	ldr	r2, [r7, #4]
 800a3fc:	4413      	add	r3, r2
 800a3fe:	3304      	adds	r3, #4
 800a400:	60fb      	str	r3, [r7, #12]
 800a402:	68fb      	ldr	r3, [r7, #12]
 800a404:	2200      	movs	r2, #0
 800a406:	705a      	strb	r2, [r3, #1]
 800a408:	68fb      	ldr	r3, [r7, #12]
 800a40a:	2201      	movs	r2, #1
 800a40c:	709a      	strb	r2, [r3, #2]
 800a40e:	78fb      	ldrb	r3, [r7, #3]
 800a410:	f003 030f 	and.w	r3, r3, #15
 800a414:	b2da      	uxtb	r2, r3
 800a416:	68fb      	ldr	r3, [r7, #12]
 800a418:	701a      	strb	r2, [r3, #0]
 800a41a:	687b      	ldr	r3, [r7, #4]
 800a41c:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 800a420:	2b01      	cmp	r3, #1
 800a422:	d101      	bne.n	800a428 <HAL_PCD_EP_SetStall+0x82>
 800a424:	2302      	movs	r3, #2
 800a426:	e01e      	b.n	800a466 <HAL_PCD_EP_SetStall+0xc0>
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	2201      	movs	r2, #1
 800a42c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a430:	687b      	ldr	r3, [r7, #4]
 800a432:	681b      	ldr	r3, [r3, #0]
 800a434:	68f9      	ldr	r1, [r7, #12]
 800a436:	4618      	mov	r0, r3
 800a438:	f002 fbe2 	bl	800cc00 <USB_EPSetStall>
 800a43c:	78fb      	ldrb	r3, [r7, #3]
 800a43e:	f003 030f 	and.w	r3, r3, #15
 800a442:	2b00      	cmp	r3, #0
 800a444:	d10a      	bne.n	800a45c <HAL_PCD_EP_SetStall+0xb6>
 800a446:	687b      	ldr	r3, [r7, #4]
 800a448:	6818      	ldr	r0, [r3, #0]
 800a44a:	687b      	ldr	r3, [r7, #4]
 800a44c:	691b      	ldr	r3, [r3, #16]
 800a44e:	b2d9      	uxtb	r1, r3
 800a450:	687b      	ldr	r3, [r7, #4]
 800a452:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800a456:	461a      	mov	r2, r3
 800a458:	f002 fdd2 	bl	800d000 <USB_EP0_OutStart>
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	2200      	movs	r2, #0
 800a460:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a464:	2300      	movs	r3, #0
 800a466:	4618      	mov	r0, r3
 800a468:	3710      	adds	r7, #16
 800a46a:	46bd      	mov	sp, r7
 800a46c:	bd80      	pop	{r7, pc}

0800a46e <HAL_PCD_EP_ClrStall>:
 800a46e:	b580      	push	{r7, lr}
 800a470:	b084      	sub	sp, #16
 800a472:	af00      	add	r7, sp, #0
 800a474:	6078      	str	r0, [r7, #4]
 800a476:	460b      	mov	r3, r1
 800a478:	70fb      	strb	r3, [r7, #3]
 800a47a:	78fb      	ldrb	r3, [r7, #3]
 800a47c:	f003 020f 	and.w	r2, r3, #15
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	685b      	ldr	r3, [r3, #4]
 800a484:	429a      	cmp	r2, r3
 800a486:	d901      	bls.n	800a48c <HAL_PCD_EP_ClrStall+0x1e>
 800a488:	2301      	movs	r3, #1
 800a48a:	e042      	b.n	800a512 <HAL_PCD_EP_ClrStall+0xa4>
 800a48c:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a490:	2b00      	cmp	r3, #0
 800a492:	da0f      	bge.n	800a4b4 <HAL_PCD_EP_ClrStall+0x46>
 800a494:	78fb      	ldrb	r3, [r7, #3]
 800a496:	f003 020f 	and.w	r2, r3, #15
 800a49a:	4613      	mov	r3, r2
 800a49c:	00db      	lsls	r3, r3, #3
 800a49e:	4413      	add	r3, r2
 800a4a0:	009b      	lsls	r3, r3, #2
 800a4a2:	3338      	adds	r3, #56	; 0x38
 800a4a4:	687a      	ldr	r2, [r7, #4]
 800a4a6:	4413      	add	r3, r2
 800a4a8:	3304      	adds	r3, #4
 800a4aa:	60fb      	str	r3, [r7, #12]
 800a4ac:	68fb      	ldr	r3, [r7, #12]
 800a4ae:	2201      	movs	r2, #1
 800a4b0:	705a      	strb	r2, [r3, #1]
 800a4b2:	e00f      	b.n	800a4d4 <HAL_PCD_EP_ClrStall+0x66>
 800a4b4:	78fb      	ldrb	r3, [r7, #3]
 800a4b6:	f003 020f 	and.w	r2, r3, #15
 800a4ba:	4613      	mov	r3, r2
 800a4bc:	00db      	lsls	r3, r3, #3
 800a4be:	4413      	add	r3, r2
 800a4c0:	009b      	lsls	r3, r3, #2
 800a4c2:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800a4c6:	687a      	ldr	r2, [r7, #4]
 800a4c8:	4413      	add	r3, r2
 800a4ca:	3304      	adds	r3, #4
 800a4cc:	60fb      	str	r3, [r7, #12]
 800a4ce:	68fb      	ldr	r3, [r7, #12]
 800a4d0:	2200      	movs	r2, #0
 800a4d2:	705a      	strb	r2, [r3, #1]
 800a4d4:	68fb      	ldr	r3, [r7, #12]
 800a4d6:	2200      	movs	r2, #0
 800a4d8:	709a      	strb	r2, [r3, #2]
 800a4da:	78fb      	ldrb	r3, [r7, #3]
 800a4dc:	f003 030f 	and.w	r3, r3, #15
 800a4e0:	b2da      	uxtb	r2, r3
 800a4e2:	68fb      	ldr	r3, [r7, #12]
 800a4e4:	701a      	strb	r2, [r3, #0]
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	f893 34bc 	ldrb.w	r3, [r3, #1212]	; 0x4bc
 800a4ec:	2b01      	cmp	r3, #1
 800a4ee:	d101      	bne.n	800a4f4 <HAL_PCD_EP_ClrStall+0x86>
 800a4f0:	2302      	movs	r3, #2
 800a4f2:	e00e      	b.n	800a512 <HAL_PCD_EP_ClrStall+0xa4>
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	2201      	movs	r2, #1
 800a4f8:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a4fc:	687b      	ldr	r3, [r7, #4]
 800a4fe:	681b      	ldr	r3, [r3, #0]
 800a500:	68f9      	ldr	r1, [r7, #12]
 800a502:	4618      	mov	r0, r3
 800a504:	f002 fbea 	bl	800ccdc <USB_EPClearStall>
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	2200      	movs	r2, #0
 800a50c:	f883 24bc 	strb.w	r2, [r3, #1212]	; 0x4bc
 800a510:	2300      	movs	r3, #0
 800a512:	4618      	mov	r0, r3
 800a514:	3710      	adds	r7, #16
 800a516:	46bd      	mov	sp, r7
 800a518:	bd80      	pop	{r7, pc}

0800a51a <HAL_PCD_EP_Abort>:
 800a51a:	b580      	push	{r7, lr}
 800a51c:	b084      	sub	sp, #16
 800a51e:	af00      	add	r7, sp, #0
 800a520:	6078      	str	r0, [r7, #4]
 800a522:	460b      	mov	r3, r1
 800a524:	70fb      	strb	r3, [r7, #3]
 800a526:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800a52a:	2b00      	cmp	r3, #0
 800a52c:	da0c      	bge.n	800a548 <HAL_PCD_EP_Abort+0x2e>
 800a52e:	78fb      	ldrb	r3, [r7, #3]
 800a530:	f003 020f 	and.w	r2, r3, #15
 800a534:	4613      	mov	r3, r2
 800a536:	00db      	lsls	r3, r3, #3
 800a538:	4413      	add	r3, r2
 800a53a:	009b      	lsls	r3, r3, #2
 800a53c:	3338      	adds	r3, #56	; 0x38
 800a53e:	687a      	ldr	r2, [r7, #4]
 800a540:	4413      	add	r3, r2
 800a542:	3304      	adds	r3, #4
 800a544:	60fb      	str	r3, [r7, #12]
 800a546:	e00c      	b.n	800a562 <HAL_PCD_EP_Abort+0x48>
 800a548:	78fb      	ldrb	r3, [r7, #3]
 800a54a:	f003 020f 	and.w	r2, r3, #15
 800a54e:	4613      	mov	r3, r2
 800a550:	00db      	lsls	r3, r3, #3
 800a552:	4413      	add	r3, r2
 800a554:	009b      	lsls	r3, r3, #2
 800a556:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800a55a:	687a      	ldr	r2, [r7, #4]
 800a55c:	4413      	add	r3, r2
 800a55e:	3304      	adds	r3, #4
 800a560:	60fb      	str	r3, [r7, #12]
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	681b      	ldr	r3, [r3, #0]
 800a566:	68f9      	ldr	r1, [r7, #12]
 800a568:	4618      	mov	r0, r3
 800a56a:	f002 fa09 	bl	800c980 <USB_EPStopXfer>
 800a56e:	4603      	mov	r3, r0
 800a570:	72fb      	strb	r3, [r7, #11]
 800a572:	7afb      	ldrb	r3, [r7, #11]
 800a574:	4618      	mov	r0, r3
 800a576:	3710      	adds	r7, #16
 800a578:	46bd      	mov	sp, r7
 800a57a:	bd80      	pop	{r7, pc}

0800a57c <PCD_WriteEmptyTxFifo>:
 800a57c:	b580      	push	{r7, lr}
 800a57e:	b08a      	sub	sp, #40	; 0x28
 800a580:	af02      	add	r7, sp, #8
 800a582:	6078      	str	r0, [r7, #4]
 800a584:	6039      	str	r1, [r7, #0]
 800a586:	687b      	ldr	r3, [r7, #4]
 800a588:	681b      	ldr	r3, [r3, #0]
 800a58a:	617b      	str	r3, [r7, #20]
 800a58c:	697b      	ldr	r3, [r7, #20]
 800a58e:	613b      	str	r3, [r7, #16]
 800a590:	683a      	ldr	r2, [r7, #0]
 800a592:	4613      	mov	r3, r2
 800a594:	00db      	lsls	r3, r3, #3
 800a596:	4413      	add	r3, r2
 800a598:	009b      	lsls	r3, r3, #2
 800a59a:	3338      	adds	r3, #56	; 0x38
 800a59c:	687a      	ldr	r2, [r7, #4]
 800a59e:	4413      	add	r3, r2
 800a5a0:	3304      	adds	r3, #4
 800a5a2:	60fb      	str	r3, [r7, #12]
 800a5a4:	68fb      	ldr	r3, [r7, #12]
 800a5a6:	6a1a      	ldr	r2, [r3, #32]
 800a5a8:	68fb      	ldr	r3, [r7, #12]
 800a5aa:	699b      	ldr	r3, [r3, #24]
 800a5ac:	429a      	cmp	r2, r3
 800a5ae:	d901      	bls.n	800a5b4 <PCD_WriteEmptyTxFifo+0x38>
 800a5b0:	2301      	movs	r3, #1
 800a5b2:	e06c      	b.n	800a68e <PCD_WriteEmptyTxFifo+0x112>
 800a5b4:	68fb      	ldr	r3, [r7, #12]
 800a5b6:	699a      	ldr	r2, [r3, #24]
 800a5b8:	68fb      	ldr	r3, [r7, #12]
 800a5ba:	6a1b      	ldr	r3, [r3, #32]
 800a5bc:	1ad3      	subs	r3, r2, r3
 800a5be:	61fb      	str	r3, [r7, #28]
 800a5c0:	68fb      	ldr	r3, [r7, #12]
 800a5c2:	68db      	ldr	r3, [r3, #12]
 800a5c4:	69fa      	ldr	r2, [r7, #28]
 800a5c6:	429a      	cmp	r2, r3
 800a5c8:	d902      	bls.n	800a5d0 <PCD_WriteEmptyTxFifo+0x54>
 800a5ca:	68fb      	ldr	r3, [r7, #12]
 800a5cc:	68db      	ldr	r3, [r3, #12]
 800a5ce:	61fb      	str	r3, [r7, #28]
 800a5d0:	69fb      	ldr	r3, [r7, #28]
 800a5d2:	3303      	adds	r3, #3
 800a5d4:	089b      	lsrs	r3, r3, #2
 800a5d6:	61bb      	str	r3, [r7, #24]
 800a5d8:	e02b      	b.n	800a632 <PCD_WriteEmptyTxFifo+0xb6>
 800a5da:	68fb      	ldr	r3, [r7, #12]
 800a5dc:	699a      	ldr	r2, [r3, #24]
 800a5de:	68fb      	ldr	r3, [r7, #12]
 800a5e0:	6a1b      	ldr	r3, [r3, #32]
 800a5e2:	1ad3      	subs	r3, r2, r3
 800a5e4:	61fb      	str	r3, [r7, #28]
 800a5e6:	68fb      	ldr	r3, [r7, #12]
 800a5e8:	68db      	ldr	r3, [r3, #12]
 800a5ea:	69fa      	ldr	r2, [r7, #28]
 800a5ec:	429a      	cmp	r2, r3
 800a5ee:	d902      	bls.n	800a5f6 <PCD_WriteEmptyTxFifo+0x7a>
 800a5f0:	68fb      	ldr	r3, [r7, #12]
 800a5f2:	68db      	ldr	r3, [r3, #12]
 800a5f4:	61fb      	str	r3, [r7, #28]
 800a5f6:	69fb      	ldr	r3, [r7, #28]
 800a5f8:	3303      	adds	r3, #3
 800a5fa:	089b      	lsrs	r3, r3, #2
 800a5fc:	61bb      	str	r3, [r7, #24]
 800a5fe:	68fb      	ldr	r3, [r7, #12]
 800a600:	6919      	ldr	r1, [r3, #16]
 800a602:	683b      	ldr	r3, [r7, #0]
 800a604:	b2da      	uxtb	r2, r3
 800a606:	69fb      	ldr	r3, [r7, #28]
 800a608:	b298      	uxth	r0, r3
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	691b      	ldr	r3, [r3, #16]
 800a60e:	b2db      	uxtb	r3, r3
 800a610:	9300      	str	r3, [sp, #0]
 800a612:	4603      	mov	r3, r0
 800a614:	6978      	ldr	r0, [r7, #20]
 800a616:	f002 fa5d 	bl	800cad4 <USB_WritePacket>
 800a61a:	68fb      	ldr	r3, [r7, #12]
 800a61c:	691a      	ldr	r2, [r3, #16]
 800a61e:	69fb      	ldr	r3, [r7, #28]
 800a620:	441a      	add	r2, r3
 800a622:	68fb      	ldr	r3, [r7, #12]
 800a624:	611a      	str	r2, [r3, #16]
 800a626:	68fb      	ldr	r3, [r7, #12]
 800a628:	6a1a      	ldr	r2, [r3, #32]
 800a62a:	69fb      	ldr	r3, [r7, #28]
 800a62c:	441a      	add	r2, r3
 800a62e:	68fb      	ldr	r3, [r7, #12]
 800a630:	621a      	str	r2, [r3, #32]
 800a632:	683b      	ldr	r3, [r7, #0]
 800a634:	015a      	lsls	r2, r3, #5
 800a636:	693b      	ldr	r3, [r7, #16]
 800a638:	4413      	add	r3, r2
 800a63a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800a63e:	699b      	ldr	r3, [r3, #24]
 800a640:	b29b      	uxth	r3, r3
 800a642:	69ba      	ldr	r2, [r7, #24]
 800a644:	429a      	cmp	r2, r3
 800a646:	d809      	bhi.n	800a65c <PCD_WriteEmptyTxFifo+0xe0>
 800a648:	68fb      	ldr	r3, [r7, #12]
 800a64a:	6a1a      	ldr	r2, [r3, #32]
 800a64c:	68fb      	ldr	r3, [r7, #12]
 800a64e:	699b      	ldr	r3, [r3, #24]
 800a650:	429a      	cmp	r2, r3
 800a652:	d203      	bcs.n	800a65c <PCD_WriteEmptyTxFifo+0xe0>
 800a654:	68fb      	ldr	r3, [r7, #12]
 800a656:	699b      	ldr	r3, [r3, #24]
 800a658:	2b00      	cmp	r3, #0
 800a65a:	d1be      	bne.n	800a5da <PCD_WriteEmptyTxFifo+0x5e>
 800a65c:	68fb      	ldr	r3, [r7, #12]
 800a65e:	699a      	ldr	r2, [r3, #24]
 800a660:	68fb      	ldr	r3, [r7, #12]
 800a662:	6a1b      	ldr	r3, [r3, #32]
 800a664:	429a      	cmp	r2, r3
 800a666:	d811      	bhi.n	800a68c <PCD_WriteEmptyTxFifo+0x110>
 800a668:	683b      	ldr	r3, [r7, #0]
 800a66a:	f003 030f 	and.w	r3, r3, #15
 800a66e:	2201      	movs	r2, #1
 800a670:	fa02 f303 	lsl.w	r3, r2, r3
 800a674:	60bb      	str	r3, [r7, #8]
 800a676:	693b      	ldr	r3, [r7, #16]
 800a678:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800a67c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a67e:	68bb      	ldr	r3, [r7, #8]
 800a680:	43db      	mvns	r3, r3
 800a682:	6939      	ldr	r1, [r7, #16]
 800a684:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800a688:	4013      	ands	r3, r2
 800a68a:	634b      	str	r3, [r1, #52]	; 0x34
 800a68c:	2300      	movs	r3, #0
 800a68e:	4618      	mov	r0, r3
 800a690:	3720      	adds	r7, #32
 800a692:	46bd      	mov	sp, r7
 800a694:	bd80      	pop	{r7, pc}
	...

0800a698 <PCD_EP_OutXfrComplete_int>:
 800a698:	b580      	push	{r7, lr}
 800a69a:	b088      	sub	sp, #32
 800a69c:	af00      	add	r7, sp, #0
 800a69e:	6078      	str	r0, [r7, #4]
 800a6a0:	6039      	str	r1, [r7, #0]
 800a6a2:	687b      	ldr	r3, [r7, #4]
 800a6a4:	681b      	ldr	r3, [r3, #0]
 800a6a6:	61fb      	str	r3, [r7, #28]
 800a6a8:	69fb      	ldr	r3, [r7, #28]
 800a6aa:	61bb      	str	r3, [r7, #24]
 800a6ac:	69fb      	ldr	r3, [r7, #28]
 800a6ae:	333c      	adds	r3, #60	; 0x3c
 800a6b0:	3304      	adds	r3, #4
 800a6b2:	681b      	ldr	r3, [r3, #0]
 800a6b4:	617b      	str	r3, [r7, #20]
 800a6b6:	683b      	ldr	r3, [r7, #0]
 800a6b8:	015a      	lsls	r2, r3, #5
 800a6ba:	69bb      	ldr	r3, [r7, #24]
 800a6bc:	4413      	add	r3, r2
 800a6be:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a6c2:	689b      	ldr	r3, [r3, #8]
 800a6c4:	613b      	str	r3, [r7, #16]
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	691b      	ldr	r3, [r3, #16]
 800a6ca:	2b01      	cmp	r3, #1
 800a6cc:	d17b      	bne.n	800a7c6 <PCD_EP_OutXfrComplete_int+0x12e>
 800a6ce:	693b      	ldr	r3, [r7, #16]
 800a6d0:	f003 0308 	and.w	r3, r3, #8
 800a6d4:	2b00      	cmp	r3, #0
 800a6d6:	d015      	beq.n	800a704 <PCD_EP_OutXfrComplete_int+0x6c>
 800a6d8:	697b      	ldr	r3, [r7, #20]
 800a6da:	4a61      	ldr	r2, [pc, #388]	; (800a860 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800a6dc:	4293      	cmp	r3, r2
 800a6de:	f240 80b9 	bls.w	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a6e2:	693b      	ldr	r3, [r7, #16]
 800a6e4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800a6e8:	2b00      	cmp	r3, #0
 800a6ea:	f000 80b3 	beq.w	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a6ee:	683b      	ldr	r3, [r7, #0]
 800a6f0:	015a      	lsls	r2, r3, #5
 800a6f2:	69bb      	ldr	r3, [r7, #24]
 800a6f4:	4413      	add	r3, r2
 800a6f6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a6fa:	461a      	mov	r2, r3
 800a6fc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800a700:	6093      	str	r3, [r2, #8]
 800a702:	e0a7      	b.n	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a704:	693b      	ldr	r3, [r7, #16]
 800a706:	f003 0320 	and.w	r3, r3, #32
 800a70a:	2b00      	cmp	r3, #0
 800a70c:	d009      	beq.n	800a722 <PCD_EP_OutXfrComplete_int+0x8a>
 800a70e:	683b      	ldr	r3, [r7, #0]
 800a710:	015a      	lsls	r2, r3, #5
 800a712:	69bb      	ldr	r3, [r7, #24]
 800a714:	4413      	add	r3, r2
 800a716:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a71a:	461a      	mov	r2, r3
 800a71c:	2320      	movs	r3, #32
 800a71e:	6093      	str	r3, [r2, #8]
 800a720:	e098      	b.n	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a722:	693b      	ldr	r3, [r7, #16]
 800a724:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800a728:	2b00      	cmp	r3, #0
 800a72a:	f040 8093 	bne.w	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a72e:	697b      	ldr	r3, [r7, #20]
 800a730:	4a4b      	ldr	r2, [pc, #300]	; (800a860 <PCD_EP_OutXfrComplete_int+0x1c8>)
 800a732:	4293      	cmp	r3, r2
 800a734:	d90f      	bls.n	800a756 <PCD_EP_OutXfrComplete_int+0xbe>
 800a736:	693b      	ldr	r3, [r7, #16]
 800a738:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800a73c:	2b00      	cmp	r3, #0
 800a73e:	d00a      	beq.n	800a756 <PCD_EP_OutXfrComplete_int+0xbe>
 800a740:	683b      	ldr	r3, [r7, #0]
 800a742:	015a      	lsls	r2, r3, #5
 800a744:	69bb      	ldr	r3, [r7, #24]
 800a746:	4413      	add	r3, r2
 800a748:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a74c:	461a      	mov	r2, r3
 800a74e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800a752:	6093      	str	r3, [r2, #8]
 800a754:	e07e      	b.n	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a756:	683a      	ldr	r2, [r7, #0]
 800a758:	4613      	mov	r3, r2
 800a75a:	00db      	lsls	r3, r3, #3
 800a75c:	4413      	add	r3, r2
 800a75e:	009b      	lsls	r3, r3, #2
 800a760:	f503 731e 	add.w	r3, r3, #632	; 0x278
 800a764:	687a      	ldr	r2, [r7, #4]
 800a766:	4413      	add	r3, r2
 800a768:	3304      	adds	r3, #4
 800a76a:	60fb      	str	r3, [r7, #12]
 800a76c:	68fb      	ldr	r3, [r7, #12]
 800a76e:	69da      	ldr	r2, [r3, #28]
 800a770:	683b      	ldr	r3, [r7, #0]
 800a772:	0159      	lsls	r1, r3, #5
 800a774:	69bb      	ldr	r3, [r7, #24]
 800a776:	440b      	add	r3, r1
 800a778:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a77c:	691b      	ldr	r3, [r3, #16]
 800a77e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800a782:	1ad2      	subs	r2, r2, r3
 800a784:	68fb      	ldr	r3, [r7, #12]
 800a786:	621a      	str	r2, [r3, #32]
 800a788:	683b      	ldr	r3, [r7, #0]
 800a78a:	2b00      	cmp	r3, #0
 800a78c:	d114      	bne.n	800a7b8 <PCD_EP_OutXfrComplete_int+0x120>
 800a78e:	68fb      	ldr	r3, [r7, #12]
 800a790:	699b      	ldr	r3, [r3, #24]
 800a792:	2b00      	cmp	r3, #0
 800a794:	d109      	bne.n	800a7aa <PCD_EP_OutXfrComplete_int+0x112>
 800a796:	687b      	ldr	r3, [r7, #4]
 800a798:	6818      	ldr	r0, [r3, #0]
 800a79a:	687b      	ldr	r3, [r7, #4]
 800a79c:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800a7a0:	461a      	mov	r2, r3
 800a7a2:	2101      	movs	r1, #1
 800a7a4:	f002 fc2c 	bl	800d000 <USB_EP0_OutStart>
 800a7a8:	e006      	b.n	800a7b8 <PCD_EP_OutXfrComplete_int+0x120>
 800a7aa:	68fb      	ldr	r3, [r7, #12]
 800a7ac:	691a      	ldr	r2, [r3, #16]
 800a7ae:	68fb      	ldr	r3, [r7, #12]
 800a7b0:	6a1b      	ldr	r3, [r3, #32]
 800a7b2:	441a      	add	r2, r3
 800a7b4:	68fb      	ldr	r3, [r7, #12]
 800a7b6:	611a      	str	r2, [r3, #16]
 800a7b8:	683b      	ldr	r3, [r7, #0]
 800a7ba:	b2db      	uxtb	r3, r3
 800a7bc:	4619      	mov	r1, r3
 800a7be:	6878      	ldr	r0, [r7, #4]
 800a7c0:	f004 febc 	bl	800f53c <HAL_PCD_DataOutStageCallback>
 800a7c4:	e046      	b.n	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a7c6:	697b      	ldr	r3, [r7, #20]
 800a7c8:	4a26      	ldr	r2, [pc, #152]	; (800a864 <PCD_EP_OutXfrComplete_int+0x1cc>)
 800a7ca:	4293      	cmp	r3, r2
 800a7cc:	d124      	bne.n	800a818 <PCD_EP_OutXfrComplete_int+0x180>
 800a7ce:	693b      	ldr	r3, [r7, #16]
 800a7d0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800a7d4:	2b00      	cmp	r3, #0
 800a7d6:	d00a      	beq.n	800a7ee <PCD_EP_OutXfrComplete_int+0x156>
 800a7d8:	683b      	ldr	r3, [r7, #0]
 800a7da:	015a      	lsls	r2, r3, #5
 800a7dc:	69bb      	ldr	r3, [r7, #24]
 800a7de:	4413      	add	r3, r2
 800a7e0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a7e4:	461a      	mov	r2, r3
 800a7e6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800a7ea:	6093      	str	r3, [r2, #8]
 800a7ec:	e032      	b.n	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a7ee:	693b      	ldr	r3, [r7, #16]
 800a7f0:	f003 0320 	and.w	r3, r3, #32
 800a7f4:	2b00      	cmp	r3, #0
 800a7f6:	d008      	beq.n	800a80a <PCD_EP_OutXfrComplete_int+0x172>
 800a7f8:	683b      	ldr	r3, [r7, #0]
 800a7fa:	015a      	lsls	r2, r3, #5
 800a7fc:	69bb      	ldr	r3, [r7, #24]
 800a7fe:	4413      	add	r3, r2
 800a800:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a804:	461a      	mov	r2, r3
 800a806:	2320      	movs	r3, #32
 800a808:	6093      	str	r3, [r2, #8]
 800a80a:	683b      	ldr	r3, [r7, #0]
 800a80c:	b2db      	uxtb	r3, r3
 800a80e:	4619      	mov	r1, r3
 800a810:	6878      	ldr	r0, [r7, #4]
 800a812:	f004 fe93 	bl	800f53c <HAL_PCD_DataOutStageCallback>
 800a816:	e01d      	b.n	800a854 <PCD_EP_OutXfrComplete_int+0x1bc>
 800a818:	683b      	ldr	r3, [r7, #0]
 800a81a:	2b00      	cmp	r3, #0
 800a81c:	d114      	bne.n	800a848 <PCD_EP_OutXfrComplete_int+0x1b0>
 800a81e:	6879      	ldr	r1, [r7, #4]
 800a820:	683a      	ldr	r2, [r7, #0]
 800a822:	4613      	mov	r3, r2
 800a824:	00db      	lsls	r3, r3, #3
 800a826:	4413      	add	r3, r2
 800a828:	009b      	lsls	r3, r3, #2
 800a82a:	440b      	add	r3, r1
 800a82c:	f503 7325 	add.w	r3, r3, #660	; 0x294
 800a830:	681b      	ldr	r3, [r3, #0]
 800a832:	2b00      	cmp	r3, #0
 800a834:	d108      	bne.n	800a848 <PCD_EP_OutXfrComplete_int+0x1b0>
 800a836:	687b      	ldr	r3, [r7, #4]
 800a838:	6818      	ldr	r0, [r3, #0]
 800a83a:	687b      	ldr	r3, [r7, #4]
 800a83c:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800a840:	461a      	mov	r2, r3
 800a842:	2100      	movs	r1, #0
 800a844:	f002 fbdc 	bl	800d000 <USB_EP0_OutStart>
 800a848:	683b      	ldr	r3, [r7, #0]
 800a84a:	b2db      	uxtb	r3, r3
 800a84c:	4619      	mov	r1, r3
 800a84e:	6878      	ldr	r0, [r7, #4]
 800a850:	f004 fe74 	bl	800f53c <HAL_PCD_DataOutStageCallback>
 800a854:	2300      	movs	r3, #0
 800a856:	4618      	mov	r0, r3
 800a858:	3720      	adds	r7, #32
 800a85a:	46bd      	mov	sp, r7
 800a85c:	bd80      	pop	{r7, pc}
 800a85e:	bf00      	nop
 800a860:	4f54300a 	.word	0x4f54300a
 800a864:	4f54310a 	.word	0x4f54310a

0800a868 <PCD_EP_OutSetupPacket_int>:
 800a868:	b580      	push	{r7, lr}
 800a86a:	b086      	sub	sp, #24
 800a86c:	af00      	add	r7, sp, #0
 800a86e:	6078      	str	r0, [r7, #4]
 800a870:	6039      	str	r1, [r7, #0]
 800a872:	687b      	ldr	r3, [r7, #4]
 800a874:	681b      	ldr	r3, [r3, #0]
 800a876:	617b      	str	r3, [r7, #20]
 800a878:	697b      	ldr	r3, [r7, #20]
 800a87a:	613b      	str	r3, [r7, #16]
 800a87c:	697b      	ldr	r3, [r7, #20]
 800a87e:	333c      	adds	r3, #60	; 0x3c
 800a880:	3304      	adds	r3, #4
 800a882:	681b      	ldr	r3, [r3, #0]
 800a884:	60fb      	str	r3, [r7, #12]
 800a886:	683b      	ldr	r3, [r7, #0]
 800a888:	015a      	lsls	r2, r3, #5
 800a88a:	693b      	ldr	r3, [r7, #16]
 800a88c:	4413      	add	r3, r2
 800a88e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a892:	689b      	ldr	r3, [r3, #8]
 800a894:	60bb      	str	r3, [r7, #8]
 800a896:	68fb      	ldr	r3, [r7, #12]
 800a898:	4a15      	ldr	r2, [pc, #84]	; (800a8f0 <PCD_EP_OutSetupPacket_int+0x88>)
 800a89a:	4293      	cmp	r3, r2
 800a89c:	d90e      	bls.n	800a8bc <PCD_EP_OutSetupPacket_int+0x54>
 800a89e:	68bb      	ldr	r3, [r7, #8]
 800a8a0:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800a8a4:	2b00      	cmp	r3, #0
 800a8a6:	d009      	beq.n	800a8bc <PCD_EP_OutSetupPacket_int+0x54>
 800a8a8:	683b      	ldr	r3, [r7, #0]
 800a8aa:	015a      	lsls	r2, r3, #5
 800a8ac:	693b      	ldr	r3, [r7, #16]
 800a8ae:	4413      	add	r3, r2
 800a8b0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800a8b4:	461a      	mov	r2, r3
 800a8b6:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800a8ba:	6093      	str	r3, [r2, #8]
 800a8bc:	6878      	ldr	r0, [r7, #4]
 800a8be:	f004 fe2b 	bl	800f518 <HAL_PCD_SetupStageCallback>
 800a8c2:	68fb      	ldr	r3, [r7, #12]
 800a8c4:	4a0a      	ldr	r2, [pc, #40]	; (800a8f0 <PCD_EP_OutSetupPacket_int+0x88>)
 800a8c6:	4293      	cmp	r3, r2
 800a8c8:	d90c      	bls.n	800a8e4 <PCD_EP_OutSetupPacket_int+0x7c>
 800a8ca:	687b      	ldr	r3, [r7, #4]
 800a8cc:	691b      	ldr	r3, [r3, #16]
 800a8ce:	2b01      	cmp	r3, #1
 800a8d0:	d108      	bne.n	800a8e4 <PCD_EP_OutSetupPacket_int+0x7c>
 800a8d2:	687b      	ldr	r3, [r7, #4]
 800a8d4:	6818      	ldr	r0, [r3, #0]
 800a8d6:	687b      	ldr	r3, [r7, #4]
 800a8d8:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800a8dc:	461a      	mov	r2, r3
 800a8de:	2101      	movs	r1, #1
 800a8e0:	f002 fb8e 	bl	800d000 <USB_EP0_OutStart>
 800a8e4:	2300      	movs	r3, #0
 800a8e6:	4618      	mov	r0, r3
 800a8e8:	3718      	adds	r7, #24
 800a8ea:	46bd      	mov	sp, r7
 800a8ec:	bd80      	pop	{r7, pc}
 800a8ee:	bf00      	nop
 800a8f0:	4f54300a 	.word	0x4f54300a

0800a8f4 <HAL_PCDEx_SetTxFiFo>:
 800a8f4:	b480      	push	{r7}
 800a8f6:	b085      	sub	sp, #20
 800a8f8:	af00      	add	r7, sp, #0
 800a8fa:	6078      	str	r0, [r7, #4]
 800a8fc:	460b      	mov	r3, r1
 800a8fe:	70fb      	strb	r3, [r7, #3]
 800a900:	4613      	mov	r3, r2
 800a902:	803b      	strh	r3, [r7, #0]
 800a904:	687b      	ldr	r3, [r7, #4]
 800a906:	681b      	ldr	r3, [r3, #0]
 800a908:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a90a:	60bb      	str	r3, [r7, #8]
 800a90c:	78fb      	ldrb	r3, [r7, #3]
 800a90e:	2b00      	cmp	r3, #0
 800a910:	d107      	bne.n	800a922 <HAL_PCDEx_SetTxFiFo+0x2e>
 800a912:	883b      	ldrh	r3, [r7, #0]
 800a914:	0419      	lsls	r1, r3, #16
 800a916:	687b      	ldr	r3, [r7, #4]
 800a918:	681b      	ldr	r3, [r3, #0]
 800a91a:	68ba      	ldr	r2, [r7, #8]
 800a91c:	430a      	orrs	r2, r1
 800a91e:	629a      	str	r2, [r3, #40]	; 0x28
 800a920:	e028      	b.n	800a974 <HAL_PCDEx_SetTxFiFo+0x80>
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	681b      	ldr	r3, [r3, #0]
 800a926:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a928:	0c1b      	lsrs	r3, r3, #16
 800a92a:	68ba      	ldr	r2, [r7, #8]
 800a92c:	4413      	add	r3, r2
 800a92e:	60bb      	str	r3, [r7, #8]
 800a930:	2300      	movs	r3, #0
 800a932:	73fb      	strb	r3, [r7, #15]
 800a934:	e00d      	b.n	800a952 <HAL_PCDEx_SetTxFiFo+0x5e>
 800a936:	687b      	ldr	r3, [r7, #4]
 800a938:	681a      	ldr	r2, [r3, #0]
 800a93a:	7bfb      	ldrb	r3, [r7, #15]
 800a93c:	3340      	adds	r3, #64	; 0x40
 800a93e:	009b      	lsls	r3, r3, #2
 800a940:	4413      	add	r3, r2
 800a942:	685b      	ldr	r3, [r3, #4]
 800a944:	0c1b      	lsrs	r3, r3, #16
 800a946:	68ba      	ldr	r2, [r7, #8]
 800a948:	4413      	add	r3, r2
 800a94a:	60bb      	str	r3, [r7, #8]
 800a94c:	7bfb      	ldrb	r3, [r7, #15]
 800a94e:	3301      	adds	r3, #1
 800a950:	73fb      	strb	r3, [r7, #15]
 800a952:	7bfa      	ldrb	r2, [r7, #15]
 800a954:	78fb      	ldrb	r3, [r7, #3]
 800a956:	3b01      	subs	r3, #1
 800a958:	429a      	cmp	r2, r3
 800a95a:	d3ec      	bcc.n	800a936 <HAL_PCDEx_SetTxFiFo+0x42>
 800a95c:	883b      	ldrh	r3, [r7, #0]
 800a95e:	0418      	lsls	r0, r3, #16
 800a960:	687b      	ldr	r3, [r7, #4]
 800a962:	6819      	ldr	r1, [r3, #0]
 800a964:	78fb      	ldrb	r3, [r7, #3]
 800a966:	3b01      	subs	r3, #1
 800a968:	68ba      	ldr	r2, [r7, #8]
 800a96a:	4302      	orrs	r2, r0
 800a96c:	3340      	adds	r3, #64	; 0x40
 800a96e:	009b      	lsls	r3, r3, #2
 800a970:	440b      	add	r3, r1
 800a972:	605a      	str	r2, [r3, #4]
 800a974:	2300      	movs	r3, #0
 800a976:	4618      	mov	r0, r3
 800a978:	3714      	adds	r7, #20
 800a97a:	46bd      	mov	sp, r7
 800a97c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a980:	4770      	bx	lr

0800a982 <HAL_PCDEx_SetRxFiFo>:
 800a982:	b480      	push	{r7}
 800a984:	b083      	sub	sp, #12
 800a986:	af00      	add	r7, sp, #0
 800a988:	6078      	str	r0, [r7, #4]
 800a98a:	460b      	mov	r3, r1
 800a98c:	807b      	strh	r3, [r7, #2]
 800a98e:	687b      	ldr	r3, [r7, #4]
 800a990:	681b      	ldr	r3, [r3, #0]
 800a992:	887a      	ldrh	r2, [r7, #2]
 800a994:	625a      	str	r2, [r3, #36]	; 0x24
 800a996:	2300      	movs	r3, #0
 800a998:	4618      	mov	r0, r3
 800a99a:	370c      	adds	r7, #12
 800a99c:	46bd      	mov	sp, r7
 800a99e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9a2:	4770      	bx	lr

0800a9a4 <HAL_PCDEx_LPM_Callback>:
 800a9a4:	b480      	push	{r7}
 800a9a6:	b083      	sub	sp, #12
 800a9a8:	af00      	add	r7, sp, #0
 800a9aa:	6078      	str	r0, [r7, #4]
 800a9ac:	460b      	mov	r3, r1
 800a9ae:	70fb      	strb	r3, [r7, #3]
 800a9b0:	bf00      	nop
 800a9b2:	370c      	adds	r7, #12
 800a9b4:	46bd      	mov	sp, r7
 800a9b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9ba:	4770      	bx	lr

0800a9bc <HAL_RCC_OscConfig>:
 800a9bc:	b580      	push	{r7, lr}
 800a9be:	b086      	sub	sp, #24
 800a9c0:	af00      	add	r7, sp, #0
 800a9c2:	6078      	str	r0, [r7, #4]
 800a9c4:	687b      	ldr	r3, [r7, #4]
 800a9c6:	2b00      	cmp	r3, #0
 800a9c8:	d101      	bne.n	800a9ce <HAL_RCC_OscConfig+0x12>
 800a9ca:	2301      	movs	r3, #1
 800a9cc:	e267      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800a9ce:	687b      	ldr	r3, [r7, #4]
 800a9d0:	681b      	ldr	r3, [r3, #0]
 800a9d2:	f003 0301 	and.w	r3, r3, #1
 800a9d6:	2b00      	cmp	r3, #0
 800a9d8:	d075      	beq.n	800aac6 <HAL_RCC_OscConfig+0x10a>
 800a9da:	4b88      	ldr	r3, [pc, #544]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800a9dc:	689b      	ldr	r3, [r3, #8]
 800a9de:	f003 030c 	and.w	r3, r3, #12
 800a9e2:	2b04      	cmp	r3, #4
 800a9e4:	d00c      	beq.n	800aa00 <HAL_RCC_OscConfig+0x44>
 800a9e6:	4b85      	ldr	r3, [pc, #532]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800a9e8:	689b      	ldr	r3, [r3, #8]
 800a9ea:	f003 030c 	and.w	r3, r3, #12
 800a9ee:	2b08      	cmp	r3, #8
 800a9f0:	d112      	bne.n	800aa18 <HAL_RCC_OscConfig+0x5c>
 800a9f2:	4b82      	ldr	r3, [pc, #520]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800a9f4:	685b      	ldr	r3, [r3, #4]
 800a9f6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800a9fa:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800a9fe:	d10b      	bne.n	800aa18 <HAL_RCC_OscConfig+0x5c>
 800aa00:	4b7e      	ldr	r3, [pc, #504]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa02:	681b      	ldr	r3, [r3, #0]
 800aa04:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800aa08:	2b00      	cmp	r3, #0
 800aa0a:	d05b      	beq.n	800aac4 <HAL_RCC_OscConfig+0x108>
 800aa0c:	687b      	ldr	r3, [r7, #4]
 800aa0e:	685b      	ldr	r3, [r3, #4]
 800aa10:	2b00      	cmp	r3, #0
 800aa12:	d157      	bne.n	800aac4 <HAL_RCC_OscConfig+0x108>
 800aa14:	2301      	movs	r3, #1
 800aa16:	e242      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800aa18:	687b      	ldr	r3, [r7, #4]
 800aa1a:	685b      	ldr	r3, [r3, #4]
 800aa1c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800aa20:	d106      	bne.n	800aa30 <HAL_RCC_OscConfig+0x74>
 800aa22:	4b76      	ldr	r3, [pc, #472]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa24:	681b      	ldr	r3, [r3, #0]
 800aa26:	4a75      	ldr	r2, [pc, #468]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa28:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800aa2c:	6013      	str	r3, [r2, #0]
 800aa2e:	e01d      	b.n	800aa6c <HAL_RCC_OscConfig+0xb0>
 800aa30:	687b      	ldr	r3, [r7, #4]
 800aa32:	685b      	ldr	r3, [r3, #4]
 800aa34:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 800aa38:	d10c      	bne.n	800aa54 <HAL_RCC_OscConfig+0x98>
 800aa3a:	4b70      	ldr	r3, [pc, #448]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa3c:	681b      	ldr	r3, [r3, #0]
 800aa3e:	4a6f      	ldr	r2, [pc, #444]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa40:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800aa44:	6013      	str	r3, [r2, #0]
 800aa46:	4b6d      	ldr	r3, [pc, #436]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa48:	681b      	ldr	r3, [r3, #0]
 800aa4a:	4a6c      	ldr	r2, [pc, #432]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa4c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800aa50:	6013      	str	r3, [r2, #0]
 800aa52:	e00b      	b.n	800aa6c <HAL_RCC_OscConfig+0xb0>
 800aa54:	4b69      	ldr	r3, [pc, #420]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa56:	681b      	ldr	r3, [r3, #0]
 800aa58:	4a68      	ldr	r2, [pc, #416]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa5a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800aa5e:	6013      	str	r3, [r2, #0]
 800aa60:	4b66      	ldr	r3, [pc, #408]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa62:	681b      	ldr	r3, [r3, #0]
 800aa64:	4a65      	ldr	r2, [pc, #404]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa66:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800aa6a:	6013      	str	r3, [r2, #0]
 800aa6c:	687b      	ldr	r3, [r7, #4]
 800aa6e:	685b      	ldr	r3, [r3, #4]
 800aa70:	2b00      	cmp	r3, #0
 800aa72:	d013      	beq.n	800aa9c <HAL_RCC_OscConfig+0xe0>
 800aa74:	f7fc fc2c 	bl	80072d0 <HAL_GetTick>
 800aa78:	6138      	str	r0, [r7, #16]
 800aa7a:	e008      	b.n	800aa8e <HAL_RCC_OscConfig+0xd2>
 800aa7c:	f7fc fc28 	bl	80072d0 <HAL_GetTick>
 800aa80:	4602      	mov	r2, r0
 800aa82:	693b      	ldr	r3, [r7, #16]
 800aa84:	1ad3      	subs	r3, r2, r3
 800aa86:	2b64      	cmp	r3, #100	; 0x64
 800aa88:	d901      	bls.n	800aa8e <HAL_RCC_OscConfig+0xd2>
 800aa8a:	2303      	movs	r3, #3
 800aa8c:	e207      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800aa8e:	4b5b      	ldr	r3, [pc, #364]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aa90:	681b      	ldr	r3, [r3, #0]
 800aa92:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800aa96:	2b00      	cmp	r3, #0
 800aa98:	d0f0      	beq.n	800aa7c <HAL_RCC_OscConfig+0xc0>
 800aa9a:	e014      	b.n	800aac6 <HAL_RCC_OscConfig+0x10a>
 800aa9c:	f7fc fc18 	bl	80072d0 <HAL_GetTick>
 800aaa0:	6138      	str	r0, [r7, #16]
 800aaa2:	e008      	b.n	800aab6 <HAL_RCC_OscConfig+0xfa>
 800aaa4:	f7fc fc14 	bl	80072d0 <HAL_GetTick>
 800aaa8:	4602      	mov	r2, r0
 800aaaa:	693b      	ldr	r3, [r7, #16]
 800aaac:	1ad3      	subs	r3, r2, r3
 800aaae:	2b64      	cmp	r3, #100	; 0x64
 800aab0:	d901      	bls.n	800aab6 <HAL_RCC_OscConfig+0xfa>
 800aab2:	2303      	movs	r3, #3
 800aab4:	e1f3      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800aab6:	4b51      	ldr	r3, [pc, #324]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aab8:	681b      	ldr	r3, [r3, #0]
 800aaba:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800aabe:	2b00      	cmp	r3, #0
 800aac0:	d1f0      	bne.n	800aaa4 <HAL_RCC_OscConfig+0xe8>
 800aac2:	e000      	b.n	800aac6 <HAL_RCC_OscConfig+0x10a>
 800aac4:	bf00      	nop
 800aac6:	687b      	ldr	r3, [r7, #4]
 800aac8:	681b      	ldr	r3, [r3, #0]
 800aaca:	f003 0302 	and.w	r3, r3, #2
 800aace:	2b00      	cmp	r3, #0
 800aad0:	d063      	beq.n	800ab9a <HAL_RCC_OscConfig+0x1de>
 800aad2:	4b4a      	ldr	r3, [pc, #296]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aad4:	689b      	ldr	r3, [r3, #8]
 800aad6:	f003 030c 	and.w	r3, r3, #12
 800aada:	2b00      	cmp	r3, #0
 800aadc:	d00b      	beq.n	800aaf6 <HAL_RCC_OscConfig+0x13a>
 800aade:	4b47      	ldr	r3, [pc, #284]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aae0:	689b      	ldr	r3, [r3, #8]
 800aae2:	f003 030c 	and.w	r3, r3, #12
 800aae6:	2b08      	cmp	r3, #8
 800aae8:	d11c      	bne.n	800ab24 <HAL_RCC_OscConfig+0x168>
 800aaea:	4b44      	ldr	r3, [pc, #272]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aaec:	685b      	ldr	r3, [r3, #4]
 800aaee:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800aaf2:	2b00      	cmp	r3, #0
 800aaf4:	d116      	bne.n	800ab24 <HAL_RCC_OscConfig+0x168>
 800aaf6:	4b41      	ldr	r3, [pc, #260]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800aaf8:	681b      	ldr	r3, [r3, #0]
 800aafa:	f003 0302 	and.w	r3, r3, #2
 800aafe:	2b00      	cmp	r3, #0
 800ab00:	d005      	beq.n	800ab0e <HAL_RCC_OscConfig+0x152>
 800ab02:	687b      	ldr	r3, [r7, #4]
 800ab04:	68db      	ldr	r3, [r3, #12]
 800ab06:	2b01      	cmp	r3, #1
 800ab08:	d001      	beq.n	800ab0e <HAL_RCC_OscConfig+0x152>
 800ab0a:	2301      	movs	r3, #1
 800ab0c:	e1c7      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ab0e:	4b3b      	ldr	r3, [pc, #236]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800ab10:	681b      	ldr	r3, [r3, #0]
 800ab12:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	691b      	ldr	r3, [r3, #16]
 800ab1a:	00db      	lsls	r3, r3, #3
 800ab1c:	4937      	ldr	r1, [pc, #220]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800ab1e:	4313      	orrs	r3, r2
 800ab20:	600b      	str	r3, [r1, #0]
 800ab22:	e03a      	b.n	800ab9a <HAL_RCC_OscConfig+0x1de>
 800ab24:	687b      	ldr	r3, [r7, #4]
 800ab26:	68db      	ldr	r3, [r3, #12]
 800ab28:	2b00      	cmp	r3, #0
 800ab2a:	d020      	beq.n	800ab6e <HAL_RCC_OscConfig+0x1b2>
 800ab2c:	4b34      	ldr	r3, [pc, #208]	; (800ac00 <HAL_RCC_OscConfig+0x244>)
 800ab2e:	2201      	movs	r2, #1
 800ab30:	601a      	str	r2, [r3, #0]
 800ab32:	f7fc fbcd 	bl	80072d0 <HAL_GetTick>
 800ab36:	6138      	str	r0, [r7, #16]
 800ab38:	e008      	b.n	800ab4c <HAL_RCC_OscConfig+0x190>
 800ab3a:	f7fc fbc9 	bl	80072d0 <HAL_GetTick>
 800ab3e:	4602      	mov	r2, r0
 800ab40:	693b      	ldr	r3, [r7, #16]
 800ab42:	1ad3      	subs	r3, r2, r3
 800ab44:	2b02      	cmp	r3, #2
 800ab46:	d901      	bls.n	800ab4c <HAL_RCC_OscConfig+0x190>
 800ab48:	2303      	movs	r3, #3
 800ab4a:	e1a8      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ab4c:	4b2b      	ldr	r3, [pc, #172]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800ab4e:	681b      	ldr	r3, [r3, #0]
 800ab50:	f003 0302 	and.w	r3, r3, #2
 800ab54:	2b00      	cmp	r3, #0
 800ab56:	d0f0      	beq.n	800ab3a <HAL_RCC_OscConfig+0x17e>
 800ab58:	4b28      	ldr	r3, [pc, #160]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800ab5a:	681b      	ldr	r3, [r3, #0]
 800ab5c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800ab60:	687b      	ldr	r3, [r7, #4]
 800ab62:	691b      	ldr	r3, [r3, #16]
 800ab64:	00db      	lsls	r3, r3, #3
 800ab66:	4925      	ldr	r1, [pc, #148]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800ab68:	4313      	orrs	r3, r2
 800ab6a:	600b      	str	r3, [r1, #0]
 800ab6c:	e015      	b.n	800ab9a <HAL_RCC_OscConfig+0x1de>
 800ab6e:	4b24      	ldr	r3, [pc, #144]	; (800ac00 <HAL_RCC_OscConfig+0x244>)
 800ab70:	2200      	movs	r2, #0
 800ab72:	601a      	str	r2, [r3, #0]
 800ab74:	f7fc fbac 	bl	80072d0 <HAL_GetTick>
 800ab78:	6138      	str	r0, [r7, #16]
 800ab7a:	e008      	b.n	800ab8e <HAL_RCC_OscConfig+0x1d2>
 800ab7c:	f7fc fba8 	bl	80072d0 <HAL_GetTick>
 800ab80:	4602      	mov	r2, r0
 800ab82:	693b      	ldr	r3, [r7, #16]
 800ab84:	1ad3      	subs	r3, r2, r3
 800ab86:	2b02      	cmp	r3, #2
 800ab88:	d901      	bls.n	800ab8e <HAL_RCC_OscConfig+0x1d2>
 800ab8a:	2303      	movs	r3, #3
 800ab8c:	e187      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ab8e:	4b1b      	ldr	r3, [pc, #108]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800ab90:	681b      	ldr	r3, [r3, #0]
 800ab92:	f003 0302 	and.w	r3, r3, #2
 800ab96:	2b00      	cmp	r3, #0
 800ab98:	d1f0      	bne.n	800ab7c <HAL_RCC_OscConfig+0x1c0>
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	681b      	ldr	r3, [r3, #0]
 800ab9e:	f003 0308 	and.w	r3, r3, #8
 800aba2:	2b00      	cmp	r3, #0
 800aba4:	d036      	beq.n	800ac14 <HAL_RCC_OscConfig+0x258>
 800aba6:	687b      	ldr	r3, [r7, #4]
 800aba8:	695b      	ldr	r3, [r3, #20]
 800abaa:	2b00      	cmp	r3, #0
 800abac:	d016      	beq.n	800abdc <HAL_RCC_OscConfig+0x220>
 800abae:	4b15      	ldr	r3, [pc, #84]	; (800ac04 <HAL_RCC_OscConfig+0x248>)
 800abb0:	2201      	movs	r2, #1
 800abb2:	601a      	str	r2, [r3, #0]
 800abb4:	f7fc fb8c 	bl	80072d0 <HAL_GetTick>
 800abb8:	6138      	str	r0, [r7, #16]
 800abba:	e008      	b.n	800abce <HAL_RCC_OscConfig+0x212>
 800abbc:	f7fc fb88 	bl	80072d0 <HAL_GetTick>
 800abc0:	4602      	mov	r2, r0
 800abc2:	693b      	ldr	r3, [r7, #16]
 800abc4:	1ad3      	subs	r3, r2, r3
 800abc6:	2b02      	cmp	r3, #2
 800abc8:	d901      	bls.n	800abce <HAL_RCC_OscConfig+0x212>
 800abca:	2303      	movs	r3, #3
 800abcc:	e167      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800abce:	4b0b      	ldr	r3, [pc, #44]	; (800abfc <HAL_RCC_OscConfig+0x240>)
 800abd0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800abd2:	f003 0302 	and.w	r3, r3, #2
 800abd6:	2b00      	cmp	r3, #0
 800abd8:	d0f0      	beq.n	800abbc <HAL_RCC_OscConfig+0x200>
 800abda:	e01b      	b.n	800ac14 <HAL_RCC_OscConfig+0x258>
 800abdc:	4b09      	ldr	r3, [pc, #36]	; (800ac04 <HAL_RCC_OscConfig+0x248>)
 800abde:	2200      	movs	r2, #0
 800abe0:	601a      	str	r2, [r3, #0]
 800abe2:	f7fc fb75 	bl	80072d0 <HAL_GetTick>
 800abe6:	6138      	str	r0, [r7, #16]
 800abe8:	e00e      	b.n	800ac08 <HAL_RCC_OscConfig+0x24c>
 800abea:	f7fc fb71 	bl	80072d0 <HAL_GetTick>
 800abee:	4602      	mov	r2, r0
 800abf0:	693b      	ldr	r3, [r7, #16]
 800abf2:	1ad3      	subs	r3, r2, r3
 800abf4:	2b02      	cmp	r3, #2
 800abf6:	d907      	bls.n	800ac08 <HAL_RCC_OscConfig+0x24c>
 800abf8:	2303      	movs	r3, #3
 800abfa:	e150      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800abfc:	40023800 	.word	0x40023800
 800ac00:	42470000 	.word	0x42470000
 800ac04:	42470e80 	.word	0x42470e80
 800ac08:	4b88      	ldr	r3, [pc, #544]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ac0a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800ac0c:	f003 0302 	and.w	r3, r3, #2
 800ac10:	2b00      	cmp	r3, #0
 800ac12:	d1ea      	bne.n	800abea <HAL_RCC_OscConfig+0x22e>
 800ac14:	687b      	ldr	r3, [r7, #4]
 800ac16:	681b      	ldr	r3, [r3, #0]
 800ac18:	f003 0304 	and.w	r3, r3, #4
 800ac1c:	2b00      	cmp	r3, #0
 800ac1e:	f000 8097 	beq.w	800ad50 <HAL_RCC_OscConfig+0x394>
 800ac22:	2300      	movs	r3, #0
 800ac24:	75fb      	strb	r3, [r7, #23]
 800ac26:	4b81      	ldr	r3, [pc, #516]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ac28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ac2a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ac2e:	2b00      	cmp	r3, #0
 800ac30:	d10f      	bne.n	800ac52 <HAL_RCC_OscConfig+0x296>
 800ac32:	2300      	movs	r3, #0
 800ac34:	60bb      	str	r3, [r7, #8]
 800ac36:	4b7d      	ldr	r3, [pc, #500]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ac38:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ac3a:	4a7c      	ldr	r2, [pc, #496]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ac3c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800ac40:	6413      	str	r3, [r2, #64]	; 0x40
 800ac42:	4b7a      	ldr	r3, [pc, #488]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ac44:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ac46:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ac4a:	60bb      	str	r3, [r7, #8]
 800ac4c:	68bb      	ldr	r3, [r7, #8]
 800ac4e:	2301      	movs	r3, #1
 800ac50:	75fb      	strb	r3, [r7, #23]
 800ac52:	4b77      	ldr	r3, [pc, #476]	; (800ae30 <HAL_RCC_OscConfig+0x474>)
 800ac54:	681b      	ldr	r3, [r3, #0]
 800ac56:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ac5a:	2b00      	cmp	r3, #0
 800ac5c:	d118      	bne.n	800ac90 <HAL_RCC_OscConfig+0x2d4>
 800ac5e:	4b74      	ldr	r3, [pc, #464]	; (800ae30 <HAL_RCC_OscConfig+0x474>)
 800ac60:	681b      	ldr	r3, [r3, #0]
 800ac62:	4a73      	ldr	r2, [pc, #460]	; (800ae30 <HAL_RCC_OscConfig+0x474>)
 800ac64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ac68:	6013      	str	r3, [r2, #0]
 800ac6a:	f7fc fb31 	bl	80072d0 <HAL_GetTick>
 800ac6e:	6138      	str	r0, [r7, #16]
 800ac70:	e008      	b.n	800ac84 <HAL_RCC_OscConfig+0x2c8>
 800ac72:	f7fc fb2d 	bl	80072d0 <HAL_GetTick>
 800ac76:	4602      	mov	r2, r0
 800ac78:	693b      	ldr	r3, [r7, #16]
 800ac7a:	1ad3      	subs	r3, r2, r3
 800ac7c:	2b02      	cmp	r3, #2
 800ac7e:	d901      	bls.n	800ac84 <HAL_RCC_OscConfig+0x2c8>
 800ac80:	2303      	movs	r3, #3
 800ac82:	e10c      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ac84:	4b6a      	ldr	r3, [pc, #424]	; (800ae30 <HAL_RCC_OscConfig+0x474>)
 800ac86:	681b      	ldr	r3, [r3, #0]
 800ac88:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ac8c:	2b00      	cmp	r3, #0
 800ac8e:	d0f0      	beq.n	800ac72 <HAL_RCC_OscConfig+0x2b6>
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	689b      	ldr	r3, [r3, #8]
 800ac94:	2b01      	cmp	r3, #1
 800ac96:	d106      	bne.n	800aca6 <HAL_RCC_OscConfig+0x2ea>
 800ac98:	4b64      	ldr	r3, [pc, #400]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ac9a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ac9c:	4a63      	ldr	r2, [pc, #396]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ac9e:	f043 0301 	orr.w	r3, r3, #1
 800aca2:	6713      	str	r3, [r2, #112]	; 0x70
 800aca4:	e01c      	b.n	800ace0 <HAL_RCC_OscConfig+0x324>
 800aca6:	687b      	ldr	r3, [r7, #4]
 800aca8:	689b      	ldr	r3, [r3, #8]
 800acaa:	2b05      	cmp	r3, #5
 800acac:	d10c      	bne.n	800acc8 <HAL_RCC_OscConfig+0x30c>
 800acae:	4b5f      	ldr	r3, [pc, #380]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acb0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800acb2:	4a5e      	ldr	r2, [pc, #376]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acb4:	f043 0304 	orr.w	r3, r3, #4
 800acb8:	6713      	str	r3, [r2, #112]	; 0x70
 800acba:	4b5c      	ldr	r3, [pc, #368]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acbc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800acbe:	4a5b      	ldr	r2, [pc, #364]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acc0:	f043 0301 	orr.w	r3, r3, #1
 800acc4:	6713      	str	r3, [r2, #112]	; 0x70
 800acc6:	e00b      	b.n	800ace0 <HAL_RCC_OscConfig+0x324>
 800acc8:	4b58      	ldr	r3, [pc, #352]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800accc:	4a57      	ldr	r2, [pc, #348]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acce:	f023 0301 	bic.w	r3, r3, #1
 800acd2:	6713      	str	r3, [r2, #112]	; 0x70
 800acd4:	4b55      	ldr	r3, [pc, #340]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acd6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800acd8:	4a54      	ldr	r2, [pc, #336]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800acda:	f023 0304 	bic.w	r3, r3, #4
 800acde:	6713      	str	r3, [r2, #112]	; 0x70
 800ace0:	687b      	ldr	r3, [r7, #4]
 800ace2:	689b      	ldr	r3, [r3, #8]
 800ace4:	2b00      	cmp	r3, #0
 800ace6:	d015      	beq.n	800ad14 <HAL_RCC_OscConfig+0x358>
 800ace8:	f7fc faf2 	bl	80072d0 <HAL_GetTick>
 800acec:	6138      	str	r0, [r7, #16]
 800acee:	e00a      	b.n	800ad06 <HAL_RCC_OscConfig+0x34a>
 800acf0:	f7fc faee 	bl	80072d0 <HAL_GetTick>
 800acf4:	4602      	mov	r2, r0
 800acf6:	693b      	ldr	r3, [r7, #16]
 800acf8:	1ad3      	subs	r3, r2, r3
 800acfa:	f241 3288 	movw	r2, #5000	; 0x1388
 800acfe:	4293      	cmp	r3, r2
 800ad00:	d901      	bls.n	800ad06 <HAL_RCC_OscConfig+0x34a>
 800ad02:	2303      	movs	r3, #3
 800ad04:	e0cb      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ad06:	4b49      	ldr	r3, [pc, #292]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ad08:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ad0a:	f003 0302 	and.w	r3, r3, #2
 800ad0e:	2b00      	cmp	r3, #0
 800ad10:	d0ee      	beq.n	800acf0 <HAL_RCC_OscConfig+0x334>
 800ad12:	e014      	b.n	800ad3e <HAL_RCC_OscConfig+0x382>
 800ad14:	f7fc fadc 	bl	80072d0 <HAL_GetTick>
 800ad18:	6138      	str	r0, [r7, #16]
 800ad1a:	e00a      	b.n	800ad32 <HAL_RCC_OscConfig+0x376>
 800ad1c:	f7fc fad8 	bl	80072d0 <HAL_GetTick>
 800ad20:	4602      	mov	r2, r0
 800ad22:	693b      	ldr	r3, [r7, #16]
 800ad24:	1ad3      	subs	r3, r2, r3
 800ad26:	f241 3288 	movw	r2, #5000	; 0x1388
 800ad2a:	4293      	cmp	r3, r2
 800ad2c:	d901      	bls.n	800ad32 <HAL_RCC_OscConfig+0x376>
 800ad2e:	2303      	movs	r3, #3
 800ad30:	e0b5      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ad32:	4b3e      	ldr	r3, [pc, #248]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ad34:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ad36:	f003 0302 	and.w	r3, r3, #2
 800ad3a:	2b00      	cmp	r3, #0
 800ad3c:	d1ee      	bne.n	800ad1c <HAL_RCC_OscConfig+0x360>
 800ad3e:	7dfb      	ldrb	r3, [r7, #23]
 800ad40:	2b01      	cmp	r3, #1
 800ad42:	d105      	bne.n	800ad50 <HAL_RCC_OscConfig+0x394>
 800ad44:	4b39      	ldr	r3, [pc, #228]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ad46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800ad48:	4a38      	ldr	r2, [pc, #224]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ad4a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800ad4e:	6413      	str	r3, [r2, #64]	; 0x40
 800ad50:	687b      	ldr	r3, [r7, #4]
 800ad52:	699b      	ldr	r3, [r3, #24]
 800ad54:	2b00      	cmp	r3, #0
 800ad56:	f000 80a1 	beq.w	800ae9c <HAL_RCC_OscConfig+0x4e0>
 800ad5a:	4b34      	ldr	r3, [pc, #208]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ad5c:	689b      	ldr	r3, [r3, #8]
 800ad5e:	f003 030c 	and.w	r3, r3, #12
 800ad62:	2b08      	cmp	r3, #8
 800ad64:	d05c      	beq.n	800ae20 <HAL_RCC_OscConfig+0x464>
 800ad66:	687b      	ldr	r3, [r7, #4]
 800ad68:	699b      	ldr	r3, [r3, #24]
 800ad6a:	2b02      	cmp	r3, #2
 800ad6c:	d141      	bne.n	800adf2 <HAL_RCC_OscConfig+0x436>
 800ad6e:	4b31      	ldr	r3, [pc, #196]	; (800ae34 <HAL_RCC_OscConfig+0x478>)
 800ad70:	2200      	movs	r2, #0
 800ad72:	601a      	str	r2, [r3, #0]
 800ad74:	f7fc faac 	bl	80072d0 <HAL_GetTick>
 800ad78:	6138      	str	r0, [r7, #16]
 800ad7a:	e008      	b.n	800ad8e <HAL_RCC_OscConfig+0x3d2>
 800ad7c:	f7fc faa8 	bl	80072d0 <HAL_GetTick>
 800ad80:	4602      	mov	r2, r0
 800ad82:	693b      	ldr	r3, [r7, #16]
 800ad84:	1ad3      	subs	r3, r2, r3
 800ad86:	2b02      	cmp	r3, #2
 800ad88:	d901      	bls.n	800ad8e <HAL_RCC_OscConfig+0x3d2>
 800ad8a:	2303      	movs	r3, #3
 800ad8c:	e087      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ad8e:	4b27      	ldr	r3, [pc, #156]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ad90:	681b      	ldr	r3, [r3, #0]
 800ad92:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800ad96:	2b00      	cmp	r3, #0
 800ad98:	d1f0      	bne.n	800ad7c <HAL_RCC_OscConfig+0x3c0>
 800ad9a:	687b      	ldr	r3, [r7, #4]
 800ad9c:	69da      	ldr	r2, [r3, #28]
 800ad9e:	687b      	ldr	r3, [r7, #4]
 800ada0:	6a1b      	ldr	r3, [r3, #32]
 800ada2:	431a      	orrs	r2, r3
 800ada4:	687b      	ldr	r3, [r7, #4]
 800ada6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ada8:	019b      	lsls	r3, r3, #6
 800adaa:	431a      	orrs	r2, r3
 800adac:	687b      	ldr	r3, [r7, #4]
 800adae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800adb0:	085b      	lsrs	r3, r3, #1
 800adb2:	3b01      	subs	r3, #1
 800adb4:	041b      	lsls	r3, r3, #16
 800adb6:	431a      	orrs	r2, r3
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800adbc:	061b      	lsls	r3, r3, #24
 800adbe:	491b      	ldr	r1, [pc, #108]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800adc0:	4313      	orrs	r3, r2
 800adc2:	604b      	str	r3, [r1, #4]
 800adc4:	4b1b      	ldr	r3, [pc, #108]	; (800ae34 <HAL_RCC_OscConfig+0x478>)
 800adc6:	2201      	movs	r2, #1
 800adc8:	601a      	str	r2, [r3, #0]
 800adca:	f7fc fa81 	bl	80072d0 <HAL_GetTick>
 800adce:	6138      	str	r0, [r7, #16]
 800add0:	e008      	b.n	800ade4 <HAL_RCC_OscConfig+0x428>
 800add2:	f7fc fa7d 	bl	80072d0 <HAL_GetTick>
 800add6:	4602      	mov	r2, r0
 800add8:	693b      	ldr	r3, [r7, #16]
 800adda:	1ad3      	subs	r3, r2, r3
 800addc:	2b02      	cmp	r3, #2
 800adde:	d901      	bls.n	800ade4 <HAL_RCC_OscConfig+0x428>
 800ade0:	2303      	movs	r3, #3
 800ade2:	e05c      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ade4:	4b11      	ldr	r3, [pc, #68]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ade6:	681b      	ldr	r3, [r3, #0]
 800ade8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800adec:	2b00      	cmp	r3, #0
 800adee:	d0f0      	beq.n	800add2 <HAL_RCC_OscConfig+0x416>
 800adf0:	e054      	b.n	800ae9c <HAL_RCC_OscConfig+0x4e0>
 800adf2:	4b10      	ldr	r3, [pc, #64]	; (800ae34 <HAL_RCC_OscConfig+0x478>)
 800adf4:	2200      	movs	r2, #0
 800adf6:	601a      	str	r2, [r3, #0]
 800adf8:	f7fc fa6a 	bl	80072d0 <HAL_GetTick>
 800adfc:	6138      	str	r0, [r7, #16]
 800adfe:	e008      	b.n	800ae12 <HAL_RCC_OscConfig+0x456>
 800ae00:	f7fc fa66 	bl	80072d0 <HAL_GetTick>
 800ae04:	4602      	mov	r2, r0
 800ae06:	693b      	ldr	r3, [r7, #16]
 800ae08:	1ad3      	subs	r3, r2, r3
 800ae0a:	2b02      	cmp	r3, #2
 800ae0c:	d901      	bls.n	800ae12 <HAL_RCC_OscConfig+0x456>
 800ae0e:	2303      	movs	r3, #3
 800ae10:	e045      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ae12:	4b06      	ldr	r3, [pc, #24]	; (800ae2c <HAL_RCC_OscConfig+0x470>)
 800ae14:	681b      	ldr	r3, [r3, #0]
 800ae16:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800ae1a:	2b00      	cmp	r3, #0
 800ae1c:	d1f0      	bne.n	800ae00 <HAL_RCC_OscConfig+0x444>
 800ae1e:	e03d      	b.n	800ae9c <HAL_RCC_OscConfig+0x4e0>
 800ae20:	687b      	ldr	r3, [r7, #4]
 800ae22:	699b      	ldr	r3, [r3, #24]
 800ae24:	2b01      	cmp	r3, #1
 800ae26:	d107      	bne.n	800ae38 <HAL_RCC_OscConfig+0x47c>
 800ae28:	2301      	movs	r3, #1
 800ae2a:	e038      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ae2c:	40023800 	.word	0x40023800
 800ae30:	40007000 	.word	0x40007000
 800ae34:	42470060 	.word	0x42470060
 800ae38:	4b1b      	ldr	r3, [pc, #108]	; (800aea8 <HAL_RCC_OscConfig+0x4ec>)
 800ae3a:	685b      	ldr	r3, [r3, #4]
 800ae3c:	60fb      	str	r3, [r7, #12]
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	699b      	ldr	r3, [r3, #24]
 800ae42:	2b01      	cmp	r3, #1
 800ae44:	d028      	beq.n	800ae98 <HAL_RCC_OscConfig+0x4dc>
 800ae46:	68fb      	ldr	r3, [r7, #12]
 800ae48:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 800ae4c:	687b      	ldr	r3, [r7, #4]
 800ae4e:	69db      	ldr	r3, [r3, #28]
 800ae50:	429a      	cmp	r2, r3
 800ae52:	d121      	bne.n	800ae98 <HAL_RCC_OscConfig+0x4dc>
 800ae54:	68fb      	ldr	r3, [r7, #12]
 800ae56:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 800ae5a:	687b      	ldr	r3, [r7, #4]
 800ae5c:	6a1b      	ldr	r3, [r3, #32]
 800ae5e:	429a      	cmp	r2, r3
 800ae60:	d11a      	bne.n	800ae98 <HAL_RCC_OscConfig+0x4dc>
 800ae62:	68fa      	ldr	r2, [r7, #12]
 800ae64:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 800ae68:	4013      	ands	r3, r2
 800ae6a:	687a      	ldr	r2, [r7, #4]
 800ae6c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800ae6e:	0192      	lsls	r2, r2, #6
 800ae70:	4293      	cmp	r3, r2
 800ae72:	d111      	bne.n	800ae98 <HAL_RCC_OscConfig+0x4dc>
 800ae74:	68fb      	ldr	r3, [r7, #12]
 800ae76:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800ae7a:	687b      	ldr	r3, [r7, #4]
 800ae7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ae7e:	085b      	lsrs	r3, r3, #1
 800ae80:	3b01      	subs	r3, #1
 800ae82:	041b      	lsls	r3, r3, #16
 800ae84:	429a      	cmp	r2, r3
 800ae86:	d107      	bne.n	800ae98 <HAL_RCC_OscConfig+0x4dc>
 800ae88:	68fb      	ldr	r3, [r7, #12]
 800ae8a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ae92:	061b      	lsls	r3, r3, #24
 800ae94:	429a      	cmp	r2, r3
 800ae96:	d001      	beq.n	800ae9c <HAL_RCC_OscConfig+0x4e0>
 800ae98:	2301      	movs	r3, #1
 800ae9a:	e000      	b.n	800ae9e <HAL_RCC_OscConfig+0x4e2>
 800ae9c:	2300      	movs	r3, #0
 800ae9e:	4618      	mov	r0, r3
 800aea0:	3718      	adds	r7, #24
 800aea2:	46bd      	mov	sp, r7
 800aea4:	bd80      	pop	{r7, pc}
 800aea6:	bf00      	nop
 800aea8:	40023800 	.word	0x40023800

0800aeac <HAL_RCC_ClockConfig>:
 800aeac:	b580      	push	{r7, lr}
 800aeae:	b084      	sub	sp, #16
 800aeb0:	af00      	add	r7, sp, #0
 800aeb2:	6078      	str	r0, [r7, #4]
 800aeb4:	6039      	str	r1, [r7, #0]
 800aeb6:	687b      	ldr	r3, [r7, #4]
 800aeb8:	2b00      	cmp	r3, #0
 800aeba:	d101      	bne.n	800aec0 <HAL_RCC_ClockConfig+0x14>
 800aebc:	2301      	movs	r3, #1
 800aebe:	e0cc      	b.n	800b05a <HAL_RCC_ClockConfig+0x1ae>
 800aec0:	4b68      	ldr	r3, [pc, #416]	; (800b064 <HAL_RCC_ClockConfig+0x1b8>)
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	f003 0307 	and.w	r3, r3, #7
 800aec8:	683a      	ldr	r2, [r7, #0]
 800aeca:	429a      	cmp	r2, r3
 800aecc:	d90c      	bls.n	800aee8 <HAL_RCC_ClockConfig+0x3c>
 800aece:	4b65      	ldr	r3, [pc, #404]	; (800b064 <HAL_RCC_ClockConfig+0x1b8>)
 800aed0:	683a      	ldr	r2, [r7, #0]
 800aed2:	b2d2      	uxtb	r2, r2
 800aed4:	701a      	strb	r2, [r3, #0]
 800aed6:	4b63      	ldr	r3, [pc, #396]	; (800b064 <HAL_RCC_ClockConfig+0x1b8>)
 800aed8:	681b      	ldr	r3, [r3, #0]
 800aeda:	f003 0307 	and.w	r3, r3, #7
 800aede:	683a      	ldr	r2, [r7, #0]
 800aee0:	429a      	cmp	r2, r3
 800aee2:	d001      	beq.n	800aee8 <HAL_RCC_ClockConfig+0x3c>
 800aee4:	2301      	movs	r3, #1
 800aee6:	e0b8      	b.n	800b05a <HAL_RCC_ClockConfig+0x1ae>
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	681b      	ldr	r3, [r3, #0]
 800aeec:	f003 0302 	and.w	r3, r3, #2
 800aef0:	2b00      	cmp	r3, #0
 800aef2:	d020      	beq.n	800af36 <HAL_RCC_ClockConfig+0x8a>
 800aef4:	687b      	ldr	r3, [r7, #4]
 800aef6:	681b      	ldr	r3, [r3, #0]
 800aef8:	f003 0304 	and.w	r3, r3, #4
 800aefc:	2b00      	cmp	r3, #0
 800aefe:	d005      	beq.n	800af0c <HAL_RCC_ClockConfig+0x60>
 800af00:	4b59      	ldr	r3, [pc, #356]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af02:	689b      	ldr	r3, [r3, #8]
 800af04:	4a58      	ldr	r2, [pc, #352]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af06:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800af0a:	6093      	str	r3, [r2, #8]
 800af0c:	687b      	ldr	r3, [r7, #4]
 800af0e:	681b      	ldr	r3, [r3, #0]
 800af10:	f003 0308 	and.w	r3, r3, #8
 800af14:	2b00      	cmp	r3, #0
 800af16:	d005      	beq.n	800af24 <HAL_RCC_ClockConfig+0x78>
 800af18:	4b53      	ldr	r3, [pc, #332]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af1a:	689b      	ldr	r3, [r3, #8]
 800af1c:	4a52      	ldr	r2, [pc, #328]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af1e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800af22:	6093      	str	r3, [r2, #8]
 800af24:	4b50      	ldr	r3, [pc, #320]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af26:	689b      	ldr	r3, [r3, #8]
 800af28:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800af2c:	687b      	ldr	r3, [r7, #4]
 800af2e:	689b      	ldr	r3, [r3, #8]
 800af30:	494d      	ldr	r1, [pc, #308]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af32:	4313      	orrs	r3, r2
 800af34:	608b      	str	r3, [r1, #8]
 800af36:	687b      	ldr	r3, [r7, #4]
 800af38:	681b      	ldr	r3, [r3, #0]
 800af3a:	f003 0301 	and.w	r3, r3, #1
 800af3e:	2b00      	cmp	r3, #0
 800af40:	d044      	beq.n	800afcc <HAL_RCC_ClockConfig+0x120>
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	685b      	ldr	r3, [r3, #4]
 800af46:	2b01      	cmp	r3, #1
 800af48:	d107      	bne.n	800af5a <HAL_RCC_ClockConfig+0xae>
 800af4a:	4b47      	ldr	r3, [pc, #284]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af4c:	681b      	ldr	r3, [r3, #0]
 800af4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800af52:	2b00      	cmp	r3, #0
 800af54:	d119      	bne.n	800af8a <HAL_RCC_ClockConfig+0xde>
 800af56:	2301      	movs	r3, #1
 800af58:	e07f      	b.n	800b05a <HAL_RCC_ClockConfig+0x1ae>
 800af5a:	687b      	ldr	r3, [r7, #4]
 800af5c:	685b      	ldr	r3, [r3, #4]
 800af5e:	2b02      	cmp	r3, #2
 800af60:	d003      	beq.n	800af6a <HAL_RCC_ClockConfig+0xbe>
 800af62:	687b      	ldr	r3, [r7, #4]
 800af64:	685b      	ldr	r3, [r3, #4]
 800af66:	2b03      	cmp	r3, #3
 800af68:	d107      	bne.n	800af7a <HAL_RCC_ClockConfig+0xce>
 800af6a:	4b3f      	ldr	r3, [pc, #252]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af6c:	681b      	ldr	r3, [r3, #0]
 800af6e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800af72:	2b00      	cmp	r3, #0
 800af74:	d109      	bne.n	800af8a <HAL_RCC_ClockConfig+0xde>
 800af76:	2301      	movs	r3, #1
 800af78:	e06f      	b.n	800b05a <HAL_RCC_ClockConfig+0x1ae>
 800af7a:	4b3b      	ldr	r3, [pc, #236]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af7c:	681b      	ldr	r3, [r3, #0]
 800af7e:	f003 0302 	and.w	r3, r3, #2
 800af82:	2b00      	cmp	r3, #0
 800af84:	d101      	bne.n	800af8a <HAL_RCC_ClockConfig+0xde>
 800af86:	2301      	movs	r3, #1
 800af88:	e067      	b.n	800b05a <HAL_RCC_ClockConfig+0x1ae>
 800af8a:	4b37      	ldr	r3, [pc, #220]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af8c:	689b      	ldr	r3, [r3, #8]
 800af8e:	f023 0203 	bic.w	r2, r3, #3
 800af92:	687b      	ldr	r3, [r7, #4]
 800af94:	685b      	ldr	r3, [r3, #4]
 800af96:	4934      	ldr	r1, [pc, #208]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800af98:	4313      	orrs	r3, r2
 800af9a:	608b      	str	r3, [r1, #8]
 800af9c:	f7fc f998 	bl	80072d0 <HAL_GetTick>
 800afa0:	60f8      	str	r0, [r7, #12]
 800afa2:	e00a      	b.n	800afba <HAL_RCC_ClockConfig+0x10e>
 800afa4:	f7fc f994 	bl	80072d0 <HAL_GetTick>
 800afa8:	4602      	mov	r2, r0
 800afaa:	68fb      	ldr	r3, [r7, #12]
 800afac:	1ad3      	subs	r3, r2, r3
 800afae:	f241 3288 	movw	r2, #5000	; 0x1388
 800afb2:	4293      	cmp	r3, r2
 800afb4:	d901      	bls.n	800afba <HAL_RCC_ClockConfig+0x10e>
 800afb6:	2303      	movs	r3, #3
 800afb8:	e04f      	b.n	800b05a <HAL_RCC_ClockConfig+0x1ae>
 800afba:	4b2b      	ldr	r3, [pc, #172]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800afbc:	689b      	ldr	r3, [r3, #8]
 800afbe:	f003 020c 	and.w	r2, r3, #12
 800afc2:	687b      	ldr	r3, [r7, #4]
 800afc4:	685b      	ldr	r3, [r3, #4]
 800afc6:	009b      	lsls	r3, r3, #2
 800afc8:	429a      	cmp	r2, r3
 800afca:	d1eb      	bne.n	800afa4 <HAL_RCC_ClockConfig+0xf8>
 800afcc:	4b25      	ldr	r3, [pc, #148]	; (800b064 <HAL_RCC_ClockConfig+0x1b8>)
 800afce:	681b      	ldr	r3, [r3, #0]
 800afd0:	f003 0307 	and.w	r3, r3, #7
 800afd4:	683a      	ldr	r2, [r7, #0]
 800afd6:	429a      	cmp	r2, r3
 800afd8:	d20c      	bcs.n	800aff4 <HAL_RCC_ClockConfig+0x148>
 800afda:	4b22      	ldr	r3, [pc, #136]	; (800b064 <HAL_RCC_ClockConfig+0x1b8>)
 800afdc:	683a      	ldr	r2, [r7, #0]
 800afde:	b2d2      	uxtb	r2, r2
 800afe0:	701a      	strb	r2, [r3, #0]
 800afe2:	4b20      	ldr	r3, [pc, #128]	; (800b064 <HAL_RCC_ClockConfig+0x1b8>)
 800afe4:	681b      	ldr	r3, [r3, #0]
 800afe6:	f003 0307 	and.w	r3, r3, #7
 800afea:	683a      	ldr	r2, [r7, #0]
 800afec:	429a      	cmp	r2, r3
 800afee:	d001      	beq.n	800aff4 <HAL_RCC_ClockConfig+0x148>
 800aff0:	2301      	movs	r3, #1
 800aff2:	e032      	b.n	800b05a <HAL_RCC_ClockConfig+0x1ae>
 800aff4:	687b      	ldr	r3, [r7, #4]
 800aff6:	681b      	ldr	r3, [r3, #0]
 800aff8:	f003 0304 	and.w	r3, r3, #4
 800affc:	2b00      	cmp	r3, #0
 800affe:	d008      	beq.n	800b012 <HAL_RCC_ClockConfig+0x166>
 800b000:	4b19      	ldr	r3, [pc, #100]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800b002:	689b      	ldr	r3, [r3, #8]
 800b004:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800b008:	687b      	ldr	r3, [r7, #4]
 800b00a:	68db      	ldr	r3, [r3, #12]
 800b00c:	4916      	ldr	r1, [pc, #88]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800b00e:	4313      	orrs	r3, r2
 800b010:	608b      	str	r3, [r1, #8]
 800b012:	687b      	ldr	r3, [r7, #4]
 800b014:	681b      	ldr	r3, [r3, #0]
 800b016:	f003 0308 	and.w	r3, r3, #8
 800b01a:	2b00      	cmp	r3, #0
 800b01c:	d009      	beq.n	800b032 <HAL_RCC_ClockConfig+0x186>
 800b01e:	4b12      	ldr	r3, [pc, #72]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800b020:	689b      	ldr	r3, [r3, #8]
 800b022:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800b026:	687b      	ldr	r3, [r7, #4]
 800b028:	691b      	ldr	r3, [r3, #16]
 800b02a:	00db      	lsls	r3, r3, #3
 800b02c:	490e      	ldr	r1, [pc, #56]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800b02e:	4313      	orrs	r3, r2
 800b030:	608b      	str	r3, [r1, #8]
 800b032:	f000 f821 	bl	800b078 <HAL_RCC_GetSysClockFreq>
 800b036:	4602      	mov	r2, r0
 800b038:	4b0b      	ldr	r3, [pc, #44]	; (800b068 <HAL_RCC_ClockConfig+0x1bc>)
 800b03a:	689b      	ldr	r3, [r3, #8]
 800b03c:	091b      	lsrs	r3, r3, #4
 800b03e:	f003 030f 	and.w	r3, r3, #15
 800b042:	490a      	ldr	r1, [pc, #40]	; (800b06c <HAL_RCC_ClockConfig+0x1c0>)
 800b044:	5ccb      	ldrb	r3, [r1, r3]
 800b046:	fa22 f303 	lsr.w	r3, r2, r3
 800b04a:	4a09      	ldr	r2, [pc, #36]	; (800b070 <HAL_RCC_ClockConfig+0x1c4>)
 800b04c:	6013      	str	r3, [r2, #0]
 800b04e:	4b09      	ldr	r3, [pc, #36]	; (800b074 <HAL_RCC_ClockConfig+0x1c8>)
 800b050:	681b      	ldr	r3, [r3, #0]
 800b052:	4618      	mov	r0, r3
 800b054:	f7fc f8f8 	bl	8007248 <HAL_InitTick>
 800b058:	2300      	movs	r3, #0
 800b05a:	4618      	mov	r0, r3
 800b05c:	3710      	adds	r7, #16
 800b05e:	46bd      	mov	sp, r7
 800b060:	bd80      	pop	{r7, pc}
 800b062:	bf00      	nop
 800b064:	40023c00 	.word	0x40023c00
 800b068:	40023800 	.word	0x40023800
 800b06c:	080142ac 	.word	0x080142ac
 800b070:	20000024 	.word	0x20000024
 800b074:	20000028 	.word	0x20000028

0800b078 <HAL_RCC_GetSysClockFreq>:
 800b078:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800b07c:	b094      	sub	sp, #80	; 0x50
 800b07e:	af00      	add	r7, sp, #0
 800b080:	2300      	movs	r3, #0
 800b082:	647b      	str	r3, [r7, #68]	; 0x44
 800b084:	2300      	movs	r3, #0
 800b086:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b088:	2300      	movs	r3, #0
 800b08a:	643b      	str	r3, [r7, #64]	; 0x40
 800b08c:	2300      	movs	r3, #0
 800b08e:	64bb      	str	r3, [r7, #72]	; 0x48
 800b090:	4b79      	ldr	r3, [pc, #484]	; (800b278 <HAL_RCC_GetSysClockFreq+0x200>)
 800b092:	689b      	ldr	r3, [r3, #8]
 800b094:	f003 030c 	and.w	r3, r3, #12
 800b098:	2b08      	cmp	r3, #8
 800b09a:	d00d      	beq.n	800b0b8 <HAL_RCC_GetSysClockFreq+0x40>
 800b09c:	2b08      	cmp	r3, #8
 800b09e:	f200 80e1 	bhi.w	800b264 <HAL_RCC_GetSysClockFreq+0x1ec>
 800b0a2:	2b00      	cmp	r3, #0
 800b0a4:	d002      	beq.n	800b0ac <HAL_RCC_GetSysClockFreq+0x34>
 800b0a6:	2b04      	cmp	r3, #4
 800b0a8:	d003      	beq.n	800b0b2 <HAL_RCC_GetSysClockFreq+0x3a>
 800b0aa:	e0db      	b.n	800b264 <HAL_RCC_GetSysClockFreq+0x1ec>
 800b0ac:	4b73      	ldr	r3, [pc, #460]	; (800b27c <HAL_RCC_GetSysClockFreq+0x204>)
 800b0ae:	64bb      	str	r3, [r7, #72]	; 0x48
 800b0b0:	e0db      	b.n	800b26a <HAL_RCC_GetSysClockFreq+0x1f2>
 800b0b2:	4b73      	ldr	r3, [pc, #460]	; (800b280 <HAL_RCC_GetSysClockFreq+0x208>)
 800b0b4:	64bb      	str	r3, [r7, #72]	; 0x48
 800b0b6:	e0d8      	b.n	800b26a <HAL_RCC_GetSysClockFreq+0x1f2>
 800b0b8:	4b6f      	ldr	r3, [pc, #444]	; (800b278 <HAL_RCC_GetSysClockFreq+0x200>)
 800b0ba:	685b      	ldr	r3, [r3, #4]
 800b0bc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800b0c0:	647b      	str	r3, [r7, #68]	; 0x44
 800b0c2:	4b6d      	ldr	r3, [pc, #436]	; (800b278 <HAL_RCC_GetSysClockFreq+0x200>)
 800b0c4:	685b      	ldr	r3, [r3, #4]
 800b0c6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800b0ca:	2b00      	cmp	r3, #0
 800b0cc:	d063      	beq.n	800b196 <HAL_RCC_GetSysClockFreq+0x11e>
 800b0ce:	4b6a      	ldr	r3, [pc, #424]	; (800b278 <HAL_RCC_GetSysClockFreq+0x200>)
 800b0d0:	685b      	ldr	r3, [r3, #4]
 800b0d2:	099b      	lsrs	r3, r3, #6
 800b0d4:	2200      	movs	r2, #0
 800b0d6:	63bb      	str	r3, [r7, #56]	; 0x38
 800b0d8:	63fa      	str	r2, [r7, #60]	; 0x3c
 800b0da:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b0dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800b0e0:	633b      	str	r3, [r7, #48]	; 0x30
 800b0e2:	2300      	movs	r3, #0
 800b0e4:	637b      	str	r3, [r7, #52]	; 0x34
 800b0e6:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800b0ea:	4622      	mov	r2, r4
 800b0ec:	462b      	mov	r3, r5
 800b0ee:	f04f 0000 	mov.w	r0, #0
 800b0f2:	f04f 0100 	mov.w	r1, #0
 800b0f6:	0159      	lsls	r1, r3, #5
 800b0f8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800b0fc:	0150      	lsls	r0, r2, #5
 800b0fe:	4602      	mov	r2, r0
 800b100:	460b      	mov	r3, r1
 800b102:	4621      	mov	r1, r4
 800b104:	1a51      	subs	r1, r2, r1
 800b106:	6139      	str	r1, [r7, #16]
 800b108:	4629      	mov	r1, r5
 800b10a:	eb63 0301 	sbc.w	r3, r3, r1
 800b10e:	617b      	str	r3, [r7, #20]
 800b110:	f04f 0200 	mov.w	r2, #0
 800b114:	f04f 0300 	mov.w	r3, #0
 800b118:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800b11c:	4659      	mov	r1, fp
 800b11e:	018b      	lsls	r3, r1, #6
 800b120:	4651      	mov	r1, sl
 800b122:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800b126:	4651      	mov	r1, sl
 800b128:	018a      	lsls	r2, r1, #6
 800b12a:	4651      	mov	r1, sl
 800b12c:	ebb2 0801 	subs.w	r8, r2, r1
 800b130:	4659      	mov	r1, fp
 800b132:	eb63 0901 	sbc.w	r9, r3, r1
 800b136:	f04f 0200 	mov.w	r2, #0
 800b13a:	f04f 0300 	mov.w	r3, #0
 800b13e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800b142:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800b146:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800b14a:	4690      	mov	r8, r2
 800b14c:	4699      	mov	r9, r3
 800b14e:	4623      	mov	r3, r4
 800b150:	eb18 0303 	adds.w	r3, r8, r3
 800b154:	60bb      	str	r3, [r7, #8]
 800b156:	462b      	mov	r3, r5
 800b158:	eb49 0303 	adc.w	r3, r9, r3
 800b15c:	60fb      	str	r3, [r7, #12]
 800b15e:	f04f 0200 	mov.w	r2, #0
 800b162:	f04f 0300 	mov.w	r3, #0
 800b166:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 800b16a:	4629      	mov	r1, r5
 800b16c:	024b      	lsls	r3, r1, #9
 800b16e:	4621      	mov	r1, r4
 800b170:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800b174:	4621      	mov	r1, r4
 800b176:	024a      	lsls	r2, r1, #9
 800b178:	4610      	mov	r0, r2
 800b17a:	4619      	mov	r1, r3
 800b17c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b17e:	2200      	movs	r2, #0
 800b180:	62bb      	str	r3, [r7, #40]	; 0x28
 800b182:	62fa      	str	r2, [r7, #44]	; 0x2c
 800b184:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800b188:	f7f5 fd7e 	bl	8000c88 <__aeabi_uldivmod>
 800b18c:	4602      	mov	r2, r0
 800b18e:	460b      	mov	r3, r1
 800b190:	4613      	mov	r3, r2
 800b192:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b194:	e058      	b.n	800b248 <HAL_RCC_GetSysClockFreq+0x1d0>
 800b196:	4b38      	ldr	r3, [pc, #224]	; (800b278 <HAL_RCC_GetSysClockFreq+0x200>)
 800b198:	685b      	ldr	r3, [r3, #4]
 800b19a:	099b      	lsrs	r3, r3, #6
 800b19c:	2200      	movs	r2, #0
 800b19e:	4618      	mov	r0, r3
 800b1a0:	4611      	mov	r1, r2
 800b1a2:	f3c0 0308 	ubfx	r3, r0, #0, #9
 800b1a6:	623b      	str	r3, [r7, #32]
 800b1a8:	2300      	movs	r3, #0
 800b1aa:	627b      	str	r3, [r7, #36]	; 0x24
 800b1ac:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 800b1b0:	4642      	mov	r2, r8
 800b1b2:	464b      	mov	r3, r9
 800b1b4:	f04f 0000 	mov.w	r0, #0
 800b1b8:	f04f 0100 	mov.w	r1, #0
 800b1bc:	0159      	lsls	r1, r3, #5
 800b1be:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800b1c2:	0150      	lsls	r0, r2, #5
 800b1c4:	4602      	mov	r2, r0
 800b1c6:	460b      	mov	r3, r1
 800b1c8:	4641      	mov	r1, r8
 800b1ca:	ebb2 0a01 	subs.w	sl, r2, r1
 800b1ce:	4649      	mov	r1, r9
 800b1d0:	eb63 0b01 	sbc.w	fp, r3, r1
 800b1d4:	f04f 0200 	mov.w	r2, #0
 800b1d8:	f04f 0300 	mov.w	r3, #0
 800b1dc:	ea4f 138b 	mov.w	r3, fp, lsl #6
 800b1e0:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 800b1e4:	ea4f 128a 	mov.w	r2, sl, lsl #6
 800b1e8:	ebb2 040a 	subs.w	r4, r2, sl
 800b1ec:	eb63 050b 	sbc.w	r5, r3, fp
 800b1f0:	f04f 0200 	mov.w	r2, #0
 800b1f4:	f04f 0300 	mov.w	r3, #0
 800b1f8:	00eb      	lsls	r3, r5, #3
 800b1fa:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800b1fe:	00e2      	lsls	r2, r4, #3
 800b200:	4614      	mov	r4, r2
 800b202:	461d      	mov	r5, r3
 800b204:	4643      	mov	r3, r8
 800b206:	18e3      	adds	r3, r4, r3
 800b208:	603b      	str	r3, [r7, #0]
 800b20a:	464b      	mov	r3, r9
 800b20c:	eb45 0303 	adc.w	r3, r5, r3
 800b210:	607b      	str	r3, [r7, #4]
 800b212:	f04f 0200 	mov.w	r2, #0
 800b216:	f04f 0300 	mov.w	r3, #0
 800b21a:	e9d7 4500 	ldrd	r4, r5, [r7]
 800b21e:	4629      	mov	r1, r5
 800b220:	028b      	lsls	r3, r1, #10
 800b222:	4621      	mov	r1, r4
 800b224:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800b228:	4621      	mov	r1, r4
 800b22a:	028a      	lsls	r2, r1, #10
 800b22c:	4610      	mov	r0, r2
 800b22e:	4619      	mov	r1, r3
 800b230:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800b232:	2200      	movs	r2, #0
 800b234:	61bb      	str	r3, [r7, #24]
 800b236:	61fa      	str	r2, [r7, #28]
 800b238:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800b23c:	f7f5 fd24 	bl	8000c88 <__aeabi_uldivmod>
 800b240:	4602      	mov	r2, r0
 800b242:	460b      	mov	r3, r1
 800b244:	4613      	mov	r3, r2
 800b246:	64fb      	str	r3, [r7, #76]	; 0x4c
 800b248:	4b0b      	ldr	r3, [pc, #44]	; (800b278 <HAL_RCC_GetSysClockFreq+0x200>)
 800b24a:	685b      	ldr	r3, [r3, #4]
 800b24c:	0c1b      	lsrs	r3, r3, #16
 800b24e:	f003 0303 	and.w	r3, r3, #3
 800b252:	3301      	adds	r3, #1
 800b254:	005b      	lsls	r3, r3, #1
 800b256:	643b      	str	r3, [r7, #64]	; 0x40
 800b258:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800b25a:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b25c:	fbb2 f3f3 	udiv	r3, r2, r3
 800b260:	64bb      	str	r3, [r7, #72]	; 0x48
 800b262:	e002      	b.n	800b26a <HAL_RCC_GetSysClockFreq+0x1f2>
 800b264:	4b05      	ldr	r3, [pc, #20]	; (800b27c <HAL_RCC_GetSysClockFreq+0x204>)
 800b266:	64bb      	str	r3, [r7, #72]	; 0x48
 800b268:	bf00      	nop
 800b26a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800b26c:	4618      	mov	r0, r3
 800b26e:	3750      	adds	r7, #80	; 0x50
 800b270:	46bd      	mov	sp, r7
 800b272:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800b276:	bf00      	nop
 800b278:	40023800 	.word	0x40023800
 800b27c:	00f42400 	.word	0x00f42400
 800b280:	007a1200 	.word	0x007a1200

0800b284 <HAL_RCC_GetHCLKFreq>:
 800b284:	b480      	push	{r7}
 800b286:	af00      	add	r7, sp, #0
 800b288:	4b03      	ldr	r3, [pc, #12]	; (800b298 <HAL_RCC_GetHCLKFreq+0x14>)
 800b28a:	681b      	ldr	r3, [r3, #0]
 800b28c:	4618      	mov	r0, r3
 800b28e:	46bd      	mov	sp, r7
 800b290:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b294:	4770      	bx	lr
 800b296:	bf00      	nop
 800b298:	20000024 	.word	0x20000024

0800b29c <HAL_SPI_Init>:
 800b29c:	b580      	push	{r7, lr}
 800b29e:	b082      	sub	sp, #8
 800b2a0:	af00      	add	r7, sp, #0
 800b2a2:	6078      	str	r0, [r7, #4]
 800b2a4:	687b      	ldr	r3, [r7, #4]
 800b2a6:	2b00      	cmp	r3, #0
 800b2a8:	d101      	bne.n	800b2ae <HAL_SPI_Init+0x12>
 800b2aa:	2301      	movs	r3, #1
 800b2ac:	e07b      	b.n	800b3a6 <HAL_SPI_Init+0x10a>
 800b2ae:	687b      	ldr	r3, [r7, #4]
 800b2b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b2b2:	2b00      	cmp	r3, #0
 800b2b4:	d108      	bne.n	800b2c8 <HAL_SPI_Init+0x2c>
 800b2b6:	687b      	ldr	r3, [r7, #4]
 800b2b8:	685b      	ldr	r3, [r3, #4]
 800b2ba:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b2be:	d009      	beq.n	800b2d4 <HAL_SPI_Init+0x38>
 800b2c0:	687b      	ldr	r3, [r7, #4]
 800b2c2:	2200      	movs	r2, #0
 800b2c4:	61da      	str	r2, [r3, #28]
 800b2c6:	e005      	b.n	800b2d4 <HAL_SPI_Init+0x38>
 800b2c8:	687b      	ldr	r3, [r7, #4]
 800b2ca:	2200      	movs	r2, #0
 800b2cc:	611a      	str	r2, [r3, #16]
 800b2ce:	687b      	ldr	r3, [r7, #4]
 800b2d0:	2200      	movs	r2, #0
 800b2d2:	615a      	str	r2, [r3, #20]
 800b2d4:	687b      	ldr	r3, [r7, #4]
 800b2d6:	2200      	movs	r2, #0
 800b2d8:	629a      	str	r2, [r3, #40]	; 0x28
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800b2e0:	b2db      	uxtb	r3, r3
 800b2e2:	2b00      	cmp	r3, #0
 800b2e4:	d106      	bne.n	800b2f4 <HAL_SPI_Init+0x58>
 800b2e6:	687b      	ldr	r3, [r7, #4]
 800b2e8:	2200      	movs	r2, #0
 800b2ea:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800b2ee:	6878      	ldr	r0, [r7, #4]
 800b2f0:	f7fb fdd2 	bl	8006e98 <HAL_SPI_MspInit>
 800b2f4:	687b      	ldr	r3, [r7, #4]
 800b2f6:	2202      	movs	r2, #2
 800b2f8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800b2fc:	687b      	ldr	r3, [r7, #4]
 800b2fe:	681b      	ldr	r3, [r3, #0]
 800b300:	681a      	ldr	r2, [r3, #0]
 800b302:	687b      	ldr	r3, [r7, #4]
 800b304:	681b      	ldr	r3, [r3, #0]
 800b306:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b30a:	601a      	str	r2, [r3, #0]
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	685b      	ldr	r3, [r3, #4]
 800b310:	f403 7282 	and.w	r2, r3, #260	; 0x104
 800b314:	687b      	ldr	r3, [r7, #4]
 800b316:	689b      	ldr	r3, [r3, #8]
 800b318:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 800b31c:	431a      	orrs	r2, r3
 800b31e:	687b      	ldr	r3, [r7, #4]
 800b320:	68db      	ldr	r3, [r3, #12]
 800b322:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800b326:	431a      	orrs	r2, r3
 800b328:	687b      	ldr	r3, [r7, #4]
 800b32a:	691b      	ldr	r3, [r3, #16]
 800b32c:	f003 0302 	and.w	r3, r3, #2
 800b330:	431a      	orrs	r2, r3
 800b332:	687b      	ldr	r3, [r7, #4]
 800b334:	695b      	ldr	r3, [r3, #20]
 800b336:	f003 0301 	and.w	r3, r3, #1
 800b33a:	431a      	orrs	r2, r3
 800b33c:	687b      	ldr	r3, [r7, #4]
 800b33e:	699b      	ldr	r3, [r3, #24]
 800b340:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800b344:	431a      	orrs	r2, r3
 800b346:	687b      	ldr	r3, [r7, #4]
 800b348:	69db      	ldr	r3, [r3, #28]
 800b34a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800b34e:	431a      	orrs	r2, r3
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	6a1b      	ldr	r3, [r3, #32]
 800b354:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b358:	ea42 0103 	orr.w	r1, r2, r3
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b360:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 800b364:	687b      	ldr	r3, [r7, #4]
 800b366:	681b      	ldr	r3, [r3, #0]
 800b368:	430a      	orrs	r2, r1
 800b36a:	601a      	str	r2, [r3, #0]
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	699b      	ldr	r3, [r3, #24]
 800b370:	0c1b      	lsrs	r3, r3, #16
 800b372:	f003 0104 	and.w	r1, r3, #4
 800b376:	687b      	ldr	r3, [r7, #4]
 800b378:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b37a:	f003 0210 	and.w	r2, r3, #16
 800b37e:	687b      	ldr	r3, [r7, #4]
 800b380:	681b      	ldr	r3, [r3, #0]
 800b382:	430a      	orrs	r2, r1
 800b384:	605a      	str	r2, [r3, #4]
 800b386:	687b      	ldr	r3, [r7, #4]
 800b388:	681b      	ldr	r3, [r3, #0]
 800b38a:	69da      	ldr	r2, [r3, #28]
 800b38c:	687b      	ldr	r3, [r7, #4]
 800b38e:	681b      	ldr	r3, [r3, #0]
 800b390:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800b394:	61da      	str	r2, [r3, #28]
 800b396:	687b      	ldr	r3, [r7, #4]
 800b398:	2200      	movs	r2, #0
 800b39a:	655a      	str	r2, [r3, #84]	; 0x54
 800b39c:	687b      	ldr	r3, [r7, #4]
 800b39e:	2201      	movs	r2, #1
 800b3a0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800b3a4:	2300      	movs	r3, #0
 800b3a6:	4618      	mov	r0, r3
 800b3a8:	3708      	adds	r7, #8
 800b3aa:	46bd      	mov	sp, r7
 800b3ac:	bd80      	pop	{r7, pc}

0800b3ae <HAL_SPI_TransmitReceive>:
 800b3ae:	b580      	push	{r7, lr}
 800b3b0:	b08c      	sub	sp, #48	; 0x30
 800b3b2:	af00      	add	r7, sp, #0
 800b3b4:	60f8      	str	r0, [r7, #12]
 800b3b6:	60b9      	str	r1, [r7, #8]
 800b3b8:	607a      	str	r2, [r7, #4]
 800b3ba:	807b      	strh	r3, [r7, #2]
 800b3bc:	2301      	movs	r3, #1
 800b3be:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b3c0:	2300      	movs	r3, #0
 800b3c2:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800b3c6:	68fb      	ldr	r3, [r7, #12]
 800b3c8:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 800b3cc:	2b01      	cmp	r3, #1
 800b3ce:	d101      	bne.n	800b3d4 <HAL_SPI_TransmitReceive+0x26>
 800b3d0:	2302      	movs	r3, #2
 800b3d2:	e18a      	b.n	800b6ea <HAL_SPI_TransmitReceive+0x33c>
 800b3d4:	68fb      	ldr	r3, [r7, #12]
 800b3d6:	2201      	movs	r2, #1
 800b3d8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800b3dc:	f7fb ff78 	bl	80072d0 <HAL_GetTick>
 800b3e0:	6278      	str	r0, [r7, #36]	; 0x24
 800b3e2:	68fb      	ldr	r3, [r7, #12]
 800b3e4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800b3e8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800b3ec:	68fb      	ldr	r3, [r7, #12]
 800b3ee:	685b      	ldr	r3, [r3, #4]
 800b3f0:	61fb      	str	r3, [r7, #28]
 800b3f2:	887b      	ldrh	r3, [r7, #2]
 800b3f4:	837b      	strh	r3, [r7, #26]
 800b3f6:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800b3fa:	2b01      	cmp	r3, #1
 800b3fc:	d00f      	beq.n	800b41e <HAL_SPI_TransmitReceive+0x70>
 800b3fe:	69fb      	ldr	r3, [r7, #28]
 800b400:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b404:	d107      	bne.n	800b416 <HAL_SPI_TransmitReceive+0x68>
 800b406:	68fb      	ldr	r3, [r7, #12]
 800b408:	689b      	ldr	r3, [r3, #8]
 800b40a:	2b00      	cmp	r3, #0
 800b40c:	d103      	bne.n	800b416 <HAL_SPI_TransmitReceive+0x68>
 800b40e:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800b412:	2b04      	cmp	r3, #4
 800b414:	d003      	beq.n	800b41e <HAL_SPI_TransmitReceive+0x70>
 800b416:	2302      	movs	r3, #2
 800b418:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800b41c:	e15b      	b.n	800b6d6 <HAL_SPI_TransmitReceive+0x328>
 800b41e:	68bb      	ldr	r3, [r7, #8]
 800b420:	2b00      	cmp	r3, #0
 800b422:	d005      	beq.n	800b430 <HAL_SPI_TransmitReceive+0x82>
 800b424:	687b      	ldr	r3, [r7, #4]
 800b426:	2b00      	cmp	r3, #0
 800b428:	d002      	beq.n	800b430 <HAL_SPI_TransmitReceive+0x82>
 800b42a:	887b      	ldrh	r3, [r7, #2]
 800b42c:	2b00      	cmp	r3, #0
 800b42e:	d103      	bne.n	800b438 <HAL_SPI_TransmitReceive+0x8a>
 800b430:	2301      	movs	r3, #1
 800b432:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800b436:	e14e      	b.n	800b6d6 <HAL_SPI_TransmitReceive+0x328>
 800b438:	68fb      	ldr	r3, [r7, #12]
 800b43a:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 800b43e:	b2db      	uxtb	r3, r3
 800b440:	2b04      	cmp	r3, #4
 800b442:	d003      	beq.n	800b44c <HAL_SPI_TransmitReceive+0x9e>
 800b444:	68fb      	ldr	r3, [r7, #12]
 800b446:	2205      	movs	r2, #5
 800b448:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800b44c:	68fb      	ldr	r3, [r7, #12]
 800b44e:	2200      	movs	r2, #0
 800b450:	655a      	str	r2, [r3, #84]	; 0x54
 800b452:	68fb      	ldr	r3, [r7, #12]
 800b454:	687a      	ldr	r2, [r7, #4]
 800b456:	639a      	str	r2, [r3, #56]	; 0x38
 800b458:	68fb      	ldr	r3, [r7, #12]
 800b45a:	887a      	ldrh	r2, [r7, #2]
 800b45c:	87da      	strh	r2, [r3, #62]	; 0x3e
 800b45e:	68fb      	ldr	r3, [r7, #12]
 800b460:	887a      	ldrh	r2, [r7, #2]
 800b462:	879a      	strh	r2, [r3, #60]	; 0x3c
 800b464:	68fb      	ldr	r3, [r7, #12]
 800b466:	68ba      	ldr	r2, [r7, #8]
 800b468:	631a      	str	r2, [r3, #48]	; 0x30
 800b46a:	68fb      	ldr	r3, [r7, #12]
 800b46c:	887a      	ldrh	r2, [r7, #2]
 800b46e:	86da      	strh	r2, [r3, #54]	; 0x36
 800b470:	68fb      	ldr	r3, [r7, #12]
 800b472:	887a      	ldrh	r2, [r7, #2]
 800b474:	869a      	strh	r2, [r3, #52]	; 0x34
 800b476:	68fb      	ldr	r3, [r7, #12]
 800b478:	2200      	movs	r2, #0
 800b47a:	641a      	str	r2, [r3, #64]	; 0x40
 800b47c:	68fb      	ldr	r3, [r7, #12]
 800b47e:	2200      	movs	r2, #0
 800b480:	645a      	str	r2, [r3, #68]	; 0x44
 800b482:	68fb      	ldr	r3, [r7, #12]
 800b484:	681b      	ldr	r3, [r3, #0]
 800b486:	681b      	ldr	r3, [r3, #0]
 800b488:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800b48c:	2b40      	cmp	r3, #64	; 0x40
 800b48e:	d007      	beq.n	800b4a0 <HAL_SPI_TransmitReceive+0xf2>
 800b490:	68fb      	ldr	r3, [r7, #12]
 800b492:	681b      	ldr	r3, [r3, #0]
 800b494:	681a      	ldr	r2, [r3, #0]
 800b496:	68fb      	ldr	r3, [r7, #12]
 800b498:	681b      	ldr	r3, [r3, #0]
 800b49a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800b49e:	601a      	str	r2, [r3, #0]
 800b4a0:	68fb      	ldr	r3, [r7, #12]
 800b4a2:	68db      	ldr	r3, [r3, #12]
 800b4a4:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800b4a8:	d178      	bne.n	800b59c <HAL_SPI_TransmitReceive+0x1ee>
 800b4aa:	68fb      	ldr	r3, [r7, #12]
 800b4ac:	685b      	ldr	r3, [r3, #4]
 800b4ae:	2b00      	cmp	r3, #0
 800b4b0:	d002      	beq.n	800b4b8 <HAL_SPI_TransmitReceive+0x10a>
 800b4b2:	8b7b      	ldrh	r3, [r7, #26]
 800b4b4:	2b01      	cmp	r3, #1
 800b4b6:	d166      	bne.n	800b586 <HAL_SPI_TransmitReceive+0x1d8>
 800b4b8:	68fb      	ldr	r3, [r7, #12]
 800b4ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4bc:	881a      	ldrh	r2, [r3, #0]
 800b4be:	68fb      	ldr	r3, [r7, #12]
 800b4c0:	681b      	ldr	r3, [r3, #0]
 800b4c2:	60da      	str	r2, [r3, #12]
 800b4c4:	68fb      	ldr	r3, [r7, #12]
 800b4c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b4c8:	1c9a      	adds	r2, r3, #2
 800b4ca:	68fb      	ldr	r3, [r7, #12]
 800b4cc:	631a      	str	r2, [r3, #48]	; 0x30
 800b4ce:	68fb      	ldr	r3, [r7, #12]
 800b4d0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b4d2:	b29b      	uxth	r3, r3
 800b4d4:	3b01      	subs	r3, #1
 800b4d6:	b29a      	uxth	r2, r3
 800b4d8:	68fb      	ldr	r3, [r7, #12]
 800b4da:	86da      	strh	r2, [r3, #54]	; 0x36
 800b4dc:	e053      	b.n	800b586 <HAL_SPI_TransmitReceive+0x1d8>
 800b4de:	68fb      	ldr	r3, [r7, #12]
 800b4e0:	681b      	ldr	r3, [r3, #0]
 800b4e2:	689b      	ldr	r3, [r3, #8]
 800b4e4:	f003 0302 	and.w	r3, r3, #2
 800b4e8:	2b02      	cmp	r3, #2
 800b4ea:	d11b      	bne.n	800b524 <HAL_SPI_TransmitReceive+0x176>
 800b4ec:	68fb      	ldr	r3, [r7, #12]
 800b4ee:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b4f0:	b29b      	uxth	r3, r3
 800b4f2:	2b00      	cmp	r3, #0
 800b4f4:	d016      	beq.n	800b524 <HAL_SPI_TransmitReceive+0x176>
 800b4f6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b4f8:	2b01      	cmp	r3, #1
 800b4fa:	d113      	bne.n	800b524 <HAL_SPI_TransmitReceive+0x176>
 800b4fc:	68fb      	ldr	r3, [r7, #12]
 800b4fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b500:	881a      	ldrh	r2, [r3, #0]
 800b502:	68fb      	ldr	r3, [r7, #12]
 800b504:	681b      	ldr	r3, [r3, #0]
 800b506:	60da      	str	r2, [r3, #12]
 800b508:	68fb      	ldr	r3, [r7, #12]
 800b50a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b50c:	1c9a      	adds	r2, r3, #2
 800b50e:	68fb      	ldr	r3, [r7, #12]
 800b510:	631a      	str	r2, [r3, #48]	; 0x30
 800b512:	68fb      	ldr	r3, [r7, #12]
 800b514:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b516:	b29b      	uxth	r3, r3
 800b518:	3b01      	subs	r3, #1
 800b51a:	b29a      	uxth	r2, r3
 800b51c:	68fb      	ldr	r3, [r7, #12]
 800b51e:	86da      	strh	r2, [r3, #54]	; 0x36
 800b520:	2300      	movs	r3, #0
 800b522:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b524:	68fb      	ldr	r3, [r7, #12]
 800b526:	681b      	ldr	r3, [r3, #0]
 800b528:	689b      	ldr	r3, [r3, #8]
 800b52a:	f003 0301 	and.w	r3, r3, #1
 800b52e:	2b01      	cmp	r3, #1
 800b530:	d119      	bne.n	800b566 <HAL_SPI_TransmitReceive+0x1b8>
 800b532:	68fb      	ldr	r3, [r7, #12]
 800b534:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800b536:	b29b      	uxth	r3, r3
 800b538:	2b00      	cmp	r3, #0
 800b53a:	d014      	beq.n	800b566 <HAL_SPI_TransmitReceive+0x1b8>
 800b53c:	68fb      	ldr	r3, [r7, #12]
 800b53e:	681b      	ldr	r3, [r3, #0]
 800b540:	68da      	ldr	r2, [r3, #12]
 800b542:	68fb      	ldr	r3, [r7, #12]
 800b544:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b546:	b292      	uxth	r2, r2
 800b548:	801a      	strh	r2, [r3, #0]
 800b54a:	68fb      	ldr	r3, [r7, #12]
 800b54c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b54e:	1c9a      	adds	r2, r3, #2
 800b550:	68fb      	ldr	r3, [r7, #12]
 800b552:	639a      	str	r2, [r3, #56]	; 0x38
 800b554:	68fb      	ldr	r3, [r7, #12]
 800b556:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800b558:	b29b      	uxth	r3, r3
 800b55a:	3b01      	subs	r3, #1
 800b55c:	b29a      	uxth	r2, r3
 800b55e:	68fb      	ldr	r3, [r7, #12]
 800b560:	87da      	strh	r2, [r3, #62]	; 0x3e
 800b562:	2301      	movs	r3, #1
 800b564:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b566:	f7fb feb3 	bl	80072d0 <HAL_GetTick>
 800b56a:	4602      	mov	r2, r0
 800b56c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b56e:	1ad3      	subs	r3, r2, r3
 800b570:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b572:	429a      	cmp	r2, r3
 800b574:	d807      	bhi.n	800b586 <HAL_SPI_TransmitReceive+0x1d8>
 800b576:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b578:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b57c:	d003      	beq.n	800b586 <HAL_SPI_TransmitReceive+0x1d8>
 800b57e:	2303      	movs	r3, #3
 800b580:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800b584:	e0a7      	b.n	800b6d6 <HAL_SPI_TransmitReceive+0x328>
 800b586:	68fb      	ldr	r3, [r7, #12]
 800b588:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b58a:	b29b      	uxth	r3, r3
 800b58c:	2b00      	cmp	r3, #0
 800b58e:	d1a6      	bne.n	800b4de <HAL_SPI_TransmitReceive+0x130>
 800b590:	68fb      	ldr	r3, [r7, #12]
 800b592:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800b594:	b29b      	uxth	r3, r3
 800b596:	2b00      	cmp	r3, #0
 800b598:	d1a1      	bne.n	800b4de <HAL_SPI_TransmitReceive+0x130>
 800b59a:	e07c      	b.n	800b696 <HAL_SPI_TransmitReceive+0x2e8>
 800b59c:	68fb      	ldr	r3, [r7, #12]
 800b59e:	685b      	ldr	r3, [r3, #4]
 800b5a0:	2b00      	cmp	r3, #0
 800b5a2:	d002      	beq.n	800b5aa <HAL_SPI_TransmitReceive+0x1fc>
 800b5a4:	8b7b      	ldrh	r3, [r7, #26]
 800b5a6:	2b01      	cmp	r3, #1
 800b5a8:	d16b      	bne.n	800b682 <HAL_SPI_TransmitReceive+0x2d4>
 800b5aa:	68fb      	ldr	r3, [r7, #12]
 800b5ac:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b5ae:	68fb      	ldr	r3, [r7, #12]
 800b5b0:	681b      	ldr	r3, [r3, #0]
 800b5b2:	330c      	adds	r3, #12
 800b5b4:	7812      	ldrb	r2, [r2, #0]
 800b5b6:	701a      	strb	r2, [r3, #0]
 800b5b8:	68fb      	ldr	r3, [r7, #12]
 800b5ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b5bc:	1c5a      	adds	r2, r3, #1
 800b5be:	68fb      	ldr	r3, [r7, #12]
 800b5c0:	631a      	str	r2, [r3, #48]	; 0x30
 800b5c2:	68fb      	ldr	r3, [r7, #12]
 800b5c4:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b5c6:	b29b      	uxth	r3, r3
 800b5c8:	3b01      	subs	r3, #1
 800b5ca:	b29a      	uxth	r2, r3
 800b5cc:	68fb      	ldr	r3, [r7, #12]
 800b5ce:	86da      	strh	r2, [r3, #54]	; 0x36
 800b5d0:	e057      	b.n	800b682 <HAL_SPI_TransmitReceive+0x2d4>
 800b5d2:	68fb      	ldr	r3, [r7, #12]
 800b5d4:	681b      	ldr	r3, [r3, #0]
 800b5d6:	689b      	ldr	r3, [r3, #8]
 800b5d8:	f003 0302 	and.w	r3, r3, #2
 800b5dc:	2b02      	cmp	r3, #2
 800b5de:	d11c      	bne.n	800b61a <HAL_SPI_TransmitReceive+0x26c>
 800b5e0:	68fb      	ldr	r3, [r7, #12]
 800b5e2:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b5e4:	b29b      	uxth	r3, r3
 800b5e6:	2b00      	cmp	r3, #0
 800b5e8:	d017      	beq.n	800b61a <HAL_SPI_TransmitReceive+0x26c>
 800b5ea:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800b5ec:	2b01      	cmp	r3, #1
 800b5ee:	d114      	bne.n	800b61a <HAL_SPI_TransmitReceive+0x26c>
 800b5f0:	68fb      	ldr	r3, [r7, #12]
 800b5f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800b5f4:	68fb      	ldr	r3, [r7, #12]
 800b5f6:	681b      	ldr	r3, [r3, #0]
 800b5f8:	330c      	adds	r3, #12
 800b5fa:	7812      	ldrb	r2, [r2, #0]
 800b5fc:	701a      	strb	r2, [r3, #0]
 800b5fe:	68fb      	ldr	r3, [r7, #12]
 800b600:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b602:	1c5a      	adds	r2, r3, #1
 800b604:	68fb      	ldr	r3, [r7, #12]
 800b606:	631a      	str	r2, [r3, #48]	; 0x30
 800b608:	68fb      	ldr	r3, [r7, #12]
 800b60a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b60c:	b29b      	uxth	r3, r3
 800b60e:	3b01      	subs	r3, #1
 800b610:	b29a      	uxth	r2, r3
 800b612:	68fb      	ldr	r3, [r7, #12]
 800b614:	86da      	strh	r2, [r3, #54]	; 0x36
 800b616:	2300      	movs	r3, #0
 800b618:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b61a:	68fb      	ldr	r3, [r7, #12]
 800b61c:	681b      	ldr	r3, [r3, #0]
 800b61e:	689b      	ldr	r3, [r3, #8]
 800b620:	f003 0301 	and.w	r3, r3, #1
 800b624:	2b01      	cmp	r3, #1
 800b626:	d119      	bne.n	800b65c <HAL_SPI_TransmitReceive+0x2ae>
 800b628:	68fb      	ldr	r3, [r7, #12]
 800b62a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800b62c:	b29b      	uxth	r3, r3
 800b62e:	2b00      	cmp	r3, #0
 800b630:	d014      	beq.n	800b65c <HAL_SPI_TransmitReceive+0x2ae>
 800b632:	68fb      	ldr	r3, [r7, #12]
 800b634:	681b      	ldr	r3, [r3, #0]
 800b636:	68da      	ldr	r2, [r3, #12]
 800b638:	68fb      	ldr	r3, [r7, #12]
 800b63a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b63c:	b2d2      	uxtb	r2, r2
 800b63e:	701a      	strb	r2, [r3, #0]
 800b640:	68fb      	ldr	r3, [r7, #12]
 800b642:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b644:	1c5a      	adds	r2, r3, #1
 800b646:	68fb      	ldr	r3, [r7, #12]
 800b648:	639a      	str	r2, [r3, #56]	; 0x38
 800b64a:	68fb      	ldr	r3, [r7, #12]
 800b64c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800b64e:	b29b      	uxth	r3, r3
 800b650:	3b01      	subs	r3, #1
 800b652:	b29a      	uxth	r2, r3
 800b654:	68fb      	ldr	r3, [r7, #12]
 800b656:	87da      	strh	r2, [r3, #62]	; 0x3e
 800b658:	2301      	movs	r3, #1
 800b65a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800b65c:	f7fb fe38 	bl	80072d0 <HAL_GetTick>
 800b660:	4602      	mov	r2, r0
 800b662:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b664:	1ad3      	subs	r3, r2, r3
 800b666:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800b668:	429a      	cmp	r2, r3
 800b66a:	d803      	bhi.n	800b674 <HAL_SPI_TransmitReceive+0x2c6>
 800b66c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b66e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b672:	d102      	bne.n	800b67a <HAL_SPI_TransmitReceive+0x2cc>
 800b674:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800b676:	2b00      	cmp	r3, #0
 800b678:	d103      	bne.n	800b682 <HAL_SPI_TransmitReceive+0x2d4>
 800b67a:	2303      	movs	r3, #3
 800b67c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800b680:	e029      	b.n	800b6d6 <HAL_SPI_TransmitReceive+0x328>
 800b682:	68fb      	ldr	r3, [r7, #12]
 800b684:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800b686:	b29b      	uxth	r3, r3
 800b688:	2b00      	cmp	r3, #0
 800b68a:	d1a2      	bne.n	800b5d2 <HAL_SPI_TransmitReceive+0x224>
 800b68c:	68fb      	ldr	r3, [r7, #12]
 800b68e:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800b690:	b29b      	uxth	r3, r3
 800b692:	2b00      	cmp	r3, #0
 800b694:	d19d      	bne.n	800b5d2 <HAL_SPI_TransmitReceive+0x224>
 800b696:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b698:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 800b69a:	68f8      	ldr	r0, [r7, #12]
 800b69c:	f000 f8b2 	bl	800b804 <SPI_EndRxTxTransaction>
 800b6a0:	4603      	mov	r3, r0
 800b6a2:	2b00      	cmp	r3, #0
 800b6a4:	d006      	beq.n	800b6b4 <HAL_SPI_TransmitReceive+0x306>
 800b6a6:	2301      	movs	r3, #1
 800b6a8:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800b6ac:	68fb      	ldr	r3, [r7, #12]
 800b6ae:	2220      	movs	r2, #32
 800b6b0:	655a      	str	r2, [r3, #84]	; 0x54
 800b6b2:	e010      	b.n	800b6d6 <HAL_SPI_TransmitReceive+0x328>
 800b6b4:	68fb      	ldr	r3, [r7, #12]
 800b6b6:	689b      	ldr	r3, [r3, #8]
 800b6b8:	2b00      	cmp	r3, #0
 800b6ba:	d10b      	bne.n	800b6d4 <HAL_SPI_TransmitReceive+0x326>
 800b6bc:	2300      	movs	r3, #0
 800b6be:	617b      	str	r3, [r7, #20]
 800b6c0:	68fb      	ldr	r3, [r7, #12]
 800b6c2:	681b      	ldr	r3, [r3, #0]
 800b6c4:	68db      	ldr	r3, [r3, #12]
 800b6c6:	617b      	str	r3, [r7, #20]
 800b6c8:	68fb      	ldr	r3, [r7, #12]
 800b6ca:	681b      	ldr	r3, [r3, #0]
 800b6cc:	689b      	ldr	r3, [r3, #8]
 800b6ce:	617b      	str	r3, [r7, #20]
 800b6d0:	697b      	ldr	r3, [r7, #20]
 800b6d2:	e000      	b.n	800b6d6 <HAL_SPI_TransmitReceive+0x328>
 800b6d4:	bf00      	nop
 800b6d6:	68fb      	ldr	r3, [r7, #12]
 800b6d8:	2201      	movs	r2, #1
 800b6da:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800b6de:	68fb      	ldr	r3, [r7, #12]
 800b6e0:	2200      	movs	r2, #0
 800b6e2:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800b6e6:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800b6ea:	4618      	mov	r0, r3
 800b6ec:	3730      	adds	r7, #48	; 0x30
 800b6ee:	46bd      	mov	sp, r7
 800b6f0:	bd80      	pop	{r7, pc}
	...

0800b6f4 <SPI_WaitFlagStateUntilTimeout>:
 800b6f4:	b580      	push	{r7, lr}
 800b6f6:	b088      	sub	sp, #32
 800b6f8:	af00      	add	r7, sp, #0
 800b6fa:	60f8      	str	r0, [r7, #12]
 800b6fc:	60b9      	str	r1, [r7, #8]
 800b6fe:	603b      	str	r3, [r7, #0]
 800b700:	4613      	mov	r3, r2
 800b702:	71fb      	strb	r3, [r7, #7]
 800b704:	f7fb fde4 	bl	80072d0 <HAL_GetTick>
 800b708:	4602      	mov	r2, r0
 800b70a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b70c:	1a9b      	subs	r3, r3, r2
 800b70e:	683a      	ldr	r2, [r7, #0]
 800b710:	4413      	add	r3, r2
 800b712:	61fb      	str	r3, [r7, #28]
 800b714:	f7fb fddc 	bl	80072d0 <HAL_GetTick>
 800b718:	61b8      	str	r0, [r7, #24]
 800b71a:	4b39      	ldr	r3, [pc, #228]	; (800b800 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800b71c:	681b      	ldr	r3, [r3, #0]
 800b71e:	015b      	lsls	r3, r3, #5
 800b720:	0d1b      	lsrs	r3, r3, #20
 800b722:	69fa      	ldr	r2, [r7, #28]
 800b724:	fb02 f303 	mul.w	r3, r2, r3
 800b728:	617b      	str	r3, [r7, #20]
 800b72a:	e054      	b.n	800b7d6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800b72c:	683b      	ldr	r3, [r7, #0]
 800b72e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b732:	d050      	beq.n	800b7d6 <SPI_WaitFlagStateUntilTimeout+0xe2>
 800b734:	f7fb fdcc 	bl	80072d0 <HAL_GetTick>
 800b738:	4602      	mov	r2, r0
 800b73a:	69bb      	ldr	r3, [r7, #24]
 800b73c:	1ad3      	subs	r3, r2, r3
 800b73e:	69fa      	ldr	r2, [r7, #28]
 800b740:	429a      	cmp	r2, r3
 800b742:	d902      	bls.n	800b74a <SPI_WaitFlagStateUntilTimeout+0x56>
 800b744:	69fb      	ldr	r3, [r7, #28]
 800b746:	2b00      	cmp	r3, #0
 800b748:	d13d      	bne.n	800b7c6 <SPI_WaitFlagStateUntilTimeout+0xd2>
 800b74a:	68fb      	ldr	r3, [r7, #12]
 800b74c:	681b      	ldr	r3, [r3, #0]
 800b74e:	685a      	ldr	r2, [r3, #4]
 800b750:	68fb      	ldr	r3, [r7, #12]
 800b752:	681b      	ldr	r3, [r3, #0]
 800b754:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 800b758:	605a      	str	r2, [r3, #4]
 800b75a:	68fb      	ldr	r3, [r7, #12]
 800b75c:	685b      	ldr	r3, [r3, #4]
 800b75e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b762:	d111      	bne.n	800b788 <SPI_WaitFlagStateUntilTimeout+0x94>
 800b764:	68fb      	ldr	r3, [r7, #12]
 800b766:	689b      	ldr	r3, [r3, #8]
 800b768:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800b76c:	d004      	beq.n	800b778 <SPI_WaitFlagStateUntilTimeout+0x84>
 800b76e:	68fb      	ldr	r3, [r7, #12]
 800b770:	689b      	ldr	r3, [r3, #8]
 800b772:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b776:	d107      	bne.n	800b788 <SPI_WaitFlagStateUntilTimeout+0x94>
 800b778:	68fb      	ldr	r3, [r7, #12]
 800b77a:	681b      	ldr	r3, [r3, #0]
 800b77c:	681a      	ldr	r2, [r3, #0]
 800b77e:	68fb      	ldr	r3, [r7, #12]
 800b780:	681b      	ldr	r3, [r3, #0]
 800b782:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 800b786:	601a      	str	r2, [r3, #0]
 800b788:	68fb      	ldr	r3, [r7, #12]
 800b78a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b78c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b790:	d10f      	bne.n	800b7b2 <SPI_WaitFlagStateUntilTimeout+0xbe>
 800b792:	68fb      	ldr	r3, [r7, #12]
 800b794:	681b      	ldr	r3, [r3, #0]
 800b796:	681a      	ldr	r2, [r3, #0]
 800b798:	68fb      	ldr	r3, [r7, #12]
 800b79a:	681b      	ldr	r3, [r3, #0]
 800b79c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800b7a0:	601a      	str	r2, [r3, #0]
 800b7a2:	68fb      	ldr	r3, [r7, #12]
 800b7a4:	681b      	ldr	r3, [r3, #0]
 800b7a6:	681a      	ldr	r2, [r3, #0]
 800b7a8:	68fb      	ldr	r3, [r7, #12]
 800b7aa:	681b      	ldr	r3, [r3, #0]
 800b7ac:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 800b7b0:	601a      	str	r2, [r3, #0]
 800b7b2:	68fb      	ldr	r3, [r7, #12]
 800b7b4:	2201      	movs	r2, #1
 800b7b6:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 800b7ba:	68fb      	ldr	r3, [r7, #12]
 800b7bc:	2200      	movs	r2, #0
 800b7be:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800b7c2:	2303      	movs	r3, #3
 800b7c4:	e017      	b.n	800b7f6 <SPI_WaitFlagStateUntilTimeout+0x102>
 800b7c6:	697b      	ldr	r3, [r7, #20]
 800b7c8:	2b00      	cmp	r3, #0
 800b7ca:	d101      	bne.n	800b7d0 <SPI_WaitFlagStateUntilTimeout+0xdc>
 800b7cc:	2300      	movs	r3, #0
 800b7ce:	61fb      	str	r3, [r7, #28]
 800b7d0:	697b      	ldr	r3, [r7, #20]
 800b7d2:	3b01      	subs	r3, #1
 800b7d4:	617b      	str	r3, [r7, #20]
 800b7d6:	68fb      	ldr	r3, [r7, #12]
 800b7d8:	681b      	ldr	r3, [r3, #0]
 800b7da:	689a      	ldr	r2, [r3, #8]
 800b7dc:	68bb      	ldr	r3, [r7, #8]
 800b7de:	4013      	ands	r3, r2
 800b7e0:	68ba      	ldr	r2, [r7, #8]
 800b7e2:	429a      	cmp	r2, r3
 800b7e4:	bf0c      	ite	eq
 800b7e6:	2301      	moveq	r3, #1
 800b7e8:	2300      	movne	r3, #0
 800b7ea:	b2db      	uxtb	r3, r3
 800b7ec:	461a      	mov	r2, r3
 800b7ee:	79fb      	ldrb	r3, [r7, #7]
 800b7f0:	429a      	cmp	r2, r3
 800b7f2:	d19b      	bne.n	800b72c <SPI_WaitFlagStateUntilTimeout+0x38>
 800b7f4:	2300      	movs	r3, #0
 800b7f6:	4618      	mov	r0, r3
 800b7f8:	3720      	adds	r7, #32
 800b7fa:	46bd      	mov	sp, r7
 800b7fc:	bd80      	pop	{r7, pc}
 800b7fe:	bf00      	nop
 800b800:	20000024 	.word	0x20000024

0800b804 <SPI_EndRxTxTransaction>:
 800b804:	b580      	push	{r7, lr}
 800b806:	b088      	sub	sp, #32
 800b808:	af02      	add	r7, sp, #8
 800b80a:	60f8      	str	r0, [r7, #12]
 800b80c:	60b9      	str	r1, [r7, #8]
 800b80e:	607a      	str	r2, [r7, #4]
 800b810:	4b1b      	ldr	r3, [pc, #108]	; (800b880 <SPI_EndRxTxTransaction+0x7c>)
 800b812:	681b      	ldr	r3, [r3, #0]
 800b814:	4a1b      	ldr	r2, [pc, #108]	; (800b884 <SPI_EndRxTxTransaction+0x80>)
 800b816:	fba2 2303 	umull	r2, r3, r2, r3
 800b81a:	0d5b      	lsrs	r3, r3, #21
 800b81c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800b820:	fb02 f303 	mul.w	r3, r2, r3
 800b824:	617b      	str	r3, [r7, #20]
 800b826:	68fb      	ldr	r3, [r7, #12]
 800b828:	685b      	ldr	r3, [r3, #4]
 800b82a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800b82e:	d112      	bne.n	800b856 <SPI_EndRxTxTransaction+0x52>
 800b830:	687b      	ldr	r3, [r7, #4]
 800b832:	9300      	str	r3, [sp, #0]
 800b834:	68bb      	ldr	r3, [r7, #8]
 800b836:	2200      	movs	r2, #0
 800b838:	2180      	movs	r1, #128	; 0x80
 800b83a:	68f8      	ldr	r0, [r7, #12]
 800b83c:	f7ff ff5a 	bl	800b6f4 <SPI_WaitFlagStateUntilTimeout>
 800b840:	4603      	mov	r3, r0
 800b842:	2b00      	cmp	r3, #0
 800b844:	d016      	beq.n	800b874 <SPI_EndRxTxTransaction+0x70>
 800b846:	68fb      	ldr	r3, [r7, #12]
 800b848:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b84a:	f043 0220 	orr.w	r2, r3, #32
 800b84e:	68fb      	ldr	r3, [r7, #12]
 800b850:	655a      	str	r2, [r3, #84]	; 0x54
 800b852:	2303      	movs	r3, #3
 800b854:	e00f      	b.n	800b876 <SPI_EndRxTxTransaction+0x72>
 800b856:	697b      	ldr	r3, [r7, #20]
 800b858:	2b00      	cmp	r3, #0
 800b85a:	d00a      	beq.n	800b872 <SPI_EndRxTxTransaction+0x6e>
 800b85c:	697b      	ldr	r3, [r7, #20]
 800b85e:	3b01      	subs	r3, #1
 800b860:	617b      	str	r3, [r7, #20]
 800b862:	68fb      	ldr	r3, [r7, #12]
 800b864:	681b      	ldr	r3, [r3, #0]
 800b866:	689b      	ldr	r3, [r3, #8]
 800b868:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800b86c:	2b80      	cmp	r3, #128	; 0x80
 800b86e:	d0f2      	beq.n	800b856 <SPI_EndRxTxTransaction+0x52>
 800b870:	e000      	b.n	800b874 <SPI_EndRxTxTransaction+0x70>
 800b872:	bf00      	nop
 800b874:	2300      	movs	r3, #0
 800b876:	4618      	mov	r0, r3
 800b878:	3718      	adds	r7, #24
 800b87a:	46bd      	mov	sp, r7
 800b87c:	bd80      	pop	{r7, pc}
 800b87e:	bf00      	nop
 800b880:	20000024 	.word	0x20000024
 800b884:	165e9f81 	.word	0x165e9f81

0800b888 <USB_CoreInit>:
 800b888:	b084      	sub	sp, #16
 800b88a:	b580      	push	{r7, lr}
 800b88c:	b084      	sub	sp, #16
 800b88e:	af00      	add	r7, sp, #0
 800b890:	6078      	str	r0, [r7, #4]
 800b892:	f107 001c 	add.w	r0, r7, #28
 800b896:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800b89a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800b89c:	2b01      	cmp	r3, #1
 800b89e:	d122      	bne.n	800b8e6 <USB_CoreInit+0x5e>
 800b8a0:	687b      	ldr	r3, [r7, #4]
 800b8a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b8a4:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800b8a8:	687b      	ldr	r3, [r7, #4]
 800b8aa:	639a      	str	r2, [r3, #56]	; 0x38
 800b8ac:	687b      	ldr	r3, [r7, #4]
 800b8ae:	68db      	ldr	r3, [r3, #12]
 800b8b0:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 800b8b4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b8b8:	687a      	ldr	r2, [r7, #4]
 800b8ba:	60d3      	str	r3, [r2, #12]
 800b8bc:	687b      	ldr	r3, [r7, #4]
 800b8be:	68db      	ldr	r3, [r3, #12]
 800b8c0:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800b8c4:	687b      	ldr	r3, [r7, #4]
 800b8c6:	60da      	str	r2, [r3, #12]
 800b8c8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800b8ca:	2b01      	cmp	r3, #1
 800b8cc:	d105      	bne.n	800b8da <USB_CoreInit+0x52>
 800b8ce:	687b      	ldr	r3, [r7, #4]
 800b8d0:	68db      	ldr	r3, [r3, #12]
 800b8d2:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	60da      	str	r2, [r3, #12]
 800b8da:	6878      	ldr	r0, [r7, #4]
 800b8dc:	f001 fbee 	bl	800d0bc <USB_CoreReset>
 800b8e0:	4603      	mov	r3, r0
 800b8e2:	73fb      	strb	r3, [r7, #15]
 800b8e4:	e01a      	b.n	800b91c <USB_CoreInit+0x94>
 800b8e6:	687b      	ldr	r3, [r7, #4]
 800b8e8:	68db      	ldr	r3, [r3, #12]
 800b8ea:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800b8ee:	687b      	ldr	r3, [r7, #4]
 800b8f0:	60da      	str	r2, [r3, #12]
 800b8f2:	6878      	ldr	r0, [r7, #4]
 800b8f4:	f001 fbe2 	bl	800d0bc <USB_CoreReset>
 800b8f8:	4603      	mov	r3, r0
 800b8fa:	73fb      	strb	r3, [r7, #15]
 800b8fc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800b8fe:	2b00      	cmp	r3, #0
 800b900:	d106      	bne.n	800b910 <USB_CoreInit+0x88>
 800b902:	687b      	ldr	r3, [r7, #4]
 800b904:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b906:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 800b90a:	687b      	ldr	r3, [r7, #4]
 800b90c:	639a      	str	r2, [r3, #56]	; 0x38
 800b90e:	e005      	b.n	800b91c <USB_CoreInit+0x94>
 800b910:	687b      	ldr	r3, [r7, #4]
 800b912:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b914:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800b918:	687b      	ldr	r3, [r7, #4]
 800b91a:	639a      	str	r2, [r3, #56]	; 0x38
 800b91c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800b91e:	2b01      	cmp	r3, #1
 800b920:	d10b      	bne.n	800b93a <USB_CoreInit+0xb2>
 800b922:	687b      	ldr	r3, [r7, #4]
 800b924:	689b      	ldr	r3, [r3, #8]
 800b926:	f043 0206 	orr.w	r2, r3, #6
 800b92a:	687b      	ldr	r3, [r7, #4]
 800b92c:	609a      	str	r2, [r3, #8]
 800b92e:	687b      	ldr	r3, [r7, #4]
 800b930:	689b      	ldr	r3, [r3, #8]
 800b932:	f043 0220 	orr.w	r2, r3, #32
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	609a      	str	r2, [r3, #8]
 800b93a:	7bfb      	ldrb	r3, [r7, #15]
 800b93c:	4618      	mov	r0, r3
 800b93e:	3710      	adds	r7, #16
 800b940:	46bd      	mov	sp, r7
 800b942:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800b946:	b004      	add	sp, #16
 800b948:	4770      	bx	lr
	...

0800b94c <USB_SetTurnaroundTime>:
 800b94c:	b480      	push	{r7}
 800b94e:	b087      	sub	sp, #28
 800b950:	af00      	add	r7, sp, #0
 800b952:	60f8      	str	r0, [r7, #12]
 800b954:	60b9      	str	r1, [r7, #8]
 800b956:	4613      	mov	r3, r2
 800b958:	71fb      	strb	r3, [r7, #7]
 800b95a:	79fb      	ldrb	r3, [r7, #7]
 800b95c:	2b02      	cmp	r3, #2
 800b95e:	d165      	bne.n	800ba2c <USB_SetTurnaroundTime+0xe0>
 800b960:	68bb      	ldr	r3, [r7, #8]
 800b962:	4a41      	ldr	r2, [pc, #260]	; (800ba68 <USB_SetTurnaroundTime+0x11c>)
 800b964:	4293      	cmp	r3, r2
 800b966:	d906      	bls.n	800b976 <USB_SetTurnaroundTime+0x2a>
 800b968:	68bb      	ldr	r3, [r7, #8]
 800b96a:	4a40      	ldr	r2, [pc, #256]	; (800ba6c <USB_SetTurnaroundTime+0x120>)
 800b96c:	4293      	cmp	r3, r2
 800b96e:	d202      	bcs.n	800b976 <USB_SetTurnaroundTime+0x2a>
 800b970:	230f      	movs	r3, #15
 800b972:	617b      	str	r3, [r7, #20]
 800b974:	e062      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800b976:	68bb      	ldr	r3, [r7, #8]
 800b978:	4a3c      	ldr	r2, [pc, #240]	; (800ba6c <USB_SetTurnaroundTime+0x120>)
 800b97a:	4293      	cmp	r3, r2
 800b97c:	d306      	bcc.n	800b98c <USB_SetTurnaroundTime+0x40>
 800b97e:	68bb      	ldr	r3, [r7, #8]
 800b980:	4a3b      	ldr	r2, [pc, #236]	; (800ba70 <USB_SetTurnaroundTime+0x124>)
 800b982:	4293      	cmp	r3, r2
 800b984:	d202      	bcs.n	800b98c <USB_SetTurnaroundTime+0x40>
 800b986:	230e      	movs	r3, #14
 800b988:	617b      	str	r3, [r7, #20]
 800b98a:	e057      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800b98c:	68bb      	ldr	r3, [r7, #8]
 800b98e:	4a38      	ldr	r2, [pc, #224]	; (800ba70 <USB_SetTurnaroundTime+0x124>)
 800b990:	4293      	cmp	r3, r2
 800b992:	d306      	bcc.n	800b9a2 <USB_SetTurnaroundTime+0x56>
 800b994:	68bb      	ldr	r3, [r7, #8]
 800b996:	4a37      	ldr	r2, [pc, #220]	; (800ba74 <USB_SetTurnaroundTime+0x128>)
 800b998:	4293      	cmp	r3, r2
 800b99a:	d202      	bcs.n	800b9a2 <USB_SetTurnaroundTime+0x56>
 800b99c:	230d      	movs	r3, #13
 800b99e:	617b      	str	r3, [r7, #20]
 800b9a0:	e04c      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800b9a2:	68bb      	ldr	r3, [r7, #8]
 800b9a4:	4a33      	ldr	r2, [pc, #204]	; (800ba74 <USB_SetTurnaroundTime+0x128>)
 800b9a6:	4293      	cmp	r3, r2
 800b9a8:	d306      	bcc.n	800b9b8 <USB_SetTurnaroundTime+0x6c>
 800b9aa:	68bb      	ldr	r3, [r7, #8]
 800b9ac:	4a32      	ldr	r2, [pc, #200]	; (800ba78 <USB_SetTurnaroundTime+0x12c>)
 800b9ae:	4293      	cmp	r3, r2
 800b9b0:	d802      	bhi.n	800b9b8 <USB_SetTurnaroundTime+0x6c>
 800b9b2:	230c      	movs	r3, #12
 800b9b4:	617b      	str	r3, [r7, #20]
 800b9b6:	e041      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800b9b8:	68bb      	ldr	r3, [r7, #8]
 800b9ba:	4a2f      	ldr	r2, [pc, #188]	; (800ba78 <USB_SetTurnaroundTime+0x12c>)
 800b9bc:	4293      	cmp	r3, r2
 800b9be:	d906      	bls.n	800b9ce <USB_SetTurnaroundTime+0x82>
 800b9c0:	68bb      	ldr	r3, [r7, #8]
 800b9c2:	4a2e      	ldr	r2, [pc, #184]	; (800ba7c <USB_SetTurnaroundTime+0x130>)
 800b9c4:	4293      	cmp	r3, r2
 800b9c6:	d802      	bhi.n	800b9ce <USB_SetTurnaroundTime+0x82>
 800b9c8:	230b      	movs	r3, #11
 800b9ca:	617b      	str	r3, [r7, #20]
 800b9cc:	e036      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800b9ce:	68bb      	ldr	r3, [r7, #8]
 800b9d0:	4a2a      	ldr	r2, [pc, #168]	; (800ba7c <USB_SetTurnaroundTime+0x130>)
 800b9d2:	4293      	cmp	r3, r2
 800b9d4:	d906      	bls.n	800b9e4 <USB_SetTurnaroundTime+0x98>
 800b9d6:	68bb      	ldr	r3, [r7, #8]
 800b9d8:	4a29      	ldr	r2, [pc, #164]	; (800ba80 <USB_SetTurnaroundTime+0x134>)
 800b9da:	4293      	cmp	r3, r2
 800b9dc:	d802      	bhi.n	800b9e4 <USB_SetTurnaroundTime+0x98>
 800b9de:	230a      	movs	r3, #10
 800b9e0:	617b      	str	r3, [r7, #20]
 800b9e2:	e02b      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800b9e4:	68bb      	ldr	r3, [r7, #8]
 800b9e6:	4a26      	ldr	r2, [pc, #152]	; (800ba80 <USB_SetTurnaroundTime+0x134>)
 800b9e8:	4293      	cmp	r3, r2
 800b9ea:	d906      	bls.n	800b9fa <USB_SetTurnaroundTime+0xae>
 800b9ec:	68bb      	ldr	r3, [r7, #8]
 800b9ee:	4a25      	ldr	r2, [pc, #148]	; (800ba84 <USB_SetTurnaroundTime+0x138>)
 800b9f0:	4293      	cmp	r3, r2
 800b9f2:	d202      	bcs.n	800b9fa <USB_SetTurnaroundTime+0xae>
 800b9f4:	2309      	movs	r3, #9
 800b9f6:	617b      	str	r3, [r7, #20]
 800b9f8:	e020      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800b9fa:	68bb      	ldr	r3, [r7, #8]
 800b9fc:	4a21      	ldr	r2, [pc, #132]	; (800ba84 <USB_SetTurnaroundTime+0x138>)
 800b9fe:	4293      	cmp	r3, r2
 800ba00:	d306      	bcc.n	800ba10 <USB_SetTurnaroundTime+0xc4>
 800ba02:	68bb      	ldr	r3, [r7, #8]
 800ba04:	4a20      	ldr	r2, [pc, #128]	; (800ba88 <USB_SetTurnaroundTime+0x13c>)
 800ba06:	4293      	cmp	r3, r2
 800ba08:	d802      	bhi.n	800ba10 <USB_SetTurnaroundTime+0xc4>
 800ba0a:	2308      	movs	r3, #8
 800ba0c:	617b      	str	r3, [r7, #20]
 800ba0e:	e015      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800ba10:	68bb      	ldr	r3, [r7, #8]
 800ba12:	4a1d      	ldr	r2, [pc, #116]	; (800ba88 <USB_SetTurnaroundTime+0x13c>)
 800ba14:	4293      	cmp	r3, r2
 800ba16:	d906      	bls.n	800ba26 <USB_SetTurnaroundTime+0xda>
 800ba18:	68bb      	ldr	r3, [r7, #8]
 800ba1a:	4a1c      	ldr	r2, [pc, #112]	; (800ba8c <USB_SetTurnaroundTime+0x140>)
 800ba1c:	4293      	cmp	r3, r2
 800ba1e:	d202      	bcs.n	800ba26 <USB_SetTurnaroundTime+0xda>
 800ba20:	2307      	movs	r3, #7
 800ba22:	617b      	str	r3, [r7, #20]
 800ba24:	e00a      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800ba26:	2306      	movs	r3, #6
 800ba28:	617b      	str	r3, [r7, #20]
 800ba2a:	e007      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800ba2c:	79fb      	ldrb	r3, [r7, #7]
 800ba2e:	2b00      	cmp	r3, #0
 800ba30:	d102      	bne.n	800ba38 <USB_SetTurnaroundTime+0xec>
 800ba32:	2309      	movs	r3, #9
 800ba34:	617b      	str	r3, [r7, #20]
 800ba36:	e001      	b.n	800ba3c <USB_SetTurnaroundTime+0xf0>
 800ba38:	2309      	movs	r3, #9
 800ba3a:	617b      	str	r3, [r7, #20]
 800ba3c:	68fb      	ldr	r3, [r7, #12]
 800ba3e:	68db      	ldr	r3, [r3, #12]
 800ba40:	f423 5270 	bic.w	r2, r3, #15360	; 0x3c00
 800ba44:	68fb      	ldr	r3, [r7, #12]
 800ba46:	60da      	str	r2, [r3, #12]
 800ba48:	68fb      	ldr	r3, [r7, #12]
 800ba4a:	68da      	ldr	r2, [r3, #12]
 800ba4c:	697b      	ldr	r3, [r7, #20]
 800ba4e:	029b      	lsls	r3, r3, #10
 800ba50:	f403 5370 	and.w	r3, r3, #15360	; 0x3c00
 800ba54:	431a      	orrs	r2, r3
 800ba56:	68fb      	ldr	r3, [r7, #12]
 800ba58:	60da      	str	r2, [r3, #12]
 800ba5a:	2300      	movs	r3, #0
 800ba5c:	4618      	mov	r0, r3
 800ba5e:	371c      	adds	r7, #28
 800ba60:	46bd      	mov	sp, r7
 800ba62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba66:	4770      	bx	lr
 800ba68:	00d8acbf 	.word	0x00d8acbf
 800ba6c:	00e4e1c0 	.word	0x00e4e1c0
 800ba70:	00f42400 	.word	0x00f42400
 800ba74:	01067380 	.word	0x01067380
 800ba78:	011a499f 	.word	0x011a499f
 800ba7c:	01312cff 	.word	0x01312cff
 800ba80:	014ca43f 	.word	0x014ca43f
 800ba84:	016e3600 	.word	0x016e3600
 800ba88:	01a6ab1f 	.word	0x01a6ab1f
 800ba8c:	01e84800 	.word	0x01e84800

0800ba90 <USB_EnableGlobalInt>:
 800ba90:	b480      	push	{r7}
 800ba92:	b083      	sub	sp, #12
 800ba94:	af00      	add	r7, sp, #0
 800ba96:	6078      	str	r0, [r7, #4]
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	689b      	ldr	r3, [r3, #8]
 800ba9c:	f043 0201 	orr.w	r2, r3, #1
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	609a      	str	r2, [r3, #8]
 800baa4:	2300      	movs	r3, #0
 800baa6:	4618      	mov	r0, r3
 800baa8:	370c      	adds	r7, #12
 800baaa:	46bd      	mov	sp, r7
 800baac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bab0:	4770      	bx	lr

0800bab2 <USB_DisableGlobalInt>:
 800bab2:	b480      	push	{r7}
 800bab4:	b083      	sub	sp, #12
 800bab6:	af00      	add	r7, sp, #0
 800bab8:	6078      	str	r0, [r7, #4]
 800baba:	687b      	ldr	r3, [r7, #4]
 800babc:	689b      	ldr	r3, [r3, #8]
 800babe:	f023 0201 	bic.w	r2, r3, #1
 800bac2:	687b      	ldr	r3, [r7, #4]
 800bac4:	609a      	str	r2, [r3, #8]
 800bac6:	2300      	movs	r3, #0
 800bac8:	4618      	mov	r0, r3
 800baca:	370c      	adds	r7, #12
 800bacc:	46bd      	mov	sp, r7
 800bace:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bad2:	4770      	bx	lr

0800bad4 <USB_SetCurrentMode>:
 800bad4:	b580      	push	{r7, lr}
 800bad6:	b084      	sub	sp, #16
 800bad8:	af00      	add	r7, sp, #0
 800bada:	6078      	str	r0, [r7, #4]
 800badc:	460b      	mov	r3, r1
 800bade:	70fb      	strb	r3, [r7, #3]
 800bae0:	2300      	movs	r3, #0
 800bae2:	60fb      	str	r3, [r7, #12]
 800bae4:	687b      	ldr	r3, [r7, #4]
 800bae6:	68db      	ldr	r3, [r3, #12]
 800bae8:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 800baec:	687b      	ldr	r3, [r7, #4]
 800baee:	60da      	str	r2, [r3, #12]
 800baf0:	78fb      	ldrb	r3, [r7, #3]
 800baf2:	2b01      	cmp	r3, #1
 800baf4:	d115      	bne.n	800bb22 <USB_SetCurrentMode+0x4e>
 800baf6:	687b      	ldr	r3, [r7, #4]
 800baf8:	68db      	ldr	r3, [r3, #12]
 800bafa:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 800bafe:	687b      	ldr	r3, [r7, #4]
 800bb00:	60da      	str	r2, [r3, #12]
 800bb02:	2001      	movs	r0, #1
 800bb04:	f7fb fbf0 	bl	80072e8 <HAL_Delay>
 800bb08:	68fb      	ldr	r3, [r7, #12]
 800bb0a:	3301      	adds	r3, #1
 800bb0c:	60fb      	str	r3, [r7, #12]
 800bb0e:	6878      	ldr	r0, [r7, #4]
 800bb10:	f001 fa45 	bl	800cf9e <USB_GetMode>
 800bb14:	4603      	mov	r3, r0
 800bb16:	2b01      	cmp	r3, #1
 800bb18:	d01e      	beq.n	800bb58 <USB_SetCurrentMode+0x84>
 800bb1a:	68fb      	ldr	r3, [r7, #12]
 800bb1c:	2b31      	cmp	r3, #49	; 0x31
 800bb1e:	d9f0      	bls.n	800bb02 <USB_SetCurrentMode+0x2e>
 800bb20:	e01a      	b.n	800bb58 <USB_SetCurrentMode+0x84>
 800bb22:	78fb      	ldrb	r3, [r7, #3]
 800bb24:	2b00      	cmp	r3, #0
 800bb26:	d115      	bne.n	800bb54 <USB_SetCurrentMode+0x80>
 800bb28:	687b      	ldr	r3, [r7, #4]
 800bb2a:	68db      	ldr	r3, [r3, #12]
 800bb2c:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 800bb30:	687b      	ldr	r3, [r7, #4]
 800bb32:	60da      	str	r2, [r3, #12]
 800bb34:	2001      	movs	r0, #1
 800bb36:	f7fb fbd7 	bl	80072e8 <HAL_Delay>
 800bb3a:	68fb      	ldr	r3, [r7, #12]
 800bb3c:	3301      	adds	r3, #1
 800bb3e:	60fb      	str	r3, [r7, #12]
 800bb40:	6878      	ldr	r0, [r7, #4]
 800bb42:	f001 fa2c 	bl	800cf9e <USB_GetMode>
 800bb46:	4603      	mov	r3, r0
 800bb48:	2b00      	cmp	r3, #0
 800bb4a:	d005      	beq.n	800bb58 <USB_SetCurrentMode+0x84>
 800bb4c:	68fb      	ldr	r3, [r7, #12]
 800bb4e:	2b31      	cmp	r3, #49	; 0x31
 800bb50:	d9f0      	bls.n	800bb34 <USB_SetCurrentMode+0x60>
 800bb52:	e001      	b.n	800bb58 <USB_SetCurrentMode+0x84>
 800bb54:	2301      	movs	r3, #1
 800bb56:	e005      	b.n	800bb64 <USB_SetCurrentMode+0x90>
 800bb58:	68fb      	ldr	r3, [r7, #12]
 800bb5a:	2b32      	cmp	r3, #50	; 0x32
 800bb5c:	d101      	bne.n	800bb62 <USB_SetCurrentMode+0x8e>
 800bb5e:	2301      	movs	r3, #1
 800bb60:	e000      	b.n	800bb64 <USB_SetCurrentMode+0x90>
 800bb62:	2300      	movs	r3, #0
 800bb64:	4618      	mov	r0, r3
 800bb66:	3710      	adds	r7, #16
 800bb68:	46bd      	mov	sp, r7
 800bb6a:	bd80      	pop	{r7, pc}

0800bb6c <USB_DevInit>:
 800bb6c:	b084      	sub	sp, #16
 800bb6e:	b580      	push	{r7, lr}
 800bb70:	b086      	sub	sp, #24
 800bb72:	af00      	add	r7, sp, #0
 800bb74:	6078      	str	r0, [r7, #4]
 800bb76:	f107 0024 	add.w	r0, r7, #36	; 0x24
 800bb7a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800bb7e:	2300      	movs	r3, #0
 800bb80:	75fb      	strb	r3, [r7, #23]
 800bb82:	687b      	ldr	r3, [r7, #4]
 800bb84:	60fb      	str	r3, [r7, #12]
 800bb86:	2300      	movs	r3, #0
 800bb88:	613b      	str	r3, [r7, #16]
 800bb8a:	e009      	b.n	800bba0 <USB_DevInit+0x34>
 800bb8c:	687a      	ldr	r2, [r7, #4]
 800bb8e:	693b      	ldr	r3, [r7, #16]
 800bb90:	3340      	adds	r3, #64	; 0x40
 800bb92:	009b      	lsls	r3, r3, #2
 800bb94:	4413      	add	r3, r2
 800bb96:	2200      	movs	r2, #0
 800bb98:	605a      	str	r2, [r3, #4]
 800bb9a:	693b      	ldr	r3, [r7, #16]
 800bb9c:	3301      	adds	r3, #1
 800bb9e:	613b      	str	r3, [r7, #16]
 800bba0:	693b      	ldr	r3, [r7, #16]
 800bba2:	2b0e      	cmp	r3, #14
 800bba4:	d9f2      	bls.n	800bb8c <USB_DevInit+0x20>
 800bba6:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800bba8:	2b00      	cmp	r3, #0
 800bbaa:	d11c      	bne.n	800bbe6 <USB_DevInit+0x7a>
 800bbac:	68fb      	ldr	r3, [r7, #12]
 800bbae:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bbb2:	685b      	ldr	r3, [r3, #4]
 800bbb4:	68fa      	ldr	r2, [r7, #12]
 800bbb6:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800bbba:	f043 0302 	orr.w	r3, r3, #2
 800bbbe:	6053      	str	r3, [r2, #4]
 800bbc0:	687b      	ldr	r3, [r7, #4]
 800bbc2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbc4:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 800bbc8:	687b      	ldr	r3, [r7, #4]
 800bbca:	639a      	str	r2, [r3, #56]	; 0x38
 800bbcc:	687b      	ldr	r3, [r7, #4]
 800bbce:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbd0:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 800bbd4:	687b      	ldr	r3, [r7, #4]
 800bbd6:	639a      	str	r2, [r3, #56]	; 0x38
 800bbd8:	687b      	ldr	r3, [r7, #4]
 800bbda:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbdc:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 800bbe0:	687b      	ldr	r3, [r7, #4]
 800bbe2:	639a      	str	r2, [r3, #56]	; 0x38
 800bbe4:	e00b      	b.n	800bbfe <USB_DevInit+0x92>
 800bbe6:	687b      	ldr	r3, [r7, #4]
 800bbe8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbea:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 800bbee:	687b      	ldr	r3, [r7, #4]
 800bbf0:	639a      	str	r2, [r3, #56]	; 0x38
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbf6:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 800bbfa:	687b      	ldr	r3, [r7, #4]
 800bbfc:	639a      	str	r2, [r3, #56]	; 0x38
 800bbfe:	68fb      	ldr	r3, [r7, #12]
 800bc00:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800bc04:	461a      	mov	r2, r3
 800bc06:	2300      	movs	r3, #0
 800bc08:	6013      	str	r3, [r2, #0]
 800bc0a:	68fb      	ldr	r3, [r7, #12]
 800bc0c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bc10:	4619      	mov	r1, r3
 800bc12:	68fb      	ldr	r3, [r7, #12]
 800bc14:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bc18:	461a      	mov	r2, r3
 800bc1a:	680b      	ldr	r3, [r1, #0]
 800bc1c:	6013      	str	r3, [r2, #0]
 800bc1e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800bc20:	2b01      	cmp	r3, #1
 800bc22:	d10c      	bne.n	800bc3e <USB_DevInit+0xd2>
 800bc24:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800bc26:	2b00      	cmp	r3, #0
 800bc28:	d104      	bne.n	800bc34 <USB_DevInit+0xc8>
 800bc2a:	2100      	movs	r1, #0
 800bc2c:	6878      	ldr	r0, [r7, #4]
 800bc2e:	f000 f965 	bl	800befc <USB_SetDevSpeed>
 800bc32:	e008      	b.n	800bc46 <USB_DevInit+0xda>
 800bc34:	2101      	movs	r1, #1
 800bc36:	6878      	ldr	r0, [r7, #4]
 800bc38:	f000 f960 	bl	800befc <USB_SetDevSpeed>
 800bc3c:	e003      	b.n	800bc46 <USB_DevInit+0xda>
 800bc3e:	2103      	movs	r1, #3
 800bc40:	6878      	ldr	r0, [r7, #4]
 800bc42:	f000 f95b 	bl	800befc <USB_SetDevSpeed>
 800bc46:	2110      	movs	r1, #16
 800bc48:	6878      	ldr	r0, [r7, #4]
 800bc4a:	f000 f8f3 	bl	800be34 <USB_FlushTxFifo>
 800bc4e:	4603      	mov	r3, r0
 800bc50:	2b00      	cmp	r3, #0
 800bc52:	d001      	beq.n	800bc58 <USB_DevInit+0xec>
 800bc54:	2301      	movs	r3, #1
 800bc56:	75fb      	strb	r3, [r7, #23]
 800bc58:	6878      	ldr	r0, [r7, #4]
 800bc5a:	f000 f91f 	bl	800be9c <USB_FlushRxFifo>
 800bc5e:	4603      	mov	r3, r0
 800bc60:	2b00      	cmp	r3, #0
 800bc62:	d001      	beq.n	800bc68 <USB_DevInit+0xfc>
 800bc64:	2301      	movs	r3, #1
 800bc66:	75fb      	strb	r3, [r7, #23]
 800bc68:	68fb      	ldr	r3, [r7, #12]
 800bc6a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bc6e:	461a      	mov	r2, r3
 800bc70:	2300      	movs	r3, #0
 800bc72:	6113      	str	r3, [r2, #16]
 800bc74:	68fb      	ldr	r3, [r7, #12]
 800bc76:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bc7a:	461a      	mov	r2, r3
 800bc7c:	2300      	movs	r3, #0
 800bc7e:	6153      	str	r3, [r2, #20]
 800bc80:	68fb      	ldr	r3, [r7, #12]
 800bc82:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bc86:	461a      	mov	r2, r3
 800bc88:	2300      	movs	r3, #0
 800bc8a:	61d3      	str	r3, [r2, #28]
 800bc8c:	2300      	movs	r3, #0
 800bc8e:	613b      	str	r3, [r7, #16]
 800bc90:	e043      	b.n	800bd1a <USB_DevInit+0x1ae>
 800bc92:	693b      	ldr	r3, [r7, #16]
 800bc94:	015a      	lsls	r2, r3, #5
 800bc96:	68fb      	ldr	r3, [r7, #12]
 800bc98:	4413      	add	r3, r2
 800bc9a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bc9e:	681b      	ldr	r3, [r3, #0]
 800bca0:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800bca4:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800bca8:	d118      	bne.n	800bcdc <USB_DevInit+0x170>
 800bcaa:	693b      	ldr	r3, [r7, #16]
 800bcac:	2b00      	cmp	r3, #0
 800bcae:	d10a      	bne.n	800bcc6 <USB_DevInit+0x15a>
 800bcb0:	693b      	ldr	r3, [r7, #16]
 800bcb2:	015a      	lsls	r2, r3, #5
 800bcb4:	68fb      	ldr	r3, [r7, #12]
 800bcb6:	4413      	add	r3, r2
 800bcb8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bcbc:	461a      	mov	r2, r3
 800bcbe:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800bcc2:	6013      	str	r3, [r2, #0]
 800bcc4:	e013      	b.n	800bcee <USB_DevInit+0x182>
 800bcc6:	693b      	ldr	r3, [r7, #16]
 800bcc8:	015a      	lsls	r2, r3, #5
 800bcca:	68fb      	ldr	r3, [r7, #12]
 800bccc:	4413      	add	r3, r2
 800bcce:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bcd2:	461a      	mov	r2, r3
 800bcd4:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800bcd8:	6013      	str	r3, [r2, #0]
 800bcda:	e008      	b.n	800bcee <USB_DevInit+0x182>
 800bcdc:	693b      	ldr	r3, [r7, #16]
 800bcde:	015a      	lsls	r2, r3, #5
 800bce0:	68fb      	ldr	r3, [r7, #12]
 800bce2:	4413      	add	r3, r2
 800bce4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bce8:	461a      	mov	r2, r3
 800bcea:	2300      	movs	r3, #0
 800bcec:	6013      	str	r3, [r2, #0]
 800bcee:	693b      	ldr	r3, [r7, #16]
 800bcf0:	015a      	lsls	r2, r3, #5
 800bcf2:	68fb      	ldr	r3, [r7, #12]
 800bcf4:	4413      	add	r3, r2
 800bcf6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bcfa:	461a      	mov	r2, r3
 800bcfc:	2300      	movs	r3, #0
 800bcfe:	6113      	str	r3, [r2, #16]
 800bd00:	693b      	ldr	r3, [r7, #16]
 800bd02:	015a      	lsls	r2, r3, #5
 800bd04:	68fb      	ldr	r3, [r7, #12]
 800bd06:	4413      	add	r3, r2
 800bd08:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bd0c:	461a      	mov	r2, r3
 800bd0e:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 800bd12:	6093      	str	r3, [r2, #8]
 800bd14:	693b      	ldr	r3, [r7, #16]
 800bd16:	3301      	adds	r3, #1
 800bd18:	613b      	str	r3, [r7, #16]
 800bd1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bd1c:	693a      	ldr	r2, [r7, #16]
 800bd1e:	429a      	cmp	r2, r3
 800bd20:	d3b7      	bcc.n	800bc92 <USB_DevInit+0x126>
 800bd22:	2300      	movs	r3, #0
 800bd24:	613b      	str	r3, [r7, #16]
 800bd26:	e043      	b.n	800bdb0 <USB_DevInit+0x244>
 800bd28:	693b      	ldr	r3, [r7, #16]
 800bd2a:	015a      	lsls	r2, r3, #5
 800bd2c:	68fb      	ldr	r3, [r7, #12]
 800bd2e:	4413      	add	r3, r2
 800bd30:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800bd34:	681b      	ldr	r3, [r3, #0]
 800bd36:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800bd3a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800bd3e:	d118      	bne.n	800bd72 <USB_DevInit+0x206>
 800bd40:	693b      	ldr	r3, [r7, #16]
 800bd42:	2b00      	cmp	r3, #0
 800bd44:	d10a      	bne.n	800bd5c <USB_DevInit+0x1f0>
 800bd46:	693b      	ldr	r3, [r7, #16]
 800bd48:	015a      	lsls	r2, r3, #5
 800bd4a:	68fb      	ldr	r3, [r7, #12]
 800bd4c:	4413      	add	r3, r2
 800bd4e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800bd52:	461a      	mov	r2, r3
 800bd54:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800bd58:	6013      	str	r3, [r2, #0]
 800bd5a:	e013      	b.n	800bd84 <USB_DevInit+0x218>
 800bd5c:	693b      	ldr	r3, [r7, #16]
 800bd5e:	015a      	lsls	r2, r3, #5
 800bd60:	68fb      	ldr	r3, [r7, #12]
 800bd62:	4413      	add	r3, r2
 800bd64:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800bd68:	461a      	mov	r2, r3
 800bd6a:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800bd6e:	6013      	str	r3, [r2, #0]
 800bd70:	e008      	b.n	800bd84 <USB_DevInit+0x218>
 800bd72:	693b      	ldr	r3, [r7, #16]
 800bd74:	015a      	lsls	r2, r3, #5
 800bd76:	68fb      	ldr	r3, [r7, #12]
 800bd78:	4413      	add	r3, r2
 800bd7a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800bd7e:	461a      	mov	r2, r3
 800bd80:	2300      	movs	r3, #0
 800bd82:	6013      	str	r3, [r2, #0]
 800bd84:	693b      	ldr	r3, [r7, #16]
 800bd86:	015a      	lsls	r2, r3, #5
 800bd88:	68fb      	ldr	r3, [r7, #12]
 800bd8a:	4413      	add	r3, r2
 800bd8c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800bd90:	461a      	mov	r2, r3
 800bd92:	2300      	movs	r3, #0
 800bd94:	6113      	str	r3, [r2, #16]
 800bd96:	693b      	ldr	r3, [r7, #16]
 800bd98:	015a      	lsls	r2, r3, #5
 800bd9a:	68fb      	ldr	r3, [r7, #12]
 800bd9c:	4413      	add	r3, r2
 800bd9e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800bda2:	461a      	mov	r2, r3
 800bda4:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 800bda8:	6093      	str	r3, [r2, #8]
 800bdaa:	693b      	ldr	r3, [r7, #16]
 800bdac:	3301      	adds	r3, #1
 800bdae:	613b      	str	r3, [r7, #16]
 800bdb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bdb2:	693a      	ldr	r2, [r7, #16]
 800bdb4:	429a      	cmp	r2, r3
 800bdb6:	d3b7      	bcc.n	800bd28 <USB_DevInit+0x1bc>
 800bdb8:	68fb      	ldr	r3, [r7, #12]
 800bdba:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bdbe:	691b      	ldr	r3, [r3, #16]
 800bdc0:	68fa      	ldr	r2, [r7, #12]
 800bdc2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800bdc6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800bdca:	6113      	str	r3, [r2, #16]
 800bdcc:	687b      	ldr	r3, [r7, #4]
 800bdce:	2200      	movs	r2, #0
 800bdd0:	619a      	str	r2, [r3, #24]
 800bdd2:	687b      	ldr	r3, [r7, #4]
 800bdd4:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 800bdd8:	615a      	str	r2, [r3, #20]
 800bdda:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800bddc:	2b00      	cmp	r3, #0
 800bdde:	d105      	bne.n	800bdec <USB_DevInit+0x280>
 800bde0:	687b      	ldr	r3, [r7, #4]
 800bde2:	699b      	ldr	r3, [r3, #24]
 800bde4:	f043 0210 	orr.w	r2, r3, #16
 800bde8:	687b      	ldr	r3, [r7, #4]
 800bdea:	619a      	str	r2, [r3, #24]
 800bdec:	687b      	ldr	r3, [r7, #4]
 800bdee:	699a      	ldr	r2, [r3, #24]
 800bdf0:	4b0f      	ldr	r3, [pc, #60]	; (800be30 <USB_DevInit+0x2c4>)
 800bdf2:	4313      	orrs	r3, r2
 800bdf4:	687a      	ldr	r2, [r7, #4]
 800bdf6:	6193      	str	r3, [r2, #24]
 800bdf8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800bdfa:	2b00      	cmp	r3, #0
 800bdfc:	d005      	beq.n	800be0a <USB_DevInit+0x29e>
 800bdfe:	687b      	ldr	r3, [r7, #4]
 800be00:	699b      	ldr	r3, [r3, #24]
 800be02:	f043 0208 	orr.w	r2, r3, #8
 800be06:	687b      	ldr	r3, [r7, #4]
 800be08:	619a      	str	r2, [r3, #24]
 800be0a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800be0c:	2b01      	cmp	r3, #1
 800be0e:	d107      	bne.n	800be20 <USB_DevInit+0x2b4>
 800be10:	687b      	ldr	r3, [r7, #4]
 800be12:	699b      	ldr	r3, [r3, #24]
 800be14:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800be18:	f043 0304 	orr.w	r3, r3, #4
 800be1c:	687a      	ldr	r2, [r7, #4]
 800be1e:	6193      	str	r3, [r2, #24]
 800be20:	7dfb      	ldrb	r3, [r7, #23]
 800be22:	4618      	mov	r0, r3
 800be24:	3718      	adds	r7, #24
 800be26:	46bd      	mov	sp, r7
 800be28:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800be2c:	b004      	add	sp, #16
 800be2e:	4770      	bx	lr
 800be30:	803c3800 	.word	0x803c3800

0800be34 <USB_FlushTxFifo>:
 800be34:	b480      	push	{r7}
 800be36:	b085      	sub	sp, #20
 800be38:	af00      	add	r7, sp, #0
 800be3a:	6078      	str	r0, [r7, #4]
 800be3c:	6039      	str	r1, [r7, #0]
 800be3e:	2300      	movs	r3, #0
 800be40:	60fb      	str	r3, [r7, #12]
 800be42:	68fb      	ldr	r3, [r7, #12]
 800be44:	3301      	adds	r3, #1
 800be46:	60fb      	str	r3, [r7, #12]
 800be48:	68fb      	ldr	r3, [r7, #12]
 800be4a:	4a13      	ldr	r2, [pc, #76]	; (800be98 <USB_FlushTxFifo+0x64>)
 800be4c:	4293      	cmp	r3, r2
 800be4e:	d901      	bls.n	800be54 <USB_FlushTxFifo+0x20>
 800be50:	2303      	movs	r3, #3
 800be52:	e01b      	b.n	800be8c <USB_FlushTxFifo+0x58>
 800be54:	687b      	ldr	r3, [r7, #4]
 800be56:	691b      	ldr	r3, [r3, #16]
 800be58:	2b00      	cmp	r3, #0
 800be5a:	daf2      	bge.n	800be42 <USB_FlushTxFifo+0xe>
 800be5c:	2300      	movs	r3, #0
 800be5e:	60fb      	str	r3, [r7, #12]
 800be60:	683b      	ldr	r3, [r7, #0]
 800be62:	019b      	lsls	r3, r3, #6
 800be64:	f043 0220 	orr.w	r2, r3, #32
 800be68:	687b      	ldr	r3, [r7, #4]
 800be6a:	611a      	str	r2, [r3, #16]
 800be6c:	68fb      	ldr	r3, [r7, #12]
 800be6e:	3301      	adds	r3, #1
 800be70:	60fb      	str	r3, [r7, #12]
 800be72:	68fb      	ldr	r3, [r7, #12]
 800be74:	4a08      	ldr	r2, [pc, #32]	; (800be98 <USB_FlushTxFifo+0x64>)
 800be76:	4293      	cmp	r3, r2
 800be78:	d901      	bls.n	800be7e <USB_FlushTxFifo+0x4a>
 800be7a:	2303      	movs	r3, #3
 800be7c:	e006      	b.n	800be8c <USB_FlushTxFifo+0x58>
 800be7e:	687b      	ldr	r3, [r7, #4]
 800be80:	691b      	ldr	r3, [r3, #16]
 800be82:	f003 0320 	and.w	r3, r3, #32
 800be86:	2b20      	cmp	r3, #32
 800be88:	d0f0      	beq.n	800be6c <USB_FlushTxFifo+0x38>
 800be8a:	2300      	movs	r3, #0
 800be8c:	4618      	mov	r0, r3
 800be8e:	3714      	adds	r7, #20
 800be90:	46bd      	mov	sp, r7
 800be92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be96:	4770      	bx	lr
 800be98:	00030d40 	.word	0x00030d40

0800be9c <USB_FlushRxFifo>:
 800be9c:	b480      	push	{r7}
 800be9e:	b085      	sub	sp, #20
 800bea0:	af00      	add	r7, sp, #0
 800bea2:	6078      	str	r0, [r7, #4]
 800bea4:	2300      	movs	r3, #0
 800bea6:	60fb      	str	r3, [r7, #12]
 800bea8:	68fb      	ldr	r3, [r7, #12]
 800beaa:	3301      	adds	r3, #1
 800beac:	60fb      	str	r3, [r7, #12]
 800beae:	68fb      	ldr	r3, [r7, #12]
 800beb0:	4a11      	ldr	r2, [pc, #68]	; (800bef8 <USB_FlushRxFifo+0x5c>)
 800beb2:	4293      	cmp	r3, r2
 800beb4:	d901      	bls.n	800beba <USB_FlushRxFifo+0x1e>
 800beb6:	2303      	movs	r3, #3
 800beb8:	e018      	b.n	800beec <USB_FlushRxFifo+0x50>
 800beba:	687b      	ldr	r3, [r7, #4]
 800bebc:	691b      	ldr	r3, [r3, #16]
 800bebe:	2b00      	cmp	r3, #0
 800bec0:	daf2      	bge.n	800bea8 <USB_FlushRxFifo+0xc>
 800bec2:	2300      	movs	r3, #0
 800bec4:	60fb      	str	r3, [r7, #12]
 800bec6:	687b      	ldr	r3, [r7, #4]
 800bec8:	2210      	movs	r2, #16
 800beca:	611a      	str	r2, [r3, #16]
 800becc:	68fb      	ldr	r3, [r7, #12]
 800bece:	3301      	adds	r3, #1
 800bed0:	60fb      	str	r3, [r7, #12]
 800bed2:	68fb      	ldr	r3, [r7, #12]
 800bed4:	4a08      	ldr	r2, [pc, #32]	; (800bef8 <USB_FlushRxFifo+0x5c>)
 800bed6:	4293      	cmp	r3, r2
 800bed8:	d901      	bls.n	800bede <USB_FlushRxFifo+0x42>
 800beda:	2303      	movs	r3, #3
 800bedc:	e006      	b.n	800beec <USB_FlushRxFifo+0x50>
 800bede:	687b      	ldr	r3, [r7, #4]
 800bee0:	691b      	ldr	r3, [r3, #16]
 800bee2:	f003 0310 	and.w	r3, r3, #16
 800bee6:	2b10      	cmp	r3, #16
 800bee8:	d0f0      	beq.n	800becc <USB_FlushRxFifo+0x30>
 800beea:	2300      	movs	r3, #0
 800beec:	4618      	mov	r0, r3
 800beee:	3714      	adds	r7, #20
 800bef0:	46bd      	mov	sp, r7
 800bef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bef6:	4770      	bx	lr
 800bef8:	00030d40 	.word	0x00030d40

0800befc <USB_SetDevSpeed>:
 800befc:	b480      	push	{r7}
 800befe:	b085      	sub	sp, #20
 800bf00:	af00      	add	r7, sp, #0
 800bf02:	6078      	str	r0, [r7, #4]
 800bf04:	460b      	mov	r3, r1
 800bf06:	70fb      	strb	r3, [r7, #3]
 800bf08:	687b      	ldr	r3, [r7, #4]
 800bf0a:	60fb      	str	r3, [r7, #12]
 800bf0c:	68fb      	ldr	r3, [r7, #12]
 800bf0e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bf12:	681a      	ldr	r2, [r3, #0]
 800bf14:	78fb      	ldrb	r3, [r7, #3]
 800bf16:	68f9      	ldr	r1, [r7, #12]
 800bf18:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800bf1c:	4313      	orrs	r3, r2
 800bf1e:	600b      	str	r3, [r1, #0]
 800bf20:	2300      	movs	r3, #0
 800bf22:	4618      	mov	r0, r3
 800bf24:	3714      	adds	r7, #20
 800bf26:	46bd      	mov	sp, r7
 800bf28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf2c:	4770      	bx	lr

0800bf2e <USB_GetDevSpeed>:
 800bf2e:	b480      	push	{r7}
 800bf30:	b087      	sub	sp, #28
 800bf32:	af00      	add	r7, sp, #0
 800bf34:	6078      	str	r0, [r7, #4]
 800bf36:	687b      	ldr	r3, [r7, #4]
 800bf38:	613b      	str	r3, [r7, #16]
 800bf3a:	693b      	ldr	r3, [r7, #16]
 800bf3c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bf40:	689b      	ldr	r3, [r3, #8]
 800bf42:	f003 0306 	and.w	r3, r3, #6
 800bf46:	60fb      	str	r3, [r7, #12]
 800bf48:	68fb      	ldr	r3, [r7, #12]
 800bf4a:	2b00      	cmp	r3, #0
 800bf4c:	d102      	bne.n	800bf54 <USB_GetDevSpeed+0x26>
 800bf4e:	2300      	movs	r3, #0
 800bf50:	75fb      	strb	r3, [r7, #23]
 800bf52:	e00a      	b.n	800bf6a <USB_GetDevSpeed+0x3c>
 800bf54:	68fb      	ldr	r3, [r7, #12]
 800bf56:	2b02      	cmp	r3, #2
 800bf58:	d002      	beq.n	800bf60 <USB_GetDevSpeed+0x32>
 800bf5a:	68fb      	ldr	r3, [r7, #12]
 800bf5c:	2b06      	cmp	r3, #6
 800bf5e:	d102      	bne.n	800bf66 <USB_GetDevSpeed+0x38>
 800bf60:	2302      	movs	r3, #2
 800bf62:	75fb      	strb	r3, [r7, #23]
 800bf64:	e001      	b.n	800bf6a <USB_GetDevSpeed+0x3c>
 800bf66:	230f      	movs	r3, #15
 800bf68:	75fb      	strb	r3, [r7, #23]
 800bf6a:	7dfb      	ldrb	r3, [r7, #23]
 800bf6c:	4618      	mov	r0, r3
 800bf6e:	371c      	adds	r7, #28
 800bf70:	46bd      	mov	sp, r7
 800bf72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf76:	4770      	bx	lr

0800bf78 <USB_ActivateEndpoint>:
 800bf78:	b480      	push	{r7}
 800bf7a:	b085      	sub	sp, #20
 800bf7c:	af00      	add	r7, sp, #0
 800bf7e:	6078      	str	r0, [r7, #4]
 800bf80:	6039      	str	r1, [r7, #0]
 800bf82:	687b      	ldr	r3, [r7, #4]
 800bf84:	60fb      	str	r3, [r7, #12]
 800bf86:	683b      	ldr	r3, [r7, #0]
 800bf88:	781b      	ldrb	r3, [r3, #0]
 800bf8a:	60bb      	str	r3, [r7, #8]
 800bf8c:	683b      	ldr	r3, [r7, #0]
 800bf8e:	785b      	ldrb	r3, [r3, #1]
 800bf90:	2b01      	cmp	r3, #1
 800bf92:	d13a      	bne.n	800c00a <USB_ActivateEndpoint+0x92>
 800bf94:	68fb      	ldr	r3, [r7, #12]
 800bf96:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800bf9a:	69da      	ldr	r2, [r3, #28]
 800bf9c:	683b      	ldr	r3, [r7, #0]
 800bf9e:	781b      	ldrb	r3, [r3, #0]
 800bfa0:	f003 030f 	and.w	r3, r3, #15
 800bfa4:	2101      	movs	r1, #1
 800bfa6:	fa01 f303 	lsl.w	r3, r1, r3
 800bfaa:	b29b      	uxth	r3, r3
 800bfac:	68f9      	ldr	r1, [r7, #12]
 800bfae:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800bfb2:	4313      	orrs	r3, r2
 800bfb4:	61cb      	str	r3, [r1, #28]
 800bfb6:	68bb      	ldr	r3, [r7, #8]
 800bfb8:	015a      	lsls	r2, r3, #5
 800bfba:	68fb      	ldr	r3, [r7, #12]
 800bfbc:	4413      	add	r3, r2
 800bfbe:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bfc2:	681b      	ldr	r3, [r3, #0]
 800bfc4:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800bfc8:	2b00      	cmp	r3, #0
 800bfca:	d155      	bne.n	800c078 <USB_ActivateEndpoint+0x100>
 800bfcc:	68bb      	ldr	r3, [r7, #8]
 800bfce:	015a      	lsls	r2, r3, #5
 800bfd0:	68fb      	ldr	r3, [r7, #12]
 800bfd2:	4413      	add	r3, r2
 800bfd4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800bfd8:	681a      	ldr	r2, [r3, #0]
 800bfda:	683b      	ldr	r3, [r7, #0]
 800bfdc:	68db      	ldr	r3, [r3, #12]
 800bfde:	f3c3 010a 	ubfx	r1, r3, #0, #11
 800bfe2:	683b      	ldr	r3, [r7, #0]
 800bfe4:	791b      	ldrb	r3, [r3, #4]
 800bfe6:	049b      	lsls	r3, r3, #18
 800bfe8:	4319      	orrs	r1, r3
 800bfea:	68bb      	ldr	r3, [r7, #8]
 800bfec:	059b      	lsls	r3, r3, #22
 800bfee:	430b      	orrs	r3, r1
 800bff0:	4313      	orrs	r3, r2
 800bff2:	68ba      	ldr	r2, [r7, #8]
 800bff4:	0151      	lsls	r1, r2, #5
 800bff6:	68fa      	ldr	r2, [r7, #12]
 800bff8:	440a      	add	r2, r1
 800bffa:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800bffe:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c002:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c006:	6013      	str	r3, [r2, #0]
 800c008:	e036      	b.n	800c078 <USB_ActivateEndpoint+0x100>
 800c00a:	68fb      	ldr	r3, [r7, #12]
 800c00c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c010:	69da      	ldr	r2, [r3, #28]
 800c012:	683b      	ldr	r3, [r7, #0]
 800c014:	781b      	ldrb	r3, [r3, #0]
 800c016:	f003 030f 	and.w	r3, r3, #15
 800c01a:	2101      	movs	r1, #1
 800c01c:	fa01 f303 	lsl.w	r3, r1, r3
 800c020:	041b      	lsls	r3, r3, #16
 800c022:	68f9      	ldr	r1, [r7, #12]
 800c024:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800c028:	4313      	orrs	r3, r2
 800c02a:	61cb      	str	r3, [r1, #28]
 800c02c:	68bb      	ldr	r3, [r7, #8]
 800c02e:	015a      	lsls	r2, r3, #5
 800c030:	68fb      	ldr	r3, [r7, #12]
 800c032:	4413      	add	r3, r2
 800c034:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c038:	681b      	ldr	r3, [r3, #0]
 800c03a:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 800c03e:	2b00      	cmp	r3, #0
 800c040:	d11a      	bne.n	800c078 <USB_ActivateEndpoint+0x100>
 800c042:	68bb      	ldr	r3, [r7, #8]
 800c044:	015a      	lsls	r2, r3, #5
 800c046:	68fb      	ldr	r3, [r7, #12]
 800c048:	4413      	add	r3, r2
 800c04a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c04e:	681a      	ldr	r2, [r3, #0]
 800c050:	683b      	ldr	r3, [r7, #0]
 800c052:	68db      	ldr	r3, [r3, #12]
 800c054:	f3c3 010a 	ubfx	r1, r3, #0, #11
 800c058:	683b      	ldr	r3, [r7, #0]
 800c05a:	791b      	ldrb	r3, [r3, #4]
 800c05c:	049b      	lsls	r3, r3, #18
 800c05e:	430b      	orrs	r3, r1
 800c060:	4313      	orrs	r3, r2
 800c062:	68ba      	ldr	r2, [r7, #8]
 800c064:	0151      	lsls	r1, r2, #5
 800c066:	68fa      	ldr	r2, [r7, #12]
 800c068:	440a      	add	r2, r1
 800c06a:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c06e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c072:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800c076:	6013      	str	r3, [r2, #0]
 800c078:	2300      	movs	r3, #0
 800c07a:	4618      	mov	r0, r3
 800c07c:	3714      	adds	r7, #20
 800c07e:	46bd      	mov	sp, r7
 800c080:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c084:	4770      	bx	lr
	...

0800c088 <USB_DeactivateEndpoint>:
 800c088:	b480      	push	{r7}
 800c08a:	b085      	sub	sp, #20
 800c08c:	af00      	add	r7, sp, #0
 800c08e:	6078      	str	r0, [r7, #4]
 800c090:	6039      	str	r1, [r7, #0]
 800c092:	687b      	ldr	r3, [r7, #4]
 800c094:	60fb      	str	r3, [r7, #12]
 800c096:	683b      	ldr	r3, [r7, #0]
 800c098:	781b      	ldrb	r3, [r3, #0]
 800c09a:	60bb      	str	r3, [r7, #8]
 800c09c:	683b      	ldr	r3, [r7, #0]
 800c09e:	785b      	ldrb	r3, [r3, #1]
 800c0a0:	2b01      	cmp	r3, #1
 800c0a2:	d161      	bne.n	800c168 <USB_DeactivateEndpoint+0xe0>
 800c0a4:	68bb      	ldr	r3, [r7, #8]
 800c0a6:	015a      	lsls	r2, r3, #5
 800c0a8:	68fb      	ldr	r3, [r7, #12]
 800c0aa:	4413      	add	r3, r2
 800c0ac:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c0b0:	681b      	ldr	r3, [r3, #0]
 800c0b2:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800c0b6:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800c0ba:	d11f      	bne.n	800c0fc <USB_DeactivateEndpoint+0x74>
 800c0bc:	68bb      	ldr	r3, [r7, #8]
 800c0be:	015a      	lsls	r2, r3, #5
 800c0c0:	68fb      	ldr	r3, [r7, #12]
 800c0c2:	4413      	add	r3, r2
 800c0c4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c0c8:	681b      	ldr	r3, [r3, #0]
 800c0ca:	68ba      	ldr	r2, [r7, #8]
 800c0cc:	0151      	lsls	r1, r2, #5
 800c0ce:	68fa      	ldr	r2, [r7, #12]
 800c0d0:	440a      	add	r2, r1
 800c0d2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c0d6:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800c0da:	6013      	str	r3, [r2, #0]
 800c0dc:	68bb      	ldr	r3, [r7, #8]
 800c0de:	015a      	lsls	r2, r3, #5
 800c0e0:	68fb      	ldr	r3, [r7, #12]
 800c0e2:	4413      	add	r3, r2
 800c0e4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c0e8:	681b      	ldr	r3, [r3, #0]
 800c0ea:	68ba      	ldr	r2, [r7, #8]
 800c0ec:	0151      	lsls	r1, r2, #5
 800c0ee:	68fa      	ldr	r2, [r7, #12]
 800c0f0:	440a      	add	r2, r1
 800c0f2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c0f6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800c0fa:	6013      	str	r3, [r2, #0]
 800c0fc:	68fb      	ldr	r3, [r7, #12]
 800c0fe:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c102:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800c104:	683b      	ldr	r3, [r7, #0]
 800c106:	781b      	ldrb	r3, [r3, #0]
 800c108:	f003 030f 	and.w	r3, r3, #15
 800c10c:	2101      	movs	r1, #1
 800c10e:	fa01 f303 	lsl.w	r3, r1, r3
 800c112:	b29b      	uxth	r3, r3
 800c114:	43db      	mvns	r3, r3
 800c116:	68f9      	ldr	r1, [r7, #12]
 800c118:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800c11c:	4013      	ands	r3, r2
 800c11e:	63cb      	str	r3, [r1, #60]	; 0x3c
 800c120:	68fb      	ldr	r3, [r7, #12]
 800c122:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c126:	69da      	ldr	r2, [r3, #28]
 800c128:	683b      	ldr	r3, [r7, #0]
 800c12a:	781b      	ldrb	r3, [r3, #0]
 800c12c:	f003 030f 	and.w	r3, r3, #15
 800c130:	2101      	movs	r1, #1
 800c132:	fa01 f303 	lsl.w	r3, r1, r3
 800c136:	b29b      	uxth	r3, r3
 800c138:	43db      	mvns	r3, r3
 800c13a:	68f9      	ldr	r1, [r7, #12]
 800c13c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800c140:	4013      	ands	r3, r2
 800c142:	61cb      	str	r3, [r1, #28]
 800c144:	68bb      	ldr	r3, [r7, #8]
 800c146:	015a      	lsls	r2, r3, #5
 800c148:	68fb      	ldr	r3, [r7, #12]
 800c14a:	4413      	add	r3, r2
 800c14c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c150:	681a      	ldr	r2, [r3, #0]
 800c152:	68bb      	ldr	r3, [r7, #8]
 800c154:	0159      	lsls	r1, r3, #5
 800c156:	68fb      	ldr	r3, [r7, #12]
 800c158:	440b      	add	r3, r1
 800c15a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c15e:	4619      	mov	r1, r3
 800c160:	4b35      	ldr	r3, [pc, #212]	; (800c238 <USB_DeactivateEndpoint+0x1b0>)
 800c162:	4013      	ands	r3, r2
 800c164:	600b      	str	r3, [r1, #0]
 800c166:	e060      	b.n	800c22a <USB_DeactivateEndpoint+0x1a2>
 800c168:	68bb      	ldr	r3, [r7, #8]
 800c16a:	015a      	lsls	r2, r3, #5
 800c16c:	68fb      	ldr	r3, [r7, #12]
 800c16e:	4413      	add	r3, r2
 800c170:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c174:	681b      	ldr	r3, [r3, #0]
 800c176:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800c17a:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800c17e:	d11f      	bne.n	800c1c0 <USB_DeactivateEndpoint+0x138>
 800c180:	68bb      	ldr	r3, [r7, #8]
 800c182:	015a      	lsls	r2, r3, #5
 800c184:	68fb      	ldr	r3, [r7, #12]
 800c186:	4413      	add	r3, r2
 800c188:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c18c:	681b      	ldr	r3, [r3, #0]
 800c18e:	68ba      	ldr	r2, [r7, #8]
 800c190:	0151      	lsls	r1, r2, #5
 800c192:	68fa      	ldr	r2, [r7, #12]
 800c194:	440a      	add	r2, r1
 800c196:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c19a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800c19e:	6013      	str	r3, [r2, #0]
 800c1a0:	68bb      	ldr	r3, [r7, #8]
 800c1a2:	015a      	lsls	r2, r3, #5
 800c1a4:	68fb      	ldr	r3, [r7, #12]
 800c1a6:	4413      	add	r3, r2
 800c1a8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c1ac:	681b      	ldr	r3, [r3, #0]
 800c1ae:	68ba      	ldr	r2, [r7, #8]
 800c1b0:	0151      	lsls	r1, r2, #5
 800c1b2:	68fa      	ldr	r2, [r7, #12]
 800c1b4:	440a      	add	r2, r1
 800c1b6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c1ba:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800c1be:	6013      	str	r3, [r2, #0]
 800c1c0:	68fb      	ldr	r3, [r7, #12]
 800c1c2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c1c6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800c1c8:	683b      	ldr	r3, [r7, #0]
 800c1ca:	781b      	ldrb	r3, [r3, #0]
 800c1cc:	f003 030f 	and.w	r3, r3, #15
 800c1d0:	2101      	movs	r1, #1
 800c1d2:	fa01 f303 	lsl.w	r3, r1, r3
 800c1d6:	041b      	lsls	r3, r3, #16
 800c1d8:	43db      	mvns	r3, r3
 800c1da:	68f9      	ldr	r1, [r7, #12]
 800c1dc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800c1e0:	4013      	ands	r3, r2
 800c1e2:	63cb      	str	r3, [r1, #60]	; 0x3c
 800c1e4:	68fb      	ldr	r3, [r7, #12]
 800c1e6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c1ea:	69da      	ldr	r2, [r3, #28]
 800c1ec:	683b      	ldr	r3, [r7, #0]
 800c1ee:	781b      	ldrb	r3, [r3, #0]
 800c1f0:	f003 030f 	and.w	r3, r3, #15
 800c1f4:	2101      	movs	r1, #1
 800c1f6:	fa01 f303 	lsl.w	r3, r1, r3
 800c1fa:	041b      	lsls	r3, r3, #16
 800c1fc:	43db      	mvns	r3, r3
 800c1fe:	68f9      	ldr	r1, [r7, #12]
 800c200:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800c204:	4013      	ands	r3, r2
 800c206:	61cb      	str	r3, [r1, #28]
 800c208:	68bb      	ldr	r3, [r7, #8]
 800c20a:	015a      	lsls	r2, r3, #5
 800c20c:	68fb      	ldr	r3, [r7, #12]
 800c20e:	4413      	add	r3, r2
 800c210:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c214:	681a      	ldr	r2, [r3, #0]
 800c216:	68bb      	ldr	r3, [r7, #8]
 800c218:	0159      	lsls	r1, r3, #5
 800c21a:	68fb      	ldr	r3, [r7, #12]
 800c21c:	440b      	add	r3, r1
 800c21e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c222:	4619      	mov	r1, r3
 800c224:	4b05      	ldr	r3, [pc, #20]	; (800c23c <USB_DeactivateEndpoint+0x1b4>)
 800c226:	4013      	ands	r3, r2
 800c228:	600b      	str	r3, [r1, #0]
 800c22a:	2300      	movs	r3, #0
 800c22c:	4618      	mov	r0, r3
 800c22e:	3714      	adds	r7, #20
 800c230:	46bd      	mov	sp, r7
 800c232:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c236:	4770      	bx	lr
 800c238:	ec337800 	.word	0xec337800
 800c23c:	eff37800 	.word	0xeff37800

0800c240 <USB_EPStartXfer>:
 800c240:	b580      	push	{r7, lr}
 800c242:	b08a      	sub	sp, #40	; 0x28
 800c244:	af02      	add	r7, sp, #8
 800c246:	60f8      	str	r0, [r7, #12]
 800c248:	60b9      	str	r1, [r7, #8]
 800c24a:	4613      	mov	r3, r2
 800c24c:	71fb      	strb	r3, [r7, #7]
 800c24e:	68fb      	ldr	r3, [r7, #12]
 800c250:	61fb      	str	r3, [r7, #28]
 800c252:	68bb      	ldr	r3, [r7, #8]
 800c254:	781b      	ldrb	r3, [r3, #0]
 800c256:	61bb      	str	r3, [r7, #24]
 800c258:	68bb      	ldr	r3, [r7, #8]
 800c25a:	785b      	ldrb	r3, [r3, #1]
 800c25c:	2b01      	cmp	r3, #1
 800c25e:	f040 815c 	bne.w	800c51a <USB_EPStartXfer+0x2da>
 800c262:	68bb      	ldr	r3, [r7, #8]
 800c264:	699b      	ldr	r3, [r3, #24]
 800c266:	2b00      	cmp	r3, #0
 800c268:	d132      	bne.n	800c2d0 <USB_EPStartXfer+0x90>
 800c26a:	69bb      	ldr	r3, [r7, #24]
 800c26c:	015a      	lsls	r2, r3, #5
 800c26e:	69fb      	ldr	r3, [r7, #28]
 800c270:	4413      	add	r3, r2
 800c272:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c276:	691b      	ldr	r3, [r3, #16]
 800c278:	69ba      	ldr	r2, [r7, #24]
 800c27a:	0151      	lsls	r1, r2, #5
 800c27c:	69fa      	ldr	r2, [r7, #28]
 800c27e:	440a      	add	r2, r1
 800c280:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c284:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800c288:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 800c28c:	6113      	str	r3, [r2, #16]
 800c28e:	69bb      	ldr	r3, [r7, #24]
 800c290:	015a      	lsls	r2, r3, #5
 800c292:	69fb      	ldr	r3, [r7, #28]
 800c294:	4413      	add	r3, r2
 800c296:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c29a:	691b      	ldr	r3, [r3, #16]
 800c29c:	69ba      	ldr	r2, [r7, #24]
 800c29e:	0151      	lsls	r1, r2, #5
 800c2a0:	69fa      	ldr	r2, [r7, #28]
 800c2a2:	440a      	add	r2, r1
 800c2a4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c2a8:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800c2ac:	6113      	str	r3, [r2, #16]
 800c2ae:	69bb      	ldr	r3, [r7, #24]
 800c2b0:	015a      	lsls	r2, r3, #5
 800c2b2:	69fb      	ldr	r3, [r7, #28]
 800c2b4:	4413      	add	r3, r2
 800c2b6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c2ba:	691b      	ldr	r3, [r3, #16]
 800c2bc:	69ba      	ldr	r2, [r7, #24]
 800c2be:	0151      	lsls	r1, r2, #5
 800c2c0:	69fa      	ldr	r2, [r7, #28]
 800c2c2:	440a      	add	r2, r1
 800c2c4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c2c8:	0cdb      	lsrs	r3, r3, #19
 800c2ca:	04db      	lsls	r3, r3, #19
 800c2cc:	6113      	str	r3, [r2, #16]
 800c2ce:	e074      	b.n	800c3ba <USB_EPStartXfer+0x17a>
 800c2d0:	69bb      	ldr	r3, [r7, #24]
 800c2d2:	015a      	lsls	r2, r3, #5
 800c2d4:	69fb      	ldr	r3, [r7, #28]
 800c2d6:	4413      	add	r3, r2
 800c2d8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c2dc:	691b      	ldr	r3, [r3, #16]
 800c2de:	69ba      	ldr	r2, [r7, #24]
 800c2e0:	0151      	lsls	r1, r2, #5
 800c2e2:	69fa      	ldr	r2, [r7, #28]
 800c2e4:	440a      	add	r2, r1
 800c2e6:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c2ea:	0cdb      	lsrs	r3, r3, #19
 800c2ec:	04db      	lsls	r3, r3, #19
 800c2ee:	6113      	str	r3, [r2, #16]
 800c2f0:	69bb      	ldr	r3, [r7, #24]
 800c2f2:	015a      	lsls	r2, r3, #5
 800c2f4:	69fb      	ldr	r3, [r7, #28]
 800c2f6:	4413      	add	r3, r2
 800c2f8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c2fc:	691b      	ldr	r3, [r3, #16]
 800c2fe:	69ba      	ldr	r2, [r7, #24]
 800c300:	0151      	lsls	r1, r2, #5
 800c302:	69fa      	ldr	r2, [r7, #28]
 800c304:	440a      	add	r2, r1
 800c306:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c30a:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800c30e:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 800c312:	6113      	str	r3, [r2, #16]
 800c314:	69bb      	ldr	r3, [r7, #24]
 800c316:	015a      	lsls	r2, r3, #5
 800c318:	69fb      	ldr	r3, [r7, #28]
 800c31a:	4413      	add	r3, r2
 800c31c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c320:	691a      	ldr	r2, [r3, #16]
 800c322:	68bb      	ldr	r3, [r7, #8]
 800c324:	6999      	ldr	r1, [r3, #24]
 800c326:	68bb      	ldr	r3, [r7, #8]
 800c328:	68db      	ldr	r3, [r3, #12]
 800c32a:	440b      	add	r3, r1
 800c32c:	1e59      	subs	r1, r3, #1
 800c32e:	68bb      	ldr	r3, [r7, #8]
 800c330:	68db      	ldr	r3, [r3, #12]
 800c332:	fbb1 f3f3 	udiv	r3, r1, r3
 800c336:	04d9      	lsls	r1, r3, #19
 800c338:	4b9d      	ldr	r3, [pc, #628]	; (800c5b0 <USB_EPStartXfer+0x370>)
 800c33a:	400b      	ands	r3, r1
 800c33c:	69b9      	ldr	r1, [r7, #24]
 800c33e:	0148      	lsls	r0, r1, #5
 800c340:	69f9      	ldr	r1, [r7, #28]
 800c342:	4401      	add	r1, r0
 800c344:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 800c348:	4313      	orrs	r3, r2
 800c34a:	610b      	str	r3, [r1, #16]
 800c34c:	69bb      	ldr	r3, [r7, #24]
 800c34e:	015a      	lsls	r2, r3, #5
 800c350:	69fb      	ldr	r3, [r7, #28]
 800c352:	4413      	add	r3, r2
 800c354:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c358:	691a      	ldr	r2, [r3, #16]
 800c35a:	68bb      	ldr	r3, [r7, #8]
 800c35c:	699b      	ldr	r3, [r3, #24]
 800c35e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800c362:	69b9      	ldr	r1, [r7, #24]
 800c364:	0148      	lsls	r0, r1, #5
 800c366:	69f9      	ldr	r1, [r7, #28]
 800c368:	4401      	add	r1, r0
 800c36a:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 800c36e:	4313      	orrs	r3, r2
 800c370:	610b      	str	r3, [r1, #16]
 800c372:	68bb      	ldr	r3, [r7, #8]
 800c374:	791b      	ldrb	r3, [r3, #4]
 800c376:	2b01      	cmp	r3, #1
 800c378:	d11f      	bne.n	800c3ba <USB_EPStartXfer+0x17a>
 800c37a:	69bb      	ldr	r3, [r7, #24]
 800c37c:	015a      	lsls	r2, r3, #5
 800c37e:	69fb      	ldr	r3, [r7, #28]
 800c380:	4413      	add	r3, r2
 800c382:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c386:	691b      	ldr	r3, [r3, #16]
 800c388:	69ba      	ldr	r2, [r7, #24]
 800c38a:	0151      	lsls	r1, r2, #5
 800c38c:	69fa      	ldr	r2, [r7, #28]
 800c38e:	440a      	add	r2, r1
 800c390:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c394:	f023 43c0 	bic.w	r3, r3, #1610612736	; 0x60000000
 800c398:	6113      	str	r3, [r2, #16]
 800c39a:	69bb      	ldr	r3, [r7, #24]
 800c39c:	015a      	lsls	r2, r3, #5
 800c39e:	69fb      	ldr	r3, [r7, #28]
 800c3a0:	4413      	add	r3, r2
 800c3a2:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c3a6:	691b      	ldr	r3, [r3, #16]
 800c3a8:	69ba      	ldr	r2, [r7, #24]
 800c3aa:	0151      	lsls	r1, r2, #5
 800c3ac:	69fa      	ldr	r2, [r7, #28]
 800c3ae:	440a      	add	r2, r1
 800c3b0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c3b4:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800c3b8:	6113      	str	r3, [r2, #16]
 800c3ba:	79fb      	ldrb	r3, [r7, #7]
 800c3bc:	2b01      	cmp	r3, #1
 800c3be:	d14b      	bne.n	800c458 <USB_EPStartXfer+0x218>
 800c3c0:	68bb      	ldr	r3, [r7, #8]
 800c3c2:	695b      	ldr	r3, [r3, #20]
 800c3c4:	2b00      	cmp	r3, #0
 800c3c6:	d009      	beq.n	800c3dc <USB_EPStartXfer+0x19c>
 800c3c8:	69bb      	ldr	r3, [r7, #24]
 800c3ca:	015a      	lsls	r2, r3, #5
 800c3cc:	69fb      	ldr	r3, [r7, #28]
 800c3ce:	4413      	add	r3, r2
 800c3d0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c3d4:	461a      	mov	r2, r3
 800c3d6:	68bb      	ldr	r3, [r7, #8]
 800c3d8:	695b      	ldr	r3, [r3, #20]
 800c3da:	6153      	str	r3, [r2, #20]
 800c3dc:	68bb      	ldr	r3, [r7, #8]
 800c3de:	791b      	ldrb	r3, [r3, #4]
 800c3e0:	2b01      	cmp	r3, #1
 800c3e2:	d128      	bne.n	800c436 <USB_EPStartXfer+0x1f6>
 800c3e4:	69fb      	ldr	r3, [r7, #28]
 800c3e6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c3ea:	689b      	ldr	r3, [r3, #8]
 800c3ec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c3f0:	2b00      	cmp	r3, #0
 800c3f2:	d110      	bne.n	800c416 <USB_EPStartXfer+0x1d6>
 800c3f4:	69bb      	ldr	r3, [r7, #24]
 800c3f6:	015a      	lsls	r2, r3, #5
 800c3f8:	69fb      	ldr	r3, [r7, #28]
 800c3fa:	4413      	add	r3, r2
 800c3fc:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c400:	681b      	ldr	r3, [r3, #0]
 800c402:	69ba      	ldr	r2, [r7, #24]
 800c404:	0151      	lsls	r1, r2, #5
 800c406:	69fa      	ldr	r2, [r7, #28]
 800c408:	440a      	add	r2, r1
 800c40a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c40e:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800c412:	6013      	str	r3, [r2, #0]
 800c414:	e00f      	b.n	800c436 <USB_EPStartXfer+0x1f6>
 800c416:	69bb      	ldr	r3, [r7, #24]
 800c418:	015a      	lsls	r2, r3, #5
 800c41a:	69fb      	ldr	r3, [r7, #28]
 800c41c:	4413      	add	r3, r2
 800c41e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c422:	681b      	ldr	r3, [r3, #0]
 800c424:	69ba      	ldr	r2, [r7, #24]
 800c426:	0151      	lsls	r1, r2, #5
 800c428:	69fa      	ldr	r2, [r7, #28]
 800c42a:	440a      	add	r2, r1
 800c42c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c430:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c434:	6013      	str	r3, [r2, #0]
 800c436:	69bb      	ldr	r3, [r7, #24]
 800c438:	015a      	lsls	r2, r3, #5
 800c43a:	69fb      	ldr	r3, [r7, #28]
 800c43c:	4413      	add	r3, r2
 800c43e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c442:	681b      	ldr	r3, [r3, #0]
 800c444:	69ba      	ldr	r2, [r7, #24]
 800c446:	0151      	lsls	r1, r2, #5
 800c448:	69fa      	ldr	r2, [r7, #28]
 800c44a:	440a      	add	r2, r1
 800c44c:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c450:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800c454:	6013      	str	r3, [r2, #0]
 800c456:	e133      	b.n	800c6c0 <USB_EPStartXfer+0x480>
 800c458:	69bb      	ldr	r3, [r7, #24]
 800c45a:	015a      	lsls	r2, r3, #5
 800c45c:	69fb      	ldr	r3, [r7, #28]
 800c45e:	4413      	add	r3, r2
 800c460:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c464:	681b      	ldr	r3, [r3, #0]
 800c466:	69ba      	ldr	r2, [r7, #24]
 800c468:	0151      	lsls	r1, r2, #5
 800c46a:	69fa      	ldr	r2, [r7, #28]
 800c46c:	440a      	add	r2, r1
 800c46e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c472:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800c476:	6013      	str	r3, [r2, #0]
 800c478:	68bb      	ldr	r3, [r7, #8]
 800c47a:	791b      	ldrb	r3, [r3, #4]
 800c47c:	2b01      	cmp	r3, #1
 800c47e:	d015      	beq.n	800c4ac <USB_EPStartXfer+0x26c>
 800c480:	68bb      	ldr	r3, [r7, #8]
 800c482:	699b      	ldr	r3, [r3, #24]
 800c484:	2b00      	cmp	r3, #0
 800c486:	f000 811b 	beq.w	800c6c0 <USB_EPStartXfer+0x480>
 800c48a:	69fb      	ldr	r3, [r7, #28]
 800c48c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c490:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c492:	68bb      	ldr	r3, [r7, #8]
 800c494:	781b      	ldrb	r3, [r3, #0]
 800c496:	f003 030f 	and.w	r3, r3, #15
 800c49a:	2101      	movs	r1, #1
 800c49c:	fa01 f303 	lsl.w	r3, r1, r3
 800c4a0:	69f9      	ldr	r1, [r7, #28]
 800c4a2:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800c4a6:	4313      	orrs	r3, r2
 800c4a8:	634b      	str	r3, [r1, #52]	; 0x34
 800c4aa:	e109      	b.n	800c6c0 <USB_EPStartXfer+0x480>
 800c4ac:	69fb      	ldr	r3, [r7, #28]
 800c4ae:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c4b2:	689b      	ldr	r3, [r3, #8]
 800c4b4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c4b8:	2b00      	cmp	r3, #0
 800c4ba:	d110      	bne.n	800c4de <USB_EPStartXfer+0x29e>
 800c4bc:	69bb      	ldr	r3, [r7, #24]
 800c4be:	015a      	lsls	r2, r3, #5
 800c4c0:	69fb      	ldr	r3, [r7, #28]
 800c4c2:	4413      	add	r3, r2
 800c4c4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c4c8:	681b      	ldr	r3, [r3, #0]
 800c4ca:	69ba      	ldr	r2, [r7, #24]
 800c4cc:	0151      	lsls	r1, r2, #5
 800c4ce:	69fa      	ldr	r2, [r7, #28]
 800c4d0:	440a      	add	r2, r1
 800c4d2:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c4d6:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800c4da:	6013      	str	r3, [r2, #0]
 800c4dc:	e00f      	b.n	800c4fe <USB_EPStartXfer+0x2be>
 800c4de:	69bb      	ldr	r3, [r7, #24]
 800c4e0:	015a      	lsls	r2, r3, #5
 800c4e2:	69fb      	ldr	r3, [r7, #28]
 800c4e4:	4413      	add	r3, r2
 800c4e6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c4ea:	681b      	ldr	r3, [r3, #0]
 800c4ec:	69ba      	ldr	r2, [r7, #24]
 800c4ee:	0151      	lsls	r1, r2, #5
 800c4f0:	69fa      	ldr	r2, [r7, #28]
 800c4f2:	440a      	add	r2, r1
 800c4f4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c4f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c4fc:	6013      	str	r3, [r2, #0]
 800c4fe:	68bb      	ldr	r3, [r7, #8]
 800c500:	6919      	ldr	r1, [r3, #16]
 800c502:	68bb      	ldr	r3, [r7, #8]
 800c504:	781a      	ldrb	r2, [r3, #0]
 800c506:	68bb      	ldr	r3, [r7, #8]
 800c508:	699b      	ldr	r3, [r3, #24]
 800c50a:	b298      	uxth	r0, r3
 800c50c:	79fb      	ldrb	r3, [r7, #7]
 800c50e:	9300      	str	r3, [sp, #0]
 800c510:	4603      	mov	r3, r0
 800c512:	68f8      	ldr	r0, [r7, #12]
 800c514:	f000 fade 	bl	800cad4 <USB_WritePacket>
 800c518:	e0d2      	b.n	800c6c0 <USB_EPStartXfer+0x480>
 800c51a:	69bb      	ldr	r3, [r7, #24]
 800c51c:	015a      	lsls	r2, r3, #5
 800c51e:	69fb      	ldr	r3, [r7, #28]
 800c520:	4413      	add	r3, r2
 800c522:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c526:	691b      	ldr	r3, [r3, #16]
 800c528:	69ba      	ldr	r2, [r7, #24]
 800c52a:	0151      	lsls	r1, r2, #5
 800c52c:	69fa      	ldr	r2, [r7, #28]
 800c52e:	440a      	add	r2, r1
 800c530:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c534:	0cdb      	lsrs	r3, r3, #19
 800c536:	04db      	lsls	r3, r3, #19
 800c538:	6113      	str	r3, [r2, #16]
 800c53a:	69bb      	ldr	r3, [r7, #24]
 800c53c:	015a      	lsls	r2, r3, #5
 800c53e:	69fb      	ldr	r3, [r7, #28]
 800c540:	4413      	add	r3, r2
 800c542:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c546:	691b      	ldr	r3, [r3, #16]
 800c548:	69ba      	ldr	r2, [r7, #24]
 800c54a:	0151      	lsls	r1, r2, #5
 800c54c:	69fa      	ldr	r2, [r7, #28]
 800c54e:	440a      	add	r2, r1
 800c550:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c554:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800c558:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 800c55c:	6113      	str	r3, [r2, #16]
 800c55e:	68bb      	ldr	r3, [r7, #8]
 800c560:	699b      	ldr	r3, [r3, #24]
 800c562:	2b00      	cmp	r3, #0
 800c564:	d126      	bne.n	800c5b4 <USB_EPStartXfer+0x374>
 800c566:	69bb      	ldr	r3, [r7, #24]
 800c568:	015a      	lsls	r2, r3, #5
 800c56a:	69fb      	ldr	r3, [r7, #28]
 800c56c:	4413      	add	r3, r2
 800c56e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c572:	691a      	ldr	r2, [r3, #16]
 800c574:	68bb      	ldr	r3, [r7, #8]
 800c576:	68db      	ldr	r3, [r3, #12]
 800c578:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800c57c:	69b9      	ldr	r1, [r7, #24]
 800c57e:	0148      	lsls	r0, r1, #5
 800c580:	69f9      	ldr	r1, [r7, #28]
 800c582:	4401      	add	r1, r0
 800c584:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800c588:	4313      	orrs	r3, r2
 800c58a:	610b      	str	r3, [r1, #16]
 800c58c:	69bb      	ldr	r3, [r7, #24]
 800c58e:	015a      	lsls	r2, r3, #5
 800c590:	69fb      	ldr	r3, [r7, #28]
 800c592:	4413      	add	r3, r2
 800c594:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c598:	691b      	ldr	r3, [r3, #16]
 800c59a:	69ba      	ldr	r2, [r7, #24]
 800c59c:	0151      	lsls	r1, r2, #5
 800c59e:	69fa      	ldr	r2, [r7, #28]
 800c5a0:	440a      	add	r2, r1
 800c5a2:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c5a6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800c5aa:	6113      	str	r3, [r2, #16]
 800c5ac:	e03a      	b.n	800c624 <USB_EPStartXfer+0x3e4>
 800c5ae:	bf00      	nop
 800c5b0:	1ff80000 	.word	0x1ff80000
 800c5b4:	68bb      	ldr	r3, [r7, #8]
 800c5b6:	699a      	ldr	r2, [r3, #24]
 800c5b8:	68bb      	ldr	r3, [r7, #8]
 800c5ba:	68db      	ldr	r3, [r3, #12]
 800c5bc:	4413      	add	r3, r2
 800c5be:	1e5a      	subs	r2, r3, #1
 800c5c0:	68bb      	ldr	r3, [r7, #8]
 800c5c2:	68db      	ldr	r3, [r3, #12]
 800c5c4:	fbb2 f3f3 	udiv	r3, r2, r3
 800c5c8:	82fb      	strh	r3, [r7, #22]
 800c5ca:	68bb      	ldr	r3, [r7, #8]
 800c5cc:	68db      	ldr	r3, [r3, #12]
 800c5ce:	8afa      	ldrh	r2, [r7, #22]
 800c5d0:	fb03 f202 	mul.w	r2, r3, r2
 800c5d4:	68bb      	ldr	r3, [r7, #8]
 800c5d6:	61da      	str	r2, [r3, #28]
 800c5d8:	69bb      	ldr	r3, [r7, #24]
 800c5da:	015a      	lsls	r2, r3, #5
 800c5dc:	69fb      	ldr	r3, [r7, #28]
 800c5de:	4413      	add	r3, r2
 800c5e0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c5e4:	691a      	ldr	r2, [r3, #16]
 800c5e6:	8afb      	ldrh	r3, [r7, #22]
 800c5e8:	04d9      	lsls	r1, r3, #19
 800c5ea:	4b38      	ldr	r3, [pc, #224]	; (800c6cc <USB_EPStartXfer+0x48c>)
 800c5ec:	400b      	ands	r3, r1
 800c5ee:	69b9      	ldr	r1, [r7, #24]
 800c5f0:	0148      	lsls	r0, r1, #5
 800c5f2:	69f9      	ldr	r1, [r7, #28]
 800c5f4:	4401      	add	r1, r0
 800c5f6:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800c5fa:	4313      	orrs	r3, r2
 800c5fc:	610b      	str	r3, [r1, #16]
 800c5fe:	69bb      	ldr	r3, [r7, #24]
 800c600:	015a      	lsls	r2, r3, #5
 800c602:	69fb      	ldr	r3, [r7, #28]
 800c604:	4413      	add	r3, r2
 800c606:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c60a:	691a      	ldr	r2, [r3, #16]
 800c60c:	68bb      	ldr	r3, [r7, #8]
 800c60e:	69db      	ldr	r3, [r3, #28]
 800c610:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800c614:	69b9      	ldr	r1, [r7, #24]
 800c616:	0148      	lsls	r0, r1, #5
 800c618:	69f9      	ldr	r1, [r7, #28]
 800c61a:	4401      	add	r1, r0
 800c61c:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800c620:	4313      	orrs	r3, r2
 800c622:	610b      	str	r3, [r1, #16]
 800c624:	79fb      	ldrb	r3, [r7, #7]
 800c626:	2b01      	cmp	r3, #1
 800c628:	d10d      	bne.n	800c646 <USB_EPStartXfer+0x406>
 800c62a:	68bb      	ldr	r3, [r7, #8]
 800c62c:	691b      	ldr	r3, [r3, #16]
 800c62e:	2b00      	cmp	r3, #0
 800c630:	d009      	beq.n	800c646 <USB_EPStartXfer+0x406>
 800c632:	68bb      	ldr	r3, [r7, #8]
 800c634:	6919      	ldr	r1, [r3, #16]
 800c636:	69bb      	ldr	r3, [r7, #24]
 800c638:	015a      	lsls	r2, r3, #5
 800c63a:	69fb      	ldr	r3, [r7, #28]
 800c63c:	4413      	add	r3, r2
 800c63e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c642:	460a      	mov	r2, r1
 800c644:	615a      	str	r2, [r3, #20]
 800c646:	68bb      	ldr	r3, [r7, #8]
 800c648:	791b      	ldrb	r3, [r3, #4]
 800c64a:	2b01      	cmp	r3, #1
 800c64c:	d128      	bne.n	800c6a0 <USB_EPStartXfer+0x460>
 800c64e:	69fb      	ldr	r3, [r7, #28]
 800c650:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c654:	689b      	ldr	r3, [r3, #8]
 800c656:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c65a:	2b00      	cmp	r3, #0
 800c65c:	d110      	bne.n	800c680 <USB_EPStartXfer+0x440>
 800c65e:	69bb      	ldr	r3, [r7, #24]
 800c660:	015a      	lsls	r2, r3, #5
 800c662:	69fb      	ldr	r3, [r7, #28]
 800c664:	4413      	add	r3, r2
 800c666:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c66a:	681b      	ldr	r3, [r3, #0]
 800c66c:	69ba      	ldr	r2, [r7, #24]
 800c66e:	0151      	lsls	r1, r2, #5
 800c670:	69fa      	ldr	r2, [r7, #28]
 800c672:	440a      	add	r2, r1
 800c674:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c678:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 800c67c:	6013      	str	r3, [r2, #0]
 800c67e:	e00f      	b.n	800c6a0 <USB_EPStartXfer+0x460>
 800c680:	69bb      	ldr	r3, [r7, #24]
 800c682:	015a      	lsls	r2, r3, #5
 800c684:	69fb      	ldr	r3, [r7, #28]
 800c686:	4413      	add	r3, r2
 800c688:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c68c:	681b      	ldr	r3, [r3, #0]
 800c68e:	69ba      	ldr	r2, [r7, #24]
 800c690:	0151      	lsls	r1, r2, #5
 800c692:	69fa      	ldr	r2, [r7, #28]
 800c694:	440a      	add	r2, r1
 800c696:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c69a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800c69e:	6013      	str	r3, [r2, #0]
 800c6a0:	69bb      	ldr	r3, [r7, #24]
 800c6a2:	015a      	lsls	r2, r3, #5
 800c6a4:	69fb      	ldr	r3, [r7, #28]
 800c6a6:	4413      	add	r3, r2
 800c6a8:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c6ac:	681b      	ldr	r3, [r3, #0]
 800c6ae:	69ba      	ldr	r2, [r7, #24]
 800c6b0:	0151      	lsls	r1, r2, #5
 800c6b2:	69fa      	ldr	r2, [r7, #28]
 800c6b4:	440a      	add	r2, r1
 800c6b6:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c6ba:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800c6be:	6013      	str	r3, [r2, #0]
 800c6c0:	2300      	movs	r3, #0
 800c6c2:	4618      	mov	r0, r3
 800c6c4:	3720      	adds	r7, #32
 800c6c6:	46bd      	mov	sp, r7
 800c6c8:	bd80      	pop	{r7, pc}
 800c6ca:	bf00      	nop
 800c6cc:	1ff80000 	.word	0x1ff80000

0800c6d0 <USB_EP0StartXfer>:
 800c6d0:	b480      	push	{r7}
 800c6d2:	b087      	sub	sp, #28
 800c6d4:	af00      	add	r7, sp, #0
 800c6d6:	60f8      	str	r0, [r7, #12]
 800c6d8:	60b9      	str	r1, [r7, #8]
 800c6da:	4613      	mov	r3, r2
 800c6dc:	71fb      	strb	r3, [r7, #7]
 800c6de:	68fb      	ldr	r3, [r7, #12]
 800c6e0:	617b      	str	r3, [r7, #20]
 800c6e2:	68bb      	ldr	r3, [r7, #8]
 800c6e4:	781b      	ldrb	r3, [r3, #0]
 800c6e6:	613b      	str	r3, [r7, #16]
 800c6e8:	68bb      	ldr	r3, [r7, #8]
 800c6ea:	785b      	ldrb	r3, [r3, #1]
 800c6ec:	2b01      	cmp	r3, #1
 800c6ee:	f040 80ce 	bne.w	800c88e <USB_EP0StartXfer+0x1be>
 800c6f2:	68bb      	ldr	r3, [r7, #8]
 800c6f4:	699b      	ldr	r3, [r3, #24]
 800c6f6:	2b00      	cmp	r3, #0
 800c6f8:	d132      	bne.n	800c760 <USB_EP0StartXfer+0x90>
 800c6fa:	693b      	ldr	r3, [r7, #16]
 800c6fc:	015a      	lsls	r2, r3, #5
 800c6fe:	697b      	ldr	r3, [r7, #20]
 800c700:	4413      	add	r3, r2
 800c702:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c706:	691b      	ldr	r3, [r3, #16]
 800c708:	693a      	ldr	r2, [r7, #16]
 800c70a:	0151      	lsls	r1, r2, #5
 800c70c:	697a      	ldr	r2, [r7, #20]
 800c70e:	440a      	add	r2, r1
 800c710:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c714:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800c718:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 800c71c:	6113      	str	r3, [r2, #16]
 800c71e:	693b      	ldr	r3, [r7, #16]
 800c720:	015a      	lsls	r2, r3, #5
 800c722:	697b      	ldr	r3, [r7, #20]
 800c724:	4413      	add	r3, r2
 800c726:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c72a:	691b      	ldr	r3, [r3, #16]
 800c72c:	693a      	ldr	r2, [r7, #16]
 800c72e:	0151      	lsls	r1, r2, #5
 800c730:	697a      	ldr	r2, [r7, #20]
 800c732:	440a      	add	r2, r1
 800c734:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c738:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800c73c:	6113      	str	r3, [r2, #16]
 800c73e:	693b      	ldr	r3, [r7, #16]
 800c740:	015a      	lsls	r2, r3, #5
 800c742:	697b      	ldr	r3, [r7, #20]
 800c744:	4413      	add	r3, r2
 800c746:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c74a:	691b      	ldr	r3, [r3, #16]
 800c74c:	693a      	ldr	r2, [r7, #16]
 800c74e:	0151      	lsls	r1, r2, #5
 800c750:	697a      	ldr	r2, [r7, #20]
 800c752:	440a      	add	r2, r1
 800c754:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c758:	0cdb      	lsrs	r3, r3, #19
 800c75a:	04db      	lsls	r3, r3, #19
 800c75c:	6113      	str	r3, [r2, #16]
 800c75e:	e04e      	b.n	800c7fe <USB_EP0StartXfer+0x12e>
 800c760:	693b      	ldr	r3, [r7, #16]
 800c762:	015a      	lsls	r2, r3, #5
 800c764:	697b      	ldr	r3, [r7, #20]
 800c766:	4413      	add	r3, r2
 800c768:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c76c:	691b      	ldr	r3, [r3, #16]
 800c76e:	693a      	ldr	r2, [r7, #16]
 800c770:	0151      	lsls	r1, r2, #5
 800c772:	697a      	ldr	r2, [r7, #20]
 800c774:	440a      	add	r2, r1
 800c776:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c77a:	0cdb      	lsrs	r3, r3, #19
 800c77c:	04db      	lsls	r3, r3, #19
 800c77e:	6113      	str	r3, [r2, #16]
 800c780:	693b      	ldr	r3, [r7, #16]
 800c782:	015a      	lsls	r2, r3, #5
 800c784:	697b      	ldr	r3, [r7, #20]
 800c786:	4413      	add	r3, r2
 800c788:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c78c:	691b      	ldr	r3, [r3, #16]
 800c78e:	693a      	ldr	r2, [r7, #16]
 800c790:	0151      	lsls	r1, r2, #5
 800c792:	697a      	ldr	r2, [r7, #20]
 800c794:	440a      	add	r2, r1
 800c796:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c79a:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800c79e:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 800c7a2:	6113      	str	r3, [r2, #16]
 800c7a4:	68bb      	ldr	r3, [r7, #8]
 800c7a6:	699a      	ldr	r2, [r3, #24]
 800c7a8:	68bb      	ldr	r3, [r7, #8]
 800c7aa:	68db      	ldr	r3, [r3, #12]
 800c7ac:	429a      	cmp	r2, r3
 800c7ae:	d903      	bls.n	800c7b8 <USB_EP0StartXfer+0xe8>
 800c7b0:	68bb      	ldr	r3, [r7, #8]
 800c7b2:	68da      	ldr	r2, [r3, #12]
 800c7b4:	68bb      	ldr	r3, [r7, #8]
 800c7b6:	619a      	str	r2, [r3, #24]
 800c7b8:	693b      	ldr	r3, [r7, #16]
 800c7ba:	015a      	lsls	r2, r3, #5
 800c7bc:	697b      	ldr	r3, [r7, #20]
 800c7be:	4413      	add	r3, r2
 800c7c0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c7c4:	691b      	ldr	r3, [r3, #16]
 800c7c6:	693a      	ldr	r2, [r7, #16]
 800c7c8:	0151      	lsls	r1, r2, #5
 800c7ca:	697a      	ldr	r2, [r7, #20]
 800c7cc:	440a      	add	r2, r1
 800c7ce:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c7d2:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800c7d6:	6113      	str	r3, [r2, #16]
 800c7d8:	693b      	ldr	r3, [r7, #16]
 800c7da:	015a      	lsls	r2, r3, #5
 800c7dc:	697b      	ldr	r3, [r7, #20]
 800c7de:	4413      	add	r3, r2
 800c7e0:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c7e4:	691a      	ldr	r2, [r3, #16]
 800c7e6:	68bb      	ldr	r3, [r7, #8]
 800c7e8:	699b      	ldr	r3, [r3, #24]
 800c7ea:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800c7ee:	6939      	ldr	r1, [r7, #16]
 800c7f0:	0148      	lsls	r0, r1, #5
 800c7f2:	6979      	ldr	r1, [r7, #20]
 800c7f4:	4401      	add	r1, r0
 800c7f6:	f501 6110 	add.w	r1, r1, #2304	; 0x900
 800c7fa:	4313      	orrs	r3, r2
 800c7fc:	610b      	str	r3, [r1, #16]
 800c7fe:	79fb      	ldrb	r3, [r7, #7]
 800c800:	2b01      	cmp	r3, #1
 800c802:	d11e      	bne.n	800c842 <USB_EP0StartXfer+0x172>
 800c804:	68bb      	ldr	r3, [r7, #8]
 800c806:	695b      	ldr	r3, [r3, #20]
 800c808:	2b00      	cmp	r3, #0
 800c80a:	d009      	beq.n	800c820 <USB_EP0StartXfer+0x150>
 800c80c:	693b      	ldr	r3, [r7, #16]
 800c80e:	015a      	lsls	r2, r3, #5
 800c810:	697b      	ldr	r3, [r7, #20]
 800c812:	4413      	add	r3, r2
 800c814:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c818:	461a      	mov	r2, r3
 800c81a:	68bb      	ldr	r3, [r7, #8]
 800c81c:	695b      	ldr	r3, [r3, #20]
 800c81e:	6153      	str	r3, [r2, #20]
 800c820:	693b      	ldr	r3, [r7, #16]
 800c822:	015a      	lsls	r2, r3, #5
 800c824:	697b      	ldr	r3, [r7, #20]
 800c826:	4413      	add	r3, r2
 800c828:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c82c:	681b      	ldr	r3, [r3, #0]
 800c82e:	693a      	ldr	r2, [r7, #16]
 800c830:	0151      	lsls	r1, r2, #5
 800c832:	697a      	ldr	r2, [r7, #20]
 800c834:	440a      	add	r2, r1
 800c836:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c83a:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800c83e:	6013      	str	r3, [r2, #0]
 800c840:	e097      	b.n	800c972 <USB_EP0StartXfer+0x2a2>
 800c842:	693b      	ldr	r3, [r7, #16]
 800c844:	015a      	lsls	r2, r3, #5
 800c846:	697b      	ldr	r3, [r7, #20]
 800c848:	4413      	add	r3, r2
 800c84a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c84e:	681b      	ldr	r3, [r3, #0]
 800c850:	693a      	ldr	r2, [r7, #16]
 800c852:	0151      	lsls	r1, r2, #5
 800c854:	697a      	ldr	r2, [r7, #20]
 800c856:	440a      	add	r2, r1
 800c858:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c85c:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800c860:	6013      	str	r3, [r2, #0]
 800c862:	68bb      	ldr	r3, [r7, #8]
 800c864:	699b      	ldr	r3, [r3, #24]
 800c866:	2b00      	cmp	r3, #0
 800c868:	f000 8083 	beq.w	800c972 <USB_EP0StartXfer+0x2a2>
 800c86c:	697b      	ldr	r3, [r7, #20]
 800c86e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800c872:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800c874:	68bb      	ldr	r3, [r7, #8]
 800c876:	781b      	ldrb	r3, [r3, #0]
 800c878:	f003 030f 	and.w	r3, r3, #15
 800c87c:	2101      	movs	r1, #1
 800c87e:	fa01 f303 	lsl.w	r3, r1, r3
 800c882:	6979      	ldr	r1, [r7, #20]
 800c884:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800c888:	4313      	orrs	r3, r2
 800c88a:	634b      	str	r3, [r1, #52]	; 0x34
 800c88c:	e071      	b.n	800c972 <USB_EP0StartXfer+0x2a2>
 800c88e:	693b      	ldr	r3, [r7, #16]
 800c890:	015a      	lsls	r2, r3, #5
 800c892:	697b      	ldr	r3, [r7, #20]
 800c894:	4413      	add	r3, r2
 800c896:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c89a:	691b      	ldr	r3, [r3, #16]
 800c89c:	693a      	ldr	r2, [r7, #16]
 800c89e:	0151      	lsls	r1, r2, #5
 800c8a0:	697a      	ldr	r2, [r7, #20]
 800c8a2:	440a      	add	r2, r1
 800c8a4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c8a8:	0cdb      	lsrs	r3, r3, #19
 800c8aa:	04db      	lsls	r3, r3, #19
 800c8ac:	6113      	str	r3, [r2, #16]
 800c8ae:	693b      	ldr	r3, [r7, #16]
 800c8b0:	015a      	lsls	r2, r3, #5
 800c8b2:	697b      	ldr	r3, [r7, #20]
 800c8b4:	4413      	add	r3, r2
 800c8b6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c8ba:	691b      	ldr	r3, [r3, #16]
 800c8bc:	693a      	ldr	r2, [r7, #16]
 800c8be:	0151      	lsls	r1, r2, #5
 800c8c0:	697a      	ldr	r2, [r7, #20]
 800c8c2:	440a      	add	r2, r1
 800c8c4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c8c8:	f023 53ff 	bic.w	r3, r3, #534773760	; 0x1fe00000
 800c8cc:	f423 13c0 	bic.w	r3, r3, #1572864	; 0x180000
 800c8d0:	6113      	str	r3, [r2, #16]
 800c8d2:	68bb      	ldr	r3, [r7, #8]
 800c8d4:	699b      	ldr	r3, [r3, #24]
 800c8d6:	2b00      	cmp	r3, #0
 800c8d8:	d003      	beq.n	800c8e2 <USB_EP0StartXfer+0x212>
 800c8da:	68bb      	ldr	r3, [r7, #8]
 800c8dc:	68da      	ldr	r2, [r3, #12]
 800c8de:	68bb      	ldr	r3, [r7, #8]
 800c8e0:	619a      	str	r2, [r3, #24]
 800c8e2:	68bb      	ldr	r3, [r7, #8]
 800c8e4:	68da      	ldr	r2, [r3, #12]
 800c8e6:	68bb      	ldr	r3, [r7, #8]
 800c8e8:	61da      	str	r2, [r3, #28]
 800c8ea:	693b      	ldr	r3, [r7, #16]
 800c8ec:	015a      	lsls	r2, r3, #5
 800c8ee:	697b      	ldr	r3, [r7, #20]
 800c8f0:	4413      	add	r3, r2
 800c8f2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c8f6:	691b      	ldr	r3, [r3, #16]
 800c8f8:	693a      	ldr	r2, [r7, #16]
 800c8fa:	0151      	lsls	r1, r2, #5
 800c8fc:	697a      	ldr	r2, [r7, #20]
 800c8fe:	440a      	add	r2, r1
 800c900:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c904:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800c908:	6113      	str	r3, [r2, #16]
 800c90a:	693b      	ldr	r3, [r7, #16]
 800c90c:	015a      	lsls	r2, r3, #5
 800c90e:	697b      	ldr	r3, [r7, #20]
 800c910:	4413      	add	r3, r2
 800c912:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c916:	691a      	ldr	r2, [r3, #16]
 800c918:	68bb      	ldr	r3, [r7, #8]
 800c91a:	69db      	ldr	r3, [r3, #28]
 800c91c:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800c920:	6939      	ldr	r1, [r7, #16]
 800c922:	0148      	lsls	r0, r1, #5
 800c924:	6979      	ldr	r1, [r7, #20]
 800c926:	4401      	add	r1, r0
 800c928:	f501 6130 	add.w	r1, r1, #2816	; 0xb00
 800c92c:	4313      	orrs	r3, r2
 800c92e:	610b      	str	r3, [r1, #16]
 800c930:	79fb      	ldrb	r3, [r7, #7]
 800c932:	2b01      	cmp	r3, #1
 800c934:	d10d      	bne.n	800c952 <USB_EP0StartXfer+0x282>
 800c936:	68bb      	ldr	r3, [r7, #8]
 800c938:	691b      	ldr	r3, [r3, #16]
 800c93a:	2b00      	cmp	r3, #0
 800c93c:	d009      	beq.n	800c952 <USB_EP0StartXfer+0x282>
 800c93e:	68bb      	ldr	r3, [r7, #8]
 800c940:	6919      	ldr	r1, [r3, #16]
 800c942:	693b      	ldr	r3, [r7, #16]
 800c944:	015a      	lsls	r2, r3, #5
 800c946:	697b      	ldr	r3, [r7, #20]
 800c948:	4413      	add	r3, r2
 800c94a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c94e:	460a      	mov	r2, r1
 800c950:	615a      	str	r2, [r3, #20]
 800c952:	693b      	ldr	r3, [r7, #16]
 800c954:	015a      	lsls	r2, r3, #5
 800c956:	697b      	ldr	r3, [r7, #20]
 800c958:	4413      	add	r3, r2
 800c95a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800c95e:	681b      	ldr	r3, [r3, #0]
 800c960:	693a      	ldr	r2, [r7, #16]
 800c962:	0151      	lsls	r1, r2, #5
 800c964:	697a      	ldr	r2, [r7, #20]
 800c966:	440a      	add	r2, r1
 800c968:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800c96c:	f043 4304 	orr.w	r3, r3, #2214592512	; 0x84000000
 800c970:	6013      	str	r3, [r2, #0]
 800c972:	2300      	movs	r3, #0
 800c974:	4618      	mov	r0, r3
 800c976:	371c      	adds	r7, #28
 800c978:	46bd      	mov	sp, r7
 800c97a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c97e:	4770      	bx	lr

0800c980 <USB_EPStopXfer>:
 800c980:	b480      	push	{r7}
 800c982:	b087      	sub	sp, #28
 800c984:	af00      	add	r7, sp, #0
 800c986:	6078      	str	r0, [r7, #4]
 800c988:	6039      	str	r1, [r7, #0]
 800c98a:	2300      	movs	r3, #0
 800c98c:	60fb      	str	r3, [r7, #12]
 800c98e:	2300      	movs	r3, #0
 800c990:	75fb      	strb	r3, [r7, #23]
 800c992:	687b      	ldr	r3, [r7, #4]
 800c994:	613b      	str	r3, [r7, #16]
 800c996:	683b      	ldr	r3, [r7, #0]
 800c998:	785b      	ldrb	r3, [r3, #1]
 800c99a:	2b01      	cmp	r3, #1
 800c99c:	d14a      	bne.n	800ca34 <USB_EPStopXfer+0xb4>
 800c99e:	683b      	ldr	r3, [r7, #0]
 800c9a0:	781b      	ldrb	r3, [r3, #0]
 800c9a2:	015a      	lsls	r2, r3, #5
 800c9a4:	693b      	ldr	r3, [r7, #16]
 800c9a6:	4413      	add	r3, r2
 800c9a8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c9ac:	681b      	ldr	r3, [r3, #0]
 800c9ae:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800c9b2:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800c9b6:	f040 8086 	bne.w	800cac6 <USB_EPStopXfer+0x146>
 800c9ba:	683b      	ldr	r3, [r7, #0]
 800c9bc:	781b      	ldrb	r3, [r3, #0]
 800c9be:	015a      	lsls	r2, r3, #5
 800c9c0:	693b      	ldr	r3, [r7, #16]
 800c9c2:	4413      	add	r3, r2
 800c9c4:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c9c8:	681b      	ldr	r3, [r3, #0]
 800c9ca:	683a      	ldr	r2, [r7, #0]
 800c9cc:	7812      	ldrb	r2, [r2, #0]
 800c9ce:	0151      	lsls	r1, r2, #5
 800c9d0:	693a      	ldr	r2, [r7, #16]
 800c9d2:	440a      	add	r2, r1
 800c9d4:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c9d8:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800c9dc:	6013      	str	r3, [r2, #0]
 800c9de:	683b      	ldr	r3, [r7, #0]
 800c9e0:	781b      	ldrb	r3, [r3, #0]
 800c9e2:	015a      	lsls	r2, r3, #5
 800c9e4:	693b      	ldr	r3, [r7, #16]
 800c9e6:	4413      	add	r3, r2
 800c9e8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800c9ec:	681b      	ldr	r3, [r3, #0]
 800c9ee:	683a      	ldr	r2, [r7, #0]
 800c9f0:	7812      	ldrb	r2, [r2, #0]
 800c9f2:	0151      	lsls	r1, r2, #5
 800c9f4:	693a      	ldr	r2, [r7, #16]
 800c9f6:	440a      	add	r2, r1
 800c9f8:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800c9fc:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800ca00:	6013      	str	r3, [r2, #0]
 800ca02:	68fb      	ldr	r3, [r7, #12]
 800ca04:	3301      	adds	r3, #1
 800ca06:	60fb      	str	r3, [r7, #12]
 800ca08:	68fb      	ldr	r3, [r7, #12]
 800ca0a:	f242 7210 	movw	r2, #10000	; 0x2710
 800ca0e:	4293      	cmp	r3, r2
 800ca10:	d902      	bls.n	800ca18 <USB_EPStopXfer+0x98>
 800ca12:	2301      	movs	r3, #1
 800ca14:	75fb      	strb	r3, [r7, #23]
 800ca16:	e056      	b.n	800cac6 <USB_EPStopXfer+0x146>
 800ca18:	683b      	ldr	r3, [r7, #0]
 800ca1a:	781b      	ldrb	r3, [r3, #0]
 800ca1c:	015a      	lsls	r2, r3, #5
 800ca1e:	693b      	ldr	r3, [r7, #16]
 800ca20:	4413      	add	r3, r2
 800ca22:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800ca26:	681b      	ldr	r3, [r3, #0]
 800ca28:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800ca2c:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800ca30:	d0e7      	beq.n	800ca02 <USB_EPStopXfer+0x82>
 800ca32:	e048      	b.n	800cac6 <USB_EPStopXfer+0x146>
 800ca34:	683b      	ldr	r3, [r7, #0]
 800ca36:	781b      	ldrb	r3, [r3, #0]
 800ca38:	015a      	lsls	r2, r3, #5
 800ca3a:	693b      	ldr	r3, [r7, #16]
 800ca3c:	4413      	add	r3, r2
 800ca3e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800ca42:	681b      	ldr	r3, [r3, #0]
 800ca44:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800ca48:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800ca4c:	d13b      	bne.n	800cac6 <USB_EPStopXfer+0x146>
 800ca4e:	683b      	ldr	r3, [r7, #0]
 800ca50:	781b      	ldrb	r3, [r3, #0]
 800ca52:	015a      	lsls	r2, r3, #5
 800ca54:	693b      	ldr	r3, [r7, #16]
 800ca56:	4413      	add	r3, r2
 800ca58:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800ca5c:	681b      	ldr	r3, [r3, #0]
 800ca5e:	683a      	ldr	r2, [r7, #0]
 800ca60:	7812      	ldrb	r2, [r2, #0]
 800ca62:	0151      	lsls	r1, r2, #5
 800ca64:	693a      	ldr	r2, [r7, #16]
 800ca66:	440a      	add	r2, r1
 800ca68:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800ca6c:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800ca70:	6013      	str	r3, [r2, #0]
 800ca72:	683b      	ldr	r3, [r7, #0]
 800ca74:	781b      	ldrb	r3, [r3, #0]
 800ca76:	015a      	lsls	r2, r3, #5
 800ca78:	693b      	ldr	r3, [r7, #16]
 800ca7a:	4413      	add	r3, r2
 800ca7c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800ca80:	681b      	ldr	r3, [r3, #0]
 800ca82:	683a      	ldr	r2, [r7, #0]
 800ca84:	7812      	ldrb	r2, [r2, #0]
 800ca86:	0151      	lsls	r1, r2, #5
 800ca88:	693a      	ldr	r2, [r7, #16]
 800ca8a:	440a      	add	r2, r1
 800ca8c:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800ca90:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800ca94:	6013      	str	r3, [r2, #0]
 800ca96:	68fb      	ldr	r3, [r7, #12]
 800ca98:	3301      	adds	r3, #1
 800ca9a:	60fb      	str	r3, [r7, #12]
 800ca9c:	68fb      	ldr	r3, [r7, #12]
 800ca9e:	f242 7210 	movw	r2, #10000	; 0x2710
 800caa2:	4293      	cmp	r3, r2
 800caa4:	d902      	bls.n	800caac <USB_EPStopXfer+0x12c>
 800caa6:	2301      	movs	r3, #1
 800caa8:	75fb      	strb	r3, [r7, #23]
 800caaa:	e00c      	b.n	800cac6 <USB_EPStopXfer+0x146>
 800caac:	683b      	ldr	r3, [r7, #0]
 800caae:	781b      	ldrb	r3, [r3, #0]
 800cab0:	015a      	lsls	r2, r3, #5
 800cab2:	693b      	ldr	r3, [r7, #16]
 800cab4:	4413      	add	r3, r2
 800cab6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800caba:	681b      	ldr	r3, [r3, #0]
 800cabc:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800cac0:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800cac4:	d0e7      	beq.n	800ca96 <USB_EPStopXfer+0x116>
 800cac6:	7dfb      	ldrb	r3, [r7, #23]
 800cac8:	4618      	mov	r0, r3
 800caca:	371c      	adds	r7, #28
 800cacc:	46bd      	mov	sp, r7
 800cace:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cad2:	4770      	bx	lr

0800cad4 <USB_WritePacket>:
 800cad4:	b480      	push	{r7}
 800cad6:	b089      	sub	sp, #36	; 0x24
 800cad8:	af00      	add	r7, sp, #0
 800cada:	60f8      	str	r0, [r7, #12]
 800cadc:	60b9      	str	r1, [r7, #8]
 800cade:	4611      	mov	r1, r2
 800cae0:	461a      	mov	r2, r3
 800cae2:	460b      	mov	r3, r1
 800cae4:	71fb      	strb	r3, [r7, #7]
 800cae6:	4613      	mov	r3, r2
 800cae8:	80bb      	strh	r3, [r7, #4]
 800caea:	68fb      	ldr	r3, [r7, #12]
 800caec:	617b      	str	r3, [r7, #20]
 800caee:	68bb      	ldr	r3, [r7, #8]
 800caf0:	61fb      	str	r3, [r7, #28]
 800caf2:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800caf6:	2b00      	cmp	r3, #0
 800caf8:	d123      	bne.n	800cb42 <USB_WritePacket+0x6e>
 800cafa:	88bb      	ldrh	r3, [r7, #4]
 800cafc:	3303      	adds	r3, #3
 800cafe:	089b      	lsrs	r3, r3, #2
 800cb00:	613b      	str	r3, [r7, #16]
 800cb02:	2300      	movs	r3, #0
 800cb04:	61bb      	str	r3, [r7, #24]
 800cb06:	e018      	b.n	800cb3a <USB_WritePacket+0x66>
 800cb08:	79fb      	ldrb	r3, [r7, #7]
 800cb0a:	031a      	lsls	r2, r3, #12
 800cb0c:	697b      	ldr	r3, [r7, #20]
 800cb0e:	4413      	add	r3, r2
 800cb10:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800cb14:	461a      	mov	r2, r3
 800cb16:	69fb      	ldr	r3, [r7, #28]
 800cb18:	681b      	ldr	r3, [r3, #0]
 800cb1a:	6013      	str	r3, [r2, #0]
 800cb1c:	69fb      	ldr	r3, [r7, #28]
 800cb1e:	3301      	adds	r3, #1
 800cb20:	61fb      	str	r3, [r7, #28]
 800cb22:	69fb      	ldr	r3, [r7, #28]
 800cb24:	3301      	adds	r3, #1
 800cb26:	61fb      	str	r3, [r7, #28]
 800cb28:	69fb      	ldr	r3, [r7, #28]
 800cb2a:	3301      	adds	r3, #1
 800cb2c:	61fb      	str	r3, [r7, #28]
 800cb2e:	69fb      	ldr	r3, [r7, #28]
 800cb30:	3301      	adds	r3, #1
 800cb32:	61fb      	str	r3, [r7, #28]
 800cb34:	69bb      	ldr	r3, [r7, #24]
 800cb36:	3301      	adds	r3, #1
 800cb38:	61bb      	str	r3, [r7, #24]
 800cb3a:	69ba      	ldr	r2, [r7, #24]
 800cb3c:	693b      	ldr	r3, [r7, #16]
 800cb3e:	429a      	cmp	r2, r3
 800cb40:	d3e2      	bcc.n	800cb08 <USB_WritePacket+0x34>
 800cb42:	2300      	movs	r3, #0
 800cb44:	4618      	mov	r0, r3
 800cb46:	3724      	adds	r7, #36	; 0x24
 800cb48:	46bd      	mov	sp, r7
 800cb4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb4e:	4770      	bx	lr

0800cb50 <USB_ReadPacket>:
 800cb50:	b480      	push	{r7}
 800cb52:	b08b      	sub	sp, #44	; 0x2c
 800cb54:	af00      	add	r7, sp, #0
 800cb56:	60f8      	str	r0, [r7, #12]
 800cb58:	60b9      	str	r1, [r7, #8]
 800cb5a:	4613      	mov	r3, r2
 800cb5c:	80fb      	strh	r3, [r7, #6]
 800cb5e:	68fb      	ldr	r3, [r7, #12]
 800cb60:	61bb      	str	r3, [r7, #24]
 800cb62:	68bb      	ldr	r3, [r7, #8]
 800cb64:	627b      	str	r3, [r7, #36]	; 0x24
 800cb66:	88fb      	ldrh	r3, [r7, #6]
 800cb68:	089b      	lsrs	r3, r3, #2
 800cb6a:	b29b      	uxth	r3, r3
 800cb6c:	617b      	str	r3, [r7, #20]
 800cb6e:	88fb      	ldrh	r3, [r7, #6]
 800cb70:	f003 0303 	and.w	r3, r3, #3
 800cb74:	83fb      	strh	r3, [r7, #30]
 800cb76:	2300      	movs	r3, #0
 800cb78:	623b      	str	r3, [r7, #32]
 800cb7a:	e014      	b.n	800cba6 <USB_ReadPacket+0x56>
 800cb7c:	69bb      	ldr	r3, [r7, #24]
 800cb7e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800cb82:	681a      	ldr	r2, [r3, #0]
 800cb84:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb86:	601a      	str	r2, [r3, #0]
 800cb88:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb8a:	3301      	adds	r3, #1
 800cb8c:	627b      	str	r3, [r7, #36]	; 0x24
 800cb8e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb90:	3301      	adds	r3, #1
 800cb92:	627b      	str	r3, [r7, #36]	; 0x24
 800cb94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb96:	3301      	adds	r3, #1
 800cb98:	627b      	str	r3, [r7, #36]	; 0x24
 800cb9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cb9c:	3301      	adds	r3, #1
 800cb9e:	627b      	str	r3, [r7, #36]	; 0x24
 800cba0:	6a3b      	ldr	r3, [r7, #32]
 800cba2:	3301      	adds	r3, #1
 800cba4:	623b      	str	r3, [r7, #32]
 800cba6:	6a3a      	ldr	r2, [r7, #32]
 800cba8:	697b      	ldr	r3, [r7, #20]
 800cbaa:	429a      	cmp	r2, r3
 800cbac:	d3e6      	bcc.n	800cb7c <USB_ReadPacket+0x2c>
 800cbae:	8bfb      	ldrh	r3, [r7, #30]
 800cbb0:	2b00      	cmp	r3, #0
 800cbb2:	d01e      	beq.n	800cbf2 <USB_ReadPacket+0xa2>
 800cbb4:	2300      	movs	r3, #0
 800cbb6:	623b      	str	r3, [r7, #32]
 800cbb8:	69bb      	ldr	r3, [r7, #24]
 800cbba:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800cbbe:	461a      	mov	r2, r3
 800cbc0:	f107 0310 	add.w	r3, r7, #16
 800cbc4:	6812      	ldr	r2, [r2, #0]
 800cbc6:	601a      	str	r2, [r3, #0]
 800cbc8:	693a      	ldr	r2, [r7, #16]
 800cbca:	6a3b      	ldr	r3, [r7, #32]
 800cbcc:	b2db      	uxtb	r3, r3
 800cbce:	00db      	lsls	r3, r3, #3
 800cbd0:	fa22 f303 	lsr.w	r3, r2, r3
 800cbd4:	b2da      	uxtb	r2, r3
 800cbd6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbd8:	701a      	strb	r2, [r3, #0]
 800cbda:	6a3b      	ldr	r3, [r7, #32]
 800cbdc:	3301      	adds	r3, #1
 800cbde:	623b      	str	r3, [r7, #32]
 800cbe0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbe2:	3301      	adds	r3, #1
 800cbe4:	627b      	str	r3, [r7, #36]	; 0x24
 800cbe6:	8bfb      	ldrh	r3, [r7, #30]
 800cbe8:	3b01      	subs	r3, #1
 800cbea:	83fb      	strh	r3, [r7, #30]
 800cbec:	8bfb      	ldrh	r3, [r7, #30]
 800cbee:	2b00      	cmp	r3, #0
 800cbf0:	d1ea      	bne.n	800cbc8 <USB_ReadPacket+0x78>
 800cbf2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800cbf4:	4618      	mov	r0, r3
 800cbf6:	372c      	adds	r7, #44	; 0x2c
 800cbf8:	46bd      	mov	sp, r7
 800cbfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbfe:	4770      	bx	lr

0800cc00 <USB_EPSetStall>:
 800cc00:	b480      	push	{r7}
 800cc02:	b085      	sub	sp, #20
 800cc04:	af00      	add	r7, sp, #0
 800cc06:	6078      	str	r0, [r7, #4]
 800cc08:	6039      	str	r1, [r7, #0]
 800cc0a:	687b      	ldr	r3, [r7, #4]
 800cc0c:	60fb      	str	r3, [r7, #12]
 800cc0e:	683b      	ldr	r3, [r7, #0]
 800cc10:	781b      	ldrb	r3, [r3, #0]
 800cc12:	60bb      	str	r3, [r7, #8]
 800cc14:	683b      	ldr	r3, [r7, #0]
 800cc16:	785b      	ldrb	r3, [r3, #1]
 800cc18:	2b01      	cmp	r3, #1
 800cc1a:	d12c      	bne.n	800cc76 <USB_EPSetStall+0x76>
 800cc1c:	68bb      	ldr	r3, [r7, #8]
 800cc1e:	015a      	lsls	r2, r3, #5
 800cc20:	68fb      	ldr	r3, [r7, #12]
 800cc22:	4413      	add	r3, r2
 800cc24:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800cc28:	681b      	ldr	r3, [r3, #0]
 800cc2a:	2b00      	cmp	r3, #0
 800cc2c:	db12      	blt.n	800cc54 <USB_EPSetStall+0x54>
 800cc2e:	68bb      	ldr	r3, [r7, #8]
 800cc30:	2b00      	cmp	r3, #0
 800cc32:	d00f      	beq.n	800cc54 <USB_EPSetStall+0x54>
 800cc34:	68bb      	ldr	r3, [r7, #8]
 800cc36:	015a      	lsls	r2, r3, #5
 800cc38:	68fb      	ldr	r3, [r7, #12]
 800cc3a:	4413      	add	r3, r2
 800cc3c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800cc40:	681b      	ldr	r3, [r3, #0]
 800cc42:	68ba      	ldr	r2, [r7, #8]
 800cc44:	0151      	lsls	r1, r2, #5
 800cc46:	68fa      	ldr	r2, [r7, #12]
 800cc48:	440a      	add	r2, r1
 800cc4a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800cc4e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800cc52:	6013      	str	r3, [r2, #0]
 800cc54:	68bb      	ldr	r3, [r7, #8]
 800cc56:	015a      	lsls	r2, r3, #5
 800cc58:	68fb      	ldr	r3, [r7, #12]
 800cc5a:	4413      	add	r3, r2
 800cc5c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800cc60:	681b      	ldr	r3, [r3, #0]
 800cc62:	68ba      	ldr	r2, [r7, #8]
 800cc64:	0151      	lsls	r1, r2, #5
 800cc66:	68fa      	ldr	r2, [r7, #12]
 800cc68:	440a      	add	r2, r1
 800cc6a:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800cc6e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800cc72:	6013      	str	r3, [r2, #0]
 800cc74:	e02b      	b.n	800ccce <USB_EPSetStall+0xce>
 800cc76:	68bb      	ldr	r3, [r7, #8]
 800cc78:	015a      	lsls	r2, r3, #5
 800cc7a:	68fb      	ldr	r3, [r7, #12]
 800cc7c:	4413      	add	r3, r2
 800cc7e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800cc82:	681b      	ldr	r3, [r3, #0]
 800cc84:	2b00      	cmp	r3, #0
 800cc86:	db12      	blt.n	800ccae <USB_EPSetStall+0xae>
 800cc88:	68bb      	ldr	r3, [r7, #8]
 800cc8a:	2b00      	cmp	r3, #0
 800cc8c:	d00f      	beq.n	800ccae <USB_EPSetStall+0xae>
 800cc8e:	68bb      	ldr	r3, [r7, #8]
 800cc90:	015a      	lsls	r2, r3, #5
 800cc92:	68fb      	ldr	r3, [r7, #12]
 800cc94:	4413      	add	r3, r2
 800cc96:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800cc9a:	681b      	ldr	r3, [r3, #0]
 800cc9c:	68ba      	ldr	r2, [r7, #8]
 800cc9e:	0151      	lsls	r1, r2, #5
 800cca0:	68fa      	ldr	r2, [r7, #12]
 800cca2:	440a      	add	r2, r1
 800cca4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800cca8:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800ccac:	6013      	str	r3, [r2, #0]
 800ccae:	68bb      	ldr	r3, [r7, #8]
 800ccb0:	015a      	lsls	r2, r3, #5
 800ccb2:	68fb      	ldr	r3, [r7, #12]
 800ccb4:	4413      	add	r3, r2
 800ccb6:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800ccba:	681b      	ldr	r3, [r3, #0]
 800ccbc:	68ba      	ldr	r2, [r7, #8]
 800ccbe:	0151      	lsls	r1, r2, #5
 800ccc0:	68fa      	ldr	r2, [r7, #12]
 800ccc2:	440a      	add	r2, r1
 800ccc4:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800ccc8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800cccc:	6013      	str	r3, [r2, #0]
 800ccce:	2300      	movs	r3, #0
 800ccd0:	4618      	mov	r0, r3
 800ccd2:	3714      	adds	r7, #20
 800ccd4:	46bd      	mov	sp, r7
 800ccd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ccda:	4770      	bx	lr

0800ccdc <USB_EPClearStall>:
 800ccdc:	b480      	push	{r7}
 800ccde:	b085      	sub	sp, #20
 800cce0:	af00      	add	r7, sp, #0
 800cce2:	6078      	str	r0, [r7, #4]
 800cce4:	6039      	str	r1, [r7, #0]
 800cce6:	687b      	ldr	r3, [r7, #4]
 800cce8:	60fb      	str	r3, [r7, #12]
 800ccea:	683b      	ldr	r3, [r7, #0]
 800ccec:	781b      	ldrb	r3, [r3, #0]
 800ccee:	60bb      	str	r3, [r7, #8]
 800ccf0:	683b      	ldr	r3, [r7, #0]
 800ccf2:	785b      	ldrb	r3, [r3, #1]
 800ccf4:	2b01      	cmp	r3, #1
 800ccf6:	d128      	bne.n	800cd4a <USB_EPClearStall+0x6e>
 800ccf8:	68bb      	ldr	r3, [r7, #8]
 800ccfa:	015a      	lsls	r2, r3, #5
 800ccfc:	68fb      	ldr	r3, [r7, #12]
 800ccfe:	4413      	add	r3, r2
 800cd00:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800cd04:	681b      	ldr	r3, [r3, #0]
 800cd06:	68ba      	ldr	r2, [r7, #8]
 800cd08:	0151      	lsls	r1, r2, #5
 800cd0a:	68fa      	ldr	r2, [r7, #12]
 800cd0c:	440a      	add	r2, r1
 800cd0e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800cd12:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800cd16:	6013      	str	r3, [r2, #0]
 800cd18:	683b      	ldr	r3, [r7, #0]
 800cd1a:	791b      	ldrb	r3, [r3, #4]
 800cd1c:	2b03      	cmp	r3, #3
 800cd1e:	d003      	beq.n	800cd28 <USB_EPClearStall+0x4c>
 800cd20:	683b      	ldr	r3, [r7, #0]
 800cd22:	791b      	ldrb	r3, [r3, #4]
 800cd24:	2b02      	cmp	r3, #2
 800cd26:	d138      	bne.n	800cd9a <USB_EPClearStall+0xbe>
 800cd28:	68bb      	ldr	r3, [r7, #8]
 800cd2a:	015a      	lsls	r2, r3, #5
 800cd2c:	68fb      	ldr	r3, [r7, #12]
 800cd2e:	4413      	add	r3, r2
 800cd30:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800cd34:	681b      	ldr	r3, [r3, #0]
 800cd36:	68ba      	ldr	r2, [r7, #8]
 800cd38:	0151      	lsls	r1, r2, #5
 800cd3a:	68fa      	ldr	r2, [r7, #12]
 800cd3c:	440a      	add	r2, r1
 800cd3e:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800cd42:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800cd46:	6013      	str	r3, [r2, #0]
 800cd48:	e027      	b.n	800cd9a <USB_EPClearStall+0xbe>
 800cd4a:	68bb      	ldr	r3, [r7, #8]
 800cd4c:	015a      	lsls	r2, r3, #5
 800cd4e:	68fb      	ldr	r3, [r7, #12]
 800cd50:	4413      	add	r3, r2
 800cd52:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800cd56:	681b      	ldr	r3, [r3, #0]
 800cd58:	68ba      	ldr	r2, [r7, #8]
 800cd5a:	0151      	lsls	r1, r2, #5
 800cd5c:	68fa      	ldr	r2, [r7, #12]
 800cd5e:	440a      	add	r2, r1
 800cd60:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800cd64:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800cd68:	6013      	str	r3, [r2, #0]
 800cd6a:	683b      	ldr	r3, [r7, #0]
 800cd6c:	791b      	ldrb	r3, [r3, #4]
 800cd6e:	2b03      	cmp	r3, #3
 800cd70:	d003      	beq.n	800cd7a <USB_EPClearStall+0x9e>
 800cd72:	683b      	ldr	r3, [r7, #0]
 800cd74:	791b      	ldrb	r3, [r3, #4]
 800cd76:	2b02      	cmp	r3, #2
 800cd78:	d10f      	bne.n	800cd9a <USB_EPClearStall+0xbe>
 800cd7a:	68bb      	ldr	r3, [r7, #8]
 800cd7c:	015a      	lsls	r2, r3, #5
 800cd7e:	68fb      	ldr	r3, [r7, #12]
 800cd80:	4413      	add	r3, r2
 800cd82:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800cd86:	681b      	ldr	r3, [r3, #0]
 800cd88:	68ba      	ldr	r2, [r7, #8]
 800cd8a:	0151      	lsls	r1, r2, #5
 800cd8c:	68fa      	ldr	r2, [r7, #12]
 800cd8e:	440a      	add	r2, r1
 800cd90:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800cd94:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800cd98:	6013      	str	r3, [r2, #0]
 800cd9a:	2300      	movs	r3, #0
 800cd9c:	4618      	mov	r0, r3
 800cd9e:	3714      	adds	r7, #20
 800cda0:	46bd      	mov	sp, r7
 800cda2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cda6:	4770      	bx	lr

0800cda8 <USB_SetDevAddress>:
 800cda8:	b480      	push	{r7}
 800cdaa:	b085      	sub	sp, #20
 800cdac:	af00      	add	r7, sp, #0
 800cdae:	6078      	str	r0, [r7, #4]
 800cdb0:	460b      	mov	r3, r1
 800cdb2:	70fb      	strb	r3, [r7, #3]
 800cdb4:	687b      	ldr	r3, [r7, #4]
 800cdb6:	60fb      	str	r3, [r7, #12]
 800cdb8:	68fb      	ldr	r3, [r7, #12]
 800cdba:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800cdbe:	681b      	ldr	r3, [r3, #0]
 800cdc0:	68fa      	ldr	r2, [r7, #12]
 800cdc2:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800cdc6:	f423 63fe 	bic.w	r3, r3, #2032	; 0x7f0
 800cdca:	6013      	str	r3, [r2, #0]
 800cdcc:	68fb      	ldr	r3, [r7, #12]
 800cdce:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800cdd2:	681a      	ldr	r2, [r3, #0]
 800cdd4:	78fb      	ldrb	r3, [r7, #3]
 800cdd6:	011b      	lsls	r3, r3, #4
 800cdd8:	f403 63fe 	and.w	r3, r3, #2032	; 0x7f0
 800cddc:	68f9      	ldr	r1, [r7, #12]
 800cdde:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800cde2:	4313      	orrs	r3, r2
 800cde4:	600b      	str	r3, [r1, #0]
 800cde6:	2300      	movs	r3, #0
 800cde8:	4618      	mov	r0, r3
 800cdea:	3714      	adds	r7, #20
 800cdec:	46bd      	mov	sp, r7
 800cdee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdf2:	4770      	bx	lr

0800cdf4 <USB_DevConnect>:
 800cdf4:	b480      	push	{r7}
 800cdf6:	b085      	sub	sp, #20
 800cdf8:	af00      	add	r7, sp, #0
 800cdfa:	6078      	str	r0, [r7, #4]
 800cdfc:	687b      	ldr	r3, [r7, #4]
 800cdfe:	60fb      	str	r3, [r7, #12]
 800ce00:	68fb      	ldr	r3, [r7, #12]
 800ce02:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800ce06:	681b      	ldr	r3, [r3, #0]
 800ce08:	68fa      	ldr	r2, [r7, #12]
 800ce0a:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 800ce0e:	f023 0303 	bic.w	r3, r3, #3
 800ce12:	6013      	str	r3, [r2, #0]
 800ce14:	68fb      	ldr	r3, [r7, #12]
 800ce16:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ce1a:	685b      	ldr	r3, [r3, #4]
 800ce1c:	68fa      	ldr	r2, [r7, #12]
 800ce1e:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800ce22:	f023 0302 	bic.w	r3, r3, #2
 800ce26:	6053      	str	r3, [r2, #4]
 800ce28:	2300      	movs	r3, #0
 800ce2a:	4618      	mov	r0, r3
 800ce2c:	3714      	adds	r7, #20
 800ce2e:	46bd      	mov	sp, r7
 800ce30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce34:	4770      	bx	lr

0800ce36 <USB_DevDisconnect>:
 800ce36:	b480      	push	{r7}
 800ce38:	b085      	sub	sp, #20
 800ce3a:	af00      	add	r7, sp, #0
 800ce3c:	6078      	str	r0, [r7, #4]
 800ce3e:	687b      	ldr	r3, [r7, #4]
 800ce40:	60fb      	str	r3, [r7, #12]
 800ce42:	68fb      	ldr	r3, [r7, #12]
 800ce44:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800ce48:	681b      	ldr	r3, [r3, #0]
 800ce4a:	68fa      	ldr	r2, [r7, #12]
 800ce4c:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 800ce50:	f023 0303 	bic.w	r3, r3, #3
 800ce54:	6013      	str	r3, [r2, #0]
 800ce56:	68fb      	ldr	r3, [r7, #12]
 800ce58:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ce5c:	685b      	ldr	r3, [r3, #4]
 800ce5e:	68fa      	ldr	r2, [r7, #12]
 800ce60:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800ce64:	f043 0302 	orr.w	r3, r3, #2
 800ce68:	6053      	str	r3, [r2, #4]
 800ce6a:	2300      	movs	r3, #0
 800ce6c:	4618      	mov	r0, r3
 800ce6e:	3714      	adds	r7, #20
 800ce70:	46bd      	mov	sp, r7
 800ce72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce76:	4770      	bx	lr

0800ce78 <USB_ReadInterrupts>:
 800ce78:	b480      	push	{r7}
 800ce7a:	b085      	sub	sp, #20
 800ce7c:	af00      	add	r7, sp, #0
 800ce7e:	6078      	str	r0, [r7, #4]
 800ce80:	687b      	ldr	r3, [r7, #4]
 800ce82:	695b      	ldr	r3, [r3, #20]
 800ce84:	60fb      	str	r3, [r7, #12]
 800ce86:	687b      	ldr	r3, [r7, #4]
 800ce88:	699b      	ldr	r3, [r3, #24]
 800ce8a:	68fa      	ldr	r2, [r7, #12]
 800ce8c:	4013      	ands	r3, r2
 800ce8e:	60fb      	str	r3, [r7, #12]
 800ce90:	68fb      	ldr	r3, [r7, #12]
 800ce92:	4618      	mov	r0, r3
 800ce94:	3714      	adds	r7, #20
 800ce96:	46bd      	mov	sp, r7
 800ce98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce9c:	4770      	bx	lr

0800ce9e <USB_ReadDevAllOutEpInterrupt>:
 800ce9e:	b480      	push	{r7}
 800cea0:	b085      	sub	sp, #20
 800cea2:	af00      	add	r7, sp, #0
 800cea4:	6078      	str	r0, [r7, #4]
 800cea6:	687b      	ldr	r3, [r7, #4]
 800cea8:	60fb      	str	r3, [r7, #12]
 800ceaa:	68fb      	ldr	r3, [r7, #12]
 800ceac:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ceb0:	699b      	ldr	r3, [r3, #24]
 800ceb2:	60bb      	str	r3, [r7, #8]
 800ceb4:	68fb      	ldr	r3, [r7, #12]
 800ceb6:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ceba:	69db      	ldr	r3, [r3, #28]
 800cebc:	68ba      	ldr	r2, [r7, #8]
 800cebe:	4013      	ands	r3, r2
 800cec0:	60bb      	str	r3, [r7, #8]
 800cec2:	68bb      	ldr	r3, [r7, #8]
 800cec4:	0c1b      	lsrs	r3, r3, #16
 800cec6:	4618      	mov	r0, r3
 800cec8:	3714      	adds	r7, #20
 800ceca:	46bd      	mov	sp, r7
 800cecc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ced0:	4770      	bx	lr

0800ced2 <USB_ReadDevAllInEpInterrupt>:
 800ced2:	b480      	push	{r7}
 800ced4:	b085      	sub	sp, #20
 800ced6:	af00      	add	r7, sp, #0
 800ced8:	6078      	str	r0, [r7, #4]
 800ceda:	687b      	ldr	r3, [r7, #4]
 800cedc:	60fb      	str	r3, [r7, #12]
 800cede:	68fb      	ldr	r3, [r7, #12]
 800cee0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800cee4:	699b      	ldr	r3, [r3, #24]
 800cee6:	60bb      	str	r3, [r7, #8]
 800cee8:	68fb      	ldr	r3, [r7, #12]
 800ceea:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800ceee:	69db      	ldr	r3, [r3, #28]
 800cef0:	68ba      	ldr	r2, [r7, #8]
 800cef2:	4013      	ands	r3, r2
 800cef4:	60bb      	str	r3, [r7, #8]
 800cef6:	68bb      	ldr	r3, [r7, #8]
 800cef8:	b29b      	uxth	r3, r3
 800cefa:	4618      	mov	r0, r3
 800cefc:	3714      	adds	r7, #20
 800cefe:	46bd      	mov	sp, r7
 800cf00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf04:	4770      	bx	lr

0800cf06 <USB_ReadDevOutEPInterrupt>:
 800cf06:	b480      	push	{r7}
 800cf08:	b085      	sub	sp, #20
 800cf0a:	af00      	add	r7, sp, #0
 800cf0c:	6078      	str	r0, [r7, #4]
 800cf0e:	460b      	mov	r3, r1
 800cf10:	70fb      	strb	r3, [r7, #3]
 800cf12:	687b      	ldr	r3, [r7, #4]
 800cf14:	60fb      	str	r3, [r7, #12]
 800cf16:	78fb      	ldrb	r3, [r7, #3]
 800cf18:	015a      	lsls	r2, r3, #5
 800cf1a:	68fb      	ldr	r3, [r7, #12]
 800cf1c:	4413      	add	r3, r2
 800cf1e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800cf22:	689b      	ldr	r3, [r3, #8]
 800cf24:	60bb      	str	r3, [r7, #8]
 800cf26:	68fb      	ldr	r3, [r7, #12]
 800cf28:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800cf2c:	695b      	ldr	r3, [r3, #20]
 800cf2e:	68ba      	ldr	r2, [r7, #8]
 800cf30:	4013      	ands	r3, r2
 800cf32:	60bb      	str	r3, [r7, #8]
 800cf34:	68bb      	ldr	r3, [r7, #8]
 800cf36:	4618      	mov	r0, r3
 800cf38:	3714      	adds	r7, #20
 800cf3a:	46bd      	mov	sp, r7
 800cf3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf40:	4770      	bx	lr

0800cf42 <USB_ReadDevInEPInterrupt>:
 800cf42:	b480      	push	{r7}
 800cf44:	b087      	sub	sp, #28
 800cf46:	af00      	add	r7, sp, #0
 800cf48:	6078      	str	r0, [r7, #4]
 800cf4a:	460b      	mov	r3, r1
 800cf4c:	70fb      	strb	r3, [r7, #3]
 800cf4e:	687b      	ldr	r3, [r7, #4]
 800cf50:	617b      	str	r3, [r7, #20]
 800cf52:	697b      	ldr	r3, [r7, #20]
 800cf54:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800cf58:	691b      	ldr	r3, [r3, #16]
 800cf5a:	613b      	str	r3, [r7, #16]
 800cf5c:	697b      	ldr	r3, [r7, #20]
 800cf5e:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800cf62:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cf64:	60fb      	str	r3, [r7, #12]
 800cf66:	78fb      	ldrb	r3, [r7, #3]
 800cf68:	f003 030f 	and.w	r3, r3, #15
 800cf6c:	68fa      	ldr	r2, [r7, #12]
 800cf6e:	fa22 f303 	lsr.w	r3, r2, r3
 800cf72:	01db      	lsls	r3, r3, #7
 800cf74:	b2db      	uxtb	r3, r3
 800cf76:	693a      	ldr	r2, [r7, #16]
 800cf78:	4313      	orrs	r3, r2
 800cf7a:	613b      	str	r3, [r7, #16]
 800cf7c:	78fb      	ldrb	r3, [r7, #3]
 800cf7e:	015a      	lsls	r2, r3, #5
 800cf80:	697b      	ldr	r3, [r7, #20]
 800cf82:	4413      	add	r3, r2
 800cf84:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800cf88:	689b      	ldr	r3, [r3, #8]
 800cf8a:	693a      	ldr	r2, [r7, #16]
 800cf8c:	4013      	ands	r3, r2
 800cf8e:	60bb      	str	r3, [r7, #8]
 800cf90:	68bb      	ldr	r3, [r7, #8]
 800cf92:	4618      	mov	r0, r3
 800cf94:	371c      	adds	r7, #28
 800cf96:	46bd      	mov	sp, r7
 800cf98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf9c:	4770      	bx	lr

0800cf9e <USB_GetMode>:
 800cf9e:	b480      	push	{r7}
 800cfa0:	b083      	sub	sp, #12
 800cfa2:	af00      	add	r7, sp, #0
 800cfa4:	6078      	str	r0, [r7, #4]
 800cfa6:	687b      	ldr	r3, [r7, #4]
 800cfa8:	695b      	ldr	r3, [r3, #20]
 800cfaa:	f003 0301 	and.w	r3, r3, #1
 800cfae:	4618      	mov	r0, r3
 800cfb0:	370c      	adds	r7, #12
 800cfb2:	46bd      	mov	sp, r7
 800cfb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfb8:	4770      	bx	lr

0800cfba <USB_ActivateSetup>:
 800cfba:	b480      	push	{r7}
 800cfbc:	b085      	sub	sp, #20
 800cfbe:	af00      	add	r7, sp, #0
 800cfc0:	6078      	str	r0, [r7, #4]
 800cfc2:	687b      	ldr	r3, [r7, #4]
 800cfc4:	60fb      	str	r3, [r7, #12]
 800cfc6:	68fb      	ldr	r3, [r7, #12]
 800cfc8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800cfcc:	681b      	ldr	r3, [r3, #0]
 800cfce:	68fa      	ldr	r2, [r7, #12]
 800cfd0:	f502 6210 	add.w	r2, r2, #2304	; 0x900
 800cfd4:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 800cfd8:	f023 0307 	bic.w	r3, r3, #7
 800cfdc:	6013      	str	r3, [r2, #0]
 800cfde:	68fb      	ldr	r3, [r7, #12]
 800cfe0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800cfe4:	685b      	ldr	r3, [r3, #4]
 800cfe6:	68fa      	ldr	r2, [r7, #12]
 800cfe8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800cfec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800cff0:	6053      	str	r3, [r2, #4]
 800cff2:	2300      	movs	r3, #0
 800cff4:	4618      	mov	r0, r3
 800cff6:	3714      	adds	r7, #20
 800cff8:	46bd      	mov	sp, r7
 800cffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cffe:	4770      	bx	lr

0800d000 <USB_EP0_OutStart>:
 800d000:	b480      	push	{r7}
 800d002:	b087      	sub	sp, #28
 800d004:	af00      	add	r7, sp, #0
 800d006:	60f8      	str	r0, [r7, #12]
 800d008:	460b      	mov	r3, r1
 800d00a:	607a      	str	r2, [r7, #4]
 800d00c:	72fb      	strb	r3, [r7, #11]
 800d00e:	68fb      	ldr	r3, [r7, #12]
 800d010:	617b      	str	r3, [r7, #20]
 800d012:	68fb      	ldr	r3, [r7, #12]
 800d014:	333c      	adds	r3, #60	; 0x3c
 800d016:	3304      	adds	r3, #4
 800d018:	681b      	ldr	r3, [r3, #0]
 800d01a:	613b      	str	r3, [r7, #16]
 800d01c:	693b      	ldr	r3, [r7, #16]
 800d01e:	4a26      	ldr	r2, [pc, #152]	; (800d0b8 <USB_EP0_OutStart+0xb8>)
 800d020:	4293      	cmp	r3, r2
 800d022:	d90a      	bls.n	800d03a <USB_EP0_OutStart+0x3a>
 800d024:	697b      	ldr	r3, [r7, #20]
 800d026:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d02a:	681b      	ldr	r3, [r3, #0]
 800d02c:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800d030:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800d034:	d101      	bne.n	800d03a <USB_EP0_OutStart+0x3a>
 800d036:	2300      	movs	r3, #0
 800d038:	e037      	b.n	800d0aa <USB_EP0_OutStart+0xaa>
 800d03a:	697b      	ldr	r3, [r7, #20]
 800d03c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d040:	461a      	mov	r2, r3
 800d042:	2300      	movs	r3, #0
 800d044:	6113      	str	r3, [r2, #16]
 800d046:	697b      	ldr	r3, [r7, #20]
 800d048:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d04c:	691b      	ldr	r3, [r3, #16]
 800d04e:	697a      	ldr	r2, [r7, #20]
 800d050:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800d054:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800d058:	6113      	str	r3, [r2, #16]
 800d05a:	697b      	ldr	r3, [r7, #20]
 800d05c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d060:	691b      	ldr	r3, [r3, #16]
 800d062:	697a      	ldr	r2, [r7, #20]
 800d064:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800d068:	f043 0318 	orr.w	r3, r3, #24
 800d06c:	6113      	str	r3, [r2, #16]
 800d06e:	697b      	ldr	r3, [r7, #20]
 800d070:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d074:	691b      	ldr	r3, [r3, #16]
 800d076:	697a      	ldr	r2, [r7, #20]
 800d078:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800d07c:	f043 43c0 	orr.w	r3, r3, #1610612736	; 0x60000000
 800d080:	6113      	str	r3, [r2, #16]
 800d082:	7afb      	ldrb	r3, [r7, #11]
 800d084:	2b01      	cmp	r3, #1
 800d086:	d10f      	bne.n	800d0a8 <USB_EP0_OutStart+0xa8>
 800d088:	697b      	ldr	r3, [r7, #20]
 800d08a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d08e:	461a      	mov	r2, r3
 800d090:	687b      	ldr	r3, [r7, #4]
 800d092:	6153      	str	r3, [r2, #20]
 800d094:	697b      	ldr	r3, [r7, #20]
 800d096:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d09a:	681b      	ldr	r3, [r3, #0]
 800d09c:	697a      	ldr	r2, [r7, #20]
 800d09e:	f502 6230 	add.w	r2, r2, #2816	; 0xb00
 800d0a2:	f043 2380 	orr.w	r3, r3, #2147516416	; 0x80008000
 800d0a6:	6013      	str	r3, [r2, #0]
 800d0a8:	2300      	movs	r3, #0
 800d0aa:	4618      	mov	r0, r3
 800d0ac:	371c      	adds	r7, #28
 800d0ae:	46bd      	mov	sp, r7
 800d0b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0b4:	4770      	bx	lr
 800d0b6:	bf00      	nop
 800d0b8:	4f54300a 	.word	0x4f54300a

0800d0bc <USB_CoreReset>:
 800d0bc:	b480      	push	{r7}
 800d0be:	b085      	sub	sp, #20
 800d0c0:	af00      	add	r7, sp, #0
 800d0c2:	6078      	str	r0, [r7, #4]
 800d0c4:	2300      	movs	r3, #0
 800d0c6:	60fb      	str	r3, [r7, #12]
 800d0c8:	68fb      	ldr	r3, [r7, #12]
 800d0ca:	3301      	adds	r3, #1
 800d0cc:	60fb      	str	r3, [r7, #12]
 800d0ce:	68fb      	ldr	r3, [r7, #12]
 800d0d0:	4a13      	ldr	r2, [pc, #76]	; (800d120 <USB_CoreReset+0x64>)
 800d0d2:	4293      	cmp	r3, r2
 800d0d4:	d901      	bls.n	800d0da <USB_CoreReset+0x1e>
 800d0d6:	2303      	movs	r3, #3
 800d0d8:	e01b      	b.n	800d112 <USB_CoreReset+0x56>
 800d0da:	687b      	ldr	r3, [r7, #4]
 800d0dc:	691b      	ldr	r3, [r3, #16]
 800d0de:	2b00      	cmp	r3, #0
 800d0e0:	daf2      	bge.n	800d0c8 <USB_CoreReset+0xc>
 800d0e2:	2300      	movs	r3, #0
 800d0e4:	60fb      	str	r3, [r7, #12]
 800d0e6:	687b      	ldr	r3, [r7, #4]
 800d0e8:	691b      	ldr	r3, [r3, #16]
 800d0ea:	f043 0201 	orr.w	r2, r3, #1
 800d0ee:	687b      	ldr	r3, [r7, #4]
 800d0f0:	611a      	str	r2, [r3, #16]
 800d0f2:	68fb      	ldr	r3, [r7, #12]
 800d0f4:	3301      	adds	r3, #1
 800d0f6:	60fb      	str	r3, [r7, #12]
 800d0f8:	68fb      	ldr	r3, [r7, #12]
 800d0fa:	4a09      	ldr	r2, [pc, #36]	; (800d120 <USB_CoreReset+0x64>)
 800d0fc:	4293      	cmp	r3, r2
 800d0fe:	d901      	bls.n	800d104 <USB_CoreReset+0x48>
 800d100:	2303      	movs	r3, #3
 800d102:	e006      	b.n	800d112 <USB_CoreReset+0x56>
 800d104:	687b      	ldr	r3, [r7, #4]
 800d106:	691b      	ldr	r3, [r3, #16]
 800d108:	f003 0301 	and.w	r3, r3, #1
 800d10c:	2b01      	cmp	r3, #1
 800d10e:	d0f0      	beq.n	800d0f2 <USB_CoreReset+0x36>
 800d110:	2300      	movs	r3, #0
 800d112:	4618      	mov	r0, r3
 800d114:	3714      	adds	r7, #20
 800d116:	46bd      	mov	sp, r7
 800d118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d11c:	4770      	bx	lr
 800d11e:	bf00      	nop
 800d120:	00030d40 	.word	0x00030d40

0800d124 <USBD_CDC_Init>:
 800d124:	b580      	push	{r7, lr}
 800d126:	b084      	sub	sp, #16
 800d128:	af00      	add	r7, sp, #0
 800d12a:	6078      	str	r0, [r7, #4]
 800d12c:	460b      	mov	r3, r1
 800d12e:	70fb      	strb	r3, [r7, #3]
 800d130:	f44f 7007 	mov.w	r0, #540	; 0x21c
 800d134:	f002 fc6c 	bl	800fa10 <USBD_static_malloc>
 800d138:	60f8      	str	r0, [r7, #12]
 800d13a:	68fb      	ldr	r3, [r7, #12]
 800d13c:	2b00      	cmp	r3, #0
 800d13e:	d109      	bne.n	800d154 <USBD_CDC_Init+0x30>
 800d140:	687b      	ldr	r3, [r7, #4]
 800d142:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d146:	687b      	ldr	r3, [r7, #4]
 800d148:	32b0      	adds	r2, #176	; 0xb0
 800d14a:	2100      	movs	r1, #0
 800d14c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800d150:	2302      	movs	r3, #2
 800d152:	e0d4      	b.n	800d2fe <USBD_CDC_Init+0x1da>
 800d154:	f44f 7207 	mov.w	r2, #540	; 0x21c
 800d158:	2100      	movs	r1, #0
 800d15a:	68f8      	ldr	r0, [r7, #12]
 800d15c:	f004 fb1b 	bl	8011796 <memset>
 800d160:	687b      	ldr	r3, [r7, #4]
 800d162:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d166:	687b      	ldr	r3, [r7, #4]
 800d168:	32b0      	adds	r2, #176	; 0xb0
 800d16a:	68f9      	ldr	r1, [r7, #12]
 800d16c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800d170:	687b      	ldr	r3, [r7, #4]
 800d172:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d176:	687b      	ldr	r3, [r7, #4]
 800d178:	32b0      	adds	r2, #176	; 0xb0
 800d17a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800d17e:	687b      	ldr	r3, [r7, #4]
 800d180:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 800d184:	687b      	ldr	r3, [r7, #4]
 800d186:	7c1b      	ldrb	r3, [r3, #16]
 800d188:	2b00      	cmp	r3, #0
 800d18a:	d138      	bne.n	800d1fe <USBD_CDC_Init+0xda>
 800d18c:	4b5e      	ldr	r3, [pc, #376]	; (800d308 <USBD_CDC_Init+0x1e4>)
 800d18e:	7819      	ldrb	r1, [r3, #0]
 800d190:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d194:	2202      	movs	r2, #2
 800d196:	6878      	ldr	r0, [r7, #4]
 800d198:	f002 fb17 	bl	800f7ca <USBD_LL_OpenEP>
 800d19c:	4b5a      	ldr	r3, [pc, #360]	; (800d308 <USBD_CDC_Init+0x1e4>)
 800d19e:	781b      	ldrb	r3, [r3, #0]
 800d1a0:	f003 020f 	and.w	r2, r3, #15
 800d1a4:	6879      	ldr	r1, [r7, #4]
 800d1a6:	4613      	mov	r3, r2
 800d1a8:	009b      	lsls	r3, r3, #2
 800d1aa:	4413      	add	r3, r2
 800d1ac:	009b      	lsls	r3, r3, #2
 800d1ae:	440b      	add	r3, r1
 800d1b0:	3324      	adds	r3, #36	; 0x24
 800d1b2:	2201      	movs	r2, #1
 800d1b4:	801a      	strh	r2, [r3, #0]
 800d1b6:	4b55      	ldr	r3, [pc, #340]	; (800d30c <USBD_CDC_Init+0x1e8>)
 800d1b8:	7819      	ldrb	r1, [r3, #0]
 800d1ba:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d1be:	2202      	movs	r2, #2
 800d1c0:	6878      	ldr	r0, [r7, #4]
 800d1c2:	f002 fb02 	bl	800f7ca <USBD_LL_OpenEP>
 800d1c6:	4b51      	ldr	r3, [pc, #324]	; (800d30c <USBD_CDC_Init+0x1e8>)
 800d1c8:	781b      	ldrb	r3, [r3, #0]
 800d1ca:	f003 020f 	and.w	r2, r3, #15
 800d1ce:	6879      	ldr	r1, [r7, #4]
 800d1d0:	4613      	mov	r3, r2
 800d1d2:	009b      	lsls	r3, r3, #2
 800d1d4:	4413      	add	r3, r2
 800d1d6:	009b      	lsls	r3, r3, #2
 800d1d8:	440b      	add	r3, r1
 800d1da:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800d1de:	2201      	movs	r2, #1
 800d1e0:	801a      	strh	r2, [r3, #0]
 800d1e2:	4b4b      	ldr	r3, [pc, #300]	; (800d310 <USBD_CDC_Init+0x1ec>)
 800d1e4:	781b      	ldrb	r3, [r3, #0]
 800d1e6:	f003 020f 	and.w	r2, r3, #15
 800d1ea:	6879      	ldr	r1, [r7, #4]
 800d1ec:	4613      	mov	r3, r2
 800d1ee:	009b      	lsls	r3, r3, #2
 800d1f0:	4413      	add	r3, r2
 800d1f2:	009b      	lsls	r3, r3, #2
 800d1f4:	440b      	add	r3, r1
 800d1f6:	3326      	adds	r3, #38	; 0x26
 800d1f8:	2210      	movs	r2, #16
 800d1fa:	801a      	strh	r2, [r3, #0]
 800d1fc:	e035      	b.n	800d26a <USBD_CDC_Init+0x146>
 800d1fe:	4b42      	ldr	r3, [pc, #264]	; (800d308 <USBD_CDC_Init+0x1e4>)
 800d200:	7819      	ldrb	r1, [r3, #0]
 800d202:	2340      	movs	r3, #64	; 0x40
 800d204:	2202      	movs	r2, #2
 800d206:	6878      	ldr	r0, [r7, #4]
 800d208:	f002 fadf 	bl	800f7ca <USBD_LL_OpenEP>
 800d20c:	4b3e      	ldr	r3, [pc, #248]	; (800d308 <USBD_CDC_Init+0x1e4>)
 800d20e:	781b      	ldrb	r3, [r3, #0]
 800d210:	f003 020f 	and.w	r2, r3, #15
 800d214:	6879      	ldr	r1, [r7, #4]
 800d216:	4613      	mov	r3, r2
 800d218:	009b      	lsls	r3, r3, #2
 800d21a:	4413      	add	r3, r2
 800d21c:	009b      	lsls	r3, r3, #2
 800d21e:	440b      	add	r3, r1
 800d220:	3324      	adds	r3, #36	; 0x24
 800d222:	2201      	movs	r2, #1
 800d224:	801a      	strh	r2, [r3, #0]
 800d226:	4b39      	ldr	r3, [pc, #228]	; (800d30c <USBD_CDC_Init+0x1e8>)
 800d228:	7819      	ldrb	r1, [r3, #0]
 800d22a:	2340      	movs	r3, #64	; 0x40
 800d22c:	2202      	movs	r2, #2
 800d22e:	6878      	ldr	r0, [r7, #4]
 800d230:	f002 facb 	bl	800f7ca <USBD_LL_OpenEP>
 800d234:	4b35      	ldr	r3, [pc, #212]	; (800d30c <USBD_CDC_Init+0x1e8>)
 800d236:	781b      	ldrb	r3, [r3, #0]
 800d238:	f003 020f 	and.w	r2, r3, #15
 800d23c:	6879      	ldr	r1, [r7, #4]
 800d23e:	4613      	mov	r3, r2
 800d240:	009b      	lsls	r3, r3, #2
 800d242:	4413      	add	r3, r2
 800d244:	009b      	lsls	r3, r3, #2
 800d246:	440b      	add	r3, r1
 800d248:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800d24c:	2201      	movs	r2, #1
 800d24e:	801a      	strh	r2, [r3, #0]
 800d250:	4b2f      	ldr	r3, [pc, #188]	; (800d310 <USBD_CDC_Init+0x1ec>)
 800d252:	781b      	ldrb	r3, [r3, #0]
 800d254:	f003 020f 	and.w	r2, r3, #15
 800d258:	6879      	ldr	r1, [r7, #4]
 800d25a:	4613      	mov	r3, r2
 800d25c:	009b      	lsls	r3, r3, #2
 800d25e:	4413      	add	r3, r2
 800d260:	009b      	lsls	r3, r3, #2
 800d262:	440b      	add	r3, r1
 800d264:	3326      	adds	r3, #38	; 0x26
 800d266:	2210      	movs	r2, #16
 800d268:	801a      	strh	r2, [r3, #0]
 800d26a:	4b29      	ldr	r3, [pc, #164]	; (800d310 <USBD_CDC_Init+0x1ec>)
 800d26c:	7819      	ldrb	r1, [r3, #0]
 800d26e:	2308      	movs	r3, #8
 800d270:	2203      	movs	r2, #3
 800d272:	6878      	ldr	r0, [r7, #4]
 800d274:	f002 faa9 	bl	800f7ca <USBD_LL_OpenEP>
 800d278:	4b25      	ldr	r3, [pc, #148]	; (800d310 <USBD_CDC_Init+0x1ec>)
 800d27a:	781b      	ldrb	r3, [r3, #0]
 800d27c:	f003 020f 	and.w	r2, r3, #15
 800d280:	6879      	ldr	r1, [r7, #4]
 800d282:	4613      	mov	r3, r2
 800d284:	009b      	lsls	r3, r3, #2
 800d286:	4413      	add	r3, r2
 800d288:	009b      	lsls	r3, r3, #2
 800d28a:	440b      	add	r3, r1
 800d28c:	3324      	adds	r3, #36	; 0x24
 800d28e:	2201      	movs	r2, #1
 800d290:	801a      	strh	r2, [r3, #0]
 800d292:	68fb      	ldr	r3, [r7, #12]
 800d294:	2200      	movs	r2, #0
 800d296:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800d29a:	687b      	ldr	r3, [r7, #4]
 800d29c:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d2a0:	687a      	ldr	r2, [r7, #4]
 800d2a2:	33b0      	adds	r3, #176	; 0xb0
 800d2a4:	009b      	lsls	r3, r3, #2
 800d2a6:	4413      	add	r3, r2
 800d2a8:	685b      	ldr	r3, [r3, #4]
 800d2aa:	681b      	ldr	r3, [r3, #0]
 800d2ac:	4798      	blx	r3
 800d2ae:	68fb      	ldr	r3, [r7, #12]
 800d2b0:	2200      	movs	r2, #0
 800d2b2:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800d2b6:	68fb      	ldr	r3, [r7, #12]
 800d2b8:	2200      	movs	r2, #0
 800d2ba:	f8c3 2218 	str.w	r2, [r3, #536]	; 0x218
 800d2be:	68fb      	ldr	r3, [r7, #12]
 800d2c0:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 800d2c4:	2b00      	cmp	r3, #0
 800d2c6:	d101      	bne.n	800d2cc <USBD_CDC_Init+0x1a8>
 800d2c8:	2302      	movs	r3, #2
 800d2ca:	e018      	b.n	800d2fe <USBD_CDC_Init+0x1da>
 800d2cc:	687b      	ldr	r3, [r7, #4]
 800d2ce:	7c1b      	ldrb	r3, [r3, #16]
 800d2d0:	2b00      	cmp	r3, #0
 800d2d2:	d10a      	bne.n	800d2ea <USBD_CDC_Init+0x1c6>
 800d2d4:	4b0d      	ldr	r3, [pc, #52]	; (800d30c <USBD_CDC_Init+0x1e8>)
 800d2d6:	7819      	ldrb	r1, [r3, #0]
 800d2d8:	68fb      	ldr	r3, [r7, #12]
 800d2da:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800d2de:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d2e2:	6878      	ldr	r0, [r7, #4]
 800d2e4:	f002 fb60 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800d2e8:	e008      	b.n	800d2fc <USBD_CDC_Init+0x1d8>
 800d2ea:	4b08      	ldr	r3, [pc, #32]	; (800d30c <USBD_CDC_Init+0x1e8>)
 800d2ec:	7819      	ldrb	r1, [r3, #0]
 800d2ee:	68fb      	ldr	r3, [r7, #12]
 800d2f0:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800d2f4:	2340      	movs	r3, #64	; 0x40
 800d2f6:	6878      	ldr	r0, [r7, #4]
 800d2f8:	f002 fb56 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800d2fc:	2300      	movs	r3, #0
 800d2fe:	4618      	mov	r0, r3
 800d300:	3710      	adds	r7, #16
 800d302:	46bd      	mov	sp, r7
 800d304:	bd80      	pop	{r7, pc}
 800d306:	bf00      	nop
 800d308:	200000b7 	.word	0x200000b7
 800d30c:	200000b8 	.word	0x200000b8
 800d310:	200000b9 	.word	0x200000b9

0800d314 <USBD_CDC_DeInit>:
 800d314:	b580      	push	{r7, lr}
 800d316:	b082      	sub	sp, #8
 800d318:	af00      	add	r7, sp, #0
 800d31a:	6078      	str	r0, [r7, #4]
 800d31c:	460b      	mov	r3, r1
 800d31e:	70fb      	strb	r3, [r7, #3]
 800d320:	4b3a      	ldr	r3, [pc, #232]	; (800d40c <USBD_CDC_DeInit+0xf8>)
 800d322:	781b      	ldrb	r3, [r3, #0]
 800d324:	4619      	mov	r1, r3
 800d326:	6878      	ldr	r0, [r7, #4]
 800d328:	f002 fa75 	bl	800f816 <USBD_LL_CloseEP>
 800d32c:	4b37      	ldr	r3, [pc, #220]	; (800d40c <USBD_CDC_DeInit+0xf8>)
 800d32e:	781b      	ldrb	r3, [r3, #0]
 800d330:	f003 020f 	and.w	r2, r3, #15
 800d334:	6879      	ldr	r1, [r7, #4]
 800d336:	4613      	mov	r3, r2
 800d338:	009b      	lsls	r3, r3, #2
 800d33a:	4413      	add	r3, r2
 800d33c:	009b      	lsls	r3, r3, #2
 800d33e:	440b      	add	r3, r1
 800d340:	3324      	adds	r3, #36	; 0x24
 800d342:	2200      	movs	r2, #0
 800d344:	801a      	strh	r2, [r3, #0]
 800d346:	4b32      	ldr	r3, [pc, #200]	; (800d410 <USBD_CDC_DeInit+0xfc>)
 800d348:	781b      	ldrb	r3, [r3, #0]
 800d34a:	4619      	mov	r1, r3
 800d34c:	6878      	ldr	r0, [r7, #4]
 800d34e:	f002 fa62 	bl	800f816 <USBD_LL_CloseEP>
 800d352:	4b2f      	ldr	r3, [pc, #188]	; (800d410 <USBD_CDC_DeInit+0xfc>)
 800d354:	781b      	ldrb	r3, [r3, #0]
 800d356:	f003 020f 	and.w	r2, r3, #15
 800d35a:	6879      	ldr	r1, [r7, #4]
 800d35c:	4613      	mov	r3, r2
 800d35e:	009b      	lsls	r3, r3, #2
 800d360:	4413      	add	r3, r2
 800d362:	009b      	lsls	r3, r3, #2
 800d364:	440b      	add	r3, r1
 800d366:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800d36a:	2200      	movs	r2, #0
 800d36c:	801a      	strh	r2, [r3, #0]
 800d36e:	4b29      	ldr	r3, [pc, #164]	; (800d414 <USBD_CDC_DeInit+0x100>)
 800d370:	781b      	ldrb	r3, [r3, #0]
 800d372:	4619      	mov	r1, r3
 800d374:	6878      	ldr	r0, [r7, #4]
 800d376:	f002 fa4e 	bl	800f816 <USBD_LL_CloseEP>
 800d37a:	4b26      	ldr	r3, [pc, #152]	; (800d414 <USBD_CDC_DeInit+0x100>)
 800d37c:	781b      	ldrb	r3, [r3, #0]
 800d37e:	f003 020f 	and.w	r2, r3, #15
 800d382:	6879      	ldr	r1, [r7, #4]
 800d384:	4613      	mov	r3, r2
 800d386:	009b      	lsls	r3, r3, #2
 800d388:	4413      	add	r3, r2
 800d38a:	009b      	lsls	r3, r3, #2
 800d38c:	440b      	add	r3, r1
 800d38e:	3324      	adds	r3, #36	; 0x24
 800d390:	2200      	movs	r2, #0
 800d392:	801a      	strh	r2, [r3, #0]
 800d394:	4b1f      	ldr	r3, [pc, #124]	; (800d414 <USBD_CDC_DeInit+0x100>)
 800d396:	781b      	ldrb	r3, [r3, #0]
 800d398:	f003 020f 	and.w	r2, r3, #15
 800d39c:	6879      	ldr	r1, [r7, #4]
 800d39e:	4613      	mov	r3, r2
 800d3a0:	009b      	lsls	r3, r3, #2
 800d3a2:	4413      	add	r3, r2
 800d3a4:	009b      	lsls	r3, r3, #2
 800d3a6:	440b      	add	r3, r1
 800d3a8:	3326      	adds	r3, #38	; 0x26
 800d3aa:	2200      	movs	r2, #0
 800d3ac:	801a      	strh	r2, [r3, #0]
 800d3ae:	687b      	ldr	r3, [r7, #4]
 800d3b0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d3b4:	687b      	ldr	r3, [r7, #4]
 800d3b6:	32b0      	adds	r2, #176	; 0xb0
 800d3b8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d3bc:	2b00      	cmp	r3, #0
 800d3be:	d01f      	beq.n	800d400 <USBD_CDC_DeInit+0xec>
 800d3c0:	687b      	ldr	r3, [r7, #4]
 800d3c2:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d3c6:	687a      	ldr	r2, [r7, #4]
 800d3c8:	33b0      	adds	r3, #176	; 0xb0
 800d3ca:	009b      	lsls	r3, r3, #2
 800d3cc:	4413      	add	r3, r2
 800d3ce:	685b      	ldr	r3, [r3, #4]
 800d3d0:	685b      	ldr	r3, [r3, #4]
 800d3d2:	4798      	blx	r3
 800d3d4:	687b      	ldr	r3, [r7, #4]
 800d3d6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d3da:	687b      	ldr	r3, [r7, #4]
 800d3dc:	32b0      	adds	r2, #176	; 0xb0
 800d3de:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d3e2:	4618      	mov	r0, r3
 800d3e4:	f002 fb22 	bl	800fa2c <USBD_static_free>
 800d3e8:	687b      	ldr	r3, [r7, #4]
 800d3ea:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d3ee:	687b      	ldr	r3, [r7, #4]
 800d3f0:	32b0      	adds	r2, #176	; 0xb0
 800d3f2:	2100      	movs	r1, #0
 800d3f4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800d3f8:	687b      	ldr	r3, [r7, #4]
 800d3fa:	2200      	movs	r2, #0
 800d3fc:	f8c3 22bc 	str.w	r2, [r3, #700]	; 0x2bc
 800d400:	2300      	movs	r3, #0
 800d402:	4618      	mov	r0, r3
 800d404:	3708      	adds	r7, #8
 800d406:	46bd      	mov	sp, r7
 800d408:	bd80      	pop	{r7, pc}
 800d40a:	bf00      	nop
 800d40c:	200000b7 	.word	0x200000b7
 800d410:	200000b8 	.word	0x200000b8
 800d414:	200000b9 	.word	0x200000b9

0800d418 <USBD_CDC_Setup>:
 800d418:	b580      	push	{r7, lr}
 800d41a:	b086      	sub	sp, #24
 800d41c:	af00      	add	r7, sp, #0
 800d41e:	6078      	str	r0, [r7, #4]
 800d420:	6039      	str	r1, [r7, #0]
 800d422:	687b      	ldr	r3, [r7, #4]
 800d424:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d428:	687b      	ldr	r3, [r7, #4]
 800d42a:	32b0      	adds	r2, #176	; 0xb0
 800d42c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d430:	613b      	str	r3, [r7, #16]
 800d432:	2300      	movs	r3, #0
 800d434:	737b      	strb	r3, [r7, #13]
 800d436:	2300      	movs	r3, #0
 800d438:	817b      	strh	r3, [r7, #10]
 800d43a:	2300      	movs	r3, #0
 800d43c:	75fb      	strb	r3, [r7, #23]
 800d43e:	693b      	ldr	r3, [r7, #16]
 800d440:	2b00      	cmp	r3, #0
 800d442:	d101      	bne.n	800d448 <USBD_CDC_Setup+0x30>
 800d444:	2303      	movs	r3, #3
 800d446:	e0bf      	b.n	800d5c8 <USBD_CDC_Setup+0x1b0>
 800d448:	683b      	ldr	r3, [r7, #0]
 800d44a:	781b      	ldrb	r3, [r3, #0]
 800d44c:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800d450:	2b00      	cmp	r3, #0
 800d452:	d050      	beq.n	800d4f6 <USBD_CDC_Setup+0xde>
 800d454:	2b20      	cmp	r3, #32
 800d456:	f040 80af 	bne.w	800d5b8 <USBD_CDC_Setup+0x1a0>
 800d45a:	683b      	ldr	r3, [r7, #0]
 800d45c:	88db      	ldrh	r3, [r3, #6]
 800d45e:	2b00      	cmp	r3, #0
 800d460:	d03a      	beq.n	800d4d8 <USBD_CDC_Setup+0xc0>
 800d462:	683b      	ldr	r3, [r7, #0]
 800d464:	781b      	ldrb	r3, [r3, #0]
 800d466:	b25b      	sxtb	r3, r3
 800d468:	2b00      	cmp	r3, #0
 800d46a:	da1b      	bge.n	800d4a4 <USBD_CDC_Setup+0x8c>
 800d46c:	687b      	ldr	r3, [r7, #4]
 800d46e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d472:	687a      	ldr	r2, [r7, #4]
 800d474:	33b0      	adds	r3, #176	; 0xb0
 800d476:	009b      	lsls	r3, r3, #2
 800d478:	4413      	add	r3, r2
 800d47a:	685b      	ldr	r3, [r3, #4]
 800d47c:	689b      	ldr	r3, [r3, #8]
 800d47e:	683a      	ldr	r2, [r7, #0]
 800d480:	7850      	ldrb	r0, [r2, #1]
 800d482:	6939      	ldr	r1, [r7, #16]
 800d484:	683a      	ldr	r2, [r7, #0]
 800d486:	88d2      	ldrh	r2, [r2, #6]
 800d488:	4798      	blx	r3
 800d48a:	683b      	ldr	r3, [r7, #0]
 800d48c:	88db      	ldrh	r3, [r3, #6]
 800d48e:	2b07      	cmp	r3, #7
 800d490:	bf28      	it	cs
 800d492:	2307      	movcs	r3, #7
 800d494:	81fb      	strh	r3, [r7, #14]
 800d496:	693b      	ldr	r3, [r7, #16]
 800d498:	89fa      	ldrh	r2, [r7, #14]
 800d49a:	4619      	mov	r1, r3
 800d49c:	6878      	ldr	r0, [r7, #4]
 800d49e:	f001 fd43 	bl	800ef28 <USBD_CtlSendData>
 800d4a2:	e090      	b.n	800d5c6 <USBD_CDC_Setup+0x1ae>
 800d4a4:	683b      	ldr	r3, [r7, #0]
 800d4a6:	785a      	ldrb	r2, [r3, #1]
 800d4a8:	693b      	ldr	r3, [r7, #16]
 800d4aa:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 800d4ae:	683b      	ldr	r3, [r7, #0]
 800d4b0:	88db      	ldrh	r3, [r3, #6]
 800d4b2:	2b3f      	cmp	r3, #63	; 0x3f
 800d4b4:	d803      	bhi.n	800d4be <USBD_CDC_Setup+0xa6>
 800d4b6:	683b      	ldr	r3, [r7, #0]
 800d4b8:	88db      	ldrh	r3, [r3, #6]
 800d4ba:	b2da      	uxtb	r2, r3
 800d4bc:	e000      	b.n	800d4c0 <USBD_CDC_Setup+0xa8>
 800d4be:	2240      	movs	r2, #64	; 0x40
 800d4c0:	693b      	ldr	r3, [r7, #16]
 800d4c2:	f883 2201 	strb.w	r2, [r3, #513]	; 0x201
 800d4c6:	6939      	ldr	r1, [r7, #16]
 800d4c8:	693b      	ldr	r3, [r7, #16]
 800d4ca:	f893 3201 	ldrb.w	r3, [r3, #513]	; 0x201
 800d4ce:	461a      	mov	r2, r3
 800d4d0:	6878      	ldr	r0, [r7, #4]
 800d4d2:	f001 fd55 	bl	800ef80 <USBD_CtlPrepareRx>
 800d4d6:	e076      	b.n	800d5c6 <USBD_CDC_Setup+0x1ae>
 800d4d8:	687b      	ldr	r3, [r7, #4]
 800d4da:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d4de:	687a      	ldr	r2, [r7, #4]
 800d4e0:	33b0      	adds	r3, #176	; 0xb0
 800d4e2:	009b      	lsls	r3, r3, #2
 800d4e4:	4413      	add	r3, r2
 800d4e6:	685b      	ldr	r3, [r3, #4]
 800d4e8:	689b      	ldr	r3, [r3, #8]
 800d4ea:	683a      	ldr	r2, [r7, #0]
 800d4ec:	7850      	ldrb	r0, [r2, #1]
 800d4ee:	2200      	movs	r2, #0
 800d4f0:	6839      	ldr	r1, [r7, #0]
 800d4f2:	4798      	blx	r3
 800d4f4:	e067      	b.n	800d5c6 <USBD_CDC_Setup+0x1ae>
 800d4f6:	683b      	ldr	r3, [r7, #0]
 800d4f8:	785b      	ldrb	r3, [r3, #1]
 800d4fa:	2b0b      	cmp	r3, #11
 800d4fc:	d851      	bhi.n	800d5a2 <USBD_CDC_Setup+0x18a>
 800d4fe:	a201      	add	r2, pc, #4	; (adr r2, 800d504 <USBD_CDC_Setup+0xec>)
 800d500:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800d504:	0800d535 	.word	0x0800d535
 800d508:	0800d5b1 	.word	0x0800d5b1
 800d50c:	0800d5a3 	.word	0x0800d5a3
 800d510:	0800d5a3 	.word	0x0800d5a3
 800d514:	0800d5a3 	.word	0x0800d5a3
 800d518:	0800d5a3 	.word	0x0800d5a3
 800d51c:	0800d5a3 	.word	0x0800d5a3
 800d520:	0800d5a3 	.word	0x0800d5a3
 800d524:	0800d5a3 	.word	0x0800d5a3
 800d528:	0800d5a3 	.word	0x0800d5a3
 800d52c:	0800d55f 	.word	0x0800d55f
 800d530:	0800d589 	.word	0x0800d589
 800d534:	687b      	ldr	r3, [r7, #4]
 800d536:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800d53a:	b2db      	uxtb	r3, r3
 800d53c:	2b03      	cmp	r3, #3
 800d53e:	d107      	bne.n	800d550 <USBD_CDC_Setup+0x138>
 800d540:	f107 030a 	add.w	r3, r7, #10
 800d544:	2202      	movs	r2, #2
 800d546:	4619      	mov	r1, r3
 800d548:	6878      	ldr	r0, [r7, #4]
 800d54a:	f001 fced 	bl	800ef28 <USBD_CtlSendData>
 800d54e:	e032      	b.n	800d5b6 <USBD_CDC_Setup+0x19e>
 800d550:	6839      	ldr	r1, [r7, #0]
 800d552:	6878      	ldr	r0, [r7, #4]
 800d554:	f001 fc77 	bl	800ee46 <USBD_CtlError>
 800d558:	2303      	movs	r3, #3
 800d55a:	75fb      	strb	r3, [r7, #23]
 800d55c:	e02b      	b.n	800d5b6 <USBD_CDC_Setup+0x19e>
 800d55e:	687b      	ldr	r3, [r7, #4]
 800d560:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800d564:	b2db      	uxtb	r3, r3
 800d566:	2b03      	cmp	r3, #3
 800d568:	d107      	bne.n	800d57a <USBD_CDC_Setup+0x162>
 800d56a:	f107 030d 	add.w	r3, r7, #13
 800d56e:	2201      	movs	r2, #1
 800d570:	4619      	mov	r1, r3
 800d572:	6878      	ldr	r0, [r7, #4]
 800d574:	f001 fcd8 	bl	800ef28 <USBD_CtlSendData>
 800d578:	e01d      	b.n	800d5b6 <USBD_CDC_Setup+0x19e>
 800d57a:	6839      	ldr	r1, [r7, #0]
 800d57c:	6878      	ldr	r0, [r7, #4]
 800d57e:	f001 fc62 	bl	800ee46 <USBD_CtlError>
 800d582:	2303      	movs	r3, #3
 800d584:	75fb      	strb	r3, [r7, #23]
 800d586:	e016      	b.n	800d5b6 <USBD_CDC_Setup+0x19e>
 800d588:	687b      	ldr	r3, [r7, #4]
 800d58a:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800d58e:	b2db      	uxtb	r3, r3
 800d590:	2b03      	cmp	r3, #3
 800d592:	d00f      	beq.n	800d5b4 <USBD_CDC_Setup+0x19c>
 800d594:	6839      	ldr	r1, [r7, #0]
 800d596:	6878      	ldr	r0, [r7, #4]
 800d598:	f001 fc55 	bl	800ee46 <USBD_CtlError>
 800d59c:	2303      	movs	r3, #3
 800d59e:	75fb      	strb	r3, [r7, #23]
 800d5a0:	e008      	b.n	800d5b4 <USBD_CDC_Setup+0x19c>
 800d5a2:	6839      	ldr	r1, [r7, #0]
 800d5a4:	6878      	ldr	r0, [r7, #4]
 800d5a6:	f001 fc4e 	bl	800ee46 <USBD_CtlError>
 800d5aa:	2303      	movs	r3, #3
 800d5ac:	75fb      	strb	r3, [r7, #23]
 800d5ae:	e002      	b.n	800d5b6 <USBD_CDC_Setup+0x19e>
 800d5b0:	bf00      	nop
 800d5b2:	e008      	b.n	800d5c6 <USBD_CDC_Setup+0x1ae>
 800d5b4:	bf00      	nop
 800d5b6:	e006      	b.n	800d5c6 <USBD_CDC_Setup+0x1ae>
 800d5b8:	6839      	ldr	r1, [r7, #0]
 800d5ba:	6878      	ldr	r0, [r7, #4]
 800d5bc:	f001 fc43 	bl	800ee46 <USBD_CtlError>
 800d5c0:	2303      	movs	r3, #3
 800d5c2:	75fb      	strb	r3, [r7, #23]
 800d5c4:	bf00      	nop
 800d5c6:	7dfb      	ldrb	r3, [r7, #23]
 800d5c8:	4618      	mov	r0, r3
 800d5ca:	3718      	adds	r7, #24
 800d5cc:	46bd      	mov	sp, r7
 800d5ce:	bd80      	pop	{r7, pc}

0800d5d0 <USBD_CDC_DataIn>:
 800d5d0:	b580      	push	{r7, lr}
 800d5d2:	b084      	sub	sp, #16
 800d5d4:	af00      	add	r7, sp, #0
 800d5d6:	6078      	str	r0, [r7, #4]
 800d5d8:	460b      	mov	r3, r1
 800d5da:	70fb      	strb	r3, [r7, #3]
 800d5dc:	687b      	ldr	r3, [r7, #4]
 800d5de:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800d5e2:	60fb      	str	r3, [r7, #12]
 800d5e4:	687b      	ldr	r3, [r7, #4]
 800d5e6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d5ea:	687b      	ldr	r3, [r7, #4]
 800d5ec:	32b0      	adds	r2, #176	; 0xb0
 800d5ee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d5f2:	2b00      	cmp	r3, #0
 800d5f4:	d101      	bne.n	800d5fa <USBD_CDC_DataIn+0x2a>
 800d5f6:	2303      	movs	r3, #3
 800d5f8:	e065      	b.n	800d6c6 <USBD_CDC_DataIn+0xf6>
 800d5fa:	687b      	ldr	r3, [r7, #4]
 800d5fc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d600:	687b      	ldr	r3, [r7, #4]
 800d602:	32b0      	adds	r2, #176	; 0xb0
 800d604:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d608:	60bb      	str	r3, [r7, #8]
 800d60a:	78fb      	ldrb	r3, [r7, #3]
 800d60c:	f003 020f 	and.w	r2, r3, #15
 800d610:	6879      	ldr	r1, [r7, #4]
 800d612:	4613      	mov	r3, r2
 800d614:	009b      	lsls	r3, r3, #2
 800d616:	4413      	add	r3, r2
 800d618:	009b      	lsls	r3, r3, #2
 800d61a:	440b      	add	r3, r1
 800d61c:	3318      	adds	r3, #24
 800d61e:	681b      	ldr	r3, [r3, #0]
 800d620:	2b00      	cmp	r3, #0
 800d622:	d02f      	beq.n	800d684 <USBD_CDC_DataIn+0xb4>
 800d624:	78fb      	ldrb	r3, [r7, #3]
 800d626:	f003 020f 	and.w	r2, r3, #15
 800d62a:	6879      	ldr	r1, [r7, #4]
 800d62c:	4613      	mov	r3, r2
 800d62e:	009b      	lsls	r3, r3, #2
 800d630:	4413      	add	r3, r2
 800d632:	009b      	lsls	r3, r3, #2
 800d634:	440b      	add	r3, r1
 800d636:	3318      	adds	r3, #24
 800d638:	681a      	ldr	r2, [r3, #0]
 800d63a:	78fb      	ldrb	r3, [r7, #3]
 800d63c:	f003 010f 	and.w	r1, r3, #15
 800d640:	68f8      	ldr	r0, [r7, #12]
 800d642:	460b      	mov	r3, r1
 800d644:	00db      	lsls	r3, r3, #3
 800d646:	440b      	add	r3, r1
 800d648:	009b      	lsls	r3, r3, #2
 800d64a:	4403      	add	r3, r0
 800d64c:	3348      	adds	r3, #72	; 0x48
 800d64e:	681b      	ldr	r3, [r3, #0]
 800d650:	fbb2 f1f3 	udiv	r1, r2, r3
 800d654:	fb01 f303 	mul.w	r3, r1, r3
 800d658:	1ad3      	subs	r3, r2, r3
 800d65a:	2b00      	cmp	r3, #0
 800d65c:	d112      	bne.n	800d684 <USBD_CDC_DataIn+0xb4>
 800d65e:	78fb      	ldrb	r3, [r7, #3]
 800d660:	f003 020f 	and.w	r2, r3, #15
 800d664:	6879      	ldr	r1, [r7, #4]
 800d666:	4613      	mov	r3, r2
 800d668:	009b      	lsls	r3, r3, #2
 800d66a:	4413      	add	r3, r2
 800d66c:	009b      	lsls	r3, r3, #2
 800d66e:	440b      	add	r3, r1
 800d670:	3318      	adds	r3, #24
 800d672:	2200      	movs	r2, #0
 800d674:	601a      	str	r2, [r3, #0]
 800d676:	78f9      	ldrb	r1, [r7, #3]
 800d678:	2300      	movs	r3, #0
 800d67a:	2200      	movs	r2, #0
 800d67c:	6878      	ldr	r0, [r7, #4]
 800d67e:	f002 f972 	bl	800f966 <USBD_LL_Transmit>
 800d682:	e01f      	b.n	800d6c4 <USBD_CDC_DataIn+0xf4>
 800d684:	68bb      	ldr	r3, [r7, #8]
 800d686:	2200      	movs	r2, #0
 800d688:	f8c3 2214 	str.w	r2, [r3, #532]	; 0x214
 800d68c:	687b      	ldr	r3, [r7, #4]
 800d68e:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d692:	687a      	ldr	r2, [r7, #4]
 800d694:	33b0      	adds	r3, #176	; 0xb0
 800d696:	009b      	lsls	r3, r3, #2
 800d698:	4413      	add	r3, r2
 800d69a:	685b      	ldr	r3, [r3, #4]
 800d69c:	691b      	ldr	r3, [r3, #16]
 800d69e:	2b00      	cmp	r3, #0
 800d6a0:	d010      	beq.n	800d6c4 <USBD_CDC_DataIn+0xf4>
 800d6a2:	687b      	ldr	r3, [r7, #4]
 800d6a4:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d6a8:	687a      	ldr	r2, [r7, #4]
 800d6aa:	33b0      	adds	r3, #176	; 0xb0
 800d6ac:	009b      	lsls	r3, r3, #2
 800d6ae:	4413      	add	r3, r2
 800d6b0:	685b      	ldr	r3, [r3, #4]
 800d6b2:	691b      	ldr	r3, [r3, #16]
 800d6b4:	68ba      	ldr	r2, [r7, #8]
 800d6b6:	f8d2 0208 	ldr.w	r0, [r2, #520]	; 0x208
 800d6ba:	68ba      	ldr	r2, [r7, #8]
 800d6bc:	f502 7104 	add.w	r1, r2, #528	; 0x210
 800d6c0:	78fa      	ldrb	r2, [r7, #3]
 800d6c2:	4798      	blx	r3
 800d6c4:	2300      	movs	r3, #0
 800d6c6:	4618      	mov	r0, r3
 800d6c8:	3710      	adds	r7, #16
 800d6ca:	46bd      	mov	sp, r7
 800d6cc:	bd80      	pop	{r7, pc}

0800d6ce <USBD_CDC_DataOut>:
 800d6ce:	b580      	push	{r7, lr}
 800d6d0:	b084      	sub	sp, #16
 800d6d2:	af00      	add	r7, sp, #0
 800d6d4:	6078      	str	r0, [r7, #4]
 800d6d6:	460b      	mov	r3, r1
 800d6d8:	70fb      	strb	r3, [r7, #3]
 800d6da:	687b      	ldr	r3, [r7, #4]
 800d6dc:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d6e0:	687b      	ldr	r3, [r7, #4]
 800d6e2:	32b0      	adds	r2, #176	; 0xb0
 800d6e4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d6e8:	60fb      	str	r3, [r7, #12]
 800d6ea:	687b      	ldr	r3, [r7, #4]
 800d6ec:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d6f0:	687b      	ldr	r3, [r7, #4]
 800d6f2:	32b0      	adds	r2, #176	; 0xb0
 800d6f4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d6f8:	2b00      	cmp	r3, #0
 800d6fa:	d101      	bne.n	800d700 <USBD_CDC_DataOut+0x32>
 800d6fc:	2303      	movs	r3, #3
 800d6fe:	e01a      	b.n	800d736 <USBD_CDC_DataOut+0x68>
 800d700:	78fb      	ldrb	r3, [r7, #3]
 800d702:	4619      	mov	r1, r3
 800d704:	6878      	ldr	r0, [r7, #4]
 800d706:	f002 f970 	bl	800f9ea <USBD_LL_GetRxDataSize>
 800d70a:	4602      	mov	r2, r0
 800d70c:	68fb      	ldr	r3, [r7, #12]
 800d70e:	f8c3 220c 	str.w	r2, [r3, #524]	; 0x20c
 800d712:	687b      	ldr	r3, [r7, #4]
 800d714:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d718:	687a      	ldr	r2, [r7, #4]
 800d71a:	33b0      	adds	r3, #176	; 0xb0
 800d71c:	009b      	lsls	r3, r3, #2
 800d71e:	4413      	add	r3, r2
 800d720:	685b      	ldr	r3, [r3, #4]
 800d722:	68db      	ldr	r3, [r3, #12]
 800d724:	68fa      	ldr	r2, [r7, #12]
 800d726:	f8d2 0204 	ldr.w	r0, [r2, #516]	; 0x204
 800d72a:	68fa      	ldr	r2, [r7, #12]
 800d72c:	f502 7203 	add.w	r2, r2, #524	; 0x20c
 800d730:	4611      	mov	r1, r2
 800d732:	4798      	blx	r3
 800d734:	2300      	movs	r3, #0
 800d736:	4618      	mov	r0, r3
 800d738:	3710      	adds	r7, #16
 800d73a:	46bd      	mov	sp, r7
 800d73c:	bd80      	pop	{r7, pc}

0800d73e <USBD_CDC_EP0_RxReady>:
 800d73e:	b580      	push	{r7, lr}
 800d740:	b084      	sub	sp, #16
 800d742:	af00      	add	r7, sp, #0
 800d744:	6078      	str	r0, [r7, #4]
 800d746:	687b      	ldr	r3, [r7, #4]
 800d748:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d74c:	687b      	ldr	r3, [r7, #4]
 800d74e:	32b0      	adds	r2, #176	; 0xb0
 800d750:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d754:	60fb      	str	r3, [r7, #12]
 800d756:	68fb      	ldr	r3, [r7, #12]
 800d758:	2b00      	cmp	r3, #0
 800d75a:	d101      	bne.n	800d760 <USBD_CDC_EP0_RxReady+0x22>
 800d75c:	2303      	movs	r3, #3
 800d75e:	e025      	b.n	800d7ac <USBD_CDC_EP0_RxReady+0x6e>
 800d760:	687b      	ldr	r3, [r7, #4]
 800d762:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d766:	687a      	ldr	r2, [r7, #4]
 800d768:	33b0      	adds	r3, #176	; 0xb0
 800d76a:	009b      	lsls	r3, r3, #2
 800d76c:	4413      	add	r3, r2
 800d76e:	685b      	ldr	r3, [r3, #4]
 800d770:	2b00      	cmp	r3, #0
 800d772:	d01a      	beq.n	800d7aa <USBD_CDC_EP0_RxReady+0x6c>
 800d774:	68fb      	ldr	r3, [r7, #12]
 800d776:	f893 3200 	ldrb.w	r3, [r3, #512]	; 0x200
 800d77a:	2bff      	cmp	r3, #255	; 0xff
 800d77c:	d015      	beq.n	800d7aa <USBD_CDC_EP0_RxReady+0x6c>
 800d77e:	687b      	ldr	r3, [r7, #4]
 800d780:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d784:	687a      	ldr	r2, [r7, #4]
 800d786:	33b0      	adds	r3, #176	; 0xb0
 800d788:	009b      	lsls	r3, r3, #2
 800d78a:	4413      	add	r3, r2
 800d78c:	685b      	ldr	r3, [r3, #4]
 800d78e:	689b      	ldr	r3, [r3, #8]
 800d790:	68fa      	ldr	r2, [r7, #12]
 800d792:	f892 0200 	ldrb.w	r0, [r2, #512]	; 0x200
 800d796:	68f9      	ldr	r1, [r7, #12]
 800d798:	68fa      	ldr	r2, [r7, #12]
 800d79a:	f892 2201 	ldrb.w	r2, [r2, #513]	; 0x201
 800d79e:	b292      	uxth	r2, r2
 800d7a0:	4798      	blx	r3
 800d7a2:	68fb      	ldr	r3, [r7, #12]
 800d7a4:	22ff      	movs	r2, #255	; 0xff
 800d7a6:	f883 2200 	strb.w	r2, [r3, #512]	; 0x200
 800d7aa:	2300      	movs	r3, #0
 800d7ac:	4618      	mov	r0, r3
 800d7ae:	3710      	adds	r7, #16
 800d7b0:	46bd      	mov	sp, r7
 800d7b2:	bd80      	pop	{r7, pc}

0800d7b4 <USBD_CDC_GetFSCfgDesc>:
 800d7b4:	b580      	push	{r7, lr}
 800d7b6:	b086      	sub	sp, #24
 800d7b8:	af00      	add	r7, sp, #0
 800d7ba:	6078      	str	r0, [r7, #4]
 800d7bc:	2182      	movs	r1, #130	; 0x82
 800d7be:	4818      	ldr	r0, [pc, #96]	; (800d820 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800d7c0:	f000 fd09 	bl	800e1d6 <USBD_GetEpDesc>
 800d7c4:	6178      	str	r0, [r7, #20]
 800d7c6:	2101      	movs	r1, #1
 800d7c8:	4815      	ldr	r0, [pc, #84]	; (800d820 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800d7ca:	f000 fd04 	bl	800e1d6 <USBD_GetEpDesc>
 800d7ce:	6138      	str	r0, [r7, #16]
 800d7d0:	2181      	movs	r1, #129	; 0x81
 800d7d2:	4813      	ldr	r0, [pc, #76]	; (800d820 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800d7d4:	f000 fcff 	bl	800e1d6 <USBD_GetEpDesc>
 800d7d8:	60f8      	str	r0, [r7, #12]
 800d7da:	697b      	ldr	r3, [r7, #20]
 800d7dc:	2b00      	cmp	r3, #0
 800d7de:	d002      	beq.n	800d7e6 <USBD_CDC_GetFSCfgDesc+0x32>
 800d7e0:	697b      	ldr	r3, [r7, #20]
 800d7e2:	2210      	movs	r2, #16
 800d7e4:	719a      	strb	r2, [r3, #6]
 800d7e6:	693b      	ldr	r3, [r7, #16]
 800d7e8:	2b00      	cmp	r3, #0
 800d7ea:	d006      	beq.n	800d7fa <USBD_CDC_GetFSCfgDesc+0x46>
 800d7ec:	693b      	ldr	r3, [r7, #16]
 800d7ee:	2200      	movs	r2, #0
 800d7f0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800d7f4:	711a      	strb	r2, [r3, #4]
 800d7f6:	2200      	movs	r2, #0
 800d7f8:	715a      	strb	r2, [r3, #5]
 800d7fa:	68fb      	ldr	r3, [r7, #12]
 800d7fc:	2b00      	cmp	r3, #0
 800d7fe:	d006      	beq.n	800d80e <USBD_CDC_GetFSCfgDesc+0x5a>
 800d800:	68fb      	ldr	r3, [r7, #12]
 800d802:	2200      	movs	r2, #0
 800d804:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800d808:	711a      	strb	r2, [r3, #4]
 800d80a:	2200      	movs	r2, #0
 800d80c:	715a      	strb	r2, [r3, #5]
 800d80e:	687b      	ldr	r3, [r7, #4]
 800d810:	2243      	movs	r2, #67	; 0x43
 800d812:	801a      	strh	r2, [r3, #0]
 800d814:	4b02      	ldr	r3, [pc, #8]	; (800d820 <USBD_CDC_GetFSCfgDesc+0x6c>)
 800d816:	4618      	mov	r0, r3
 800d818:	3718      	adds	r7, #24
 800d81a:	46bd      	mov	sp, r7
 800d81c:	bd80      	pop	{r7, pc}
 800d81e:	bf00      	nop
 800d820:	20000074 	.word	0x20000074

0800d824 <USBD_CDC_GetHSCfgDesc>:
 800d824:	b580      	push	{r7, lr}
 800d826:	b086      	sub	sp, #24
 800d828:	af00      	add	r7, sp, #0
 800d82a:	6078      	str	r0, [r7, #4]
 800d82c:	2182      	movs	r1, #130	; 0x82
 800d82e:	4818      	ldr	r0, [pc, #96]	; (800d890 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800d830:	f000 fcd1 	bl	800e1d6 <USBD_GetEpDesc>
 800d834:	6178      	str	r0, [r7, #20]
 800d836:	2101      	movs	r1, #1
 800d838:	4815      	ldr	r0, [pc, #84]	; (800d890 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800d83a:	f000 fccc 	bl	800e1d6 <USBD_GetEpDesc>
 800d83e:	6138      	str	r0, [r7, #16]
 800d840:	2181      	movs	r1, #129	; 0x81
 800d842:	4813      	ldr	r0, [pc, #76]	; (800d890 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800d844:	f000 fcc7 	bl	800e1d6 <USBD_GetEpDesc>
 800d848:	60f8      	str	r0, [r7, #12]
 800d84a:	697b      	ldr	r3, [r7, #20]
 800d84c:	2b00      	cmp	r3, #0
 800d84e:	d002      	beq.n	800d856 <USBD_CDC_GetHSCfgDesc+0x32>
 800d850:	697b      	ldr	r3, [r7, #20]
 800d852:	2210      	movs	r2, #16
 800d854:	719a      	strb	r2, [r3, #6]
 800d856:	693b      	ldr	r3, [r7, #16]
 800d858:	2b00      	cmp	r3, #0
 800d85a:	d006      	beq.n	800d86a <USBD_CDC_GetHSCfgDesc+0x46>
 800d85c:	693b      	ldr	r3, [r7, #16]
 800d85e:	2200      	movs	r2, #0
 800d860:	711a      	strb	r2, [r3, #4]
 800d862:	2200      	movs	r2, #0
 800d864:	f042 0202 	orr.w	r2, r2, #2
 800d868:	715a      	strb	r2, [r3, #5]
 800d86a:	68fb      	ldr	r3, [r7, #12]
 800d86c:	2b00      	cmp	r3, #0
 800d86e:	d006      	beq.n	800d87e <USBD_CDC_GetHSCfgDesc+0x5a>
 800d870:	68fb      	ldr	r3, [r7, #12]
 800d872:	2200      	movs	r2, #0
 800d874:	711a      	strb	r2, [r3, #4]
 800d876:	2200      	movs	r2, #0
 800d878:	f042 0202 	orr.w	r2, r2, #2
 800d87c:	715a      	strb	r2, [r3, #5]
 800d87e:	687b      	ldr	r3, [r7, #4]
 800d880:	2243      	movs	r2, #67	; 0x43
 800d882:	801a      	strh	r2, [r3, #0]
 800d884:	4b02      	ldr	r3, [pc, #8]	; (800d890 <USBD_CDC_GetHSCfgDesc+0x6c>)
 800d886:	4618      	mov	r0, r3
 800d888:	3718      	adds	r7, #24
 800d88a:	46bd      	mov	sp, r7
 800d88c:	bd80      	pop	{r7, pc}
 800d88e:	bf00      	nop
 800d890:	20000074 	.word	0x20000074

0800d894 <USBD_CDC_GetOtherSpeedCfgDesc>:
 800d894:	b580      	push	{r7, lr}
 800d896:	b086      	sub	sp, #24
 800d898:	af00      	add	r7, sp, #0
 800d89a:	6078      	str	r0, [r7, #4]
 800d89c:	2182      	movs	r1, #130	; 0x82
 800d89e:	4818      	ldr	r0, [pc, #96]	; (800d900 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800d8a0:	f000 fc99 	bl	800e1d6 <USBD_GetEpDesc>
 800d8a4:	6178      	str	r0, [r7, #20]
 800d8a6:	2101      	movs	r1, #1
 800d8a8:	4815      	ldr	r0, [pc, #84]	; (800d900 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800d8aa:	f000 fc94 	bl	800e1d6 <USBD_GetEpDesc>
 800d8ae:	6138      	str	r0, [r7, #16]
 800d8b0:	2181      	movs	r1, #129	; 0x81
 800d8b2:	4813      	ldr	r0, [pc, #76]	; (800d900 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800d8b4:	f000 fc8f 	bl	800e1d6 <USBD_GetEpDesc>
 800d8b8:	60f8      	str	r0, [r7, #12]
 800d8ba:	697b      	ldr	r3, [r7, #20]
 800d8bc:	2b00      	cmp	r3, #0
 800d8be:	d002      	beq.n	800d8c6 <USBD_CDC_GetOtherSpeedCfgDesc+0x32>
 800d8c0:	697b      	ldr	r3, [r7, #20]
 800d8c2:	2210      	movs	r2, #16
 800d8c4:	719a      	strb	r2, [r3, #6]
 800d8c6:	693b      	ldr	r3, [r7, #16]
 800d8c8:	2b00      	cmp	r3, #0
 800d8ca:	d006      	beq.n	800d8da <USBD_CDC_GetOtherSpeedCfgDesc+0x46>
 800d8cc:	693b      	ldr	r3, [r7, #16]
 800d8ce:	2200      	movs	r2, #0
 800d8d0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800d8d4:	711a      	strb	r2, [r3, #4]
 800d8d6:	2200      	movs	r2, #0
 800d8d8:	715a      	strb	r2, [r3, #5]
 800d8da:	68fb      	ldr	r3, [r7, #12]
 800d8dc:	2b00      	cmp	r3, #0
 800d8de:	d006      	beq.n	800d8ee <USBD_CDC_GetOtherSpeedCfgDesc+0x5a>
 800d8e0:	68fb      	ldr	r3, [r7, #12]
 800d8e2:	2200      	movs	r2, #0
 800d8e4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 800d8e8:	711a      	strb	r2, [r3, #4]
 800d8ea:	2200      	movs	r2, #0
 800d8ec:	715a      	strb	r2, [r3, #5]
 800d8ee:	687b      	ldr	r3, [r7, #4]
 800d8f0:	2243      	movs	r2, #67	; 0x43
 800d8f2:	801a      	strh	r2, [r3, #0]
 800d8f4:	4b02      	ldr	r3, [pc, #8]	; (800d900 <USBD_CDC_GetOtherSpeedCfgDesc+0x6c>)
 800d8f6:	4618      	mov	r0, r3
 800d8f8:	3718      	adds	r7, #24
 800d8fa:	46bd      	mov	sp, r7
 800d8fc:	bd80      	pop	{r7, pc}
 800d8fe:	bf00      	nop
 800d900:	20000074 	.word	0x20000074

0800d904 <USBD_CDC_GetDeviceQualifierDescriptor>:
 800d904:	b480      	push	{r7}
 800d906:	b083      	sub	sp, #12
 800d908:	af00      	add	r7, sp, #0
 800d90a:	6078      	str	r0, [r7, #4]
 800d90c:	687b      	ldr	r3, [r7, #4]
 800d90e:	220a      	movs	r2, #10
 800d910:	801a      	strh	r2, [r3, #0]
 800d912:	4b03      	ldr	r3, [pc, #12]	; (800d920 <USBD_CDC_GetDeviceQualifierDescriptor+0x1c>)
 800d914:	4618      	mov	r0, r3
 800d916:	370c      	adds	r7, #12
 800d918:	46bd      	mov	sp, r7
 800d91a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d91e:	4770      	bx	lr
 800d920:	20000030 	.word	0x20000030

0800d924 <USBD_CDC_RegisterInterface>:
 800d924:	b480      	push	{r7}
 800d926:	b083      	sub	sp, #12
 800d928:	af00      	add	r7, sp, #0
 800d92a:	6078      	str	r0, [r7, #4]
 800d92c:	6039      	str	r1, [r7, #0]
 800d92e:	683b      	ldr	r3, [r7, #0]
 800d930:	2b00      	cmp	r3, #0
 800d932:	d101      	bne.n	800d938 <USBD_CDC_RegisterInterface+0x14>
 800d934:	2303      	movs	r3, #3
 800d936:	e009      	b.n	800d94c <USBD_CDC_RegisterInterface+0x28>
 800d938:	687b      	ldr	r3, [r7, #4]
 800d93a:	f8d3 32d4 	ldr.w	r3, [r3, #724]	; 0x2d4
 800d93e:	687a      	ldr	r2, [r7, #4]
 800d940:	33b0      	adds	r3, #176	; 0xb0
 800d942:	009b      	lsls	r3, r3, #2
 800d944:	4413      	add	r3, r2
 800d946:	683a      	ldr	r2, [r7, #0]
 800d948:	605a      	str	r2, [r3, #4]
 800d94a:	2300      	movs	r3, #0
 800d94c:	4618      	mov	r0, r3
 800d94e:	370c      	adds	r7, #12
 800d950:	46bd      	mov	sp, r7
 800d952:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d956:	4770      	bx	lr

0800d958 <USBD_CDC_SetTxBuffer>:
 800d958:	b480      	push	{r7}
 800d95a:	b087      	sub	sp, #28
 800d95c:	af00      	add	r7, sp, #0
 800d95e:	60f8      	str	r0, [r7, #12]
 800d960:	60b9      	str	r1, [r7, #8]
 800d962:	607a      	str	r2, [r7, #4]
 800d964:	68fb      	ldr	r3, [r7, #12]
 800d966:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d96a:	68fb      	ldr	r3, [r7, #12]
 800d96c:	32b0      	adds	r2, #176	; 0xb0
 800d96e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d972:	617b      	str	r3, [r7, #20]
 800d974:	697b      	ldr	r3, [r7, #20]
 800d976:	2b00      	cmp	r3, #0
 800d978:	d101      	bne.n	800d97e <USBD_CDC_SetTxBuffer+0x26>
 800d97a:	2303      	movs	r3, #3
 800d97c:	e008      	b.n	800d990 <USBD_CDC_SetTxBuffer+0x38>
 800d97e:	697b      	ldr	r3, [r7, #20]
 800d980:	68ba      	ldr	r2, [r7, #8]
 800d982:	f8c3 2208 	str.w	r2, [r3, #520]	; 0x208
 800d986:	697b      	ldr	r3, [r7, #20]
 800d988:	687a      	ldr	r2, [r7, #4]
 800d98a:	f8c3 2210 	str.w	r2, [r3, #528]	; 0x210
 800d98e:	2300      	movs	r3, #0
 800d990:	4618      	mov	r0, r3
 800d992:	371c      	adds	r7, #28
 800d994:	46bd      	mov	sp, r7
 800d996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d99a:	4770      	bx	lr

0800d99c <USBD_CDC_SetRxBuffer>:
 800d99c:	b480      	push	{r7}
 800d99e:	b085      	sub	sp, #20
 800d9a0:	af00      	add	r7, sp, #0
 800d9a2:	6078      	str	r0, [r7, #4]
 800d9a4:	6039      	str	r1, [r7, #0]
 800d9a6:	687b      	ldr	r3, [r7, #4]
 800d9a8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d9ac:	687b      	ldr	r3, [r7, #4]
 800d9ae:	32b0      	adds	r2, #176	; 0xb0
 800d9b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d9b4:	60fb      	str	r3, [r7, #12]
 800d9b6:	68fb      	ldr	r3, [r7, #12]
 800d9b8:	2b00      	cmp	r3, #0
 800d9ba:	d101      	bne.n	800d9c0 <USBD_CDC_SetRxBuffer+0x24>
 800d9bc:	2303      	movs	r3, #3
 800d9be:	e004      	b.n	800d9ca <USBD_CDC_SetRxBuffer+0x2e>
 800d9c0:	68fb      	ldr	r3, [r7, #12]
 800d9c2:	683a      	ldr	r2, [r7, #0]
 800d9c4:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 800d9c8:	2300      	movs	r3, #0
 800d9ca:	4618      	mov	r0, r3
 800d9cc:	3714      	adds	r7, #20
 800d9ce:	46bd      	mov	sp, r7
 800d9d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9d4:	4770      	bx	lr
	...

0800d9d8 <USBD_CDC_ReceivePacket>:
 800d9d8:	b580      	push	{r7, lr}
 800d9da:	b084      	sub	sp, #16
 800d9dc:	af00      	add	r7, sp, #0
 800d9de:	6078      	str	r0, [r7, #4]
 800d9e0:	687b      	ldr	r3, [r7, #4]
 800d9e2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d9e6:	687b      	ldr	r3, [r7, #4]
 800d9e8:	32b0      	adds	r2, #176	; 0xb0
 800d9ea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d9ee:	60fb      	str	r3, [r7, #12]
 800d9f0:	687b      	ldr	r3, [r7, #4]
 800d9f2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800d9f6:	687b      	ldr	r3, [r7, #4]
 800d9f8:	32b0      	adds	r2, #176	; 0xb0
 800d9fa:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800d9fe:	2b00      	cmp	r3, #0
 800da00:	d101      	bne.n	800da06 <USBD_CDC_ReceivePacket+0x2e>
 800da02:	2303      	movs	r3, #3
 800da04:	e018      	b.n	800da38 <USBD_CDC_ReceivePacket+0x60>
 800da06:	687b      	ldr	r3, [r7, #4]
 800da08:	7c1b      	ldrb	r3, [r3, #16]
 800da0a:	2b00      	cmp	r3, #0
 800da0c:	d10a      	bne.n	800da24 <USBD_CDC_ReceivePacket+0x4c>
 800da0e:	4b0c      	ldr	r3, [pc, #48]	; (800da40 <USBD_CDC_ReceivePacket+0x68>)
 800da10:	7819      	ldrb	r1, [r3, #0]
 800da12:	68fb      	ldr	r3, [r7, #12]
 800da14:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800da18:	f44f 7300 	mov.w	r3, #512	; 0x200
 800da1c:	6878      	ldr	r0, [r7, #4]
 800da1e:	f001 ffc3 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800da22:	e008      	b.n	800da36 <USBD_CDC_ReceivePacket+0x5e>
 800da24:	4b06      	ldr	r3, [pc, #24]	; (800da40 <USBD_CDC_ReceivePacket+0x68>)
 800da26:	7819      	ldrb	r1, [r3, #0]
 800da28:	68fb      	ldr	r3, [r7, #12]
 800da2a:	f8d3 2204 	ldr.w	r2, [r3, #516]	; 0x204
 800da2e:	2340      	movs	r3, #64	; 0x40
 800da30:	6878      	ldr	r0, [r7, #4]
 800da32:	f001 ffb9 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800da36:	2300      	movs	r3, #0
 800da38:	4618      	mov	r0, r3
 800da3a:	3710      	adds	r7, #16
 800da3c:	46bd      	mov	sp, r7
 800da3e:	bd80      	pop	{r7, pc}
 800da40:	200000b8 	.word	0x200000b8

0800da44 <USBD_Init>:
 800da44:	b580      	push	{r7, lr}
 800da46:	b086      	sub	sp, #24
 800da48:	af00      	add	r7, sp, #0
 800da4a:	60f8      	str	r0, [r7, #12]
 800da4c:	60b9      	str	r1, [r7, #8]
 800da4e:	4613      	mov	r3, r2
 800da50:	71fb      	strb	r3, [r7, #7]
 800da52:	68fb      	ldr	r3, [r7, #12]
 800da54:	2b00      	cmp	r3, #0
 800da56:	d101      	bne.n	800da5c <USBD_Init+0x18>
 800da58:	2303      	movs	r3, #3
 800da5a:	e01f      	b.n	800da9c <USBD_Init+0x58>
 800da5c:	68fb      	ldr	r3, [r7, #12]
 800da5e:	2200      	movs	r2, #0
 800da60:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 800da64:	68fb      	ldr	r3, [r7, #12]
 800da66:	2200      	movs	r2, #0
 800da68:	f8c3 22c4 	str.w	r2, [r3, #708]	; 0x2c4
 800da6c:	68fb      	ldr	r3, [r7, #12]
 800da6e:	2200      	movs	r2, #0
 800da70:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 800da74:	68bb      	ldr	r3, [r7, #8]
 800da76:	2b00      	cmp	r3, #0
 800da78:	d003      	beq.n	800da82 <USBD_Init+0x3e>
 800da7a:	68fb      	ldr	r3, [r7, #12]
 800da7c:	68ba      	ldr	r2, [r7, #8]
 800da7e:	f8c3 22b4 	str.w	r2, [r3, #692]	; 0x2b4
 800da82:	68fb      	ldr	r3, [r7, #12]
 800da84:	2201      	movs	r2, #1
 800da86:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800da8a:	68fb      	ldr	r3, [r7, #12]
 800da8c:	79fa      	ldrb	r2, [r7, #7]
 800da8e:	701a      	strb	r2, [r3, #0]
 800da90:	68f8      	ldr	r0, [r7, #12]
 800da92:	f001 fe33 	bl	800f6fc <USBD_LL_Init>
 800da96:	4603      	mov	r3, r0
 800da98:	75fb      	strb	r3, [r7, #23]
 800da9a:	7dfb      	ldrb	r3, [r7, #23]
 800da9c:	4618      	mov	r0, r3
 800da9e:	3718      	adds	r7, #24
 800daa0:	46bd      	mov	sp, r7
 800daa2:	bd80      	pop	{r7, pc}

0800daa4 <USBD_RegisterClass>:
 800daa4:	b580      	push	{r7, lr}
 800daa6:	b084      	sub	sp, #16
 800daa8:	af00      	add	r7, sp, #0
 800daaa:	6078      	str	r0, [r7, #4]
 800daac:	6039      	str	r1, [r7, #0]
 800daae:	2300      	movs	r3, #0
 800dab0:	81fb      	strh	r3, [r7, #14]
 800dab2:	683b      	ldr	r3, [r7, #0]
 800dab4:	2b00      	cmp	r3, #0
 800dab6:	d101      	bne.n	800dabc <USBD_RegisterClass+0x18>
 800dab8:	2303      	movs	r3, #3
 800daba:	e025      	b.n	800db08 <USBD_RegisterClass+0x64>
 800dabc:	687b      	ldr	r3, [r7, #4]
 800dabe:	683a      	ldr	r2, [r7, #0]
 800dac0:	f8c3 22b8 	str.w	r2, [r3, #696]	; 0x2b8
 800dac4:	687b      	ldr	r3, [r7, #4]
 800dac6:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800daca:	687b      	ldr	r3, [r7, #4]
 800dacc:	32ae      	adds	r2, #174	; 0xae
 800dace:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dad2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dad4:	2b00      	cmp	r3, #0
 800dad6:	d00f      	beq.n	800daf8 <USBD_RegisterClass+0x54>
 800dad8:	687b      	ldr	r3, [r7, #4]
 800dada:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800dade:	687b      	ldr	r3, [r7, #4]
 800dae0:	32ae      	adds	r2, #174	; 0xae
 800dae2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dae6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dae8:	f107 020e 	add.w	r2, r7, #14
 800daec:	4610      	mov	r0, r2
 800daee:	4798      	blx	r3
 800daf0:	4602      	mov	r2, r0
 800daf2:	687b      	ldr	r3, [r7, #4]
 800daf4:	f8c3 22d0 	str.w	r2, [r3, #720]	; 0x2d0
 800daf8:	687b      	ldr	r3, [r7, #4]
 800dafa:	f8d3 32d8 	ldr.w	r3, [r3, #728]	; 0x2d8
 800dafe:	1c5a      	adds	r2, r3, #1
 800db00:	687b      	ldr	r3, [r7, #4]
 800db02:	f8c3 22d8 	str.w	r2, [r3, #728]	; 0x2d8
 800db06:	2300      	movs	r3, #0
 800db08:	4618      	mov	r0, r3
 800db0a:	3710      	adds	r7, #16
 800db0c:	46bd      	mov	sp, r7
 800db0e:	bd80      	pop	{r7, pc}

0800db10 <USBD_Start>:
 800db10:	b580      	push	{r7, lr}
 800db12:	b082      	sub	sp, #8
 800db14:	af00      	add	r7, sp, #0
 800db16:	6078      	str	r0, [r7, #4]
 800db18:	6878      	ldr	r0, [r7, #4]
 800db1a:	f001 fe3b 	bl	800f794 <USBD_LL_Start>
 800db1e:	4603      	mov	r3, r0
 800db20:	4618      	mov	r0, r3
 800db22:	3708      	adds	r7, #8
 800db24:	46bd      	mov	sp, r7
 800db26:	bd80      	pop	{r7, pc}

0800db28 <USBD_RunTestMode>:
 800db28:	b480      	push	{r7}
 800db2a:	b083      	sub	sp, #12
 800db2c:	af00      	add	r7, sp, #0
 800db2e:	6078      	str	r0, [r7, #4]
 800db30:	2300      	movs	r3, #0
 800db32:	4618      	mov	r0, r3
 800db34:	370c      	adds	r7, #12
 800db36:	46bd      	mov	sp, r7
 800db38:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db3c:	4770      	bx	lr

0800db3e <USBD_SetClassConfig>:
 800db3e:	b580      	push	{r7, lr}
 800db40:	b084      	sub	sp, #16
 800db42:	af00      	add	r7, sp, #0
 800db44:	6078      	str	r0, [r7, #4]
 800db46:	460b      	mov	r3, r1
 800db48:	70fb      	strb	r3, [r7, #3]
 800db4a:	2300      	movs	r3, #0
 800db4c:	73fb      	strb	r3, [r7, #15]
 800db4e:	687b      	ldr	r3, [r7, #4]
 800db50:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800db54:	2b00      	cmp	r3, #0
 800db56:	d009      	beq.n	800db6c <USBD_SetClassConfig+0x2e>
 800db58:	687b      	ldr	r3, [r7, #4]
 800db5a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800db5e:	681b      	ldr	r3, [r3, #0]
 800db60:	78fa      	ldrb	r2, [r7, #3]
 800db62:	4611      	mov	r1, r2
 800db64:	6878      	ldr	r0, [r7, #4]
 800db66:	4798      	blx	r3
 800db68:	4603      	mov	r3, r0
 800db6a:	73fb      	strb	r3, [r7, #15]
 800db6c:	7bfb      	ldrb	r3, [r7, #15]
 800db6e:	4618      	mov	r0, r3
 800db70:	3710      	adds	r7, #16
 800db72:	46bd      	mov	sp, r7
 800db74:	bd80      	pop	{r7, pc}

0800db76 <USBD_ClrClassConfig>:
 800db76:	b580      	push	{r7, lr}
 800db78:	b084      	sub	sp, #16
 800db7a:	af00      	add	r7, sp, #0
 800db7c:	6078      	str	r0, [r7, #4]
 800db7e:	460b      	mov	r3, r1
 800db80:	70fb      	strb	r3, [r7, #3]
 800db82:	2300      	movs	r3, #0
 800db84:	73fb      	strb	r3, [r7, #15]
 800db86:	687b      	ldr	r3, [r7, #4]
 800db88:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800db8c:	685b      	ldr	r3, [r3, #4]
 800db8e:	78fa      	ldrb	r2, [r7, #3]
 800db90:	4611      	mov	r1, r2
 800db92:	6878      	ldr	r0, [r7, #4]
 800db94:	4798      	blx	r3
 800db96:	4603      	mov	r3, r0
 800db98:	2b00      	cmp	r3, #0
 800db9a:	d001      	beq.n	800dba0 <USBD_ClrClassConfig+0x2a>
 800db9c:	2303      	movs	r3, #3
 800db9e:	73fb      	strb	r3, [r7, #15]
 800dba0:	7bfb      	ldrb	r3, [r7, #15]
 800dba2:	4618      	mov	r0, r3
 800dba4:	3710      	adds	r7, #16
 800dba6:	46bd      	mov	sp, r7
 800dba8:	bd80      	pop	{r7, pc}

0800dbaa <USBD_LL_SetupStage>:
 800dbaa:	b580      	push	{r7, lr}
 800dbac:	b084      	sub	sp, #16
 800dbae:	af00      	add	r7, sp, #0
 800dbb0:	6078      	str	r0, [r7, #4]
 800dbb2:	6039      	str	r1, [r7, #0]
 800dbb4:	687b      	ldr	r3, [r7, #4]
 800dbb6:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800dbba:	6839      	ldr	r1, [r7, #0]
 800dbbc:	4618      	mov	r0, r3
 800dbbe:	f001 f908 	bl	800edd2 <USBD_ParseSetupRequest>
 800dbc2:	687b      	ldr	r3, [r7, #4]
 800dbc4:	2201      	movs	r2, #1
 800dbc6:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800dbca:	687b      	ldr	r3, [r7, #4]
 800dbcc:	f8b3 32b0 	ldrh.w	r3, [r3, #688]	; 0x2b0
 800dbd0:	461a      	mov	r2, r3
 800dbd2:	687b      	ldr	r3, [r7, #4]
 800dbd4:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 800dbd8:	687b      	ldr	r3, [r7, #4]
 800dbda:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800dbde:	f003 031f 	and.w	r3, r3, #31
 800dbe2:	2b02      	cmp	r3, #2
 800dbe4:	d01a      	beq.n	800dc1c <USBD_LL_SetupStage+0x72>
 800dbe6:	2b02      	cmp	r3, #2
 800dbe8:	d822      	bhi.n	800dc30 <USBD_LL_SetupStage+0x86>
 800dbea:	2b00      	cmp	r3, #0
 800dbec:	d002      	beq.n	800dbf4 <USBD_LL_SetupStage+0x4a>
 800dbee:	2b01      	cmp	r3, #1
 800dbf0:	d00a      	beq.n	800dc08 <USBD_LL_SetupStage+0x5e>
 800dbf2:	e01d      	b.n	800dc30 <USBD_LL_SetupStage+0x86>
 800dbf4:	687b      	ldr	r3, [r7, #4]
 800dbf6:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800dbfa:	4619      	mov	r1, r3
 800dbfc:	6878      	ldr	r0, [r7, #4]
 800dbfe:	f000 fb5f 	bl	800e2c0 <USBD_StdDevReq>
 800dc02:	4603      	mov	r3, r0
 800dc04:	73fb      	strb	r3, [r7, #15]
 800dc06:	e020      	b.n	800dc4a <USBD_LL_SetupStage+0xa0>
 800dc08:	687b      	ldr	r3, [r7, #4]
 800dc0a:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800dc0e:	4619      	mov	r1, r3
 800dc10:	6878      	ldr	r0, [r7, #4]
 800dc12:	f000 fbc7 	bl	800e3a4 <USBD_StdItfReq>
 800dc16:	4603      	mov	r3, r0
 800dc18:	73fb      	strb	r3, [r7, #15]
 800dc1a:	e016      	b.n	800dc4a <USBD_LL_SetupStage+0xa0>
 800dc1c:	687b      	ldr	r3, [r7, #4]
 800dc1e:	f203 23aa 	addw	r3, r3, #682	; 0x2aa
 800dc22:	4619      	mov	r1, r3
 800dc24:	6878      	ldr	r0, [r7, #4]
 800dc26:	f000 fc29 	bl	800e47c <USBD_StdEPReq>
 800dc2a:	4603      	mov	r3, r0
 800dc2c:	73fb      	strb	r3, [r7, #15]
 800dc2e:	e00c      	b.n	800dc4a <USBD_LL_SetupStage+0xa0>
 800dc30:	687b      	ldr	r3, [r7, #4]
 800dc32:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800dc36:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800dc3a:	b2db      	uxtb	r3, r3
 800dc3c:	4619      	mov	r1, r3
 800dc3e:	6878      	ldr	r0, [r7, #4]
 800dc40:	f001 fe08 	bl	800f854 <USBD_LL_StallEP>
 800dc44:	4603      	mov	r3, r0
 800dc46:	73fb      	strb	r3, [r7, #15]
 800dc48:	bf00      	nop
 800dc4a:	7bfb      	ldrb	r3, [r7, #15]
 800dc4c:	4618      	mov	r0, r3
 800dc4e:	3710      	adds	r7, #16
 800dc50:	46bd      	mov	sp, r7
 800dc52:	bd80      	pop	{r7, pc}

0800dc54 <USBD_LL_DataOutStage>:
 800dc54:	b580      	push	{r7, lr}
 800dc56:	b086      	sub	sp, #24
 800dc58:	af00      	add	r7, sp, #0
 800dc5a:	60f8      	str	r0, [r7, #12]
 800dc5c:	460b      	mov	r3, r1
 800dc5e:	607a      	str	r2, [r7, #4]
 800dc60:	72fb      	strb	r3, [r7, #11]
 800dc62:	2300      	movs	r3, #0
 800dc64:	75fb      	strb	r3, [r7, #23]
 800dc66:	7afb      	ldrb	r3, [r7, #11]
 800dc68:	2b00      	cmp	r3, #0
 800dc6a:	d16e      	bne.n	800dd4a <USBD_LL_DataOutStage+0xf6>
 800dc6c:	68fb      	ldr	r3, [r7, #12]
 800dc6e:	f503 73aa 	add.w	r3, r3, #340	; 0x154
 800dc72:	613b      	str	r3, [r7, #16]
 800dc74:	68fb      	ldr	r3, [r7, #12]
 800dc76:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800dc7a:	2b03      	cmp	r3, #3
 800dc7c:	f040 8098 	bne.w	800ddb0 <USBD_LL_DataOutStage+0x15c>
 800dc80:	693b      	ldr	r3, [r7, #16]
 800dc82:	689a      	ldr	r2, [r3, #8]
 800dc84:	693b      	ldr	r3, [r7, #16]
 800dc86:	68db      	ldr	r3, [r3, #12]
 800dc88:	429a      	cmp	r2, r3
 800dc8a:	d913      	bls.n	800dcb4 <USBD_LL_DataOutStage+0x60>
 800dc8c:	693b      	ldr	r3, [r7, #16]
 800dc8e:	689a      	ldr	r2, [r3, #8]
 800dc90:	693b      	ldr	r3, [r7, #16]
 800dc92:	68db      	ldr	r3, [r3, #12]
 800dc94:	1ad2      	subs	r2, r2, r3
 800dc96:	693b      	ldr	r3, [r7, #16]
 800dc98:	609a      	str	r2, [r3, #8]
 800dc9a:	693b      	ldr	r3, [r7, #16]
 800dc9c:	68da      	ldr	r2, [r3, #12]
 800dc9e:	693b      	ldr	r3, [r7, #16]
 800dca0:	689b      	ldr	r3, [r3, #8]
 800dca2:	4293      	cmp	r3, r2
 800dca4:	bf28      	it	cs
 800dca6:	4613      	movcs	r3, r2
 800dca8:	461a      	mov	r2, r3
 800dcaa:	6879      	ldr	r1, [r7, #4]
 800dcac:	68f8      	ldr	r0, [r7, #12]
 800dcae:	f001 f984 	bl	800efba <USBD_CtlContinueRx>
 800dcb2:	e07d      	b.n	800ddb0 <USBD_LL_DataOutStage+0x15c>
 800dcb4:	68fb      	ldr	r3, [r7, #12]
 800dcb6:	f893 32aa 	ldrb.w	r3, [r3, #682]	; 0x2aa
 800dcba:	f003 031f 	and.w	r3, r3, #31
 800dcbe:	2b02      	cmp	r3, #2
 800dcc0:	d014      	beq.n	800dcec <USBD_LL_DataOutStage+0x98>
 800dcc2:	2b02      	cmp	r3, #2
 800dcc4:	d81d      	bhi.n	800dd02 <USBD_LL_DataOutStage+0xae>
 800dcc6:	2b00      	cmp	r3, #0
 800dcc8:	d002      	beq.n	800dcd0 <USBD_LL_DataOutStage+0x7c>
 800dcca:	2b01      	cmp	r3, #1
 800dccc:	d003      	beq.n	800dcd6 <USBD_LL_DataOutStage+0x82>
 800dcce:	e018      	b.n	800dd02 <USBD_LL_DataOutStage+0xae>
 800dcd0:	2300      	movs	r3, #0
 800dcd2:	75bb      	strb	r3, [r7, #22]
 800dcd4:	e018      	b.n	800dd08 <USBD_LL_DataOutStage+0xb4>
 800dcd6:	68fb      	ldr	r3, [r7, #12]
 800dcd8:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 800dcdc:	b2db      	uxtb	r3, r3
 800dcde:	4619      	mov	r1, r3
 800dce0:	68f8      	ldr	r0, [r7, #12]
 800dce2:	f000 fa5e 	bl	800e1a2 <USBD_CoreFindIF>
 800dce6:	4603      	mov	r3, r0
 800dce8:	75bb      	strb	r3, [r7, #22]
 800dcea:	e00d      	b.n	800dd08 <USBD_LL_DataOutStage+0xb4>
 800dcec:	68fb      	ldr	r3, [r7, #12]
 800dcee:	f8b3 32ae 	ldrh.w	r3, [r3, #686]	; 0x2ae
 800dcf2:	b2db      	uxtb	r3, r3
 800dcf4:	4619      	mov	r1, r3
 800dcf6:	68f8      	ldr	r0, [r7, #12]
 800dcf8:	f000 fa60 	bl	800e1bc <USBD_CoreFindEP>
 800dcfc:	4603      	mov	r3, r0
 800dcfe:	75bb      	strb	r3, [r7, #22]
 800dd00:	e002      	b.n	800dd08 <USBD_LL_DataOutStage+0xb4>
 800dd02:	2300      	movs	r3, #0
 800dd04:	75bb      	strb	r3, [r7, #22]
 800dd06:	bf00      	nop
 800dd08:	7dbb      	ldrb	r3, [r7, #22]
 800dd0a:	2b00      	cmp	r3, #0
 800dd0c:	d119      	bne.n	800dd42 <USBD_LL_DataOutStage+0xee>
 800dd0e:	68fb      	ldr	r3, [r7, #12]
 800dd10:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800dd14:	b2db      	uxtb	r3, r3
 800dd16:	2b03      	cmp	r3, #3
 800dd18:	d113      	bne.n	800dd42 <USBD_LL_DataOutStage+0xee>
 800dd1a:	7dba      	ldrb	r2, [r7, #22]
 800dd1c:	68fb      	ldr	r3, [r7, #12]
 800dd1e:	32ae      	adds	r2, #174	; 0xae
 800dd20:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dd24:	691b      	ldr	r3, [r3, #16]
 800dd26:	2b00      	cmp	r3, #0
 800dd28:	d00b      	beq.n	800dd42 <USBD_LL_DataOutStage+0xee>
 800dd2a:	7dba      	ldrb	r2, [r7, #22]
 800dd2c:	68fb      	ldr	r3, [r7, #12]
 800dd2e:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800dd32:	7dba      	ldrb	r2, [r7, #22]
 800dd34:	68fb      	ldr	r3, [r7, #12]
 800dd36:	32ae      	adds	r2, #174	; 0xae
 800dd38:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dd3c:	691b      	ldr	r3, [r3, #16]
 800dd3e:	68f8      	ldr	r0, [r7, #12]
 800dd40:	4798      	blx	r3
 800dd42:	68f8      	ldr	r0, [r7, #12]
 800dd44:	f001 f94a 	bl	800efdc <USBD_CtlSendStatus>
 800dd48:	e032      	b.n	800ddb0 <USBD_LL_DataOutStage+0x15c>
 800dd4a:	7afb      	ldrb	r3, [r7, #11]
 800dd4c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800dd50:	b2db      	uxtb	r3, r3
 800dd52:	4619      	mov	r1, r3
 800dd54:	68f8      	ldr	r0, [r7, #12]
 800dd56:	f000 fa31 	bl	800e1bc <USBD_CoreFindEP>
 800dd5a:	4603      	mov	r3, r0
 800dd5c:	75bb      	strb	r3, [r7, #22]
 800dd5e:	7dbb      	ldrb	r3, [r7, #22]
 800dd60:	2bff      	cmp	r3, #255	; 0xff
 800dd62:	d025      	beq.n	800ddb0 <USBD_LL_DataOutStage+0x15c>
 800dd64:	7dbb      	ldrb	r3, [r7, #22]
 800dd66:	2b00      	cmp	r3, #0
 800dd68:	d122      	bne.n	800ddb0 <USBD_LL_DataOutStage+0x15c>
 800dd6a:	68fb      	ldr	r3, [r7, #12]
 800dd6c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800dd70:	b2db      	uxtb	r3, r3
 800dd72:	2b03      	cmp	r3, #3
 800dd74:	d117      	bne.n	800dda6 <USBD_LL_DataOutStage+0x152>
 800dd76:	7dba      	ldrb	r2, [r7, #22]
 800dd78:	68fb      	ldr	r3, [r7, #12]
 800dd7a:	32ae      	adds	r2, #174	; 0xae
 800dd7c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dd80:	699b      	ldr	r3, [r3, #24]
 800dd82:	2b00      	cmp	r3, #0
 800dd84:	d00f      	beq.n	800dda6 <USBD_LL_DataOutStage+0x152>
 800dd86:	7dba      	ldrb	r2, [r7, #22]
 800dd88:	68fb      	ldr	r3, [r7, #12]
 800dd8a:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800dd8e:	7dba      	ldrb	r2, [r7, #22]
 800dd90:	68fb      	ldr	r3, [r7, #12]
 800dd92:	32ae      	adds	r2, #174	; 0xae
 800dd94:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dd98:	699b      	ldr	r3, [r3, #24]
 800dd9a:	7afa      	ldrb	r2, [r7, #11]
 800dd9c:	4611      	mov	r1, r2
 800dd9e:	68f8      	ldr	r0, [r7, #12]
 800dda0:	4798      	blx	r3
 800dda2:	4603      	mov	r3, r0
 800dda4:	75fb      	strb	r3, [r7, #23]
 800dda6:	7dfb      	ldrb	r3, [r7, #23]
 800dda8:	2b00      	cmp	r3, #0
 800ddaa:	d001      	beq.n	800ddb0 <USBD_LL_DataOutStage+0x15c>
 800ddac:	7dfb      	ldrb	r3, [r7, #23]
 800ddae:	e000      	b.n	800ddb2 <USBD_LL_DataOutStage+0x15e>
 800ddb0:	2300      	movs	r3, #0
 800ddb2:	4618      	mov	r0, r3
 800ddb4:	3718      	adds	r7, #24
 800ddb6:	46bd      	mov	sp, r7
 800ddb8:	bd80      	pop	{r7, pc}

0800ddba <USBD_LL_DataInStage>:
 800ddba:	b580      	push	{r7, lr}
 800ddbc:	b086      	sub	sp, #24
 800ddbe:	af00      	add	r7, sp, #0
 800ddc0:	60f8      	str	r0, [r7, #12]
 800ddc2:	460b      	mov	r3, r1
 800ddc4:	607a      	str	r2, [r7, #4]
 800ddc6:	72fb      	strb	r3, [r7, #11]
 800ddc8:	7afb      	ldrb	r3, [r7, #11]
 800ddca:	2b00      	cmp	r3, #0
 800ddcc:	d16f      	bne.n	800deae <USBD_LL_DataInStage+0xf4>
 800ddce:	68fb      	ldr	r3, [r7, #12]
 800ddd0:	3314      	adds	r3, #20
 800ddd2:	613b      	str	r3, [r7, #16]
 800ddd4:	68fb      	ldr	r3, [r7, #12]
 800ddd6:	f8d3 3294 	ldr.w	r3, [r3, #660]	; 0x294
 800ddda:	2b02      	cmp	r3, #2
 800dddc:	d15a      	bne.n	800de94 <USBD_LL_DataInStage+0xda>
 800ddde:	693b      	ldr	r3, [r7, #16]
 800dde0:	689a      	ldr	r2, [r3, #8]
 800dde2:	693b      	ldr	r3, [r7, #16]
 800dde4:	68db      	ldr	r3, [r3, #12]
 800dde6:	429a      	cmp	r2, r3
 800dde8:	d914      	bls.n	800de14 <USBD_LL_DataInStage+0x5a>
 800ddea:	693b      	ldr	r3, [r7, #16]
 800ddec:	689a      	ldr	r2, [r3, #8]
 800ddee:	693b      	ldr	r3, [r7, #16]
 800ddf0:	68db      	ldr	r3, [r3, #12]
 800ddf2:	1ad2      	subs	r2, r2, r3
 800ddf4:	693b      	ldr	r3, [r7, #16]
 800ddf6:	609a      	str	r2, [r3, #8]
 800ddf8:	693b      	ldr	r3, [r7, #16]
 800ddfa:	689b      	ldr	r3, [r3, #8]
 800ddfc:	461a      	mov	r2, r3
 800ddfe:	6879      	ldr	r1, [r7, #4]
 800de00:	68f8      	ldr	r0, [r7, #12]
 800de02:	f001 f8ac 	bl	800ef5e <USBD_CtlContinueSendData>
 800de06:	2300      	movs	r3, #0
 800de08:	2200      	movs	r2, #0
 800de0a:	2100      	movs	r1, #0
 800de0c:	68f8      	ldr	r0, [r7, #12]
 800de0e:	f001 fdcb 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800de12:	e03f      	b.n	800de94 <USBD_LL_DataInStage+0xda>
 800de14:	693b      	ldr	r3, [r7, #16]
 800de16:	68da      	ldr	r2, [r3, #12]
 800de18:	693b      	ldr	r3, [r7, #16]
 800de1a:	689b      	ldr	r3, [r3, #8]
 800de1c:	429a      	cmp	r2, r3
 800de1e:	d11c      	bne.n	800de5a <USBD_LL_DataInStage+0xa0>
 800de20:	693b      	ldr	r3, [r7, #16]
 800de22:	685a      	ldr	r2, [r3, #4]
 800de24:	693b      	ldr	r3, [r7, #16]
 800de26:	68db      	ldr	r3, [r3, #12]
 800de28:	429a      	cmp	r2, r3
 800de2a:	d316      	bcc.n	800de5a <USBD_LL_DataInStage+0xa0>
 800de2c:	693b      	ldr	r3, [r7, #16]
 800de2e:	685a      	ldr	r2, [r3, #4]
 800de30:	68fb      	ldr	r3, [r7, #12]
 800de32:	f8d3 3298 	ldr.w	r3, [r3, #664]	; 0x298
 800de36:	429a      	cmp	r2, r3
 800de38:	d20f      	bcs.n	800de5a <USBD_LL_DataInStage+0xa0>
 800de3a:	2200      	movs	r2, #0
 800de3c:	2100      	movs	r1, #0
 800de3e:	68f8      	ldr	r0, [r7, #12]
 800de40:	f001 f88d 	bl	800ef5e <USBD_CtlContinueSendData>
 800de44:	68fb      	ldr	r3, [r7, #12]
 800de46:	2200      	movs	r2, #0
 800de48:	f8c3 2298 	str.w	r2, [r3, #664]	; 0x298
 800de4c:	2300      	movs	r3, #0
 800de4e:	2200      	movs	r2, #0
 800de50:	2100      	movs	r1, #0
 800de52:	68f8      	ldr	r0, [r7, #12]
 800de54:	f001 fda8 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800de58:	e01c      	b.n	800de94 <USBD_LL_DataInStage+0xda>
 800de5a:	68fb      	ldr	r3, [r7, #12]
 800de5c:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800de60:	b2db      	uxtb	r3, r3
 800de62:	2b03      	cmp	r3, #3
 800de64:	d10f      	bne.n	800de86 <USBD_LL_DataInStage+0xcc>
 800de66:	68fb      	ldr	r3, [r7, #12]
 800de68:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800de6c:	68db      	ldr	r3, [r3, #12]
 800de6e:	2b00      	cmp	r3, #0
 800de70:	d009      	beq.n	800de86 <USBD_LL_DataInStage+0xcc>
 800de72:	68fb      	ldr	r3, [r7, #12]
 800de74:	2200      	movs	r2, #0
 800de76:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800de7a:	68fb      	ldr	r3, [r7, #12]
 800de7c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800de80:	68db      	ldr	r3, [r3, #12]
 800de82:	68f8      	ldr	r0, [r7, #12]
 800de84:	4798      	blx	r3
 800de86:	2180      	movs	r1, #128	; 0x80
 800de88:	68f8      	ldr	r0, [r7, #12]
 800de8a:	f001 fce3 	bl	800f854 <USBD_LL_StallEP>
 800de8e:	68f8      	ldr	r0, [r7, #12]
 800de90:	f001 f8b7 	bl	800f002 <USBD_CtlReceiveStatus>
 800de94:	68fb      	ldr	r3, [r7, #12]
 800de96:	f893 32a0 	ldrb.w	r3, [r3, #672]	; 0x2a0
 800de9a:	2b00      	cmp	r3, #0
 800de9c:	d03a      	beq.n	800df14 <USBD_LL_DataInStage+0x15a>
 800de9e:	68f8      	ldr	r0, [r7, #12]
 800dea0:	f7ff fe42 	bl	800db28 <USBD_RunTestMode>
 800dea4:	68fb      	ldr	r3, [r7, #12]
 800dea6:	2200      	movs	r2, #0
 800dea8:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800deac:	e032      	b.n	800df14 <USBD_LL_DataInStage+0x15a>
 800deae:	7afb      	ldrb	r3, [r7, #11]
 800deb0:	f063 037f 	orn	r3, r3, #127	; 0x7f
 800deb4:	b2db      	uxtb	r3, r3
 800deb6:	4619      	mov	r1, r3
 800deb8:	68f8      	ldr	r0, [r7, #12]
 800deba:	f000 f97f 	bl	800e1bc <USBD_CoreFindEP>
 800debe:	4603      	mov	r3, r0
 800dec0:	75fb      	strb	r3, [r7, #23]
 800dec2:	7dfb      	ldrb	r3, [r7, #23]
 800dec4:	2bff      	cmp	r3, #255	; 0xff
 800dec6:	d025      	beq.n	800df14 <USBD_LL_DataInStage+0x15a>
 800dec8:	7dfb      	ldrb	r3, [r7, #23]
 800deca:	2b00      	cmp	r3, #0
 800decc:	d122      	bne.n	800df14 <USBD_LL_DataInStage+0x15a>
 800dece:	68fb      	ldr	r3, [r7, #12]
 800ded0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ded4:	b2db      	uxtb	r3, r3
 800ded6:	2b03      	cmp	r3, #3
 800ded8:	d11c      	bne.n	800df14 <USBD_LL_DataInStage+0x15a>
 800deda:	7dfa      	ldrb	r2, [r7, #23]
 800dedc:	68fb      	ldr	r3, [r7, #12]
 800dede:	32ae      	adds	r2, #174	; 0xae
 800dee0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800dee4:	695b      	ldr	r3, [r3, #20]
 800dee6:	2b00      	cmp	r3, #0
 800dee8:	d014      	beq.n	800df14 <USBD_LL_DataInStage+0x15a>
 800deea:	7dfa      	ldrb	r2, [r7, #23]
 800deec:	68fb      	ldr	r3, [r7, #12]
 800deee:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800def2:	7dfa      	ldrb	r2, [r7, #23]
 800def4:	68fb      	ldr	r3, [r7, #12]
 800def6:	32ae      	adds	r2, #174	; 0xae
 800def8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800defc:	695b      	ldr	r3, [r3, #20]
 800defe:	7afa      	ldrb	r2, [r7, #11]
 800df00:	4611      	mov	r1, r2
 800df02:	68f8      	ldr	r0, [r7, #12]
 800df04:	4798      	blx	r3
 800df06:	4603      	mov	r3, r0
 800df08:	75bb      	strb	r3, [r7, #22]
 800df0a:	7dbb      	ldrb	r3, [r7, #22]
 800df0c:	2b00      	cmp	r3, #0
 800df0e:	d001      	beq.n	800df14 <USBD_LL_DataInStage+0x15a>
 800df10:	7dbb      	ldrb	r3, [r7, #22]
 800df12:	e000      	b.n	800df16 <USBD_LL_DataInStage+0x15c>
 800df14:	2300      	movs	r3, #0
 800df16:	4618      	mov	r0, r3
 800df18:	3718      	adds	r7, #24
 800df1a:	46bd      	mov	sp, r7
 800df1c:	bd80      	pop	{r7, pc}

0800df1e <USBD_LL_Reset>:
 800df1e:	b580      	push	{r7, lr}
 800df20:	b084      	sub	sp, #16
 800df22:	af00      	add	r7, sp, #0
 800df24:	6078      	str	r0, [r7, #4]
 800df26:	2300      	movs	r3, #0
 800df28:	73fb      	strb	r3, [r7, #15]
 800df2a:	687b      	ldr	r3, [r7, #4]
 800df2c:	2201      	movs	r2, #1
 800df2e:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800df32:	687b      	ldr	r3, [r7, #4]
 800df34:	2200      	movs	r2, #0
 800df36:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800df3a:	687b      	ldr	r3, [r7, #4]
 800df3c:	2200      	movs	r2, #0
 800df3e:	605a      	str	r2, [r3, #4]
 800df40:	687b      	ldr	r3, [r7, #4]
 800df42:	2200      	movs	r2, #0
 800df44:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 800df48:	687b      	ldr	r3, [r7, #4]
 800df4a:	2200      	movs	r2, #0
 800df4c:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800df50:	687b      	ldr	r3, [r7, #4]
 800df52:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800df56:	2b00      	cmp	r3, #0
 800df58:	d014      	beq.n	800df84 <USBD_LL_Reset+0x66>
 800df5a:	687b      	ldr	r3, [r7, #4]
 800df5c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800df60:	685b      	ldr	r3, [r3, #4]
 800df62:	2b00      	cmp	r3, #0
 800df64:	d00e      	beq.n	800df84 <USBD_LL_Reset+0x66>
 800df66:	687b      	ldr	r3, [r7, #4]
 800df68:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800df6c:	685b      	ldr	r3, [r3, #4]
 800df6e:	687a      	ldr	r2, [r7, #4]
 800df70:	6852      	ldr	r2, [r2, #4]
 800df72:	b2d2      	uxtb	r2, r2
 800df74:	4611      	mov	r1, r2
 800df76:	6878      	ldr	r0, [r7, #4]
 800df78:	4798      	blx	r3
 800df7a:	4603      	mov	r3, r0
 800df7c:	2b00      	cmp	r3, #0
 800df7e:	d001      	beq.n	800df84 <USBD_LL_Reset+0x66>
 800df80:	2303      	movs	r3, #3
 800df82:	73fb      	strb	r3, [r7, #15]
 800df84:	2340      	movs	r3, #64	; 0x40
 800df86:	2200      	movs	r2, #0
 800df88:	2100      	movs	r1, #0
 800df8a:	6878      	ldr	r0, [r7, #4]
 800df8c:	f001 fc1d 	bl	800f7ca <USBD_LL_OpenEP>
 800df90:	687b      	ldr	r3, [r7, #4]
 800df92:	2201      	movs	r2, #1
 800df94:	f8a3 2164 	strh.w	r2, [r3, #356]	; 0x164
 800df98:	687b      	ldr	r3, [r7, #4]
 800df9a:	2240      	movs	r2, #64	; 0x40
 800df9c:	f8c3 2160 	str.w	r2, [r3, #352]	; 0x160
 800dfa0:	2340      	movs	r3, #64	; 0x40
 800dfa2:	2200      	movs	r2, #0
 800dfa4:	2180      	movs	r1, #128	; 0x80
 800dfa6:	6878      	ldr	r0, [r7, #4]
 800dfa8:	f001 fc0f 	bl	800f7ca <USBD_LL_OpenEP>
 800dfac:	687b      	ldr	r3, [r7, #4]
 800dfae:	2201      	movs	r2, #1
 800dfb0:	849a      	strh	r2, [r3, #36]	; 0x24
 800dfb2:	687b      	ldr	r3, [r7, #4]
 800dfb4:	2240      	movs	r2, #64	; 0x40
 800dfb6:	621a      	str	r2, [r3, #32]
 800dfb8:	7bfb      	ldrb	r3, [r7, #15]
 800dfba:	4618      	mov	r0, r3
 800dfbc:	3710      	adds	r7, #16
 800dfbe:	46bd      	mov	sp, r7
 800dfc0:	bd80      	pop	{r7, pc}

0800dfc2 <USBD_LL_SetSpeed>:
 800dfc2:	b480      	push	{r7}
 800dfc4:	b083      	sub	sp, #12
 800dfc6:	af00      	add	r7, sp, #0
 800dfc8:	6078      	str	r0, [r7, #4]
 800dfca:	460b      	mov	r3, r1
 800dfcc:	70fb      	strb	r3, [r7, #3]
 800dfce:	687b      	ldr	r3, [r7, #4]
 800dfd0:	78fa      	ldrb	r2, [r7, #3]
 800dfd2:	741a      	strb	r2, [r3, #16]
 800dfd4:	2300      	movs	r3, #0
 800dfd6:	4618      	mov	r0, r3
 800dfd8:	370c      	adds	r7, #12
 800dfda:	46bd      	mov	sp, r7
 800dfdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfe0:	4770      	bx	lr

0800dfe2 <USBD_LL_Suspend>:
 800dfe2:	b480      	push	{r7}
 800dfe4:	b083      	sub	sp, #12
 800dfe6:	af00      	add	r7, sp, #0
 800dfe8:	6078      	str	r0, [r7, #4]
 800dfea:	687b      	ldr	r3, [r7, #4]
 800dfec:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800dff0:	b2da      	uxtb	r2, r3
 800dff2:	687b      	ldr	r3, [r7, #4]
 800dff4:	f883 229d 	strb.w	r2, [r3, #669]	; 0x29d
 800dff8:	687b      	ldr	r3, [r7, #4]
 800dffa:	2204      	movs	r2, #4
 800dffc:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800e000:	2300      	movs	r3, #0
 800e002:	4618      	mov	r0, r3
 800e004:	370c      	adds	r7, #12
 800e006:	46bd      	mov	sp, r7
 800e008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e00c:	4770      	bx	lr

0800e00e <USBD_LL_Resume>:
 800e00e:	b480      	push	{r7}
 800e010:	b083      	sub	sp, #12
 800e012:	af00      	add	r7, sp, #0
 800e014:	6078      	str	r0, [r7, #4]
 800e016:	687b      	ldr	r3, [r7, #4]
 800e018:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e01c:	b2db      	uxtb	r3, r3
 800e01e:	2b04      	cmp	r3, #4
 800e020:	d106      	bne.n	800e030 <USBD_LL_Resume+0x22>
 800e022:	687b      	ldr	r3, [r7, #4]
 800e024:	f893 329d 	ldrb.w	r3, [r3, #669]	; 0x29d
 800e028:	b2da      	uxtb	r2, r3
 800e02a:	687b      	ldr	r3, [r7, #4]
 800e02c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800e030:	2300      	movs	r3, #0
 800e032:	4618      	mov	r0, r3
 800e034:	370c      	adds	r7, #12
 800e036:	46bd      	mov	sp, r7
 800e038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e03c:	4770      	bx	lr

0800e03e <USBD_LL_SOF>:
 800e03e:	b580      	push	{r7, lr}
 800e040:	b082      	sub	sp, #8
 800e042:	af00      	add	r7, sp, #0
 800e044:	6078      	str	r0, [r7, #4]
 800e046:	687b      	ldr	r3, [r7, #4]
 800e048:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e04c:	b2db      	uxtb	r3, r3
 800e04e:	2b03      	cmp	r3, #3
 800e050:	d110      	bne.n	800e074 <USBD_LL_SOF+0x36>
 800e052:	687b      	ldr	r3, [r7, #4]
 800e054:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e058:	2b00      	cmp	r3, #0
 800e05a:	d00b      	beq.n	800e074 <USBD_LL_SOF+0x36>
 800e05c:	687b      	ldr	r3, [r7, #4]
 800e05e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e062:	69db      	ldr	r3, [r3, #28]
 800e064:	2b00      	cmp	r3, #0
 800e066:	d005      	beq.n	800e074 <USBD_LL_SOF+0x36>
 800e068:	687b      	ldr	r3, [r7, #4]
 800e06a:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e06e:	69db      	ldr	r3, [r3, #28]
 800e070:	6878      	ldr	r0, [r7, #4]
 800e072:	4798      	blx	r3
 800e074:	2300      	movs	r3, #0
 800e076:	4618      	mov	r0, r3
 800e078:	3708      	adds	r7, #8
 800e07a:	46bd      	mov	sp, r7
 800e07c:	bd80      	pop	{r7, pc}

0800e07e <USBD_LL_IsoINIncomplete>:
 800e07e:	b580      	push	{r7, lr}
 800e080:	b082      	sub	sp, #8
 800e082:	af00      	add	r7, sp, #0
 800e084:	6078      	str	r0, [r7, #4]
 800e086:	460b      	mov	r3, r1
 800e088:	70fb      	strb	r3, [r7, #3]
 800e08a:	687b      	ldr	r3, [r7, #4]
 800e08c:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800e090:	687b      	ldr	r3, [r7, #4]
 800e092:	32ae      	adds	r2, #174	; 0xae
 800e094:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e098:	2b00      	cmp	r3, #0
 800e09a:	d101      	bne.n	800e0a0 <USBD_LL_IsoINIncomplete+0x22>
 800e09c:	2303      	movs	r3, #3
 800e09e:	e01c      	b.n	800e0da <USBD_LL_IsoINIncomplete+0x5c>
 800e0a0:	687b      	ldr	r3, [r7, #4]
 800e0a2:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e0a6:	b2db      	uxtb	r3, r3
 800e0a8:	2b03      	cmp	r3, #3
 800e0aa:	d115      	bne.n	800e0d8 <USBD_LL_IsoINIncomplete+0x5a>
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800e0b2:	687b      	ldr	r3, [r7, #4]
 800e0b4:	32ae      	adds	r2, #174	; 0xae
 800e0b6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e0ba:	6a1b      	ldr	r3, [r3, #32]
 800e0bc:	2b00      	cmp	r3, #0
 800e0be:	d00b      	beq.n	800e0d8 <USBD_LL_IsoINIncomplete+0x5a>
 800e0c0:	687b      	ldr	r3, [r7, #4]
 800e0c2:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800e0c6:	687b      	ldr	r3, [r7, #4]
 800e0c8:	32ae      	adds	r2, #174	; 0xae
 800e0ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e0ce:	6a1b      	ldr	r3, [r3, #32]
 800e0d0:	78fa      	ldrb	r2, [r7, #3]
 800e0d2:	4611      	mov	r1, r2
 800e0d4:	6878      	ldr	r0, [r7, #4]
 800e0d6:	4798      	blx	r3
 800e0d8:	2300      	movs	r3, #0
 800e0da:	4618      	mov	r0, r3
 800e0dc:	3708      	adds	r7, #8
 800e0de:	46bd      	mov	sp, r7
 800e0e0:	bd80      	pop	{r7, pc}

0800e0e2 <USBD_LL_IsoOUTIncomplete>:
 800e0e2:	b580      	push	{r7, lr}
 800e0e4:	b082      	sub	sp, #8
 800e0e6:	af00      	add	r7, sp, #0
 800e0e8:	6078      	str	r0, [r7, #4]
 800e0ea:	460b      	mov	r3, r1
 800e0ec:	70fb      	strb	r3, [r7, #3]
 800e0ee:	687b      	ldr	r3, [r7, #4]
 800e0f0:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800e0f4:	687b      	ldr	r3, [r7, #4]
 800e0f6:	32ae      	adds	r2, #174	; 0xae
 800e0f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e0fc:	2b00      	cmp	r3, #0
 800e0fe:	d101      	bne.n	800e104 <USBD_LL_IsoOUTIncomplete+0x22>
 800e100:	2303      	movs	r3, #3
 800e102:	e01c      	b.n	800e13e <USBD_LL_IsoOUTIncomplete+0x5c>
 800e104:	687b      	ldr	r3, [r7, #4]
 800e106:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e10a:	b2db      	uxtb	r3, r3
 800e10c:	2b03      	cmp	r3, #3
 800e10e:	d115      	bne.n	800e13c <USBD_LL_IsoOUTIncomplete+0x5a>
 800e110:	687b      	ldr	r3, [r7, #4]
 800e112:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800e116:	687b      	ldr	r3, [r7, #4]
 800e118:	32ae      	adds	r2, #174	; 0xae
 800e11a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e11e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e120:	2b00      	cmp	r3, #0
 800e122:	d00b      	beq.n	800e13c <USBD_LL_IsoOUTIncomplete+0x5a>
 800e124:	687b      	ldr	r3, [r7, #4]
 800e126:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800e12a:	687b      	ldr	r3, [r7, #4]
 800e12c:	32ae      	adds	r2, #174	; 0xae
 800e12e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e132:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e134:	78fa      	ldrb	r2, [r7, #3]
 800e136:	4611      	mov	r1, r2
 800e138:	6878      	ldr	r0, [r7, #4]
 800e13a:	4798      	blx	r3
 800e13c:	2300      	movs	r3, #0
 800e13e:	4618      	mov	r0, r3
 800e140:	3708      	adds	r7, #8
 800e142:	46bd      	mov	sp, r7
 800e144:	bd80      	pop	{r7, pc}

0800e146 <USBD_LL_DevConnected>:
 800e146:	b480      	push	{r7}
 800e148:	b083      	sub	sp, #12
 800e14a:	af00      	add	r7, sp, #0
 800e14c:	6078      	str	r0, [r7, #4]
 800e14e:	2300      	movs	r3, #0
 800e150:	4618      	mov	r0, r3
 800e152:	370c      	adds	r7, #12
 800e154:	46bd      	mov	sp, r7
 800e156:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e15a:	4770      	bx	lr

0800e15c <USBD_LL_DevDisconnected>:
 800e15c:	b580      	push	{r7, lr}
 800e15e:	b084      	sub	sp, #16
 800e160:	af00      	add	r7, sp, #0
 800e162:	6078      	str	r0, [r7, #4]
 800e164:	2300      	movs	r3, #0
 800e166:	73fb      	strb	r3, [r7, #15]
 800e168:	687b      	ldr	r3, [r7, #4]
 800e16a:	2201      	movs	r2, #1
 800e16c:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800e170:	687b      	ldr	r3, [r7, #4]
 800e172:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e176:	2b00      	cmp	r3, #0
 800e178:	d00e      	beq.n	800e198 <USBD_LL_DevDisconnected+0x3c>
 800e17a:	687b      	ldr	r3, [r7, #4]
 800e17c:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e180:	685b      	ldr	r3, [r3, #4]
 800e182:	687a      	ldr	r2, [r7, #4]
 800e184:	6852      	ldr	r2, [r2, #4]
 800e186:	b2d2      	uxtb	r2, r2
 800e188:	4611      	mov	r1, r2
 800e18a:	6878      	ldr	r0, [r7, #4]
 800e18c:	4798      	blx	r3
 800e18e:	4603      	mov	r3, r0
 800e190:	2b00      	cmp	r3, #0
 800e192:	d001      	beq.n	800e198 <USBD_LL_DevDisconnected+0x3c>
 800e194:	2303      	movs	r3, #3
 800e196:	73fb      	strb	r3, [r7, #15]
 800e198:	7bfb      	ldrb	r3, [r7, #15]
 800e19a:	4618      	mov	r0, r3
 800e19c:	3710      	adds	r7, #16
 800e19e:	46bd      	mov	sp, r7
 800e1a0:	bd80      	pop	{r7, pc}

0800e1a2 <USBD_CoreFindIF>:
 800e1a2:	b480      	push	{r7}
 800e1a4:	b083      	sub	sp, #12
 800e1a6:	af00      	add	r7, sp, #0
 800e1a8:	6078      	str	r0, [r7, #4]
 800e1aa:	460b      	mov	r3, r1
 800e1ac:	70fb      	strb	r3, [r7, #3]
 800e1ae:	2300      	movs	r3, #0
 800e1b0:	4618      	mov	r0, r3
 800e1b2:	370c      	adds	r7, #12
 800e1b4:	46bd      	mov	sp, r7
 800e1b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1ba:	4770      	bx	lr

0800e1bc <USBD_CoreFindEP>:
 800e1bc:	b480      	push	{r7}
 800e1be:	b083      	sub	sp, #12
 800e1c0:	af00      	add	r7, sp, #0
 800e1c2:	6078      	str	r0, [r7, #4]
 800e1c4:	460b      	mov	r3, r1
 800e1c6:	70fb      	strb	r3, [r7, #3]
 800e1c8:	2300      	movs	r3, #0
 800e1ca:	4618      	mov	r0, r3
 800e1cc:	370c      	adds	r7, #12
 800e1ce:	46bd      	mov	sp, r7
 800e1d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1d4:	4770      	bx	lr

0800e1d6 <USBD_GetEpDesc>:
 800e1d6:	b580      	push	{r7, lr}
 800e1d8:	b086      	sub	sp, #24
 800e1da:	af00      	add	r7, sp, #0
 800e1dc:	6078      	str	r0, [r7, #4]
 800e1de:	460b      	mov	r3, r1
 800e1e0:	70fb      	strb	r3, [r7, #3]
 800e1e2:	687b      	ldr	r3, [r7, #4]
 800e1e4:	617b      	str	r3, [r7, #20]
 800e1e6:	687b      	ldr	r3, [r7, #4]
 800e1e8:	60fb      	str	r3, [r7, #12]
 800e1ea:	2300      	movs	r3, #0
 800e1ec:	613b      	str	r3, [r7, #16]
 800e1ee:	68fb      	ldr	r3, [r7, #12]
 800e1f0:	885b      	ldrh	r3, [r3, #2]
 800e1f2:	b29a      	uxth	r2, r3
 800e1f4:	68fb      	ldr	r3, [r7, #12]
 800e1f6:	781b      	ldrb	r3, [r3, #0]
 800e1f8:	b29b      	uxth	r3, r3
 800e1fa:	429a      	cmp	r2, r3
 800e1fc:	d920      	bls.n	800e240 <USBD_GetEpDesc+0x6a>
 800e1fe:	68fb      	ldr	r3, [r7, #12]
 800e200:	781b      	ldrb	r3, [r3, #0]
 800e202:	b29b      	uxth	r3, r3
 800e204:	817b      	strh	r3, [r7, #10]
 800e206:	e013      	b.n	800e230 <USBD_GetEpDesc+0x5a>
 800e208:	f107 030a 	add.w	r3, r7, #10
 800e20c:	4619      	mov	r1, r3
 800e20e:	6978      	ldr	r0, [r7, #20]
 800e210:	f000 f81b 	bl	800e24a <USBD_GetNextDesc>
 800e214:	6178      	str	r0, [r7, #20]
 800e216:	697b      	ldr	r3, [r7, #20]
 800e218:	785b      	ldrb	r3, [r3, #1]
 800e21a:	2b05      	cmp	r3, #5
 800e21c:	d108      	bne.n	800e230 <USBD_GetEpDesc+0x5a>
 800e21e:	697b      	ldr	r3, [r7, #20]
 800e220:	613b      	str	r3, [r7, #16]
 800e222:	693b      	ldr	r3, [r7, #16]
 800e224:	789b      	ldrb	r3, [r3, #2]
 800e226:	78fa      	ldrb	r2, [r7, #3]
 800e228:	429a      	cmp	r2, r3
 800e22a:	d008      	beq.n	800e23e <USBD_GetEpDesc+0x68>
 800e22c:	2300      	movs	r3, #0
 800e22e:	613b      	str	r3, [r7, #16]
 800e230:	68fb      	ldr	r3, [r7, #12]
 800e232:	885b      	ldrh	r3, [r3, #2]
 800e234:	b29a      	uxth	r2, r3
 800e236:	897b      	ldrh	r3, [r7, #10]
 800e238:	429a      	cmp	r2, r3
 800e23a:	d8e5      	bhi.n	800e208 <USBD_GetEpDesc+0x32>
 800e23c:	e000      	b.n	800e240 <USBD_GetEpDesc+0x6a>
 800e23e:	bf00      	nop
 800e240:	693b      	ldr	r3, [r7, #16]
 800e242:	4618      	mov	r0, r3
 800e244:	3718      	adds	r7, #24
 800e246:	46bd      	mov	sp, r7
 800e248:	bd80      	pop	{r7, pc}

0800e24a <USBD_GetNextDesc>:
 800e24a:	b480      	push	{r7}
 800e24c:	b085      	sub	sp, #20
 800e24e:	af00      	add	r7, sp, #0
 800e250:	6078      	str	r0, [r7, #4]
 800e252:	6039      	str	r1, [r7, #0]
 800e254:	687b      	ldr	r3, [r7, #4]
 800e256:	60fb      	str	r3, [r7, #12]
 800e258:	683b      	ldr	r3, [r7, #0]
 800e25a:	881a      	ldrh	r2, [r3, #0]
 800e25c:	68fb      	ldr	r3, [r7, #12]
 800e25e:	781b      	ldrb	r3, [r3, #0]
 800e260:	b29b      	uxth	r3, r3
 800e262:	4413      	add	r3, r2
 800e264:	b29a      	uxth	r2, r3
 800e266:	683b      	ldr	r3, [r7, #0]
 800e268:	801a      	strh	r2, [r3, #0]
 800e26a:	68fb      	ldr	r3, [r7, #12]
 800e26c:	781b      	ldrb	r3, [r3, #0]
 800e26e:	461a      	mov	r2, r3
 800e270:	687b      	ldr	r3, [r7, #4]
 800e272:	4413      	add	r3, r2
 800e274:	60fb      	str	r3, [r7, #12]
 800e276:	68fb      	ldr	r3, [r7, #12]
 800e278:	4618      	mov	r0, r3
 800e27a:	3714      	adds	r7, #20
 800e27c:	46bd      	mov	sp, r7
 800e27e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e282:	4770      	bx	lr

0800e284 <SWAPBYTE>:
 800e284:	b480      	push	{r7}
 800e286:	b087      	sub	sp, #28
 800e288:	af00      	add	r7, sp, #0
 800e28a:	6078      	str	r0, [r7, #4]
 800e28c:	687b      	ldr	r3, [r7, #4]
 800e28e:	617b      	str	r3, [r7, #20]
 800e290:	697b      	ldr	r3, [r7, #20]
 800e292:	781b      	ldrb	r3, [r3, #0]
 800e294:	827b      	strh	r3, [r7, #18]
 800e296:	697b      	ldr	r3, [r7, #20]
 800e298:	3301      	adds	r3, #1
 800e29a:	617b      	str	r3, [r7, #20]
 800e29c:	697b      	ldr	r3, [r7, #20]
 800e29e:	781b      	ldrb	r3, [r3, #0]
 800e2a0:	823b      	strh	r3, [r7, #16]
 800e2a2:	8a3b      	ldrh	r3, [r7, #16]
 800e2a4:	021b      	lsls	r3, r3, #8
 800e2a6:	b21a      	sxth	r2, r3
 800e2a8:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 800e2ac:	4313      	orrs	r3, r2
 800e2ae:	b21b      	sxth	r3, r3
 800e2b0:	81fb      	strh	r3, [r7, #14]
 800e2b2:	89fb      	ldrh	r3, [r7, #14]
 800e2b4:	4618      	mov	r0, r3
 800e2b6:	371c      	adds	r7, #28
 800e2b8:	46bd      	mov	sp, r7
 800e2ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2be:	4770      	bx	lr

0800e2c0 <USBD_StdDevReq>:
 800e2c0:	b580      	push	{r7, lr}
 800e2c2:	b084      	sub	sp, #16
 800e2c4:	af00      	add	r7, sp, #0
 800e2c6:	6078      	str	r0, [r7, #4]
 800e2c8:	6039      	str	r1, [r7, #0]
 800e2ca:	2300      	movs	r3, #0
 800e2cc:	73fb      	strb	r3, [r7, #15]
 800e2ce:	683b      	ldr	r3, [r7, #0]
 800e2d0:	781b      	ldrb	r3, [r3, #0]
 800e2d2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e2d6:	2b40      	cmp	r3, #64	; 0x40
 800e2d8:	d005      	beq.n	800e2e6 <USBD_StdDevReq+0x26>
 800e2da:	2b40      	cmp	r3, #64	; 0x40
 800e2dc:	d857      	bhi.n	800e38e <USBD_StdDevReq+0xce>
 800e2de:	2b00      	cmp	r3, #0
 800e2e0:	d00f      	beq.n	800e302 <USBD_StdDevReq+0x42>
 800e2e2:	2b20      	cmp	r3, #32
 800e2e4:	d153      	bne.n	800e38e <USBD_StdDevReq+0xce>
 800e2e6:	687b      	ldr	r3, [r7, #4]
 800e2e8:	f8d3 22d4 	ldr.w	r2, [r3, #724]	; 0x2d4
 800e2ec:	687b      	ldr	r3, [r7, #4]
 800e2ee:	32ae      	adds	r2, #174	; 0xae
 800e2f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e2f4:	689b      	ldr	r3, [r3, #8]
 800e2f6:	6839      	ldr	r1, [r7, #0]
 800e2f8:	6878      	ldr	r0, [r7, #4]
 800e2fa:	4798      	blx	r3
 800e2fc:	4603      	mov	r3, r0
 800e2fe:	73fb      	strb	r3, [r7, #15]
 800e300:	e04a      	b.n	800e398 <USBD_StdDevReq+0xd8>
 800e302:	683b      	ldr	r3, [r7, #0]
 800e304:	785b      	ldrb	r3, [r3, #1]
 800e306:	2b09      	cmp	r3, #9
 800e308:	d83b      	bhi.n	800e382 <USBD_StdDevReq+0xc2>
 800e30a:	a201      	add	r2, pc, #4	; (adr r2, 800e310 <USBD_StdDevReq+0x50>)
 800e30c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e310:	0800e365 	.word	0x0800e365
 800e314:	0800e379 	.word	0x0800e379
 800e318:	0800e383 	.word	0x0800e383
 800e31c:	0800e36f 	.word	0x0800e36f
 800e320:	0800e383 	.word	0x0800e383
 800e324:	0800e343 	.word	0x0800e343
 800e328:	0800e339 	.word	0x0800e339
 800e32c:	0800e383 	.word	0x0800e383
 800e330:	0800e35b 	.word	0x0800e35b
 800e334:	0800e34d 	.word	0x0800e34d
 800e338:	6839      	ldr	r1, [r7, #0]
 800e33a:	6878      	ldr	r0, [r7, #4]
 800e33c:	f000 fa3c 	bl	800e7b8 <USBD_GetDescriptor>
 800e340:	e024      	b.n	800e38c <USBD_StdDevReq+0xcc>
 800e342:	6839      	ldr	r1, [r7, #0]
 800e344:	6878      	ldr	r0, [r7, #4]
 800e346:	f000 fba1 	bl	800ea8c <USBD_SetAddress>
 800e34a:	e01f      	b.n	800e38c <USBD_StdDevReq+0xcc>
 800e34c:	6839      	ldr	r1, [r7, #0]
 800e34e:	6878      	ldr	r0, [r7, #4]
 800e350:	f000 fbe0 	bl	800eb14 <USBD_SetConfig>
 800e354:	4603      	mov	r3, r0
 800e356:	73fb      	strb	r3, [r7, #15]
 800e358:	e018      	b.n	800e38c <USBD_StdDevReq+0xcc>
 800e35a:	6839      	ldr	r1, [r7, #0]
 800e35c:	6878      	ldr	r0, [r7, #4]
 800e35e:	f000 fc83 	bl	800ec68 <USBD_GetConfig>
 800e362:	e013      	b.n	800e38c <USBD_StdDevReq+0xcc>
 800e364:	6839      	ldr	r1, [r7, #0]
 800e366:	6878      	ldr	r0, [r7, #4]
 800e368:	f000 fcb4 	bl	800ecd4 <USBD_GetStatus>
 800e36c:	e00e      	b.n	800e38c <USBD_StdDevReq+0xcc>
 800e36e:	6839      	ldr	r1, [r7, #0]
 800e370:	6878      	ldr	r0, [r7, #4]
 800e372:	f000 fce3 	bl	800ed3c <USBD_SetFeature>
 800e376:	e009      	b.n	800e38c <USBD_StdDevReq+0xcc>
 800e378:	6839      	ldr	r1, [r7, #0]
 800e37a:	6878      	ldr	r0, [r7, #4]
 800e37c:	f000 fd07 	bl	800ed8e <USBD_ClrFeature>
 800e380:	e004      	b.n	800e38c <USBD_StdDevReq+0xcc>
 800e382:	6839      	ldr	r1, [r7, #0]
 800e384:	6878      	ldr	r0, [r7, #4]
 800e386:	f000 fd5e 	bl	800ee46 <USBD_CtlError>
 800e38a:	bf00      	nop
 800e38c:	e004      	b.n	800e398 <USBD_StdDevReq+0xd8>
 800e38e:	6839      	ldr	r1, [r7, #0]
 800e390:	6878      	ldr	r0, [r7, #4]
 800e392:	f000 fd58 	bl	800ee46 <USBD_CtlError>
 800e396:	bf00      	nop
 800e398:	7bfb      	ldrb	r3, [r7, #15]
 800e39a:	4618      	mov	r0, r3
 800e39c:	3710      	adds	r7, #16
 800e39e:	46bd      	mov	sp, r7
 800e3a0:	bd80      	pop	{r7, pc}
 800e3a2:	bf00      	nop

0800e3a4 <USBD_StdItfReq>:
 800e3a4:	b580      	push	{r7, lr}
 800e3a6:	b084      	sub	sp, #16
 800e3a8:	af00      	add	r7, sp, #0
 800e3aa:	6078      	str	r0, [r7, #4]
 800e3ac:	6039      	str	r1, [r7, #0]
 800e3ae:	2300      	movs	r3, #0
 800e3b0:	73fb      	strb	r3, [r7, #15]
 800e3b2:	683b      	ldr	r3, [r7, #0]
 800e3b4:	781b      	ldrb	r3, [r3, #0]
 800e3b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e3ba:	2b40      	cmp	r3, #64	; 0x40
 800e3bc:	d005      	beq.n	800e3ca <USBD_StdItfReq+0x26>
 800e3be:	2b40      	cmp	r3, #64	; 0x40
 800e3c0:	d852      	bhi.n	800e468 <USBD_StdItfReq+0xc4>
 800e3c2:	2b00      	cmp	r3, #0
 800e3c4:	d001      	beq.n	800e3ca <USBD_StdItfReq+0x26>
 800e3c6:	2b20      	cmp	r3, #32
 800e3c8:	d14e      	bne.n	800e468 <USBD_StdItfReq+0xc4>
 800e3ca:	687b      	ldr	r3, [r7, #4]
 800e3cc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e3d0:	b2db      	uxtb	r3, r3
 800e3d2:	3b01      	subs	r3, #1
 800e3d4:	2b02      	cmp	r3, #2
 800e3d6:	d840      	bhi.n	800e45a <USBD_StdItfReq+0xb6>
 800e3d8:	683b      	ldr	r3, [r7, #0]
 800e3da:	889b      	ldrh	r3, [r3, #4]
 800e3dc:	b2db      	uxtb	r3, r3
 800e3de:	2b01      	cmp	r3, #1
 800e3e0:	d836      	bhi.n	800e450 <USBD_StdItfReq+0xac>
 800e3e2:	683b      	ldr	r3, [r7, #0]
 800e3e4:	889b      	ldrh	r3, [r3, #4]
 800e3e6:	b2db      	uxtb	r3, r3
 800e3e8:	4619      	mov	r1, r3
 800e3ea:	6878      	ldr	r0, [r7, #4]
 800e3ec:	f7ff fed9 	bl	800e1a2 <USBD_CoreFindIF>
 800e3f0:	4603      	mov	r3, r0
 800e3f2:	73bb      	strb	r3, [r7, #14]
 800e3f4:	7bbb      	ldrb	r3, [r7, #14]
 800e3f6:	2bff      	cmp	r3, #255	; 0xff
 800e3f8:	d01d      	beq.n	800e436 <USBD_StdItfReq+0x92>
 800e3fa:	7bbb      	ldrb	r3, [r7, #14]
 800e3fc:	2b00      	cmp	r3, #0
 800e3fe:	d11a      	bne.n	800e436 <USBD_StdItfReq+0x92>
 800e400:	7bba      	ldrb	r2, [r7, #14]
 800e402:	687b      	ldr	r3, [r7, #4]
 800e404:	32ae      	adds	r2, #174	; 0xae
 800e406:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e40a:	689b      	ldr	r3, [r3, #8]
 800e40c:	2b00      	cmp	r3, #0
 800e40e:	d00f      	beq.n	800e430 <USBD_StdItfReq+0x8c>
 800e410:	7bba      	ldrb	r2, [r7, #14]
 800e412:	687b      	ldr	r3, [r7, #4]
 800e414:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800e418:	7bba      	ldrb	r2, [r7, #14]
 800e41a:	687b      	ldr	r3, [r7, #4]
 800e41c:	32ae      	adds	r2, #174	; 0xae
 800e41e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e422:	689b      	ldr	r3, [r3, #8]
 800e424:	6839      	ldr	r1, [r7, #0]
 800e426:	6878      	ldr	r0, [r7, #4]
 800e428:	4798      	blx	r3
 800e42a:	4603      	mov	r3, r0
 800e42c:	73fb      	strb	r3, [r7, #15]
 800e42e:	e004      	b.n	800e43a <USBD_StdItfReq+0x96>
 800e430:	2303      	movs	r3, #3
 800e432:	73fb      	strb	r3, [r7, #15]
 800e434:	e001      	b.n	800e43a <USBD_StdItfReq+0x96>
 800e436:	2303      	movs	r3, #3
 800e438:	73fb      	strb	r3, [r7, #15]
 800e43a:	683b      	ldr	r3, [r7, #0]
 800e43c:	88db      	ldrh	r3, [r3, #6]
 800e43e:	2b00      	cmp	r3, #0
 800e440:	d110      	bne.n	800e464 <USBD_StdItfReq+0xc0>
 800e442:	7bfb      	ldrb	r3, [r7, #15]
 800e444:	2b00      	cmp	r3, #0
 800e446:	d10d      	bne.n	800e464 <USBD_StdItfReq+0xc0>
 800e448:	6878      	ldr	r0, [r7, #4]
 800e44a:	f000 fdc7 	bl	800efdc <USBD_CtlSendStatus>
 800e44e:	e009      	b.n	800e464 <USBD_StdItfReq+0xc0>
 800e450:	6839      	ldr	r1, [r7, #0]
 800e452:	6878      	ldr	r0, [r7, #4]
 800e454:	f000 fcf7 	bl	800ee46 <USBD_CtlError>
 800e458:	e004      	b.n	800e464 <USBD_StdItfReq+0xc0>
 800e45a:	6839      	ldr	r1, [r7, #0]
 800e45c:	6878      	ldr	r0, [r7, #4]
 800e45e:	f000 fcf2 	bl	800ee46 <USBD_CtlError>
 800e462:	e000      	b.n	800e466 <USBD_StdItfReq+0xc2>
 800e464:	bf00      	nop
 800e466:	e004      	b.n	800e472 <USBD_StdItfReq+0xce>
 800e468:	6839      	ldr	r1, [r7, #0]
 800e46a:	6878      	ldr	r0, [r7, #4]
 800e46c:	f000 fceb 	bl	800ee46 <USBD_CtlError>
 800e470:	bf00      	nop
 800e472:	7bfb      	ldrb	r3, [r7, #15]
 800e474:	4618      	mov	r0, r3
 800e476:	3710      	adds	r7, #16
 800e478:	46bd      	mov	sp, r7
 800e47a:	bd80      	pop	{r7, pc}

0800e47c <USBD_StdEPReq>:
 800e47c:	b580      	push	{r7, lr}
 800e47e:	b084      	sub	sp, #16
 800e480:	af00      	add	r7, sp, #0
 800e482:	6078      	str	r0, [r7, #4]
 800e484:	6039      	str	r1, [r7, #0]
 800e486:	2300      	movs	r3, #0
 800e488:	73fb      	strb	r3, [r7, #15]
 800e48a:	683b      	ldr	r3, [r7, #0]
 800e48c:	889b      	ldrh	r3, [r3, #4]
 800e48e:	73bb      	strb	r3, [r7, #14]
 800e490:	683b      	ldr	r3, [r7, #0]
 800e492:	781b      	ldrb	r3, [r3, #0]
 800e494:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800e498:	2b40      	cmp	r3, #64	; 0x40
 800e49a:	d007      	beq.n	800e4ac <USBD_StdEPReq+0x30>
 800e49c:	2b40      	cmp	r3, #64	; 0x40
 800e49e:	f200 817f 	bhi.w	800e7a0 <USBD_StdEPReq+0x324>
 800e4a2:	2b00      	cmp	r3, #0
 800e4a4:	d02a      	beq.n	800e4fc <USBD_StdEPReq+0x80>
 800e4a6:	2b20      	cmp	r3, #32
 800e4a8:	f040 817a 	bne.w	800e7a0 <USBD_StdEPReq+0x324>
 800e4ac:	7bbb      	ldrb	r3, [r7, #14]
 800e4ae:	4619      	mov	r1, r3
 800e4b0:	6878      	ldr	r0, [r7, #4]
 800e4b2:	f7ff fe83 	bl	800e1bc <USBD_CoreFindEP>
 800e4b6:	4603      	mov	r3, r0
 800e4b8:	737b      	strb	r3, [r7, #13]
 800e4ba:	7b7b      	ldrb	r3, [r7, #13]
 800e4bc:	2bff      	cmp	r3, #255	; 0xff
 800e4be:	f000 8174 	beq.w	800e7aa <USBD_StdEPReq+0x32e>
 800e4c2:	7b7b      	ldrb	r3, [r7, #13]
 800e4c4:	2b00      	cmp	r3, #0
 800e4c6:	f040 8170 	bne.w	800e7aa <USBD_StdEPReq+0x32e>
 800e4ca:	7b7a      	ldrb	r2, [r7, #13]
 800e4cc:	687b      	ldr	r3, [r7, #4]
 800e4ce:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800e4d2:	7b7a      	ldrb	r2, [r7, #13]
 800e4d4:	687b      	ldr	r3, [r7, #4]
 800e4d6:	32ae      	adds	r2, #174	; 0xae
 800e4d8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e4dc:	689b      	ldr	r3, [r3, #8]
 800e4de:	2b00      	cmp	r3, #0
 800e4e0:	f000 8163 	beq.w	800e7aa <USBD_StdEPReq+0x32e>
 800e4e4:	7b7a      	ldrb	r2, [r7, #13]
 800e4e6:	687b      	ldr	r3, [r7, #4]
 800e4e8:	32ae      	adds	r2, #174	; 0xae
 800e4ea:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e4ee:	689b      	ldr	r3, [r3, #8]
 800e4f0:	6839      	ldr	r1, [r7, #0]
 800e4f2:	6878      	ldr	r0, [r7, #4]
 800e4f4:	4798      	blx	r3
 800e4f6:	4603      	mov	r3, r0
 800e4f8:	73fb      	strb	r3, [r7, #15]
 800e4fa:	e156      	b.n	800e7aa <USBD_StdEPReq+0x32e>
 800e4fc:	683b      	ldr	r3, [r7, #0]
 800e4fe:	785b      	ldrb	r3, [r3, #1]
 800e500:	2b03      	cmp	r3, #3
 800e502:	d008      	beq.n	800e516 <USBD_StdEPReq+0x9a>
 800e504:	2b03      	cmp	r3, #3
 800e506:	f300 8145 	bgt.w	800e794 <USBD_StdEPReq+0x318>
 800e50a:	2b00      	cmp	r3, #0
 800e50c:	f000 809b 	beq.w	800e646 <USBD_StdEPReq+0x1ca>
 800e510:	2b01      	cmp	r3, #1
 800e512:	d03c      	beq.n	800e58e <USBD_StdEPReq+0x112>
 800e514:	e13e      	b.n	800e794 <USBD_StdEPReq+0x318>
 800e516:	687b      	ldr	r3, [r7, #4]
 800e518:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e51c:	b2db      	uxtb	r3, r3
 800e51e:	2b02      	cmp	r3, #2
 800e520:	d002      	beq.n	800e528 <USBD_StdEPReq+0xac>
 800e522:	2b03      	cmp	r3, #3
 800e524:	d016      	beq.n	800e554 <USBD_StdEPReq+0xd8>
 800e526:	e02c      	b.n	800e582 <USBD_StdEPReq+0x106>
 800e528:	7bbb      	ldrb	r3, [r7, #14]
 800e52a:	2b00      	cmp	r3, #0
 800e52c:	d00d      	beq.n	800e54a <USBD_StdEPReq+0xce>
 800e52e:	7bbb      	ldrb	r3, [r7, #14]
 800e530:	2b80      	cmp	r3, #128	; 0x80
 800e532:	d00a      	beq.n	800e54a <USBD_StdEPReq+0xce>
 800e534:	7bbb      	ldrb	r3, [r7, #14]
 800e536:	4619      	mov	r1, r3
 800e538:	6878      	ldr	r0, [r7, #4]
 800e53a:	f001 f98b 	bl	800f854 <USBD_LL_StallEP>
 800e53e:	2180      	movs	r1, #128	; 0x80
 800e540:	6878      	ldr	r0, [r7, #4]
 800e542:	f001 f987 	bl	800f854 <USBD_LL_StallEP>
 800e546:	bf00      	nop
 800e548:	e020      	b.n	800e58c <USBD_StdEPReq+0x110>
 800e54a:	6839      	ldr	r1, [r7, #0]
 800e54c:	6878      	ldr	r0, [r7, #4]
 800e54e:	f000 fc7a 	bl	800ee46 <USBD_CtlError>
 800e552:	e01b      	b.n	800e58c <USBD_StdEPReq+0x110>
 800e554:	683b      	ldr	r3, [r7, #0]
 800e556:	885b      	ldrh	r3, [r3, #2]
 800e558:	2b00      	cmp	r3, #0
 800e55a:	d10e      	bne.n	800e57a <USBD_StdEPReq+0xfe>
 800e55c:	7bbb      	ldrb	r3, [r7, #14]
 800e55e:	2b00      	cmp	r3, #0
 800e560:	d00b      	beq.n	800e57a <USBD_StdEPReq+0xfe>
 800e562:	7bbb      	ldrb	r3, [r7, #14]
 800e564:	2b80      	cmp	r3, #128	; 0x80
 800e566:	d008      	beq.n	800e57a <USBD_StdEPReq+0xfe>
 800e568:	683b      	ldr	r3, [r7, #0]
 800e56a:	88db      	ldrh	r3, [r3, #6]
 800e56c:	2b00      	cmp	r3, #0
 800e56e:	d104      	bne.n	800e57a <USBD_StdEPReq+0xfe>
 800e570:	7bbb      	ldrb	r3, [r7, #14]
 800e572:	4619      	mov	r1, r3
 800e574:	6878      	ldr	r0, [r7, #4]
 800e576:	f001 f96d 	bl	800f854 <USBD_LL_StallEP>
 800e57a:	6878      	ldr	r0, [r7, #4]
 800e57c:	f000 fd2e 	bl	800efdc <USBD_CtlSendStatus>
 800e580:	e004      	b.n	800e58c <USBD_StdEPReq+0x110>
 800e582:	6839      	ldr	r1, [r7, #0]
 800e584:	6878      	ldr	r0, [r7, #4]
 800e586:	f000 fc5e 	bl	800ee46 <USBD_CtlError>
 800e58a:	bf00      	nop
 800e58c:	e107      	b.n	800e79e <USBD_StdEPReq+0x322>
 800e58e:	687b      	ldr	r3, [r7, #4]
 800e590:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e594:	b2db      	uxtb	r3, r3
 800e596:	2b02      	cmp	r3, #2
 800e598:	d002      	beq.n	800e5a0 <USBD_StdEPReq+0x124>
 800e59a:	2b03      	cmp	r3, #3
 800e59c:	d016      	beq.n	800e5cc <USBD_StdEPReq+0x150>
 800e59e:	e04b      	b.n	800e638 <USBD_StdEPReq+0x1bc>
 800e5a0:	7bbb      	ldrb	r3, [r7, #14]
 800e5a2:	2b00      	cmp	r3, #0
 800e5a4:	d00d      	beq.n	800e5c2 <USBD_StdEPReq+0x146>
 800e5a6:	7bbb      	ldrb	r3, [r7, #14]
 800e5a8:	2b80      	cmp	r3, #128	; 0x80
 800e5aa:	d00a      	beq.n	800e5c2 <USBD_StdEPReq+0x146>
 800e5ac:	7bbb      	ldrb	r3, [r7, #14]
 800e5ae:	4619      	mov	r1, r3
 800e5b0:	6878      	ldr	r0, [r7, #4]
 800e5b2:	f001 f94f 	bl	800f854 <USBD_LL_StallEP>
 800e5b6:	2180      	movs	r1, #128	; 0x80
 800e5b8:	6878      	ldr	r0, [r7, #4]
 800e5ba:	f001 f94b 	bl	800f854 <USBD_LL_StallEP>
 800e5be:	bf00      	nop
 800e5c0:	e040      	b.n	800e644 <USBD_StdEPReq+0x1c8>
 800e5c2:	6839      	ldr	r1, [r7, #0]
 800e5c4:	6878      	ldr	r0, [r7, #4]
 800e5c6:	f000 fc3e 	bl	800ee46 <USBD_CtlError>
 800e5ca:	e03b      	b.n	800e644 <USBD_StdEPReq+0x1c8>
 800e5cc:	683b      	ldr	r3, [r7, #0]
 800e5ce:	885b      	ldrh	r3, [r3, #2]
 800e5d0:	2b00      	cmp	r3, #0
 800e5d2:	d136      	bne.n	800e642 <USBD_StdEPReq+0x1c6>
 800e5d4:	7bbb      	ldrb	r3, [r7, #14]
 800e5d6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800e5da:	2b00      	cmp	r3, #0
 800e5dc:	d004      	beq.n	800e5e8 <USBD_StdEPReq+0x16c>
 800e5de:	7bbb      	ldrb	r3, [r7, #14]
 800e5e0:	4619      	mov	r1, r3
 800e5e2:	6878      	ldr	r0, [r7, #4]
 800e5e4:	f001 f955 	bl	800f892 <USBD_LL_ClearStallEP>
 800e5e8:	6878      	ldr	r0, [r7, #4]
 800e5ea:	f000 fcf7 	bl	800efdc <USBD_CtlSendStatus>
 800e5ee:	7bbb      	ldrb	r3, [r7, #14]
 800e5f0:	4619      	mov	r1, r3
 800e5f2:	6878      	ldr	r0, [r7, #4]
 800e5f4:	f7ff fde2 	bl	800e1bc <USBD_CoreFindEP>
 800e5f8:	4603      	mov	r3, r0
 800e5fa:	737b      	strb	r3, [r7, #13]
 800e5fc:	7b7b      	ldrb	r3, [r7, #13]
 800e5fe:	2bff      	cmp	r3, #255	; 0xff
 800e600:	d01f      	beq.n	800e642 <USBD_StdEPReq+0x1c6>
 800e602:	7b7b      	ldrb	r3, [r7, #13]
 800e604:	2b00      	cmp	r3, #0
 800e606:	d11c      	bne.n	800e642 <USBD_StdEPReq+0x1c6>
 800e608:	7b7a      	ldrb	r2, [r7, #13]
 800e60a:	687b      	ldr	r3, [r7, #4]
 800e60c:	f8c3 22d4 	str.w	r2, [r3, #724]	; 0x2d4
 800e610:	7b7a      	ldrb	r2, [r7, #13]
 800e612:	687b      	ldr	r3, [r7, #4]
 800e614:	32ae      	adds	r2, #174	; 0xae
 800e616:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e61a:	689b      	ldr	r3, [r3, #8]
 800e61c:	2b00      	cmp	r3, #0
 800e61e:	d010      	beq.n	800e642 <USBD_StdEPReq+0x1c6>
 800e620:	7b7a      	ldrb	r2, [r7, #13]
 800e622:	687b      	ldr	r3, [r7, #4]
 800e624:	32ae      	adds	r2, #174	; 0xae
 800e626:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800e62a:	689b      	ldr	r3, [r3, #8]
 800e62c:	6839      	ldr	r1, [r7, #0]
 800e62e:	6878      	ldr	r0, [r7, #4]
 800e630:	4798      	blx	r3
 800e632:	4603      	mov	r3, r0
 800e634:	73fb      	strb	r3, [r7, #15]
 800e636:	e004      	b.n	800e642 <USBD_StdEPReq+0x1c6>
 800e638:	6839      	ldr	r1, [r7, #0]
 800e63a:	6878      	ldr	r0, [r7, #4]
 800e63c:	f000 fc03 	bl	800ee46 <USBD_CtlError>
 800e640:	e000      	b.n	800e644 <USBD_StdEPReq+0x1c8>
 800e642:	bf00      	nop
 800e644:	e0ab      	b.n	800e79e <USBD_StdEPReq+0x322>
 800e646:	687b      	ldr	r3, [r7, #4]
 800e648:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800e64c:	b2db      	uxtb	r3, r3
 800e64e:	2b02      	cmp	r3, #2
 800e650:	d002      	beq.n	800e658 <USBD_StdEPReq+0x1dc>
 800e652:	2b03      	cmp	r3, #3
 800e654:	d032      	beq.n	800e6bc <USBD_StdEPReq+0x240>
 800e656:	e097      	b.n	800e788 <USBD_StdEPReq+0x30c>
 800e658:	7bbb      	ldrb	r3, [r7, #14]
 800e65a:	2b00      	cmp	r3, #0
 800e65c:	d007      	beq.n	800e66e <USBD_StdEPReq+0x1f2>
 800e65e:	7bbb      	ldrb	r3, [r7, #14]
 800e660:	2b80      	cmp	r3, #128	; 0x80
 800e662:	d004      	beq.n	800e66e <USBD_StdEPReq+0x1f2>
 800e664:	6839      	ldr	r1, [r7, #0]
 800e666:	6878      	ldr	r0, [r7, #4]
 800e668:	f000 fbed 	bl	800ee46 <USBD_CtlError>
 800e66c:	e091      	b.n	800e792 <USBD_StdEPReq+0x316>
 800e66e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800e672:	2b00      	cmp	r3, #0
 800e674:	da0b      	bge.n	800e68e <USBD_StdEPReq+0x212>
 800e676:	7bbb      	ldrb	r3, [r7, #14]
 800e678:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800e67c:	4613      	mov	r3, r2
 800e67e:	009b      	lsls	r3, r3, #2
 800e680:	4413      	add	r3, r2
 800e682:	009b      	lsls	r3, r3, #2
 800e684:	3310      	adds	r3, #16
 800e686:	687a      	ldr	r2, [r7, #4]
 800e688:	4413      	add	r3, r2
 800e68a:	3304      	adds	r3, #4
 800e68c:	e00b      	b.n	800e6a6 <USBD_StdEPReq+0x22a>
 800e68e:	7bbb      	ldrb	r3, [r7, #14]
 800e690:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800e694:	4613      	mov	r3, r2
 800e696:	009b      	lsls	r3, r3, #2
 800e698:	4413      	add	r3, r2
 800e69a:	009b      	lsls	r3, r3, #2
 800e69c:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800e6a0:	687a      	ldr	r2, [r7, #4]
 800e6a2:	4413      	add	r3, r2
 800e6a4:	3304      	adds	r3, #4
 800e6a6:	60bb      	str	r3, [r7, #8]
 800e6a8:	68bb      	ldr	r3, [r7, #8]
 800e6aa:	2200      	movs	r2, #0
 800e6ac:	601a      	str	r2, [r3, #0]
 800e6ae:	68bb      	ldr	r3, [r7, #8]
 800e6b0:	2202      	movs	r2, #2
 800e6b2:	4619      	mov	r1, r3
 800e6b4:	6878      	ldr	r0, [r7, #4]
 800e6b6:	f000 fc37 	bl	800ef28 <USBD_CtlSendData>
 800e6ba:	e06a      	b.n	800e792 <USBD_StdEPReq+0x316>
 800e6bc:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800e6c0:	2b00      	cmp	r3, #0
 800e6c2:	da11      	bge.n	800e6e8 <USBD_StdEPReq+0x26c>
 800e6c4:	7bbb      	ldrb	r3, [r7, #14]
 800e6c6:	f003 020f 	and.w	r2, r3, #15
 800e6ca:	6879      	ldr	r1, [r7, #4]
 800e6cc:	4613      	mov	r3, r2
 800e6ce:	009b      	lsls	r3, r3, #2
 800e6d0:	4413      	add	r3, r2
 800e6d2:	009b      	lsls	r3, r3, #2
 800e6d4:	440b      	add	r3, r1
 800e6d6:	3324      	adds	r3, #36	; 0x24
 800e6d8:	881b      	ldrh	r3, [r3, #0]
 800e6da:	2b00      	cmp	r3, #0
 800e6dc:	d117      	bne.n	800e70e <USBD_StdEPReq+0x292>
 800e6de:	6839      	ldr	r1, [r7, #0]
 800e6e0:	6878      	ldr	r0, [r7, #4]
 800e6e2:	f000 fbb0 	bl	800ee46 <USBD_CtlError>
 800e6e6:	e054      	b.n	800e792 <USBD_StdEPReq+0x316>
 800e6e8:	7bbb      	ldrb	r3, [r7, #14]
 800e6ea:	f003 020f 	and.w	r2, r3, #15
 800e6ee:	6879      	ldr	r1, [r7, #4]
 800e6f0:	4613      	mov	r3, r2
 800e6f2:	009b      	lsls	r3, r3, #2
 800e6f4:	4413      	add	r3, r2
 800e6f6:	009b      	lsls	r3, r3, #2
 800e6f8:	440b      	add	r3, r1
 800e6fa:	f503 73b2 	add.w	r3, r3, #356	; 0x164
 800e6fe:	881b      	ldrh	r3, [r3, #0]
 800e700:	2b00      	cmp	r3, #0
 800e702:	d104      	bne.n	800e70e <USBD_StdEPReq+0x292>
 800e704:	6839      	ldr	r1, [r7, #0]
 800e706:	6878      	ldr	r0, [r7, #4]
 800e708:	f000 fb9d 	bl	800ee46 <USBD_CtlError>
 800e70c:	e041      	b.n	800e792 <USBD_StdEPReq+0x316>
 800e70e:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800e712:	2b00      	cmp	r3, #0
 800e714:	da0b      	bge.n	800e72e <USBD_StdEPReq+0x2b2>
 800e716:	7bbb      	ldrb	r3, [r7, #14]
 800e718:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800e71c:	4613      	mov	r3, r2
 800e71e:	009b      	lsls	r3, r3, #2
 800e720:	4413      	add	r3, r2
 800e722:	009b      	lsls	r3, r3, #2
 800e724:	3310      	adds	r3, #16
 800e726:	687a      	ldr	r2, [r7, #4]
 800e728:	4413      	add	r3, r2
 800e72a:	3304      	adds	r3, #4
 800e72c:	e00b      	b.n	800e746 <USBD_StdEPReq+0x2ca>
 800e72e:	7bbb      	ldrb	r3, [r7, #14]
 800e730:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800e734:	4613      	mov	r3, r2
 800e736:	009b      	lsls	r3, r3, #2
 800e738:	4413      	add	r3, r2
 800e73a:	009b      	lsls	r3, r3, #2
 800e73c:	f503 73a8 	add.w	r3, r3, #336	; 0x150
 800e740:	687a      	ldr	r2, [r7, #4]
 800e742:	4413      	add	r3, r2
 800e744:	3304      	adds	r3, #4
 800e746:	60bb      	str	r3, [r7, #8]
 800e748:	7bbb      	ldrb	r3, [r7, #14]
 800e74a:	2b00      	cmp	r3, #0
 800e74c:	d002      	beq.n	800e754 <USBD_StdEPReq+0x2d8>
 800e74e:	7bbb      	ldrb	r3, [r7, #14]
 800e750:	2b80      	cmp	r3, #128	; 0x80
 800e752:	d103      	bne.n	800e75c <USBD_StdEPReq+0x2e0>
 800e754:	68bb      	ldr	r3, [r7, #8]
 800e756:	2200      	movs	r2, #0
 800e758:	601a      	str	r2, [r3, #0]
 800e75a:	e00e      	b.n	800e77a <USBD_StdEPReq+0x2fe>
 800e75c:	7bbb      	ldrb	r3, [r7, #14]
 800e75e:	4619      	mov	r1, r3
 800e760:	6878      	ldr	r0, [r7, #4]
 800e762:	f001 f8b5 	bl	800f8d0 <USBD_LL_IsStallEP>
 800e766:	4603      	mov	r3, r0
 800e768:	2b00      	cmp	r3, #0
 800e76a:	d003      	beq.n	800e774 <USBD_StdEPReq+0x2f8>
 800e76c:	68bb      	ldr	r3, [r7, #8]
 800e76e:	2201      	movs	r2, #1
 800e770:	601a      	str	r2, [r3, #0]
 800e772:	e002      	b.n	800e77a <USBD_StdEPReq+0x2fe>
 800e774:	68bb      	ldr	r3, [r7, #8]
 800e776:	2200      	movs	r2, #0
 800e778:	601a      	str	r2, [r3, #0]
 800e77a:	68bb      	ldr	r3, [r7, #8]
 800e77c:	2202      	movs	r2, #2
 800e77e:	4619      	mov	r1, r3
 800e780:	6878      	ldr	r0, [r7, #4]
 800e782:	f000 fbd1 	bl	800ef28 <USBD_CtlSendData>
 800e786:	e004      	b.n	800e792 <USBD_StdEPReq+0x316>
 800e788:	6839      	ldr	r1, [r7, #0]
 800e78a:	6878      	ldr	r0, [r7, #4]
 800e78c:	f000 fb5b 	bl	800ee46 <USBD_CtlError>
 800e790:	bf00      	nop
 800e792:	e004      	b.n	800e79e <USBD_StdEPReq+0x322>
 800e794:	6839      	ldr	r1, [r7, #0]
 800e796:	6878      	ldr	r0, [r7, #4]
 800e798:	f000 fb55 	bl	800ee46 <USBD_CtlError>
 800e79c:	bf00      	nop
 800e79e:	e005      	b.n	800e7ac <USBD_StdEPReq+0x330>
 800e7a0:	6839      	ldr	r1, [r7, #0]
 800e7a2:	6878      	ldr	r0, [r7, #4]
 800e7a4:	f000 fb4f 	bl	800ee46 <USBD_CtlError>
 800e7a8:	e000      	b.n	800e7ac <USBD_StdEPReq+0x330>
 800e7aa:	bf00      	nop
 800e7ac:	7bfb      	ldrb	r3, [r7, #15]
 800e7ae:	4618      	mov	r0, r3
 800e7b0:	3710      	adds	r7, #16
 800e7b2:	46bd      	mov	sp, r7
 800e7b4:	bd80      	pop	{r7, pc}
	...

0800e7b8 <USBD_GetDescriptor>:
 800e7b8:	b580      	push	{r7, lr}
 800e7ba:	b084      	sub	sp, #16
 800e7bc:	af00      	add	r7, sp, #0
 800e7be:	6078      	str	r0, [r7, #4]
 800e7c0:	6039      	str	r1, [r7, #0]
 800e7c2:	2300      	movs	r3, #0
 800e7c4:	813b      	strh	r3, [r7, #8]
 800e7c6:	2300      	movs	r3, #0
 800e7c8:	60fb      	str	r3, [r7, #12]
 800e7ca:	2300      	movs	r3, #0
 800e7cc:	72fb      	strb	r3, [r7, #11]
 800e7ce:	683b      	ldr	r3, [r7, #0]
 800e7d0:	885b      	ldrh	r3, [r3, #2]
 800e7d2:	0a1b      	lsrs	r3, r3, #8
 800e7d4:	b29b      	uxth	r3, r3
 800e7d6:	3b01      	subs	r3, #1
 800e7d8:	2b06      	cmp	r3, #6
 800e7da:	f200 8128 	bhi.w	800ea2e <USBD_GetDescriptor+0x276>
 800e7de:	a201      	add	r2, pc, #4	; (adr r2, 800e7e4 <USBD_GetDescriptor+0x2c>)
 800e7e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e7e4:	0800e801 	.word	0x0800e801
 800e7e8:	0800e819 	.word	0x0800e819
 800e7ec:	0800e859 	.word	0x0800e859
 800e7f0:	0800ea2f 	.word	0x0800ea2f
 800e7f4:	0800ea2f 	.word	0x0800ea2f
 800e7f8:	0800e9cf 	.word	0x0800e9cf
 800e7fc:	0800e9fb 	.word	0x0800e9fb
 800e800:	687b      	ldr	r3, [r7, #4]
 800e802:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e806:	681b      	ldr	r3, [r3, #0]
 800e808:	687a      	ldr	r2, [r7, #4]
 800e80a:	7c12      	ldrb	r2, [r2, #16]
 800e80c:	f107 0108 	add.w	r1, r7, #8
 800e810:	4610      	mov	r0, r2
 800e812:	4798      	blx	r3
 800e814:	60f8      	str	r0, [r7, #12]
 800e816:	e112      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800e818:	687b      	ldr	r3, [r7, #4]
 800e81a:	7c1b      	ldrb	r3, [r3, #16]
 800e81c:	2b00      	cmp	r3, #0
 800e81e:	d10d      	bne.n	800e83c <USBD_GetDescriptor+0x84>
 800e820:	687b      	ldr	r3, [r7, #4]
 800e822:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e826:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800e828:	f107 0208 	add.w	r2, r7, #8
 800e82c:	4610      	mov	r0, r2
 800e82e:	4798      	blx	r3
 800e830:	60f8      	str	r0, [r7, #12]
 800e832:	68fb      	ldr	r3, [r7, #12]
 800e834:	3301      	adds	r3, #1
 800e836:	2202      	movs	r2, #2
 800e838:	701a      	strb	r2, [r3, #0]
 800e83a:	e100      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800e83c:	687b      	ldr	r3, [r7, #4]
 800e83e:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e842:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e844:	f107 0208 	add.w	r2, r7, #8
 800e848:	4610      	mov	r0, r2
 800e84a:	4798      	blx	r3
 800e84c:	60f8      	str	r0, [r7, #12]
 800e84e:	68fb      	ldr	r3, [r7, #12]
 800e850:	3301      	adds	r3, #1
 800e852:	2202      	movs	r2, #2
 800e854:	701a      	strb	r2, [r3, #0]
 800e856:	e0f2      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800e858:	683b      	ldr	r3, [r7, #0]
 800e85a:	885b      	ldrh	r3, [r3, #2]
 800e85c:	b2db      	uxtb	r3, r3
 800e85e:	2b05      	cmp	r3, #5
 800e860:	f200 80ac 	bhi.w	800e9bc <USBD_GetDescriptor+0x204>
 800e864:	a201      	add	r2, pc, #4	; (adr r2, 800e86c <USBD_GetDescriptor+0xb4>)
 800e866:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e86a:	bf00      	nop
 800e86c:	0800e885 	.word	0x0800e885
 800e870:	0800e8b9 	.word	0x0800e8b9
 800e874:	0800e8ed 	.word	0x0800e8ed
 800e878:	0800e921 	.word	0x0800e921
 800e87c:	0800e955 	.word	0x0800e955
 800e880:	0800e989 	.word	0x0800e989
 800e884:	687b      	ldr	r3, [r7, #4]
 800e886:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e88a:	685b      	ldr	r3, [r3, #4]
 800e88c:	2b00      	cmp	r3, #0
 800e88e:	d00b      	beq.n	800e8a8 <USBD_GetDescriptor+0xf0>
 800e890:	687b      	ldr	r3, [r7, #4]
 800e892:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e896:	685b      	ldr	r3, [r3, #4]
 800e898:	687a      	ldr	r2, [r7, #4]
 800e89a:	7c12      	ldrb	r2, [r2, #16]
 800e89c:	f107 0108 	add.w	r1, r7, #8
 800e8a0:	4610      	mov	r0, r2
 800e8a2:	4798      	blx	r3
 800e8a4:	60f8      	str	r0, [r7, #12]
 800e8a6:	e091      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e8a8:	6839      	ldr	r1, [r7, #0]
 800e8aa:	6878      	ldr	r0, [r7, #4]
 800e8ac:	f000 facb 	bl	800ee46 <USBD_CtlError>
 800e8b0:	7afb      	ldrb	r3, [r7, #11]
 800e8b2:	3301      	adds	r3, #1
 800e8b4:	72fb      	strb	r3, [r7, #11]
 800e8b6:	e089      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e8b8:	687b      	ldr	r3, [r7, #4]
 800e8ba:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e8be:	689b      	ldr	r3, [r3, #8]
 800e8c0:	2b00      	cmp	r3, #0
 800e8c2:	d00b      	beq.n	800e8dc <USBD_GetDescriptor+0x124>
 800e8c4:	687b      	ldr	r3, [r7, #4]
 800e8c6:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e8ca:	689b      	ldr	r3, [r3, #8]
 800e8cc:	687a      	ldr	r2, [r7, #4]
 800e8ce:	7c12      	ldrb	r2, [r2, #16]
 800e8d0:	f107 0108 	add.w	r1, r7, #8
 800e8d4:	4610      	mov	r0, r2
 800e8d6:	4798      	blx	r3
 800e8d8:	60f8      	str	r0, [r7, #12]
 800e8da:	e077      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e8dc:	6839      	ldr	r1, [r7, #0]
 800e8de:	6878      	ldr	r0, [r7, #4]
 800e8e0:	f000 fab1 	bl	800ee46 <USBD_CtlError>
 800e8e4:	7afb      	ldrb	r3, [r7, #11]
 800e8e6:	3301      	adds	r3, #1
 800e8e8:	72fb      	strb	r3, [r7, #11]
 800e8ea:	e06f      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e8ec:	687b      	ldr	r3, [r7, #4]
 800e8ee:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e8f2:	68db      	ldr	r3, [r3, #12]
 800e8f4:	2b00      	cmp	r3, #0
 800e8f6:	d00b      	beq.n	800e910 <USBD_GetDescriptor+0x158>
 800e8f8:	687b      	ldr	r3, [r7, #4]
 800e8fa:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e8fe:	68db      	ldr	r3, [r3, #12]
 800e900:	687a      	ldr	r2, [r7, #4]
 800e902:	7c12      	ldrb	r2, [r2, #16]
 800e904:	f107 0108 	add.w	r1, r7, #8
 800e908:	4610      	mov	r0, r2
 800e90a:	4798      	blx	r3
 800e90c:	60f8      	str	r0, [r7, #12]
 800e90e:	e05d      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e910:	6839      	ldr	r1, [r7, #0]
 800e912:	6878      	ldr	r0, [r7, #4]
 800e914:	f000 fa97 	bl	800ee46 <USBD_CtlError>
 800e918:	7afb      	ldrb	r3, [r7, #11]
 800e91a:	3301      	adds	r3, #1
 800e91c:	72fb      	strb	r3, [r7, #11]
 800e91e:	e055      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e920:	687b      	ldr	r3, [r7, #4]
 800e922:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e926:	691b      	ldr	r3, [r3, #16]
 800e928:	2b00      	cmp	r3, #0
 800e92a:	d00b      	beq.n	800e944 <USBD_GetDescriptor+0x18c>
 800e92c:	687b      	ldr	r3, [r7, #4]
 800e92e:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e932:	691b      	ldr	r3, [r3, #16]
 800e934:	687a      	ldr	r2, [r7, #4]
 800e936:	7c12      	ldrb	r2, [r2, #16]
 800e938:	f107 0108 	add.w	r1, r7, #8
 800e93c:	4610      	mov	r0, r2
 800e93e:	4798      	blx	r3
 800e940:	60f8      	str	r0, [r7, #12]
 800e942:	e043      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e944:	6839      	ldr	r1, [r7, #0]
 800e946:	6878      	ldr	r0, [r7, #4]
 800e948:	f000 fa7d 	bl	800ee46 <USBD_CtlError>
 800e94c:	7afb      	ldrb	r3, [r7, #11]
 800e94e:	3301      	adds	r3, #1
 800e950:	72fb      	strb	r3, [r7, #11]
 800e952:	e03b      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e954:	687b      	ldr	r3, [r7, #4]
 800e956:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e95a:	695b      	ldr	r3, [r3, #20]
 800e95c:	2b00      	cmp	r3, #0
 800e95e:	d00b      	beq.n	800e978 <USBD_GetDescriptor+0x1c0>
 800e960:	687b      	ldr	r3, [r7, #4]
 800e962:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e966:	695b      	ldr	r3, [r3, #20]
 800e968:	687a      	ldr	r2, [r7, #4]
 800e96a:	7c12      	ldrb	r2, [r2, #16]
 800e96c:	f107 0108 	add.w	r1, r7, #8
 800e970:	4610      	mov	r0, r2
 800e972:	4798      	blx	r3
 800e974:	60f8      	str	r0, [r7, #12]
 800e976:	e029      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e978:	6839      	ldr	r1, [r7, #0]
 800e97a:	6878      	ldr	r0, [r7, #4]
 800e97c:	f000 fa63 	bl	800ee46 <USBD_CtlError>
 800e980:	7afb      	ldrb	r3, [r7, #11]
 800e982:	3301      	adds	r3, #1
 800e984:	72fb      	strb	r3, [r7, #11]
 800e986:	e021      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e988:	687b      	ldr	r3, [r7, #4]
 800e98a:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e98e:	699b      	ldr	r3, [r3, #24]
 800e990:	2b00      	cmp	r3, #0
 800e992:	d00b      	beq.n	800e9ac <USBD_GetDescriptor+0x1f4>
 800e994:	687b      	ldr	r3, [r7, #4]
 800e996:	f8d3 32b4 	ldr.w	r3, [r3, #692]	; 0x2b4
 800e99a:	699b      	ldr	r3, [r3, #24]
 800e99c:	687a      	ldr	r2, [r7, #4]
 800e99e:	7c12      	ldrb	r2, [r2, #16]
 800e9a0:	f107 0108 	add.w	r1, r7, #8
 800e9a4:	4610      	mov	r0, r2
 800e9a6:	4798      	blx	r3
 800e9a8:	60f8      	str	r0, [r7, #12]
 800e9aa:	e00f      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e9ac:	6839      	ldr	r1, [r7, #0]
 800e9ae:	6878      	ldr	r0, [r7, #4]
 800e9b0:	f000 fa49 	bl	800ee46 <USBD_CtlError>
 800e9b4:	7afb      	ldrb	r3, [r7, #11]
 800e9b6:	3301      	adds	r3, #1
 800e9b8:	72fb      	strb	r3, [r7, #11]
 800e9ba:	e007      	b.n	800e9cc <USBD_GetDescriptor+0x214>
 800e9bc:	6839      	ldr	r1, [r7, #0]
 800e9be:	6878      	ldr	r0, [r7, #4]
 800e9c0:	f000 fa41 	bl	800ee46 <USBD_CtlError>
 800e9c4:	7afb      	ldrb	r3, [r7, #11]
 800e9c6:	3301      	adds	r3, #1
 800e9c8:	72fb      	strb	r3, [r7, #11]
 800e9ca:	bf00      	nop
 800e9cc:	e037      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800e9ce:	687b      	ldr	r3, [r7, #4]
 800e9d0:	7c1b      	ldrb	r3, [r3, #16]
 800e9d2:	2b00      	cmp	r3, #0
 800e9d4:	d109      	bne.n	800e9ea <USBD_GetDescriptor+0x232>
 800e9d6:	687b      	ldr	r3, [r7, #4]
 800e9d8:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800e9dc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800e9de:	f107 0208 	add.w	r2, r7, #8
 800e9e2:	4610      	mov	r0, r2
 800e9e4:	4798      	blx	r3
 800e9e6:	60f8      	str	r0, [r7, #12]
 800e9e8:	e029      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800e9ea:	6839      	ldr	r1, [r7, #0]
 800e9ec:	6878      	ldr	r0, [r7, #4]
 800e9ee:	f000 fa2a 	bl	800ee46 <USBD_CtlError>
 800e9f2:	7afb      	ldrb	r3, [r7, #11]
 800e9f4:	3301      	adds	r3, #1
 800e9f6:	72fb      	strb	r3, [r7, #11]
 800e9f8:	e021      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800e9fa:	687b      	ldr	r3, [r7, #4]
 800e9fc:	7c1b      	ldrb	r3, [r3, #16]
 800e9fe:	2b00      	cmp	r3, #0
 800ea00:	d10d      	bne.n	800ea1e <USBD_GetDescriptor+0x266>
 800ea02:	687b      	ldr	r3, [r7, #4]
 800ea04:	f8d3 32b8 	ldr.w	r3, [r3, #696]	; 0x2b8
 800ea08:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ea0a:	f107 0208 	add.w	r2, r7, #8
 800ea0e:	4610      	mov	r0, r2
 800ea10:	4798      	blx	r3
 800ea12:	60f8      	str	r0, [r7, #12]
 800ea14:	68fb      	ldr	r3, [r7, #12]
 800ea16:	3301      	adds	r3, #1
 800ea18:	2207      	movs	r2, #7
 800ea1a:	701a      	strb	r2, [r3, #0]
 800ea1c:	e00f      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800ea1e:	6839      	ldr	r1, [r7, #0]
 800ea20:	6878      	ldr	r0, [r7, #4]
 800ea22:	f000 fa10 	bl	800ee46 <USBD_CtlError>
 800ea26:	7afb      	ldrb	r3, [r7, #11]
 800ea28:	3301      	adds	r3, #1
 800ea2a:	72fb      	strb	r3, [r7, #11]
 800ea2c:	e007      	b.n	800ea3e <USBD_GetDescriptor+0x286>
 800ea2e:	6839      	ldr	r1, [r7, #0]
 800ea30:	6878      	ldr	r0, [r7, #4]
 800ea32:	f000 fa08 	bl	800ee46 <USBD_CtlError>
 800ea36:	7afb      	ldrb	r3, [r7, #11]
 800ea38:	3301      	adds	r3, #1
 800ea3a:	72fb      	strb	r3, [r7, #11]
 800ea3c:	bf00      	nop
 800ea3e:	7afb      	ldrb	r3, [r7, #11]
 800ea40:	2b00      	cmp	r3, #0
 800ea42:	d11e      	bne.n	800ea82 <USBD_GetDescriptor+0x2ca>
 800ea44:	683b      	ldr	r3, [r7, #0]
 800ea46:	88db      	ldrh	r3, [r3, #6]
 800ea48:	2b00      	cmp	r3, #0
 800ea4a:	d016      	beq.n	800ea7a <USBD_GetDescriptor+0x2c2>
 800ea4c:	893b      	ldrh	r3, [r7, #8]
 800ea4e:	2b00      	cmp	r3, #0
 800ea50:	d00e      	beq.n	800ea70 <USBD_GetDescriptor+0x2b8>
 800ea52:	683b      	ldr	r3, [r7, #0]
 800ea54:	88da      	ldrh	r2, [r3, #6]
 800ea56:	893b      	ldrh	r3, [r7, #8]
 800ea58:	4293      	cmp	r3, r2
 800ea5a:	bf28      	it	cs
 800ea5c:	4613      	movcs	r3, r2
 800ea5e:	b29b      	uxth	r3, r3
 800ea60:	813b      	strh	r3, [r7, #8]
 800ea62:	893b      	ldrh	r3, [r7, #8]
 800ea64:	461a      	mov	r2, r3
 800ea66:	68f9      	ldr	r1, [r7, #12]
 800ea68:	6878      	ldr	r0, [r7, #4]
 800ea6a:	f000 fa5d 	bl	800ef28 <USBD_CtlSendData>
 800ea6e:	e009      	b.n	800ea84 <USBD_GetDescriptor+0x2cc>
 800ea70:	6839      	ldr	r1, [r7, #0]
 800ea72:	6878      	ldr	r0, [r7, #4]
 800ea74:	f000 f9e7 	bl	800ee46 <USBD_CtlError>
 800ea78:	e004      	b.n	800ea84 <USBD_GetDescriptor+0x2cc>
 800ea7a:	6878      	ldr	r0, [r7, #4]
 800ea7c:	f000 faae 	bl	800efdc <USBD_CtlSendStatus>
 800ea80:	e000      	b.n	800ea84 <USBD_GetDescriptor+0x2cc>
 800ea82:	bf00      	nop
 800ea84:	3710      	adds	r7, #16
 800ea86:	46bd      	mov	sp, r7
 800ea88:	bd80      	pop	{r7, pc}
 800ea8a:	bf00      	nop

0800ea8c <USBD_SetAddress>:
 800ea8c:	b580      	push	{r7, lr}
 800ea8e:	b084      	sub	sp, #16
 800ea90:	af00      	add	r7, sp, #0
 800ea92:	6078      	str	r0, [r7, #4]
 800ea94:	6039      	str	r1, [r7, #0]
 800ea96:	683b      	ldr	r3, [r7, #0]
 800ea98:	889b      	ldrh	r3, [r3, #4]
 800ea9a:	2b00      	cmp	r3, #0
 800ea9c:	d131      	bne.n	800eb02 <USBD_SetAddress+0x76>
 800ea9e:	683b      	ldr	r3, [r7, #0]
 800eaa0:	88db      	ldrh	r3, [r3, #6]
 800eaa2:	2b00      	cmp	r3, #0
 800eaa4:	d12d      	bne.n	800eb02 <USBD_SetAddress+0x76>
 800eaa6:	683b      	ldr	r3, [r7, #0]
 800eaa8:	885b      	ldrh	r3, [r3, #2]
 800eaaa:	2b7f      	cmp	r3, #127	; 0x7f
 800eaac:	d829      	bhi.n	800eb02 <USBD_SetAddress+0x76>
 800eaae:	683b      	ldr	r3, [r7, #0]
 800eab0:	885b      	ldrh	r3, [r3, #2]
 800eab2:	b2db      	uxtb	r3, r3
 800eab4:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 800eab8:	73fb      	strb	r3, [r7, #15]
 800eaba:	687b      	ldr	r3, [r7, #4]
 800eabc:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800eac0:	b2db      	uxtb	r3, r3
 800eac2:	2b03      	cmp	r3, #3
 800eac4:	d104      	bne.n	800ead0 <USBD_SetAddress+0x44>
 800eac6:	6839      	ldr	r1, [r7, #0]
 800eac8:	6878      	ldr	r0, [r7, #4]
 800eaca:	f000 f9bc 	bl	800ee46 <USBD_CtlError>
 800eace:	e01d      	b.n	800eb0c <USBD_SetAddress+0x80>
 800ead0:	687b      	ldr	r3, [r7, #4]
 800ead2:	7bfa      	ldrb	r2, [r7, #15]
 800ead4:	f883 229e 	strb.w	r2, [r3, #670]	; 0x29e
 800ead8:	7bfb      	ldrb	r3, [r7, #15]
 800eada:	4619      	mov	r1, r3
 800eadc:	6878      	ldr	r0, [r7, #4]
 800eade:	f000 ff23 	bl	800f928 <USBD_LL_SetUSBAddress>
 800eae2:	6878      	ldr	r0, [r7, #4]
 800eae4:	f000 fa7a 	bl	800efdc <USBD_CtlSendStatus>
 800eae8:	7bfb      	ldrb	r3, [r7, #15]
 800eaea:	2b00      	cmp	r3, #0
 800eaec:	d004      	beq.n	800eaf8 <USBD_SetAddress+0x6c>
 800eaee:	687b      	ldr	r3, [r7, #4]
 800eaf0:	2202      	movs	r2, #2
 800eaf2:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800eaf6:	e009      	b.n	800eb0c <USBD_SetAddress+0x80>
 800eaf8:	687b      	ldr	r3, [r7, #4]
 800eafa:	2201      	movs	r2, #1
 800eafc:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800eb00:	e004      	b.n	800eb0c <USBD_SetAddress+0x80>
 800eb02:	6839      	ldr	r1, [r7, #0]
 800eb04:	6878      	ldr	r0, [r7, #4]
 800eb06:	f000 f99e 	bl	800ee46 <USBD_CtlError>
 800eb0a:	bf00      	nop
 800eb0c:	bf00      	nop
 800eb0e:	3710      	adds	r7, #16
 800eb10:	46bd      	mov	sp, r7
 800eb12:	bd80      	pop	{r7, pc}

0800eb14 <USBD_SetConfig>:
 800eb14:	b580      	push	{r7, lr}
 800eb16:	b084      	sub	sp, #16
 800eb18:	af00      	add	r7, sp, #0
 800eb1a:	6078      	str	r0, [r7, #4]
 800eb1c:	6039      	str	r1, [r7, #0]
 800eb1e:	2300      	movs	r3, #0
 800eb20:	73fb      	strb	r3, [r7, #15]
 800eb22:	683b      	ldr	r3, [r7, #0]
 800eb24:	885b      	ldrh	r3, [r3, #2]
 800eb26:	b2da      	uxtb	r2, r3
 800eb28:	4b4e      	ldr	r3, [pc, #312]	; (800ec64 <USBD_SetConfig+0x150>)
 800eb2a:	701a      	strb	r2, [r3, #0]
 800eb2c:	4b4d      	ldr	r3, [pc, #308]	; (800ec64 <USBD_SetConfig+0x150>)
 800eb2e:	781b      	ldrb	r3, [r3, #0]
 800eb30:	2b01      	cmp	r3, #1
 800eb32:	d905      	bls.n	800eb40 <USBD_SetConfig+0x2c>
 800eb34:	6839      	ldr	r1, [r7, #0]
 800eb36:	6878      	ldr	r0, [r7, #4]
 800eb38:	f000 f985 	bl	800ee46 <USBD_CtlError>
 800eb3c:	2303      	movs	r3, #3
 800eb3e:	e08c      	b.n	800ec5a <USBD_SetConfig+0x146>
 800eb40:	687b      	ldr	r3, [r7, #4]
 800eb42:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800eb46:	b2db      	uxtb	r3, r3
 800eb48:	2b02      	cmp	r3, #2
 800eb4a:	d002      	beq.n	800eb52 <USBD_SetConfig+0x3e>
 800eb4c:	2b03      	cmp	r3, #3
 800eb4e:	d029      	beq.n	800eba4 <USBD_SetConfig+0x90>
 800eb50:	e075      	b.n	800ec3e <USBD_SetConfig+0x12a>
 800eb52:	4b44      	ldr	r3, [pc, #272]	; (800ec64 <USBD_SetConfig+0x150>)
 800eb54:	781b      	ldrb	r3, [r3, #0]
 800eb56:	2b00      	cmp	r3, #0
 800eb58:	d020      	beq.n	800eb9c <USBD_SetConfig+0x88>
 800eb5a:	4b42      	ldr	r3, [pc, #264]	; (800ec64 <USBD_SetConfig+0x150>)
 800eb5c:	781b      	ldrb	r3, [r3, #0]
 800eb5e:	461a      	mov	r2, r3
 800eb60:	687b      	ldr	r3, [r7, #4]
 800eb62:	605a      	str	r2, [r3, #4]
 800eb64:	4b3f      	ldr	r3, [pc, #252]	; (800ec64 <USBD_SetConfig+0x150>)
 800eb66:	781b      	ldrb	r3, [r3, #0]
 800eb68:	4619      	mov	r1, r3
 800eb6a:	6878      	ldr	r0, [r7, #4]
 800eb6c:	f7fe ffe7 	bl	800db3e <USBD_SetClassConfig>
 800eb70:	4603      	mov	r3, r0
 800eb72:	73fb      	strb	r3, [r7, #15]
 800eb74:	7bfb      	ldrb	r3, [r7, #15]
 800eb76:	2b00      	cmp	r3, #0
 800eb78:	d008      	beq.n	800eb8c <USBD_SetConfig+0x78>
 800eb7a:	6839      	ldr	r1, [r7, #0]
 800eb7c:	6878      	ldr	r0, [r7, #4]
 800eb7e:	f000 f962 	bl	800ee46 <USBD_CtlError>
 800eb82:	687b      	ldr	r3, [r7, #4]
 800eb84:	2202      	movs	r2, #2
 800eb86:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800eb8a:	e065      	b.n	800ec58 <USBD_SetConfig+0x144>
 800eb8c:	6878      	ldr	r0, [r7, #4]
 800eb8e:	f000 fa25 	bl	800efdc <USBD_CtlSendStatus>
 800eb92:	687b      	ldr	r3, [r7, #4]
 800eb94:	2203      	movs	r2, #3
 800eb96:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800eb9a:	e05d      	b.n	800ec58 <USBD_SetConfig+0x144>
 800eb9c:	6878      	ldr	r0, [r7, #4]
 800eb9e:	f000 fa1d 	bl	800efdc <USBD_CtlSendStatus>
 800eba2:	e059      	b.n	800ec58 <USBD_SetConfig+0x144>
 800eba4:	4b2f      	ldr	r3, [pc, #188]	; (800ec64 <USBD_SetConfig+0x150>)
 800eba6:	781b      	ldrb	r3, [r3, #0]
 800eba8:	2b00      	cmp	r3, #0
 800ebaa:	d112      	bne.n	800ebd2 <USBD_SetConfig+0xbe>
 800ebac:	687b      	ldr	r3, [r7, #4]
 800ebae:	2202      	movs	r2, #2
 800ebb0:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800ebb4:	4b2b      	ldr	r3, [pc, #172]	; (800ec64 <USBD_SetConfig+0x150>)
 800ebb6:	781b      	ldrb	r3, [r3, #0]
 800ebb8:	461a      	mov	r2, r3
 800ebba:	687b      	ldr	r3, [r7, #4]
 800ebbc:	605a      	str	r2, [r3, #4]
 800ebbe:	4b29      	ldr	r3, [pc, #164]	; (800ec64 <USBD_SetConfig+0x150>)
 800ebc0:	781b      	ldrb	r3, [r3, #0]
 800ebc2:	4619      	mov	r1, r3
 800ebc4:	6878      	ldr	r0, [r7, #4]
 800ebc6:	f7fe ffd6 	bl	800db76 <USBD_ClrClassConfig>
 800ebca:	6878      	ldr	r0, [r7, #4]
 800ebcc:	f000 fa06 	bl	800efdc <USBD_CtlSendStatus>
 800ebd0:	e042      	b.n	800ec58 <USBD_SetConfig+0x144>
 800ebd2:	4b24      	ldr	r3, [pc, #144]	; (800ec64 <USBD_SetConfig+0x150>)
 800ebd4:	781b      	ldrb	r3, [r3, #0]
 800ebd6:	461a      	mov	r2, r3
 800ebd8:	687b      	ldr	r3, [r7, #4]
 800ebda:	685b      	ldr	r3, [r3, #4]
 800ebdc:	429a      	cmp	r2, r3
 800ebde:	d02a      	beq.n	800ec36 <USBD_SetConfig+0x122>
 800ebe0:	687b      	ldr	r3, [r7, #4]
 800ebe2:	685b      	ldr	r3, [r3, #4]
 800ebe4:	b2db      	uxtb	r3, r3
 800ebe6:	4619      	mov	r1, r3
 800ebe8:	6878      	ldr	r0, [r7, #4]
 800ebea:	f7fe ffc4 	bl	800db76 <USBD_ClrClassConfig>
 800ebee:	4b1d      	ldr	r3, [pc, #116]	; (800ec64 <USBD_SetConfig+0x150>)
 800ebf0:	781b      	ldrb	r3, [r3, #0]
 800ebf2:	461a      	mov	r2, r3
 800ebf4:	687b      	ldr	r3, [r7, #4]
 800ebf6:	605a      	str	r2, [r3, #4]
 800ebf8:	4b1a      	ldr	r3, [pc, #104]	; (800ec64 <USBD_SetConfig+0x150>)
 800ebfa:	781b      	ldrb	r3, [r3, #0]
 800ebfc:	4619      	mov	r1, r3
 800ebfe:	6878      	ldr	r0, [r7, #4]
 800ec00:	f7fe ff9d 	bl	800db3e <USBD_SetClassConfig>
 800ec04:	4603      	mov	r3, r0
 800ec06:	73fb      	strb	r3, [r7, #15]
 800ec08:	7bfb      	ldrb	r3, [r7, #15]
 800ec0a:	2b00      	cmp	r3, #0
 800ec0c:	d00f      	beq.n	800ec2e <USBD_SetConfig+0x11a>
 800ec0e:	6839      	ldr	r1, [r7, #0]
 800ec10:	6878      	ldr	r0, [r7, #4]
 800ec12:	f000 f918 	bl	800ee46 <USBD_CtlError>
 800ec16:	687b      	ldr	r3, [r7, #4]
 800ec18:	685b      	ldr	r3, [r3, #4]
 800ec1a:	b2db      	uxtb	r3, r3
 800ec1c:	4619      	mov	r1, r3
 800ec1e:	6878      	ldr	r0, [r7, #4]
 800ec20:	f7fe ffa9 	bl	800db76 <USBD_ClrClassConfig>
 800ec24:	687b      	ldr	r3, [r7, #4]
 800ec26:	2202      	movs	r2, #2
 800ec28:	f883 229c 	strb.w	r2, [r3, #668]	; 0x29c
 800ec2c:	e014      	b.n	800ec58 <USBD_SetConfig+0x144>
 800ec2e:	6878      	ldr	r0, [r7, #4]
 800ec30:	f000 f9d4 	bl	800efdc <USBD_CtlSendStatus>
 800ec34:	e010      	b.n	800ec58 <USBD_SetConfig+0x144>
 800ec36:	6878      	ldr	r0, [r7, #4]
 800ec38:	f000 f9d0 	bl	800efdc <USBD_CtlSendStatus>
 800ec3c:	e00c      	b.n	800ec58 <USBD_SetConfig+0x144>
 800ec3e:	6839      	ldr	r1, [r7, #0]
 800ec40:	6878      	ldr	r0, [r7, #4]
 800ec42:	f000 f900 	bl	800ee46 <USBD_CtlError>
 800ec46:	4b07      	ldr	r3, [pc, #28]	; (800ec64 <USBD_SetConfig+0x150>)
 800ec48:	781b      	ldrb	r3, [r3, #0]
 800ec4a:	4619      	mov	r1, r3
 800ec4c:	6878      	ldr	r0, [r7, #4]
 800ec4e:	f7fe ff92 	bl	800db76 <USBD_ClrClassConfig>
 800ec52:	2303      	movs	r3, #3
 800ec54:	73fb      	strb	r3, [r7, #15]
 800ec56:	bf00      	nop
 800ec58:	7bfb      	ldrb	r3, [r7, #15]
 800ec5a:	4618      	mov	r0, r3
 800ec5c:	3710      	adds	r7, #16
 800ec5e:	46bd      	mov	sp, r7
 800ec60:	bd80      	pop	{r7, pc}
 800ec62:	bf00      	nop
 800ec64:	20000c3c 	.word	0x20000c3c

0800ec68 <USBD_GetConfig>:
 800ec68:	b580      	push	{r7, lr}
 800ec6a:	b082      	sub	sp, #8
 800ec6c:	af00      	add	r7, sp, #0
 800ec6e:	6078      	str	r0, [r7, #4]
 800ec70:	6039      	str	r1, [r7, #0]
 800ec72:	683b      	ldr	r3, [r7, #0]
 800ec74:	88db      	ldrh	r3, [r3, #6]
 800ec76:	2b01      	cmp	r3, #1
 800ec78:	d004      	beq.n	800ec84 <USBD_GetConfig+0x1c>
 800ec7a:	6839      	ldr	r1, [r7, #0]
 800ec7c:	6878      	ldr	r0, [r7, #4]
 800ec7e:	f000 f8e2 	bl	800ee46 <USBD_CtlError>
 800ec82:	e023      	b.n	800eccc <USBD_GetConfig+0x64>
 800ec84:	687b      	ldr	r3, [r7, #4]
 800ec86:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ec8a:	b2db      	uxtb	r3, r3
 800ec8c:	2b02      	cmp	r3, #2
 800ec8e:	dc02      	bgt.n	800ec96 <USBD_GetConfig+0x2e>
 800ec90:	2b00      	cmp	r3, #0
 800ec92:	dc03      	bgt.n	800ec9c <USBD_GetConfig+0x34>
 800ec94:	e015      	b.n	800ecc2 <USBD_GetConfig+0x5a>
 800ec96:	2b03      	cmp	r3, #3
 800ec98:	d00b      	beq.n	800ecb2 <USBD_GetConfig+0x4a>
 800ec9a:	e012      	b.n	800ecc2 <USBD_GetConfig+0x5a>
 800ec9c:	687b      	ldr	r3, [r7, #4]
 800ec9e:	2200      	movs	r2, #0
 800eca0:	609a      	str	r2, [r3, #8]
 800eca2:	687b      	ldr	r3, [r7, #4]
 800eca4:	3308      	adds	r3, #8
 800eca6:	2201      	movs	r2, #1
 800eca8:	4619      	mov	r1, r3
 800ecaa:	6878      	ldr	r0, [r7, #4]
 800ecac:	f000 f93c 	bl	800ef28 <USBD_CtlSendData>
 800ecb0:	e00c      	b.n	800eccc <USBD_GetConfig+0x64>
 800ecb2:	687b      	ldr	r3, [r7, #4]
 800ecb4:	3304      	adds	r3, #4
 800ecb6:	2201      	movs	r2, #1
 800ecb8:	4619      	mov	r1, r3
 800ecba:	6878      	ldr	r0, [r7, #4]
 800ecbc:	f000 f934 	bl	800ef28 <USBD_CtlSendData>
 800ecc0:	e004      	b.n	800eccc <USBD_GetConfig+0x64>
 800ecc2:	6839      	ldr	r1, [r7, #0]
 800ecc4:	6878      	ldr	r0, [r7, #4]
 800ecc6:	f000 f8be 	bl	800ee46 <USBD_CtlError>
 800ecca:	bf00      	nop
 800eccc:	bf00      	nop
 800ecce:	3708      	adds	r7, #8
 800ecd0:	46bd      	mov	sp, r7
 800ecd2:	bd80      	pop	{r7, pc}

0800ecd4 <USBD_GetStatus>:
 800ecd4:	b580      	push	{r7, lr}
 800ecd6:	b082      	sub	sp, #8
 800ecd8:	af00      	add	r7, sp, #0
 800ecda:	6078      	str	r0, [r7, #4]
 800ecdc:	6039      	str	r1, [r7, #0]
 800ecde:	687b      	ldr	r3, [r7, #4]
 800ece0:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ece4:	b2db      	uxtb	r3, r3
 800ece6:	3b01      	subs	r3, #1
 800ece8:	2b02      	cmp	r3, #2
 800ecea:	d81e      	bhi.n	800ed2a <USBD_GetStatus+0x56>
 800ecec:	683b      	ldr	r3, [r7, #0]
 800ecee:	88db      	ldrh	r3, [r3, #6]
 800ecf0:	2b02      	cmp	r3, #2
 800ecf2:	d004      	beq.n	800ecfe <USBD_GetStatus+0x2a>
 800ecf4:	6839      	ldr	r1, [r7, #0]
 800ecf6:	6878      	ldr	r0, [r7, #4]
 800ecf8:	f000 f8a5 	bl	800ee46 <USBD_CtlError>
 800ecfc:	e01a      	b.n	800ed34 <USBD_GetStatus+0x60>
 800ecfe:	687b      	ldr	r3, [r7, #4]
 800ed00:	2201      	movs	r2, #1
 800ed02:	60da      	str	r2, [r3, #12]
 800ed04:	687b      	ldr	r3, [r7, #4]
 800ed06:	f8d3 32a4 	ldr.w	r3, [r3, #676]	; 0x2a4
 800ed0a:	2b00      	cmp	r3, #0
 800ed0c:	d005      	beq.n	800ed1a <USBD_GetStatus+0x46>
 800ed0e:	687b      	ldr	r3, [r7, #4]
 800ed10:	68db      	ldr	r3, [r3, #12]
 800ed12:	f043 0202 	orr.w	r2, r3, #2
 800ed16:	687b      	ldr	r3, [r7, #4]
 800ed18:	60da      	str	r2, [r3, #12]
 800ed1a:	687b      	ldr	r3, [r7, #4]
 800ed1c:	330c      	adds	r3, #12
 800ed1e:	2202      	movs	r2, #2
 800ed20:	4619      	mov	r1, r3
 800ed22:	6878      	ldr	r0, [r7, #4]
 800ed24:	f000 f900 	bl	800ef28 <USBD_CtlSendData>
 800ed28:	e004      	b.n	800ed34 <USBD_GetStatus+0x60>
 800ed2a:	6839      	ldr	r1, [r7, #0]
 800ed2c:	6878      	ldr	r0, [r7, #4]
 800ed2e:	f000 f88a 	bl	800ee46 <USBD_CtlError>
 800ed32:	bf00      	nop
 800ed34:	bf00      	nop
 800ed36:	3708      	adds	r7, #8
 800ed38:	46bd      	mov	sp, r7
 800ed3a:	bd80      	pop	{r7, pc}

0800ed3c <USBD_SetFeature>:
 800ed3c:	b580      	push	{r7, lr}
 800ed3e:	b082      	sub	sp, #8
 800ed40:	af00      	add	r7, sp, #0
 800ed42:	6078      	str	r0, [r7, #4]
 800ed44:	6039      	str	r1, [r7, #0]
 800ed46:	683b      	ldr	r3, [r7, #0]
 800ed48:	885b      	ldrh	r3, [r3, #2]
 800ed4a:	2b01      	cmp	r3, #1
 800ed4c:	d107      	bne.n	800ed5e <USBD_SetFeature+0x22>
 800ed4e:	687b      	ldr	r3, [r7, #4]
 800ed50:	2201      	movs	r2, #1
 800ed52:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 800ed56:	6878      	ldr	r0, [r7, #4]
 800ed58:	f000 f940 	bl	800efdc <USBD_CtlSendStatus>
 800ed5c:	e013      	b.n	800ed86 <USBD_SetFeature+0x4a>
 800ed5e:	683b      	ldr	r3, [r7, #0]
 800ed60:	885b      	ldrh	r3, [r3, #2]
 800ed62:	2b02      	cmp	r3, #2
 800ed64:	d10b      	bne.n	800ed7e <USBD_SetFeature+0x42>
 800ed66:	683b      	ldr	r3, [r7, #0]
 800ed68:	889b      	ldrh	r3, [r3, #4]
 800ed6a:	0a1b      	lsrs	r3, r3, #8
 800ed6c:	b29b      	uxth	r3, r3
 800ed6e:	b2da      	uxtb	r2, r3
 800ed70:	687b      	ldr	r3, [r7, #4]
 800ed72:	f883 22a0 	strb.w	r2, [r3, #672]	; 0x2a0
 800ed76:	6878      	ldr	r0, [r7, #4]
 800ed78:	f000 f930 	bl	800efdc <USBD_CtlSendStatus>
 800ed7c:	e003      	b.n	800ed86 <USBD_SetFeature+0x4a>
 800ed7e:	6839      	ldr	r1, [r7, #0]
 800ed80:	6878      	ldr	r0, [r7, #4]
 800ed82:	f000 f860 	bl	800ee46 <USBD_CtlError>
 800ed86:	bf00      	nop
 800ed88:	3708      	adds	r7, #8
 800ed8a:	46bd      	mov	sp, r7
 800ed8c:	bd80      	pop	{r7, pc}

0800ed8e <USBD_ClrFeature>:
 800ed8e:	b580      	push	{r7, lr}
 800ed90:	b082      	sub	sp, #8
 800ed92:	af00      	add	r7, sp, #0
 800ed94:	6078      	str	r0, [r7, #4]
 800ed96:	6039      	str	r1, [r7, #0]
 800ed98:	687b      	ldr	r3, [r7, #4]
 800ed9a:	f893 329c 	ldrb.w	r3, [r3, #668]	; 0x29c
 800ed9e:	b2db      	uxtb	r3, r3
 800eda0:	3b01      	subs	r3, #1
 800eda2:	2b02      	cmp	r3, #2
 800eda4:	d80b      	bhi.n	800edbe <USBD_ClrFeature+0x30>
 800eda6:	683b      	ldr	r3, [r7, #0]
 800eda8:	885b      	ldrh	r3, [r3, #2]
 800edaa:	2b01      	cmp	r3, #1
 800edac:	d10c      	bne.n	800edc8 <USBD_ClrFeature+0x3a>
 800edae:	687b      	ldr	r3, [r7, #4]
 800edb0:	2200      	movs	r2, #0
 800edb2:	f8c3 22a4 	str.w	r2, [r3, #676]	; 0x2a4
 800edb6:	6878      	ldr	r0, [r7, #4]
 800edb8:	f000 f910 	bl	800efdc <USBD_CtlSendStatus>
 800edbc:	e004      	b.n	800edc8 <USBD_ClrFeature+0x3a>
 800edbe:	6839      	ldr	r1, [r7, #0]
 800edc0:	6878      	ldr	r0, [r7, #4]
 800edc2:	f000 f840 	bl	800ee46 <USBD_CtlError>
 800edc6:	e000      	b.n	800edca <USBD_ClrFeature+0x3c>
 800edc8:	bf00      	nop
 800edca:	bf00      	nop
 800edcc:	3708      	adds	r7, #8
 800edce:	46bd      	mov	sp, r7
 800edd0:	bd80      	pop	{r7, pc}

0800edd2 <USBD_ParseSetupRequest>:
 800edd2:	b580      	push	{r7, lr}
 800edd4:	b084      	sub	sp, #16
 800edd6:	af00      	add	r7, sp, #0
 800edd8:	6078      	str	r0, [r7, #4]
 800edda:	6039      	str	r1, [r7, #0]
 800eddc:	683b      	ldr	r3, [r7, #0]
 800edde:	60fb      	str	r3, [r7, #12]
 800ede0:	68fb      	ldr	r3, [r7, #12]
 800ede2:	781a      	ldrb	r2, [r3, #0]
 800ede4:	687b      	ldr	r3, [r7, #4]
 800ede6:	701a      	strb	r2, [r3, #0]
 800ede8:	68fb      	ldr	r3, [r7, #12]
 800edea:	3301      	adds	r3, #1
 800edec:	60fb      	str	r3, [r7, #12]
 800edee:	68fb      	ldr	r3, [r7, #12]
 800edf0:	781a      	ldrb	r2, [r3, #0]
 800edf2:	687b      	ldr	r3, [r7, #4]
 800edf4:	705a      	strb	r2, [r3, #1]
 800edf6:	68fb      	ldr	r3, [r7, #12]
 800edf8:	3301      	adds	r3, #1
 800edfa:	60fb      	str	r3, [r7, #12]
 800edfc:	68f8      	ldr	r0, [r7, #12]
 800edfe:	f7ff fa41 	bl	800e284 <SWAPBYTE>
 800ee02:	4603      	mov	r3, r0
 800ee04:	461a      	mov	r2, r3
 800ee06:	687b      	ldr	r3, [r7, #4]
 800ee08:	805a      	strh	r2, [r3, #2]
 800ee0a:	68fb      	ldr	r3, [r7, #12]
 800ee0c:	3301      	adds	r3, #1
 800ee0e:	60fb      	str	r3, [r7, #12]
 800ee10:	68fb      	ldr	r3, [r7, #12]
 800ee12:	3301      	adds	r3, #1
 800ee14:	60fb      	str	r3, [r7, #12]
 800ee16:	68f8      	ldr	r0, [r7, #12]
 800ee18:	f7ff fa34 	bl	800e284 <SWAPBYTE>
 800ee1c:	4603      	mov	r3, r0
 800ee1e:	461a      	mov	r2, r3
 800ee20:	687b      	ldr	r3, [r7, #4]
 800ee22:	809a      	strh	r2, [r3, #4]
 800ee24:	68fb      	ldr	r3, [r7, #12]
 800ee26:	3301      	adds	r3, #1
 800ee28:	60fb      	str	r3, [r7, #12]
 800ee2a:	68fb      	ldr	r3, [r7, #12]
 800ee2c:	3301      	adds	r3, #1
 800ee2e:	60fb      	str	r3, [r7, #12]
 800ee30:	68f8      	ldr	r0, [r7, #12]
 800ee32:	f7ff fa27 	bl	800e284 <SWAPBYTE>
 800ee36:	4603      	mov	r3, r0
 800ee38:	461a      	mov	r2, r3
 800ee3a:	687b      	ldr	r3, [r7, #4]
 800ee3c:	80da      	strh	r2, [r3, #6]
 800ee3e:	bf00      	nop
 800ee40:	3710      	adds	r7, #16
 800ee42:	46bd      	mov	sp, r7
 800ee44:	bd80      	pop	{r7, pc}

0800ee46 <USBD_CtlError>:
 800ee46:	b580      	push	{r7, lr}
 800ee48:	b082      	sub	sp, #8
 800ee4a:	af00      	add	r7, sp, #0
 800ee4c:	6078      	str	r0, [r7, #4]
 800ee4e:	6039      	str	r1, [r7, #0]
 800ee50:	2180      	movs	r1, #128	; 0x80
 800ee52:	6878      	ldr	r0, [r7, #4]
 800ee54:	f000 fcfe 	bl	800f854 <USBD_LL_StallEP>
 800ee58:	2100      	movs	r1, #0
 800ee5a:	6878      	ldr	r0, [r7, #4]
 800ee5c:	f000 fcfa 	bl	800f854 <USBD_LL_StallEP>
 800ee60:	bf00      	nop
 800ee62:	3708      	adds	r7, #8
 800ee64:	46bd      	mov	sp, r7
 800ee66:	bd80      	pop	{r7, pc}

0800ee68 <USBD_GetString>:
 800ee68:	b580      	push	{r7, lr}
 800ee6a:	b086      	sub	sp, #24
 800ee6c:	af00      	add	r7, sp, #0
 800ee6e:	60f8      	str	r0, [r7, #12]
 800ee70:	60b9      	str	r1, [r7, #8]
 800ee72:	607a      	str	r2, [r7, #4]
 800ee74:	2300      	movs	r3, #0
 800ee76:	75fb      	strb	r3, [r7, #23]
 800ee78:	68fb      	ldr	r3, [r7, #12]
 800ee7a:	2b00      	cmp	r3, #0
 800ee7c:	d036      	beq.n	800eeec <USBD_GetString+0x84>
 800ee7e:	68fb      	ldr	r3, [r7, #12]
 800ee80:	613b      	str	r3, [r7, #16]
 800ee82:	6938      	ldr	r0, [r7, #16]
 800ee84:	f000 f836 	bl	800eef4 <USBD_GetLen>
 800ee88:	4603      	mov	r3, r0
 800ee8a:	3301      	adds	r3, #1
 800ee8c:	b29b      	uxth	r3, r3
 800ee8e:	005b      	lsls	r3, r3, #1
 800ee90:	b29a      	uxth	r2, r3
 800ee92:	687b      	ldr	r3, [r7, #4]
 800ee94:	801a      	strh	r2, [r3, #0]
 800ee96:	7dfb      	ldrb	r3, [r7, #23]
 800ee98:	68ba      	ldr	r2, [r7, #8]
 800ee9a:	4413      	add	r3, r2
 800ee9c:	687a      	ldr	r2, [r7, #4]
 800ee9e:	7812      	ldrb	r2, [r2, #0]
 800eea0:	701a      	strb	r2, [r3, #0]
 800eea2:	7dfb      	ldrb	r3, [r7, #23]
 800eea4:	3301      	adds	r3, #1
 800eea6:	75fb      	strb	r3, [r7, #23]
 800eea8:	7dfb      	ldrb	r3, [r7, #23]
 800eeaa:	68ba      	ldr	r2, [r7, #8]
 800eeac:	4413      	add	r3, r2
 800eeae:	2203      	movs	r2, #3
 800eeb0:	701a      	strb	r2, [r3, #0]
 800eeb2:	7dfb      	ldrb	r3, [r7, #23]
 800eeb4:	3301      	adds	r3, #1
 800eeb6:	75fb      	strb	r3, [r7, #23]
 800eeb8:	e013      	b.n	800eee2 <USBD_GetString+0x7a>
 800eeba:	7dfb      	ldrb	r3, [r7, #23]
 800eebc:	68ba      	ldr	r2, [r7, #8]
 800eebe:	4413      	add	r3, r2
 800eec0:	693a      	ldr	r2, [r7, #16]
 800eec2:	7812      	ldrb	r2, [r2, #0]
 800eec4:	701a      	strb	r2, [r3, #0]
 800eec6:	693b      	ldr	r3, [r7, #16]
 800eec8:	3301      	adds	r3, #1
 800eeca:	613b      	str	r3, [r7, #16]
 800eecc:	7dfb      	ldrb	r3, [r7, #23]
 800eece:	3301      	adds	r3, #1
 800eed0:	75fb      	strb	r3, [r7, #23]
 800eed2:	7dfb      	ldrb	r3, [r7, #23]
 800eed4:	68ba      	ldr	r2, [r7, #8]
 800eed6:	4413      	add	r3, r2
 800eed8:	2200      	movs	r2, #0
 800eeda:	701a      	strb	r2, [r3, #0]
 800eedc:	7dfb      	ldrb	r3, [r7, #23]
 800eede:	3301      	adds	r3, #1
 800eee0:	75fb      	strb	r3, [r7, #23]
 800eee2:	693b      	ldr	r3, [r7, #16]
 800eee4:	781b      	ldrb	r3, [r3, #0]
 800eee6:	2b00      	cmp	r3, #0
 800eee8:	d1e7      	bne.n	800eeba <USBD_GetString+0x52>
 800eeea:	e000      	b.n	800eeee <USBD_GetString+0x86>
 800eeec:	bf00      	nop
 800eeee:	3718      	adds	r7, #24
 800eef0:	46bd      	mov	sp, r7
 800eef2:	bd80      	pop	{r7, pc}

0800eef4 <USBD_GetLen>:
 800eef4:	b480      	push	{r7}
 800eef6:	b085      	sub	sp, #20
 800eef8:	af00      	add	r7, sp, #0
 800eefa:	6078      	str	r0, [r7, #4]
 800eefc:	2300      	movs	r3, #0
 800eefe:	73fb      	strb	r3, [r7, #15]
 800ef00:	687b      	ldr	r3, [r7, #4]
 800ef02:	60bb      	str	r3, [r7, #8]
 800ef04:	e005      	b.n	800ef12 <USBD_GetLen+0x1e>
 800ef06:	7bfb      	ldrb	r3, [r7, #15]
 800ef08:	3301      	adds	r3, #1
 800ef0a:	73fb      	strb	r3, [r7, #15]
 800ef0c:	68bb      	ldr	r3, [r7, #8]
 800ef0e:	3301      	adds	r3, #1
 800ef10:	60bb      	str	r3, [r7, #8]
 800ef12:	68bb      	ldr	r3, [r7, #8]
 800ef14:	781b      	ldrb	r3, [r3, #0]
 800ef16:	2b00      	cmp	r3, #0
 800ef18:	d1f5      	bne.n	800ef06 <USBD_GetLen+0x12>
 800ef1a:	7bfb      	ldrb	r3, [r7, #15]
 800ef1c:	4618      	mov	r0, r3
 800ef1e:	3714      	adds	r7, #20
 800ef20:	46bd      	mov	sp, r7
 800ef22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef26:	4770      	bx	lr

0800ef28 <USBD_CtlSendData>:
 800ef28:	b580      	push	{r7, lr}
 800ef2a:	b084      	sub	sp, #16
 800ef2c:	af00      	add	r7, sp, #0
 800ef2e:	60f8      	str	r0, [r7, #12]
 800ef30:	60b9      	str	r1, [r7, #8]
 800ef32:	607a      	str	r2, [r7, #4]
 800ef34:	68fb      	ldr	r3, [r7, #12]
 800ef36:	2202      	movs	r2, #2
 800ef38:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800ef3c:	68fb      	ldr	r3, [r7, #12]
 800ef3e:	687a      	ldr	r2, [r7, #4]
 800ef40:	619a      	str	r2, [r3, #24]
 800ef42:	68fb      	ldr	r3, [r7, #12]
 800ef44:	687a      	ldr	r2, [r7, #4]
 800ef46:	61da      	str	r2, [r3, #28]
 800ef48:	687b      	ldr	r3, [r7, #4]
 800ef4a:	68ba      	ldr	r2, [r7, #8]
 800ef4c:	2100      	movs	r1, #0
 800ef4e:	68f8      	ldr	r0, [r7, #12]
 800ef50:	f000 fd09 	bl	800f966 <USBD_LL_Transmit>
 800ef54:	2300      	movs	r3, #0
 800ef56:	4618      	mov	r0, r3
 800ef58:	3710      	adds	r7, #16
 800ef5a:	46bd      	mov	sp, r7
 800ef5c:	bd80      	pop	{r7, pc}

0800ef5e <USBD_CtlContinueSendData>:
 800ef5e:	b580      	push	{r7, lr}
 800ef60:	b084      	sub	sp, #16
 800ef62:	af00      	add	r7, sp, #0
 800ef64:	60f8      	str	r0, [r7, #12]
 800ef66:	60b9      	str	r1, [r7, #8]
 800ef68:	607a      	str	r2, [r7, #4]
 800ef6a:	687b      	ldr	r3, [r7, #4]
 800ef6c:	68ba      	ldr	r2, [r7, #8]
 800ef6e:	2100      	movs	r1, #0
 800ef70:	68f8      	ldr	r0, [r7, #12]
 800ef72:	f000 fcf8 	bl	800f966 <USBD_LL_Transmit>
 800ef76:	2300      	movs	r3, #0
 800ef78:	4618      	mov	r0, r3
 800ef7a:	3710      	adds	r7, #16
 800ef7c:	46bd      	mov	sp, r7
 800ef7e:	bd80      	pop	{r7, pc}

0800ef80 <USBD_CtlPrepareRx>:
 800ef80:	b580      	push	{r7, lr}
 800ef82:	b084      	sub	sp, #16
 800ef84:	af00      	add	r7, sp, #0
 800ef86:	60f8      	str	r0, [r7, #12]
 800ef88:	60b9      	str	r1, [r7, #8]
 800ef8a:	607a      	str	r2, [r7, #4]
 800ef8c:	68fb      	ldr	r3, [r7, #12]
 800ef8e:	2203      	movs	r2, #3
 800ef90:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800ef94:	68fb      	ldr	r3, [r7, #12]
 800ef96:	687a      	ldr	r2, [r7, #4]
 800ef98:	f8c3 2158 	str.w	r2, [r3, #344]	; 0x158
 800ef9c:	68fb      	ldr	r3, [r7, #12]
 800ef9e:	687a      	ldr	r2, [r7, #4]
 800efa0:	f8c3 215c 	str.w	r2, [r3, #348]	; 0x15c
 800efa4:	687b      	ldr	r3, [r7, #4]
 800efa6:	68ba      	ldr	r2, [r7, #8]
 800efa8:	2100      	movs	r1, #0
 800efaa:	68f8      	ldr	r0, [r7, #12]
 800efac:	f000 fcfc 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800efb0:	2300      	movs	r3, #0
 800efb2:	4618      	mov	r0, r3
 800efb4:	3710      	adds	r7, #16
 800efb6:	46bd      	mov	sp, r7
 800efb8:	bd80      	pop	{r7, pc}

0800efba <USBD_CtlContinueRx>:
 800efba:	b580      	push	{r7, lr}
 800efbc:	b084      	sub	sp, #16
 800efbe:	af00      	add	r7, sp, #0
 800efc0:	60f8      	str	r0, [r7, #12]
 800efc2:	60b9      	str	r1, [r7, #8]
 800efc4:	607a      	str	r2, [r7, #4]
 800efc6:	687b      	ldr	r3, [r7, #4]
 800efc8:	68ba      	ldr	r2, [r7, #8]
 800efca:	2100      	movs	r1, #0
 800efcc:	68f8      	ldr	r0, [r7, #12]
 800efce:	f000 fceb 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800efd2:	2300      	movs	r3, #0
 800efd4:	4618      	mov	r0, r3
 800efd6:	3710      	adds	r7, #16
 800efd8:	46bd      	mov	sp, r7
 800efda:	bd80      	pop	{r7, pc}

0800efdc <USBD_CtlSendStatus>:
 800efdc:	b580      	push	{r7, lr}
 800efde:	b082      	sub	sp, #8
 800efe0:	af00      	add	r7, sp, #0
 800efe2:	6078      	str	r0, [r7, #4]
 800efe4:	687b      	ldr	r3, [r7, #4]
 800efe6:	2204      	movs	r2, #4
 800efe8:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800efec:	2300      	movs	r3, #0
 800efee:	2200      	movs	r2, #0
 800eff0:	2100      	movs	r1, #0
 800eff2:	6878      	ldr	r0, [r7, #4]
 800eff4:	f000 fcb7 	bl	800f966 <USBD_LL_Transmit>
 800eff8:	2300      	movs	r3, #0
 800effa:	4618      	mov	r0, r3
 800effc:	3708      	adds	r7, #8
 800effe:	46bd      	mov	sp, r7
 800f000:	bd80      	pop	{r7, pc}

0800f002 <USBD_CtlReceiveStatus>:
 800f002:	b580      	push	{r7, lr}
 800f004:	b082      	sub	sp, #8
 800f006:	af00      	add	r7, sp, #0
 800f008:	6078      	str	r0, [r7, #4]
 800f00a:	687b      	ldr	r3, [r7, #4]
 800f00c:	2205      	movs	r2, #5
 800f00e:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
 800f012:	2300      	movs	r3, #0
 800f014:	2200      	movs	r2, #0
 800f016:	2100      	movs	r1, #0
 800f018:	6878      	ldr	r0, [r7, #4]
 800f01a:	f000 fcc5 	bl	800f9a8 <USBD_LL_PrepareReceive>
 800f01e:	2300      	movs	r3, #0
 800f020:	4618      	mov	r0, r3
 800f022:	3708      	adds	r7, #8
 800f024:	46bd      	mov	sp, r7
 800f026:	bd80      	pop	{r7, pc}

0800f028 <MX_USB_DEVICE_Init>:
 800f028:	b580      	push	{r7, lr}
 800f02a:	af00      	add	r7, sp, #0
 800f02c:	2200      	movs	r2, #0
 800f02e:	4912      	ldr	r1, [pc, #72]	; (800f078 <MX_USB_DEVICE_Init+0x50>)
 800f030:	4812      	ldr	r0, [pc, #72]	; (800f07c <MX_USB_DEVICE_Init+0x54>)
 800f032:	f7fe fd07 	bl	800da44 <USBD_Init>
 800f036:	4603      	mov	r3, r0
 800f038:	2b00      	cmp	r3, #0
 800f03a:	d001      	beq.n	800f040 <MX_USB_DEVICE_Init+0x18>
 800f03c:	f7f7 fd70 	bl	8006b20 <Error_Handler>
 800f040:	490f      	ldr	r1, [pc, #60]	; (800f080 <MX_USB_DEVICE_Init+0x58>)
 800f042:	480e      	ldr	r0, [pc, #56]	; (800f07c <MX_USB_DEVICE_Init+0x54>)
 800f044:	f7fe fd2e 	bl	800daa4 <USBD_RegisterClass>
 800f048:	4603      	mov	r3, r0
 800f04a:	2b00      	cmp	r3, #0
 800f04c:	d001      	beq.n	800f052 <MX_USB_DEVICE_Init+0x2a>
 800f04e:	f7f7 fd67 	bl	8006b20 <Error_Handler>
 800f052:	490c      	ldr	r1, [pc, #48]	; (800f084 <MX_USB_DEVICE_Init+0x5c>)
 800f054:	4809      	ldr	r0, [pc, #36]	; (800f07c <MX_USB_DEVICE_Init+0x54>)
 800f056:	f7fe fc65 	bl	800d924 <USBD_CDC_RegisterInterface>
 800f05a:	4603      	mov	r3, r0
 800f05c:	2b00      	cmp	r3, #0
 800f05e:	d001      	beq.n	800f064 <MX_USB_DEVICE_Init+0x3c>
 800f060:	f7f7 fd5e 	bl	8006b20 <Error_Handler>
 800f064:	4805      	ldr	r0, [pc, #20]	; (800f07c <MX_USB_DEVICE_Init+0x54>)
 800f066:	f7fe fd53 	bl	800db10 <USBD_Start>
 800f06a:	4603      	mov	r3, r0
 800f06c:	2b00      	cmp	r3, #0
 800f06e:	d001      	beq.n	800f074 <MX_USB_DEVICE_Init+0x4c>
 800f070:	f7f7 fd56 	bl	8006b20 <Error_Handler>
 800f074:	bf00      	nop
 800f076:	bd80      	pop	{r7, pc}
 800f078:	200000d0 	.word	0x200000d0
 800f07c:	20000c40 	.word	0x20000c40
 800f080:	2000003c 	.word	0x2000003c
 800f084:	200000bc 	.word	0x200000bc

0800f088 <CDC_Init_FS>:
 800f088:	b580      	push	{r7, lr}
 800f08a:	af00      	add	r7, sp, #0
 800f08c:	2200      	movs	r2, #0
 800f08e:	4905      	ldr	r1, [pc, #20]	; (800f0a4 <CDC_Init_FS+0x1c>)
 800f090:	4805      	ldr	r0, [pc, #20]	; (800f0a8 <CDC_Init_FS+0x20>)
 800f092:	f7fe fc61 	bl	800d958 <USBD_CDC_SetTxBuffer>
 800f096:	4905      	ldr	r1, [pc, #20]	; (800f0ac <CDC_Init_FS+0x24>)
 800f098:	4803      	ldr	r0, [pc, #12]	; (800f0a8 <CDC_Init_FS+0x20>)
 800f09a:	f7fe fc7f 	bl	800d99c <USBD_CDC_SetRxBuffer>
 800f09e:	2300      	movs	r3, #0
 800f0a0:	4618      	mov	r0, r3
 800f0a2:	bd80      	pop	{r7, pc}
 800f0a4:	20001724 	.word	0x20001724
 800f0a8:	20000c40 	.word	0x20000c40
 800f0ac:	20000f24 	.word	0x20000f24

0800f0b0 <CDC_DeInit_FS>:
 800f0b0:	b480      	push	{r7}
 800f0b2:	af00      	add	r7, sp, #0
 800f0b4:	2300      	movs	r3, #0
 800f0b6:	4618      	mov	r0, r3
 800f0b8:	46bd      	mov	sp, r7
 800f0ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0be:	4770      	bx	lr

0800f0c0 <CDC_Control_FS>:
 800f0c0:	b480      	push	{r7}
 800f0c2:	b083      	sub	sp, #12
 800f0c4:	af00      	add	r7, sp, #0
 800f0c6:	4603      	mov	r3, r0
 800f0c8:	6039      	str	r1, [r7, #0]
 800f0ca:	71fb      	strb	r3, [r7, #7]
 800f0cc:	4613      	mov	r3, r2
 800f0ce:	80bb      	strh	r3, [r7, #4]
 800f0d0:	79fb      	ldrb	r3, [r7, #7]
 800f0d2:	2b23      	cmp	r3, #35	; 0x23
 800f0d4:	f200 808c 	bhi.w	800f1f0 <CDC_Control_FS+0x130>
 800f0d8:	a201      	add	r2, pc, #4	; (adr r2, 800f0e0 <CDC_Control_FS+0x20>)
 800f0da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f0de:	bf00      	nop
 800f0e0:	0800f1f1 	.word	0x0800f1f1
 800f0e4:	0800f1f1 	.word	0x0800f1f1
 800f0e8:	0800f1f1 	.word	0x0800f1f1
 800f0ec:	0800f1f1 	.word	0x0800f1f1
 800f0f0:	0800f1f1 	.word	0x0800f1f1
 800f0f4:	0800f1f1 	.word	0x0800f1f1
 800f0f8:	0800f1f1 	.word	0x0800f1f1
 800f0fc:	0800f1f1 	.word	0x0800f1f1
 800f100:	0800f1f1 	.word	0x0800f1f1
 800f104:	0800f1f1 	.word	0x0800f1f1
 800f108:	0800f1f1 	.word	0x0800f1f1
 800f10c:	0800f1f1 	.word	0x0800f1f1
 800f110:	0800f1f1 	.word	0x0800f1f1
 800f114:	0800f1f1 	.word	0x0800f1f1
 800f118:	0800f1f1 	.word	0x0800f1f1
 800f11c:	0800f1f1 	.word	0x0800f1f1
 800f120:	0800f1f1 	.word	0x0800f1f1
 800f124:	0800f1f1 	.word	0x0800f1f1
 800f128:	0800f1f1 	.word	0x0800f1f1
 800f12c:	0800f1f1 	.word	0x0800f1f1
 800f130:	0800f1f1 	.word	0x0800f1f1
 800f134:	0800f1f1 	.word	0x0800f1f1
 800f138:	0800f1f1 	.word	0x0800f1f1
 800f13c:	0800f1f1 	.word	0x0800f1f1
 800f140:	0800f1f1 	.word	0x0800f1f1
 800f144:	0800f1f1 	.word	0x0800f1f1
 800f148:	0800f1f1 	.word	0x0800f1f1
 800f14c:	0800f1f1 	.word	0x0800f1f1
 800f150:	0800f1f1 	.word	0x0800f1f1
 800f154:	0800f1f1 	.word	0x0800f1f1
 800f158:	0800f1f1 	.word	0x0800f1f1
 800f15c:	0800f1f1 	.word	0x0800f1f1
 800f160:	0800f171 	.word	0x0800f171
 800f164:	0800f1ab 	.word	0x0800f1ab
 800f168:	0800f1f1 	.word	0x0800f1f1
 800f16c:	0800f1f1 	.word	0x0800f1f1
 800f170:	683b      	ldr	r3, [r7, #0]
 800f172:	781a      	ldrb	r2, [r3, #0]
 800f174:	4b22      	ldr	r3, [pc, #136]	; (800f200 <CDC_Control_FS+0x140>)
 800f176:	701a      	strb	r2, [r3, #0]
 800f178:	683b      	ldr	r3, [r7, #0]
 800f17a:	785a      	ldrb	r2, [r3, #1]
 800f17c:	4b20      	ldr	r3, [pc, #128]	; (800f200 <CDC_Control_FS+0x140>)
 800f17e:	705a      	strb	r2, [r3, #1]
 800f180:	683b      	ldr	r3, [r7, #0]
 800f182:	789a      	ldrb	r2, [r3, #2]
 800f184:	4b1e      	ldr	r3, [pc, #120]	; (800f200 <CDC_Control_FS+0x140>)
 800f186:	709a      	strb	r2, [r3, #2]
 800f188:	683b      	ldr	r3, [r7, #0]
 800f18a:	78da      	ldrb	r2, [r3, #3]
 800f18c:	4b1c      	ldr	r3, [pc, #112]	; (800f200 <CDC_Control_FS+0x140>)
 800f18e:	70da      	strb	r2, [r3, #3]
 800f190:	683b      	ldr	r3, [r7, #0]
 800f192:	791a      	ldrb	r2, [r3, #4]
 800f194:	4b1a      	ldr	r3, [pc, #104]	; (800f200 <CDC_Control_FS+0x140>)
 800f196:	711a      	strb	r2, [r3, #4]
 800f198:	683b      	ldr	r3, [r7, #0]
 800f19a:	795a      	ldrb	r2, [r3, #5]
 800f19c:	4b18      	ldr	r3, [pc, #96]	; (800f200 <CDC_Control_FS+0x140>)
 800f19e:	715a      	strb	r2, [r3, #5]
 800f1a0:	683b      	ldr	r3, [r7, #0]
 800f1a2:	799a      	ldrb	r2, [r3, #6]
 800f1a4:	4b16      	ldr	r3, [pc, #88]	; (800f200 <CDC_Control_FS+0x140>)
 800f1a6:	719a      	strb	r2, [r3, #6]
 800f1a8:	e023      	b.n	800f1f2 <CDC_Control_FS+0x132>
 800f1aa:	4b15      	ldr	r3, [pc, #84]	; (800f200 <CDC_Control_FS+0x140>)
 800f1ac:	781a      	ldrb	r2, [r3, #0]
 800f1ae:	683b      	ldr	r3, [r7, #0]
 800f1b0:	701a      	strb	r2, [r3, #0]
 800f1b2:	683b      	ldr	r3, [r7, #0]
 800f1b4:	3301      	adds	r3, #1
 800f1b6:	4a12      	ldr	r2, [pc, #72]	; (800f200 <CDC_Control_FS+0x140>)
 800f1b8:	7852      	ldrb	r2, [r2, #1]
 800f1ba:	701a      	strb	r2, [r3, #0]
 800f1bc:	683b      	ldr	r3, [r7, #0]
 800f1be:	3302      	adds	r3, #2
 800f1c0:	4a0f      	ldr	r2, [pc, #60]	; (800f200 <CDC_Control_FS+0x140>)
 800f1c2:	7892      	ldrb	r2, [r2, #2]
 800f1c4:	701a      	strb	r2, [r3, #0]
 800f1c6:	683b      	ldr	r3, [r7, #0]
 800f1c8:	3303      	adds	r3, #3
 800f1ca:	4a0d      	ldr	r2, [pc, #52]	; (800f200 <CDC_Control_FS+0x140>)
 800f1cc:	78d2      	ldrb	r2, [r2, #3]
 800f1ce:	701a      	strb	r2, [r3, #0]
 800f1d0:	683b      	ldr	r3, [r7, #0]
 800f1d2:	3304      	adds	r3, #4
 800f1d4:	4a0a      	ldr	r2, [pc, #40]	; (800f200 <CDC_Control_FS+0x140>)
 800f1d6:	7912      	ldrb	r2, [r2, #4]
 800f1d8:	701a      	strb	r2, [r3, #0]
 800f1da:	683b      	ldr	r3, [r7, #0]
 800f1dc:	3305      	adds	r3, #5
 800f1de:	4a08      	ldr	r2, [pc, #32]	; (800f200 <CDC_Control_FS+0x140>)
 800f1e0:	7952      	ldrb	r2, [r2, #5]
 800f1e2:	701a      	strb	r2, [r3, #0]
 800f1e4:	683b      	ldr	r3, [r7, #0]
 800f1e6:	3306      	adds	r3, #6
 800f1e8:	4a05      	ldr	r2, [pc, #20]	; (800f200 <CDC_Control_FS+0x140>)
 800f1ea:	7992      	ldrb	r2, [r2, #6]
 800f1ec:	701a      	strb	r2, [r3, #0]
 800f1ee:	e000      	b.n	800f1f2 <CDC_Control_FS+0x132>
 800f1f0:	bf00      	nop
 800f1f2:	2300      	movs	r3, #0
 800f1f4:	4618      	mov	r0, r3
 800f1f6:	370c      	adds	r7, #12
 800f1f8:	46bd      	mov	sp, r7
 800f1fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1fe:	4770      	bx	lr
 800f200:	20000f1c 	.word	0x20000f1c

0800f204 <CDC_Receive_FS>:
 800f204:	b580      	push	{r7, lr}
 800f206:	b082      	sub	sp, #8
 800f208:	af00      	add	r7, sp, #0
 800f20a:	6078      	str	r0, [r7, #4]
 800f20c:	6039      	str	r1, [r7, #0]
 800f20e:	6879      	ldr	r1, [r7, #4]
 800f210:	4805      	ldr	r0, [pc, #20]	; (800f228 <CDC_Receive_FS+0x24>)
 800f212:	f7fe fbc3 	bl	800d99c <USBD_CDC_SetRxBuffer>
 800f216:	4804      	ldr	r0, [pc, #16]	; (800f228 <CDC_Receive_FS+0x24>)
 800f218:	f7fe fbde 	bl	800d9d8 <USBD_CDC_ReceivePacket>
 800f21c:	2300      	movs	r3, #0
 800f21e:	4618      	mov	r0, r3
 800f220:	3708      	adds	r7, #8
 800f222:	46bd      	mov	sp, r7
 800f224:	bd80      	pop	{r7, pc}
 800f226:	bf00      	nop
 800f228:	20000c40 	.word	0x20000c40

0800f22c <CDC_TransmitCplt_FS>:
 800f22c:	b480      	push	{r7}
 800f22e:	b087      	sub	sp, #28
 800f230:	af00      	add	r7, sp, #0
 800f232:	60f8      	str	r0, [r7, #12]
 800f234:	60b9      	str	r1, [r7, #8]
 800f236:	4613      	mov	r3, r2
 800f238:	71fb      	strb	r3, [r7, #7]
 800f23a:	2300      	movs	r3, #0
 800f23c:	75fb      	strb	r3, [r7, #23]
 800f23e:	f997 3017 	ldrsb.w	r3, [r7, #23]
 800f242:	4618      	mov	r0, r3
 800f244:	371c      	adds	r7, #28
 800f246:	46bd      	mov	sp, r7
 800f248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f24c:	4770      	bx	lr
	...

0800f250 <USBD_FS_DeviceDescriptor>:
 800f250:	b480      	push	{r7}
 800f252:	b083      	sub	sp, #12
 800f254:	af00      	add	r7, sp, #0
 800f256:	4603      	mov	r3, r0
 800f258:	6039      	str	r1, [r7, #0]
 800f25a:	71fb      	strb	r3, [r7, #7]
 800f25c:	683b      	ldr	r3, [r7, #0]
 800f25e:	2212      	movs	r2, #18
 800f260:	801a      	strh	r2, [r3, #0]
 800f262:	4b03      	ldr	r3, [pc, #12]	; (800f270 <USBD_FS_DeviceDescriptor+0x20>)
 800f264:	4618      	mov	r0, r3
 800f266:	370c      	adds	r7, #12
 800f268:	46bd      	mov	sp, r7
 800f26a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f26e:	4770      	bx	lr
 800f270:	200000ec 	.word	0x200000ec

0800f274 <USBD_FS_LangIDStrDescriptor>:
 800f274:	b480      	push	{r7}
 800f276:	b083      	sub	sp, #12
 800f278:	af00      	add	r7, sp, #0
 800f27a:	4603      	mov	r3, r0
 800f27c:	6039      	str	r1, [r7, #0]
 800f27e:	71fb      	strb	r3, [r7, #7]
 800f280:	683b      	ldr	r3, [r7, #0]
 800f282:	2204      	movs	r2, #4
 800f284:	801a      	strh	r2, [r3, #0]
 800f286:	4b03      	ldr	r3, [pc, #12]	; (800f294 <USBD_FS_LangIDStrDescriptor+0x20>)
 800f288:	4618      	mov	r0, r3
 800f28a:	370c      	adds	r7, #12
 800f28c:	46bd      	mov	sp, r7
 800f28e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f292:	4770      	bx	lr
 800f294:	20000100 	.word	0x20000100

0800f298 <USBD_FS_ProductStrDescriptor>:
 800f298:	b580      	push	{r7, lr}
 800f29a:	b082      	sub	sp, #8
 800f29c:	af00      	add	r7, sp, #0
 800f29e:	4603      	mov	r3, r0
 800f2a0:	6039      	str	r1, [r7, #0]
 800f2a2:	71fb      	strb	r3, [r7, #7]
 800f2a4:	79fb      	ldrb	r3, [r7, #7]
 800f2a6:	2b00      	cmp	r3, #0
 800f2a8:	d105      	bne.n	800f2b6 <USBD_FS_ProductStrDescriptor+0x1e>
 800f2aa:	683a      	ldr	r2, [r7, #0]
 800f2ac:	4907      	ldr	r1, [pc, #28]	; (800f2cc <USBD_FS_ProductStrDescriptor+0x34>)
 800f2ae:	4808      	ldr	r0, [pc, #32]	; (800f2d0 <USBD_FS_ProductStrDescriptor+0x38>)
 800f2b0:	f7ff fdda 	bl	800ee68 <USBD_GetString>
 800f2b4:	e004      	b.n	800f2c0 <USBD_FS_ProductStrDescriptor+0x28>
 800f2b6:	683a      	ldr	r2, [r7, #0]
 800f2b8:	4904      	ldr	r1, [pc, #16]	; (800f2cc <USBD_FS_ProductStrDescriptor+0x34>)
 800f2ba:	4805      	ldr	r0, [pc, #20]	; (800f2d0 <USBD_FS_ProductStrDescriptor+0x38>)
 800f2bc:	f7ff fdd4 	bl	800ee68 <USBD_GetString>
 800f2c0:	4b02      	ldr	r3, [pc, #8]	; (800f2cc <USBD_FS_ProductStrDescriptor+0x34>)
 800f2c2:	4618      	mov	r0, r3
 800f2c4:	3708      	adds	r7, #8
 800f2c6:	46bd      	mov	sp, r7
 800f2c8:	bd80      	pop	{r7, pc}
 800f2ca:	bf00      	nop
 800f2cc:	20001f24 	.word	0x20001f24
 800f2d0:	08014264 	.word	0x08014264

0800f2d4 <USBD_FS_ManufacturerStrDescriptor>:
 800f2d4:	b580      	push	{r7, lr}
 800f2d6:	b082      	sub	sp, #8
 800f2d8:	af00      	add	r7, sp, #0
 800f2da:	4603      	mov	r3, r0
 800f2dc:	6039      	str	r1, [r7, #0]
 800f2de:	71fb      	strb	r3, [r7, #7]
 800f2e0:	683a      	ldr	r2, [r7, #0]
 800f2e2:	4904      	ldr	r1, [pc, #16]	; (800f2f4 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 800f2e4:	4804      	ldr	r0, [pc, #16]	; (800f2f8 <USBD_FS_ManufacturerStrDescriptor+0x24>)
 800f2e6:	f7ff fdbf 	bl	800ee68 <USBD_GetString>
 800f2ea:	4b02      	ldr	r3, [pc, #8]	; (800f2f4 <USBD_FS_ManufacturerStrDescriptor+0x20>)
 800f2ec:	4618      	mov	r0, r3
 800f2ee:	3708      	adds	r7, #8
 800f2f0:	46bd      	mov	sp, r7
 800f2f2:	bd80      	pop	{r7, pc}
 800f2f4:	20001f24 	.word	0x20001f24
 800f2f8:	0801427c 	.word	0x0801427c

0800f2fc <USBD_FS_SerialStrDescriptor>:
 800f2fc:	b580      	push	{r7, lr}
 800f2fe:	b082      	sub	sp, #8
 800f300:	af00      	add	r7, sp, #0
 800f302:	4603      	mov	r3, r0
 800f304:	6039      	str	r1, [r7, #0]
 800f306:	71fb      	strb	r3, [r7, #7]
 800f308:	683b      	ldr	r3, [r7, #0]
 800f30a:	221a      	movs	r2, #26
 800f30c:	801a      	strh	r2, [r3, #0]
 800f30e:	f000 f843 	bl	800f398 <Get_SerialNum>
 800f312:	4b02      	ldr	r3, [pc, #8]	; (800f31c <USBD_FS_SerialStrDescriptor+0x20>)
 800f314:	4618      	mov	r0, r3
 800f316:	3708      	adds	r7, #8
 800f318:	46bd      	mov	sp, r7
 800f31a:	bd80      	pop	{r7, pc}
 800f31c:	20000104 	.word	0x20000104

0800f320 <USBD_FS_ConfigStrDescriptor>:
 800f320:	b580      	push	{r7, lr}
 800f322:	b082      	sub	sp, #8
 800f324:	af00      	add	r7, sp, #0
 800f326:	4603      	mov	r3, r0
 800f328:	6039      	str	r1, [r7, #0]
 800f32a:	71fb      	strb	r3, [r7, #7]
 800f32c:	79fb      	ldrb	r3, [r7, #7]
 800f32e:	2b00      	cmp	r3, #0
 800f330:	d105      	bne.n	800f33e <USBD_FS_ConfigStrDescriptor+0x1e>
 800f332:	683a      	ldr	r2, [r7, #0]
 800f334:	4907      	ldr	r1, [pc, #28]	; (800f354 <USBD_FS_ConfigStrDescriptor+0x34>)
 800f336:	4808      	ldr	r0, [pc, #32]	; (800f358 <USBD_FS_ConfigStrDescriptor+0x38>)
 800f338:	f7ff fd96 	bl	800ee68 <USBD_GetString>
 800f33c:	e004      	b.n	800f348 <USBD_FS_ConfigStrDescriptor+0x28>
 800f33e:	683a      	ldr	r2, [r7, #0]
 800f340:	4904      	ldr	r1, [pc, #16]	; (800f354 <USBD_FS_ConfigStrDescriptor+0x34>)
 800f342:	4805      	ldr	r0, [pc, #20]	; (800f358 <USBD_FS_ConfigStrDescriptor+0x38>)
 800f344:	f7ff fd90 	bl	800ee68 <USBD_GetString>
 800f348:	4b02      	ldr	r3, [pc, #8]	; (800f354 <USBD_FS_ConfigStrDescriptor+0x34>)
 800f34a:	4618      	mov	r0, r3
 800f34c:	3708      	adds	r7, #8
 800f34e:	46bd      	mov	sp, r7
 800f350:	bd80      	pop	{r7, pc}
 800f352:	bf00      	nop
 800f354:	20001f24 	.word	0x20001f24
 800f358:	08014290 	.word	0x08014290

0800f35c <USBD_FS_InterfaceStrDescriptor>:
 800f35c:	b580      	push	{r7, lr}
 800f35e:	b082      	sub	sp, #8
 800f360:	af00      	add	r7, sp, #0
 800f362:	4603      	mov	r3, r0
 800f364:	6039      	str	r1, [r7, #0]
 800f366:	71fb      	strb	r3, [r7, #7]
 800f368:	79fb      	ldrb	r3, [r7, #7]
 800f36a:	2b00      	cmp	r3, #0
 800f36c:	d105      	bne.n	800f37a <USBD_FS_InterfaceStrDescriptor+0x1e>
 800f36e:	683a      	ldr	r2, [r7, #0]
 800f370:	4907      	ldr	r1, [pc, #28]	; (800f390 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800f372:	4808      	ldr	r0, [pc, #32]	; (800f394 <USBD_FS_InterfaceStrDescriptor+0x38>)
 800f374:	f7ff fd78 	bl	800ee68 <USBD_GetString>
 800f378:	e004      	b.n	800f384 <USBD_FS_InterfaceStrDescriptor+0x28>
 800f37a:	683a      	ldr	r2, [r7, #0]
 800f37c:	4904      	ldr	r1, [pc, #16]	; (800f390 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800f37e:	4805      	ldr	r0, [pc, #20]	; (800f394 <USBD_FS_InterfaceStrDescriptor+0x38>)
 800f380:	f7ff fd72 	bl	800ee68 <USBD_GetString>
 800f384:	4b02      	ldr	r3, [pc, #8]	; (800f390 <USBD_FS_InterfaceStrDescriptor+0x34>)
 800f386:	4618      	mov	r0, r3
 800f388:	3708      	adds	r7, #8
 800f38a:	46bd      	mov	sp, r7
 800f38c:	bd80      	pop	{r7, pc}
 800f38e:	bf00      	nop
 800f390:	20001f24 	.word	0x20001f24
 800f394:	0801429c 	.word	0x0801429c

0800f398 <Get_SerialNum>:
 800f398:	b580      	push	{r7, lr}
 800f39a:	b084      	sub	sp, #16
 800f39c:	af00      	add	r7, sp, #0
 800f39e:	4b0f      	ldr	r3, [pc, #60]	; (800f3dc <Get_SerialNum+0x44>)
 800f3a0:	681b      	ldr	r3, [r3, #0]
 800f3a2:	60fb      	str	r3, [r7, #12]
 800f3a4:	4b0e      	ldr	r3, [pc, #56]	; (800f3e0 <Get_SerialNum+0x48>)
 800f3a6:	681b      	ldr	r3, [r3, #0]
 800f3a8:	60bb      	str	r3, [r7, #8]
 800f3aa:	4b0e      	ldr	r3, [pc, #56]	; (800f3e4 <Get_SerialNum+0x4c>)
 800f3ac:	681b      	ldr	r3, [r3, #0]
 800f3ae:	607b      	str	r3, [r7, #4]
 800f3b0:	68fa      	ldr	r2, [r7, #12]
 800f3b2:	687b      	ldr	r3, [r7, #4]
 800f3b4:	4413      	add	r3, r2
 800f3b6:	60fb      	str	r3, [r7, #12]
 800f3b8:	68fb      	ldr	r3, [r7, #12]
 800f3ba:	2b00      	cmp	r3, #0
 800f3bc:	d009      	beq.n	800f3d2 <Get_SerialNum+0x3a>
 800f3be:	2208      	movs	r2, #8
 800f3c0:	4909      	ldr	r1, [pc, #36]	; (800f3e8 <Get_SerialNum+0x50>)
 800f3c2:	68f8      	ldr	r0, [r7, #12]
 800f3c4:	f000 f814 	bl	800f3f0 <IntToUnicode>
 800f3c8:	2204      	movs	r2, #4
 800f3ca:	4908      	ldr	r1, [pc, #32]	; (800f3ec <Get_SerialNum+0x54>)
 800f3cc:	68b8      	ldr	r0, [r7, #8]
 800f3ce:	f000 f80f 	bl	800f3f0 <IntToUnicode>
 800f3d2:	bf00      	nop
 800f3d4:	3710      	adds	r7, #16
 800f3d6:	46bd      	mov	sp, r7
 800f3d8:	bd80      	pop	{r7, pc}
 800f3da:	bf00      	nop
 800f3dc:	1fff7a10 	.word	0x1fff7a10
 800f3e0:	1fff7a14 	.word	0x1fff7a14
 800f3e4:	1fff7a18 	.word	0x1fff7a18
 800f3e8:	20000106 	.word	0x20000106
 800f3ec:	20000116 	.word	0x20000116

0800f3f0 <IntToUnicode>:
 800f3f0:	b480      	push	{r7}
 800f3f2:	b087      	sub	sp, #28
 800f3f4:	af00      	add	r7, sp, #0
 800f3f6:	60f8      	str	r0, [r7, #12]
 800f3f8:	60b9      	str	r1, [r7, #8]
 800f3fa:	4613      	mov	r3, r2
 800f3fc:	71fb      	strb	r3, [r7, #7]
 800f3fe:	2300      	movs	r3, #0
 800f400:	75fb      	strb	r3, [r7, #23]
 800f402:	2300      	movs	r3, #0
 800f404:	75fb      	strb	r3, [r7, #23]
 800f406:	e027      	b.n	800f458 <IntToUnicode+0x68>
 800f408:	68fb      	ldr	r3, [r7, #12]
 800f40a:	0f1b      	lsrs	r3, r3, #28
 800f40c:	2b09      	cmp	r3, #9
 800f40e:	d80b      	bhi.n	800f428 <IntToUnicode+0x38>
 800f410:	68fb      	ldr	r3, [r7, #12]
 800f412:	0f1b      	lsrs	r3, r3, #28
 800f414:	b2da      	uxtb	r2, r3
 800f416:	7dfb      	ldrb	r3, [r7, #23]
 800f418:	005b      	lsls	r3, r3, #1
 800f41a:	4619      	mov	r1, r3
 800f41c:	68bb      	ldr	r3, [r7, #8]
 800f41e:	440b      	add	r3, r1
 800f420:	3230      	adds	r2, #48	; 0x30
 800f422:	b2d2      	uxtb	r2, r2
 800f424:	701a      	strb	r2, [r3, #0]
 800f426:	e00a      	b.n	800f43e <IntToUnicode+0x4e>
 800f428:	68fb      	ldr	r3, [r7, #12]
 800f42a:	0f1b      	lsrs	r3, r3, #28
 800f42c:	b2da      	uxtb	r2, r3
 800f42e:	7dfb      	ldrb	r3, [r7, #23]
 800f430:	005b      	lsls	r3, r3, #1
 800f432:	4619      	mov	r1, r3
 800f434:	68bb      	ldr	r3, [r7, #8]
 800f436:	440b      	add	r3, r1
 800f438:	3237      	adds	r2, #55	; 0x37
 800f43a:	b2d2      	uxtb	r2, r2
 800f43c:	701a      	strb	r2, [r3, #0]
 800f43e:	68fb      	ldr	r3, [r7, #12]
 800f440:	011b      	lsls	r3, r3, #4
 800f442:	60fb      	str	r3, [r7, #12]
 800f444:	7dfb      	ldrb	r3, [r7, #23]
 800f446:	005b      	lsls	r3, r3, #1
 800f448:	3301      	adds	r3, #1
 800f44a:	68ba      	ldr	r2, [r7, #8]
 800f44c:	4413      	add	r3, r2
 800f44e:	2200      	movs	r2, #0
 800f450:	701a      	strb	r2, [r3, #0]
 800f452:	7dfb      	ldrb	r3, [r7, #23]
 800f454:	3301      	adds	r3, #1
 800f456:	75fb      	strb	r3, [r7, #23]
 800f458:	7dfa      	ldrb	r2, [r7, #23]
 800f45a:	79fb      	ldrb	r3, [r7, #7]
 800f45c:	429a      	cmp	r2, r3
 800f45e:	d3d3      	bcc.n	800f408 <IntToUnicode+0x18>
 800f460:	bf00      	nop
 800f462:	bf00      	nop
 800f464:	371c      	adds	r7, #28
 800f466:	46bd      	mov	sp, r7
 800f468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f46c:	4770      	bx	lr
	...

0800f470 <HAL_PCD_MspInit>:
 800f470:	b580      	push	{r7, lr}
 800f472:	b08a      	sub	sp, #40	; 0x28
 800f474:	af00      	add	r7, sp, #0
 800f476:	6078      	str	r0, [r7, #4]
 800f478:	f107 0314 	add.w	r3, r7, #20
 800f47c:	2200      	movs	r2, #0
 800f47e:	601a      	str	r2, [r3, #0]
 800f480:	605a      	str	r2, [r3, #4]
 800f482:	609a      	str	r2, [r3, #8]
 800f484:	60da      	str	r2, [r3, #12]
 800f486:	611a      	str	r2, [r3, #16]
 800f488:	687b      	ldr	r3, [r7, #4]
 800f48a:	681b      	ldr	r3, [r3, #0]
 800f48c:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 800f490:	d13a      	bne.n	800f508 <HAL_PCD_MspInit+0x98>
 800f492:	2300      	movs	r3, #0
 800f494:	613b      	str	r3, [r7, #16]
 800f496:	4b1e      	ldr	r3, [pc, #120]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f498:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f49a:	4a1d      	ldr	r2, [pc, #116]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f49c:	f043 0301 	orr.w	r3, r3, #1
 800f4a0:	6313      	str	r3, [r2, #48]	; 0x30
 800f4a2:	4b1b      	ldr	r3, [pc, #108]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f4a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f4a6:	f003 0301 	and.w	r3, r3, #1
 800f4aa:	613b      	str	r3, [r7, #16]
 800f4ac:	693b      	ldr	r3, [r7, #16]
 800f4ae:	f44f 53c0 	mov.w	r3, #6144	; 0x1800
 800f4b2:	617b      	str	r3, [r7, #20]
 800f4b4:	2302      	movs	r3, #2
 800f4b6:	61bb      	str	r3, [r7, #24]
 800f4b8:	2300      	movs	r3, #0
 800f4ba:	61fb      	str	r3, [r7, #28]
 800f4bc:	2303      	movs	r3, #3
 800f4be:	623b      	str	r3, [r7, #32]
 800f4c0:	230a      	movs	r3, #10
 800f4c2:	627b      	str	r3, [r7, #36]	; 0x24
 800f4c4:	f107 0314 	add.w	r3, r7, #20
 800f4c8:	4619      	mov	r1, r3
 800f4ca:	4812      	ldr	r0, [pc, #72]	; (800f514 <HAL_PCD_MspInit+0xa4>)
 800f4cc:	f7f9 fe12 	bl	80090f4 <HAL_GPIO_Init>
 800f4d0:	4b0f      	ldr	r3, [pc, #60]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f4d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800f4d4:	4a0e      	ldr	r2, [pc, #56]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f4d6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800f4da:	6353      	str	r3, [r2, #52]	; 0x34
 800f4dc:	2300      	movs	r3, #0
 800f4de:	60fb      	str	r3, [r7, #12]
 800f4e0:	4b0b      	ldr	r3, [pc, #44]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f4e2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f4e4:	4a0a      	ldr	r2, [pc, #40]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f4e6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800f4ea:	6453      	str	r3, [r2, #68]	; 0x44
 800f4ec:	4b08      	ldr	r3, [pc, #32]	; (800f510 <HAL_PCD_MspInit+0xa0>)
 800f4ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f4f0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800f4f4:	60fb      	str	r3, [r7, #12]
 800f4f6:	68fb      	ldr	r3, [r7, #12]
 800f4f8:	2200      	movs	r2, #0
 800f4fa:	2100      	movs	r1, #0
 800f4fc:	2043      	movs	r0, #67	; 0x43
 800f4fe:	f7f9 fa52 	bl	80089a6 <HAL_NVIC_SetPriority>
 800f502:	2043      	movs	r0, #67	; 0x43
 800f504:	f7f9 fa6b 	bl	80089de <HAL_NVIC_EnableIRQ>
 800f508:	bf00      	nop
 800f50a:	3728      	adds	r7, #40	; 0x28
 800f50c:	46bd      	mov	sp, r7
 800f50e:	bd80      	pop	{r7, pc}
 800f510:	40023800 	.word	0x40023800
 800f514:	40020000 	.word	0x40020000

0800f518 <HAL_PCD_SetupStageCallback>:
 800f518:	b580      	push	{r7, lr}
 800f51a:	b082      	sub	sp, #8
 800f51c:	af00      	add	r7, sp, #0
 800f51e:	6078      	str	r0, [r7, #4]
 800f520:	687b      	ldr	r3, [r7, #4]
 800f522:	f8d3 2508 	ldr.w	r2, [r3, #1288]	; 0x508
 800f526:	687b      	ldr	r3, [r7, #4]
 800f528:	f203 43c4 	addw	r3, r3, #1220	; 0x4c4
 800f52c:	4619      	mov	r1, r3
 800f52e:	4610      	mov	r0, r2
 800f530:	f7fe fb3b 	bl	800dbaa <USBD_LL_SetupStage>
 800f534:	bf00      	nop
 800f536:	3708      	adds	r7, #8
 800f538:	46bd      	mov	sp, r7
 800f53a:	bd80      	pop	{r7, pc}

0800f53c <HAL_PCD_DataOutStageCallback>:
 800f53c:	b580      	push	{r7, lr}
 800f53e:	b082      	sub	sp, #8
 800f540:	af00      	add	r7, sp, #0
 800f542:	6078      	str	r0, [r7, #4]
 800f544:	460b      	mov	r3, r1
 800f546:	70fb      	strb	r3, [r7, #3]
 800f548:	687b      	ldr	r3, [r7, #4]
 800f54a:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 800f54e:	78fa      	ldrb	r2, [r7, #3]
 800f550:	6879      	ldr	r1, [r7, #4]
 800f552:	4613      	mov	r3, r2
 800f554:	00db      	lsls	r3, r3, #3
 800f556:	4413      	add	r3, r2
 800f558:	009b      	lsls	r3, r3, #2
 800f55a:	440b      	add	r3, r1
 800f55c:	f503 7323 	add.w	r3, r3, #652	; 0x28c
 800f560:	681a      	ldr	r2, [r3, #0]
 800f562:	78fb      	ldrb	r3, [r7, #3]
 800f564:	4619      	mov	r1, r3
 800f566:	f7fe fb75 	bl	800dc54 <USBD_LL_DataOutStage>
 800f56a:	bf00      	nop
 800f56c:	3708      	adds	r7, #8
 800f56e:	46bd      	mov	sp, r7
 800f570:	bd80      	pop	{r7, pc}

0800f572 <HAL_PCD_DataInStageCallback>:
 800f572:	b580      	push	{r7, lr}
 800f574:	b082      	sub	sp, #8
 800f576:	af00      	add	r7, sp, #0
 800f578:	6078      	str	r0, [r7, #4]
 800f57a:	460b      	mov	r3, r1
 800f57c:	70fb      	strb	r3, [r7, #3]
 800f57e:	687b      	ldr	r3, [r7, #4]
 800f580:	f8d3 0508 	ldr.w	r0, [r3, #1288]	; 0x508
 800f584:	78fa      	ldrb	r2, [r7, #3]
 800f586:	6879      	ldr	r1, [r7, #4]
 800f588:	4613      	mov	r3, r2
 800f58a:	00db      	lsls	r3, r3, #3
 800f58c:	4413      	add	r3, r2
 800f58e:	009b      	lsls	r3, r3, #2
 800f590:	440b      	add	r3, r1
 800f592:	334c      	adds	r3, #76	; 0x4c
 800f594:	681a      	ldr	r2, [r3, #0]
 800f596:	78fb      	ldrb	r3, [r7, #3]
 800f598:	4619      	mov	r1, r3
 800f59a:	f7fe fc0e 	bl	800ddba <USBD_LL_DataInStage>
 800f59e:	bf00      	nop
 800f5a0:	3708      	adds	r7, #8
 800f5a2:	46bd      	mov	sp, r7
 800f5a4:	bd80      	pop	{r7, pc}

0800f5a6 <HAL_PCD_SOFCallback>:
 800f5a6:	b580      	push	{r7, lr}
 800f5a8:	b082      	sub	sp, #8
 800f5aa:	af00      	add	r7, sp, #0
 800f5ac:	6078      	str	r0, [r7, #4]
 800f5ae:	687b      	ldr	r3, [r7, #4]
 800f5b0:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f5b4:	4618      	mov	r0, r3
 800f5b6:	f7fe fd42 	bl	800e03e <USBD_LL_SOF>
 800f5ba:	bf00      	nop
 800f5bc:	3708      	adds	r7, #8
 800f5be:	46bd      	mov	sp, r7
 800f5c0:	bd80      	pop	{r7, pc}

0800f5c2 <HAL_PCD_ResetCallback>:
 800f5c2:	b580      	push	{r7, lr}
 800f5c4:	b084      	sub	sp, #16
 800f5c6:	af00      	add	r7, sp, #0
 800f5c8:	6078      	str	r0, [r7, #4]
 800f5ca:	2301      	movs	r3, #1
 800f5cc:	73fb      	strb	r3, [r7, #15]
 800f5ce:	687b      	ldr	r3, [r7, #4]
 800f5d0:	68db      	ldr	r3, [r3, #12]
 800f5d2:	2b00      	cmp	r3, #0
 800f5d4:	d102      	bne.n	800f5dc <HAL_PCD_ResetCallback+0x1a>
 800f5d6:	2300      	movs	r3, #0
 800f5d8:	73fb      	strb	r3, [r7, #15]
 800f5da:	e008      	b.n	800f5ee <HAL_PCD_ResetCallback+0x2c>
 800f5dc:	687b      	ldr	r3, [r7, #4]
 800f5de:	68db      	ldr	r3, [r3, #12]
 800f5e0:	2b02      	cmp	r3, #2
 800f5e2:	d102      	bne.n	800f5ea <HAL_PCD_ResetCallback+0x28>
 800f5e4:	2301      	movs	r3, #1
 800f5e6:	73fb      	strb	r3, [r7, #15]
 800f5e8:	e001      	b.n	800f5ee <HAL_PCD_ResetCallback+0x2c>
 800f5ea:	f7f7 fa99 	bl	8006b20 <Error_Handler>
 800f5ee:	687b      	ldr	r3, [r7, #4]
 800f5f0:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f5f4:	7bfa      	ldrb	r2, [r7, #15]
 800f5f6:	4611      	mov	r1, r2
 800f5f8:	4618      	mov	r0, r3
 800f5fa:	f7fe fce2 	bl	800dfc2 <USBD_LL_SetSpeed>
 800f5fe:	687b      	ldr	r3, [r7, #4]
 800f600:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f604:	4618      	mov	r0, r3
 800f606:	f7fe fc8a 	bl	800df1e <USBD_LL_Reset>
 800f60a:	bf00      	nop
 800f60c:	3710      	adds	r7, #16
 800f60e:	46bd      	mov	sp, r7
 800f610:	bd80      	pop	{r7, pc}
	...

0800f614 <HAL_PCD_SuspendCallback>:
 800f614:	b580      	push	{r7, lr}
 800f616:	b082      	sub	sp, #8
 800f618:	af00      	add	r7, sp, #0
 800f61a:	6078      	str	r0, [r7, #4]
 800f61c:	687b      	ldr	r3, [r7, #4]
 800f61e:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f622:	4618      	mov	r0, r3
 800f624:	f7fe fcdd 	bl	800dfe2 <USBD_LL_Suspend>
 800f628:	687b      	ldr	r3, [r7, #4]
 800f62a:	681b      	ldr	r3, [r3, #0]
 800f62c:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800f630:	681b      	ldr	r3, [r3, #0]
 800f632:	687a      	ldr	r2, [r7, #4]
 800f634:	6812      	ldr	r2, [r2, #0]
 800f636:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 800f63a:	f043 0301 	orr.w	r3, r3, #1
 800f63e:	6013      	str	r3, [r2, #0]
 800f640:	687b      	ldr	r3, [r7, #4]
 800f642:	6a1b      	ldr	r3, [r3, #32]
 800f644:	2b00      	cmp	r3, #0
 800f646:	d005      	beq.n	800f654 <HAL_PCD_SuspendCallback+0x40>
 800f648:	4b04      	ldr	r3, [pc, #16]	; (800f65c <HAL_PCD_SuspendCallback+0x48>)
 800f64a:	691b      	ldr	r3, [r3, #16]
 800f64c:	4a03      	ldr	r2, [pc, #12]	; (800f65c <HAL_PCD_SuspendCallback+0x48>)
 800f64e:	f043 0306 	orr.w	r3, r3, #6
 800f652:	6113      	str	r3, [r2, #16]
 800f654:	bf00      	nop
 800f656:	3708      	adds	r7, #8
 800f658:	46bd      	mov	sp, r7
 800f65a:	bd80      	pop	{r7, pc}
 800f65c:	e000ed00 	.word	0xe000ed00

0800f660 <HAL_PCD_ResumeCallback>:
 800f660:	b580      	push	{r7, lr}
 800f662:	b082      	sub	sp, #8
 800f664:	af00      	add	r7, sp, #0
 800f666:	6078      	str	r0, [r7, #4]
 800f668:	687b      	ldr	r3, [r7, #4]
 800f66a:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f66e:	4618      	mov	r0, r3
 800f670:	f7fe fccd 	bl	800e00e <USBD_LL_Resume>
 800f674:	bf00      	nop
 800f676:	3708      	adds	r7, #8
 800f678:	46bd      	mov	sp, r7
 800f67a:	bd80      	pop	{r7, pc}

0800f67c <HAL_PCD_ISOOUTIncompleteCallback>:
 800f67c:	b580      	push	{r7, lr}
 800f67e:	b082      	sub	sp, #8
 800f680:	af00      	add	r7, sp, #0
 800f682:	6078      	str	r0, [r7, #4]
 800f684:	460b      	mov	r3, r1
 800f686:	70fb      	strb	r3, [r7, #3]
 800f688:	687b      	ldr	r3, [r7, #4]
 800f68a:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f68e:	78fa      	ldrb	r2, [r7, #3]
 800f690:	4611      	mov	r1, r2
 800f692:	4618      	mov	r0, r3
 800f694:	f7fe fd25 	bl	800e0e2 <USBD_LL_IsoOUTIncomplete>
 800f698:	bf00      	nop
 800f69a:	3708      	adds	r7, #8
 800f69c:	46bd      	mov	sp, r7
 800f69e:	bd80      	pop	{r7, pc}

0800f6a0 <HAL_PCD_ISOINIncompleteCallback>:
 800f6a0:	b580      	push	{r7, lr}
 800f6a2:	b082      	sub	sp, #8
 800f6a4:	af00      	add	r7, sp, #0
 800f6a6:	6078      	str	r0, [r7, #4]
 800f6a8:	460b      	mov	r3, r1
 800f6aa:	70fb      	strb	r3, [r7, #3]
 800f6ac:	687b      	ldr	r3, [r7, #4]
 800f6ae:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f6b2:	78fa      	ldrb	r2, [r7, #3]
 800f6b4:	4611      	mov	r1, r2
 800f6b6:	4618      	mov	r0, r3
 800f6b8:	f7fe fce1 	bl	800e07e <USBD_LL_IsoINIncomplete>
 800f6bc:	bf00      	nop
 800f6be:	3708      	adds	r7, #8
 800f6c0:	46bd      	mov	sp, r7
 800f6c2:	bd80      	pop	{r7, pc}

0800f6c4 <HAL_PCD_ConnectCallback>:
 800f6c4:	b580      	push	{r7, lr}
 800f6c6:	b082      	sub	sp, #8
 800f6c8:	af00      	add	r7, sp, #0
 800f6ca:	6078      	str	r0, [r7, #4]
 800f6cc:	687b      	ldr	r3, [r7, #4]
 800f6ce:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f6d2:	4618      	mov	r0, r3
 800f6d4:	f7fe fd37 	bl	800e146 <USBD_LL_DevConnected>
 800f6d8:	bf00      	nop
 800f6da:	3708      	adds	r7, #8
 800f6dc:	46bd      	mov	sp, r7
 800f6de:	bd80      	pop	{r7, pc}

0800f6e0 <HAL_PCD_DisconnectCallback>:
 800f6e0:	b580      	push	{r7, lr}
 800f6e2:	b082      	sub	sp, #8
 800f6e4:	af00      	add	r7, sp, #0
 800f6e6:	6078      	str	r0, [r7, #4]
 800f6e8:	687b      	ldr	r3, [r7, #4]
 800f6ea:	f8d3 3508 	ldr.w	r3, [r3, #1288]	; 0x508
 800f6ee:	4618      	mov	r0, r3
 800f6f0:	f7fe fd34 	bl	800e15c <USBD_LL_DevDisconnected>
 800f6f4:	bf00      	nop
 800f6f6:	3708      	adds	r7, #8
 800f6f8:	46bd      	mov	sp, r7
 800f6fa:	bd80      	pop	{r7, pc}

0800f6fc <USBD_LL_Init>:
 800f6fc:	b580      	push	{r7, lr}
 800f6fe:	b082      	sub	sp, #8
 800f700:	af00      	add	r7, sp, #0
 800f702:	6078      	str	r0, [r7, #4]
 800f704:	687b      	ldr	r3, [r7, #4]
 800f706:	781b      	ldrb	r3, [r3, #0]
 800f708:	2b00      	cmp	r3, #0
 800f70a:	d13c      	bne.n	800f786 <USBD_LL_Init+0x8a>
 800f70c:	4a20      	ldr	r2, [pc, #128]	; (800f790 <USBD_LL_Init+0x94>)
 800f70e:	687b      	ldr	r3, [r7, #4]
 800f710:	f8c2 3508 	str.w	r3, [r2, #1288]	; 0x508
 800f714:	687b      	ldr	r3, [r7, #4]
 800f716:	4a1e      	ldr	r2, [pc, #120]	; (800f790 <USBD_LL_Init+0x94>)
 800f718:	f8c3 22c8 	str.w	r2, [r3, #712]	; 0x2c8
 800f71c:	4b1c      	ldr	r3, [pc, #112]	; (800f790 <USBD_LL_Init+0x94>)
 800f71e:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 800f722:	601a      	str	r2, [r3, #0]
 800f724:	4b1a      	ldr	r3, [pc, #104]	; (800f790 <USBD_LL_Init+0x94>)
 800f726:	2204      	movs	r2, #4
 800f728:	605a      	str	r2, [r3, #4]
 800f72a:	4b19      	ldr	r3, [pc, #100]	; (800f790 <USBD_LL_Init+0x94>)
 800f72c:	2202      	movs	r2, #2
 800f72e:	60da      	str	r2, [r3, #12]
 800f730:	4b17      	ldr	r3, [pc, #92]	; (800f790 <USBD_LL_Init+0x94>)
 800f732:	2200      	movs	r2, #0
 800f734:	611a      	str	r2, [r3, #16]
 800f736:	4b16      	ldr	r3, [pc, #88]	; (800f790 <USBD_LL_Init+0x94>)
 800f738:	2202      	movs	r2, #2
 800f73a:	619a      	str	r2, [r3, #24]
 800f73c:	4b14      	ldr	r3, [pc, #80]	; (800f790 <USBD_LL_Init+0x94>)
 800f73e:	2200      	movs	r2, #0
 800f740:	61da      	str	r2, [r3, #28]
 800f742:	4b13      	ldr	r3, [pc, #76]	; (800f790 <USBD_LL_Init+0x94>)
 800f744:	2200      	movs	r2, #0
 800f746:	621a      	str	r2, [r3, #32]
 800f748:	4b11      	ldr	r3, [pc, #68]	; (800f790 <USBD_LL_Init+0x94>)
 800f74a:	2200      	movs	r2, #0
 800f74c:	625a      	str	r2, [r3, #36]	; 0x24
 800f74e:	4b10      	ldr	r3, [pc, #64]	; (800f790 <USBD_LL_Init+0x94>)
 800f750:	2200      	movs	r2, #0
 800f752:	62da      	str	r2, [r3, #44]	; 0x2c
 800f754:	4b0e      	ldr	r3, [pc, #56]	; (800f790 <USBD_LL_Init+0x94>)
 800f756:	2200      	movs	r2, #0
 800f758:	631a      	str	r2, [r3, #48]	; 0x30
 800f75a:	480d      	ldr	r0, [pc, #52]	; (800f790 <USBD_LL_Init+0x94>)
 800f75c:	f7f9 feb0 	bl	80094c0 <HAL_PCD_Init>
 800f760:	4603      	mov	r3, r0
 800f762:	2b00      	cmp	r3, #0
 800f764:	d001      	beq.n	800f76a <USBD_LL_Init+0x6e>
 800f766:	f7f7 f9db 	bl	8006b20 <Error_Handler>
 800f76a:	2180      	movs	r1, #128	; 0x80
 800f76c:	4808      	ldr	r0, [pc, #32]	; (800f790 <USBD_LL_Init+0x94>)
 800f76e:	f7fb f908 	bl	800a982 <HAL_PCDEx_SetRxFiFo>
 800f772:	2240      	movs	r2, #64	; 0x40
 800f774:	2100      	movs	r1, #0
 800f776:	4806      	ldr	r0, [pc, #24]	; (800f790 <USBD_LL_Init+0x94>)
 800f778:	f7fb f8bc 	bl	800a8f4 <HAL_PCDEx_SetTxFiFo>
 800f77c:	2280      	movs	r2, #128	; 0x80
 800f77e:	2101      	movs	r1, #1
 800f780:	4803      	ldr	r0, [pc, #12]	; (800f790 <USBD_LL_Init+0x94>)
 800f782:	f7fb f8b7 	bl	800a8f4 <HAL_PCDEx_SetTxFiFo>
 800f786:	2300      	movs	r3, #0
 800f788:	4618      	mov	r0, r3
 800f78a:	3708      	adds	r7, #8
 800f78c:	46bd      	mov	sp, r7
 800f78e:	bd80      	pop	{r7, pc}
 800f790:	20002124 	.word	0x20002124

0800f794 <USBD_LL_Start>:
 800f794:	b580      	push	{r7, lr}
 800f796:	b084      	sub	sp, #16
 800f798:	af00      	add	r7, sp, #0
 800f79a:	6078      	str	r0, [r7, #4]
 800f79c:	2300      	movs	r3, #0
 800f79e:	73fb      	strb	r3, [r7, #15]
 800f7a0:	2300      	movs	r3, #0
 800f7a2:	73bb      	strb	r3, [r7, #14]
 800f7a4:	687b      	ldr	r3, [r7, #4]
 800f7a6:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800f7aa:	4618      	mov	r0, r3
 800f7ac:	f7f9 ffa5 	bl	80096fa <HAL_PCD_Start>
 800f7b0:	4603      	mov	r3, r0
 800f7b2:	73fb      	strb	r3, [r7, #15]
 800f7b4:	7bfb      	ldrb	r3, [r7, #15]
 800f7b6:	4618      	mov	r0, r3
 800f7b8:	f000 f942 	bl	800fa40 <USBD_Get_USB_Status>
 800f7bc:	4603      	mov	r3, r0
 800f7be:	73bb      	strb	r3, [r7, #14]
 800f7c0:	7bbb      	ldrb	r3, [r7, #14]
 800f7c2:	4618      	mov	r0, r3
 800f7c4:	3710      	adds	r7, #16
 800f7c6:	46bd      	mov	sp, r7
 800f7c8:	bd80      	pop	{r7, pc}

0800f7ca <USBD_LL_OpenEP>:
 800f7ca:	b580      	push	{r7, lr}
 800f7cc:	b084      	sub	sp, #16
 800f7ce:	af00      	add	r7, sp, #0
 800f7d0:	6078      	str	r0, [r7, #4]
 800f7d2:	4608      	mov	r0, r1
 800f7d4:	4611      	mov	r1, r2
 800f7d6:	461a      	mov	r2, r3
 800f7d8:	4603      	mov	r3, r0
 800f7da:	70fb      	strb	r3, [r7, #3]
 800f7dc:	460b      	mov	r3, r1
 800f7de:	70bb      	strb	r3, [r7, #2]
 800f7e0:	4613      	mov	r3, r2
 800f7e2:	803b      	strh	r3, [r7, #0]
 800f7e4:	2300      	movs	r3, #0
 800f7e6:	73fb      	strb	r3, [r7, #15]
 800f7e8:	2300      	movs	r3, #0
 800f7ea:	73bb      	strb	r3, [r7, #14]
 800f7ec:	687b      	ldr	r3, [r7, #4]
 800f7ee:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800f7f2:	78bb      	ldrb	r3, [r7, #2]
 800f7f4:	883a      	ldrh	r2, [r7, #0]
 800f7f6:	78f9      	ldrb	r1, [r7, #3]
 800f7f8:	f7fa fc76 	bl	800a0e8 <HAL_PCD_EP_Open>
 800f7fc:	4603      	mov	r3, r0
 800f7fe:	73fb      	strb	r3, [r7, #15]
 800f800:	7bfb      	ldrb	r3, [r7, #15]
 800f802:	4618      	mov	r0, r3
 800f804:	f000 f91c 	bl	800fa40 <USBD_Get_USB_Status>
 800f808:	4603      	mov	r3, r0
 800f80a:	73bb      	strb	r3, [r7, #14]
 800f80c:	7bbb      	ldrb	r3, [r7, #14]
 800f80e:	4618      	mov	r0, r3
 800f810:	3710      	adds	r7, #16
 800f812:	46bd      	mov	sp, r7
 800f814:	bd80      	pop	{r7, pc}

0800f816 <USBD_LL_CloseEP>:
 800f816:	b580      	push	{r7, lr}
 800f818:	b084      	sub	sp, #16
 800f81a:	af00      	add	r7, sp, #0
 800f81c:	6078      	str	r0, [r7, #4]
 800f81e:	460b      	mov	r3, r1
 800f820:	70fb      	strb	r3, [r7, #3]
 800f822:	2300      	movs	r3, #0
 800f824:	73fb      	strb	r3, [r7, #15]
 800f826:	2300      	movs	r3, #0
 800f828:	73bb      	strb	r3, [r7, #14]
 800f82a:	687b      	ldr	r3, [r7, #4]
 800f82c:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800f830:	78fa      	ldrb	r2, [r7, #3]
 800f832:	4611      	mov	r1, r2
 800f834:	4618      	mov	r0, r3
 800f836:	f7fa fcbf 	bl	800a1b8 <HAL_PCD_EP_Close>
 800f83a:	4603      	mov	r3, r0
 800f83c:	73fb      	strb	r3, [r7, #15]
 800f83e:	7bfb      	ldrb	r3, [r7, #15]
 800f840:	4618      	mov	r0, r3
 800f842:	f000 f8fd 	bl	800fa40 <USBD_Get_USB_Status>
 800f846:	4603      	mov	r3, r0
 800f848:	73bb      	strb	r3, [r7, #14]
 800f84a:	7bbb      	ldrb	r3, [r7, #14]
 800f84c:	4618      	mov	r0, r3
 800f84e:	3710      	adds	r7, #16
 800f850:	46bd      	mov	sp, r7
 800f852:	bd80      	pop	{r7, pc}

0800f854 <USBD_LL_StallEP>:
 800f854:	b580      	push	{r7, lr}
 800f856:	b084      	sub	sp, #16
 800f858:	af00      	add	r7, sp, #0
 800f85a:	6078      	str	r0, [r7, #4]
 800f85c:	460b      	mov	r3, r1
 800f85e:	70fb      	strb	r3, [r7, #3]
 800f860:	2300      	movs	r3, #0
 800f862:	73fb      	strb	r3, [r7, #15]
 800f864:	2300      	movs	r3, #0
 800f866:	73bb      	strb	r3, [r7, #14]
 800f868:	687b      	ldr	r3, [r7, #4]
 800f86a:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800f86e:	78fa      	ldrb	r2, [r7, #3]
 800f870:	4611      	mov	r1, r2
 800f872:	4618      	mov	r0, r3
 800f874:	f7fa fd97 	bl	800a3a6 <HAL_PCD_EP_SetStall>
 800f878:	4603      	mov	r3, r0
 800f87a:	73fb      	strb	r3, [r7, #15]
 800f87c:	7bfb      	ldrb	r3, [r7, #15]
 800f87e:	4618      	mov	r0, r3
 800f880:	f000 f8de 	bl	800fa40 <USBD_Get_USB_Status>
 800f884:	4603      	mov	r3, r0
 800f886:	73bb      	strb	r3, [r7, #14]
 800f888:	7bbb      	ldrb	r3, [r7, #14]
 800f88a:	4618      	mov	r0, r3
 800f88c:	3710      	adds	r7, #16
 800f88e:	46bd      	mov	sp, r7
 800f890:	bd80      	pop	{r7, pc}

0800f892 <USBD_LL_ClearStallEP>:
 800f892:	b580      	push	{r7, lr}
 800f894:	b084      	sub	sp, #16
 800f896:	af00      	add	r7, sp, #0
 800f898:	6078      	str	r0, [r7, #4]
 800f89a:	460b      	mov	r3, r1
 800f89c:	70fb      	strb	r3, [r7, #3]
 800f89e:	2300      	movs	r3, #0
 800f8a0:	73fb      	strb	r3, [r7, #15]
 800f8a2:	2300      	movs	r3, #0
 800f8a4:	73bb      	strb	r3, [r7, #14]
 800f8a6:	687b      	ldr	r3, [r7, #4]
 800f8a8:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800f8ac:	78fa      	ldrb	r2, [r7, #3]
 800f8ae:	4611      	mov	r1, r2
 800f8b0:	4618      	mov	r0, r3
 800f8b2:	f7fa fddc 	bl	800a46e <HAL_PCD_EP_ClrStall>
 800f8b6:	4603      	mov	r3, r0
 800f8b8:	73fb      	strb	r3, [r7, #15]
 800f8ba:	7bfb      	ldrb	r3, [r7, #15]
 800f8bc:	4618      	mov	r0, r3
 800f8be:	f000 f8bf 	bl	800fa40 <USBD_Get_USB_Status>
 800f8c2:	4603      	mov	r3, r0
 800f8c4:	73bb      	strb	r3, [r7, #14]
 800f8c6:	7bbb      	ldrb	r3, [r7, #14]
 800f8c8:	4618      	mov	r0, r3
 800f8ca:	3710      	adds	r7, #16
 800f8cc:	46bd      	mov	sp, r7
 800f8ce:	bd80      	pop	{r7, pc}

0800f8d0 <USBD_LL_IsStallEP>:
 800f8d0:	b480      	push	{r7}
 800f8d2:	b085      	sub	sp, #20
 800f8d4:	af00      	add	r7, sp, #0
 800f8d6:	6078      	str	r0, [r7, #4]
 800f8d8:	460b      	mov	r3, r1
 800f8da:	70fb      	strb	r3, [r7, #3]
 800f8dc:	687b      	ldr	r3, [r7, #4]
 800f8de:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800f8e2:	60fb      	str	r3, [r7, #12]
 800f8e4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 800f8e8:	2b00      	cmp	r3, #0
 800f8ea:	da0b      	bge.n	800f904 <USBD_LL_IsStallEP+0x34>
 800f8ec:	78fb      	ldrb	r3, [r7, #3]
 800f8ee:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800f8f2:	68f9      	ldr	r1, [r7, #12]
 800f8f4:	4613      	mov	r3, r2
 800f8f6:	00db      	lsls	r3, r3, #3
 800f8f8:	4413      	add	r3, r2
 800f8fa:	009b      	lsls	r3, r3, #2
 800f8fc:	440b      	add	r3, r1
 800f8fe:	333e      	adds	r3, #62	; 0x3e
 800f900:	781b      	ldrb	r3, [r3, #0]
 800f902:	e00b      	b.n	800f91c <USBD_LL_IsStallEP+0x4c>
 800f904:	78fb      	ldrb	r3, [r7, #3]
 800f906:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 800f90a:	68f9      	ldr	r1, [r7, #12]
 800f90c:	4613      	mov	r3, r2
 800f90e:	00db      	lsls	r3, r3, #3
 800f910:	4413      	add	r3, r2
 800f912:	009b      	lsls	r3, r3, #2
 800f914:	440b      	add	r3, r1
 800f916:	f203 237e 	addw	r3, r3, #638	; 0x27e
 800f91a:	781b      	ldrb	r3, [r3, #0]
 800f91c:	4618      	mov	r0, r3
 800f91e:	3714      	adds	r7, #20
 800f920:	46bd      	mov	sp, r7
 800f922:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f926:	4770      	bx	lr

0800f928 <USBD_LL_SetUSBAddress>:
 800f928:	b580      	push	{r7, lr}
 800f92a:	b084      	sub	sp, #16
 800f92c:	af00      	add	r7, sp, #0
 800f92e:	6078      	str	r0, [r7, #4]
 800f930:	460b      	mov	r3, r1
 800f932:	70fb      	strb	r3, [r7, #3]
 800f934:	2300      	movs	r3, #0
 800f936:	73fb      	strb	r3, [r7, #15]
 800f938:	2300      	movs	r3, #0
 800f93a:	73bb      	strb	r3, [r7, #14]
 800f93c:	687b      	ldr	r3, [r7, #4]
 800f93e:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800f942:	78fa      	ldrb	r2, [r7, #3]
 800f944:	4611      	mov	r1, r2
 800f946:	4618      	mov	r0, r3
 800f948:	f7fa fba9 	bl	800a09e <HAL_PCD_SetAddress>
 800f94c:	4603      	mov	r3, r0
 800f94e:	73fb      	strb	r3, [r7, #15]
 800f950:	7bfb      	ldrb	r3, [r7, #15]
 800f952:	4618      	mov	r0, r3
 800f954:	f000 f874 	bl	800fa40 <USBD_Get_USB_Status>
 800f958:	4603      	mov	r3, r0
 800f95a:	73bb      	strb	r3, [r7, #14]
 800f95c:	7bbb      	ldrb	r3, [r7, #14]
 800f95e:	4618      	mov	r0, r3
 800f960:	3710      	adds	r7, #16
 800f962:	46bd      	mov	sp, r7
 800f964:	bd80      	pop	{r7, pc}

0800f966 <USBD_LL_Transmit>:
 800f966:	b580      	push	{r7, lr}
 800f968:	b086      	sub	sp, #24
 800f96a:	af00      	add	r7, sp, #0
 800f96c:	60f8      	str	r0, [r7, #12]
 800f96e:	607a      	str	r2, [r7, #4]
 800f970:	603b      	str	r3, [r7, #0]
 800f972:	460b      	mov	r3, r1
 800f974:	72fb      	strb	r3, [r7, #11]
 800f976:	2300      	movs	r3, #0
 800f978:	75fb      	strb	r3, [r7, #23]
 800f97a:	2300      	movs	r3, #0
 800f97c:	75bb      	strb	r3, [r7, #22]
 800f97e:	68fb      	ldr	r3, [r7, #12]
 800f980:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800f984:	7af9      	ldrb	r1, [r7, #11]
 800f986:	683b      	ldr	r3, [r7, #0]
 800f988:	687a      	ldr	r2, [r7, #4]
 800f98a:	f7fa fcc2 	bl	800a312 <HAL_PCD_EP_Transmit>
 800f98e:	4603      	mov	r3, r0
 800f990:	75fb      	strb	r3, [r7, #23]
 800f992:	7dfb      	ldrb	r3, [r7, #23]
 800f994:	4618      	mov	r0, r3
 800f996:	f000 f853 	bl	800fa40 <USBD_Get_USB_Status>
 800f99a:	4603      	mov	r3, r0
 800f99c:	75bb      	strb	r3, [r7, #22]
 800f99e:	7dbb      	ldrb	r3, [r7, #22]
 800f9a0:	4618      	mov	r0, r3
 800f9a2:	3718      	adds	r7, #24
 800f9a4:	46bd      	mov	sp, r7
 800f9a6:	bd80      	pop	{r7, pc}

0800f9a8 <USBD_LL_PrepareReceive>:
 800f9a8:	b580      	push	{r7, lr}
 800f9aa:	b086      	sub	sp, #24
 800f9ac:	af00      	add	r7, sp, #0
 800f9ae:	60f8      	str	r0, [r7, #12]
 800f9b0:	607a      	str	r2, [r7, #4]
 800f9b2:	603b      	str	r3, [r7, #0]
 800f9b4:	460b      	mov	r3, r1
 800f9b6:	72fb      	strb	r3, [r7, #11]
 800f9b8:	2300      	movs	r3, #0
 800f9ba:	75fb      	strb	r3, [r7, #23]
 800f9bc:	2300      	movs	r3, #0
 800f9be:	75bb      	strb	r3, [r7, #22]
 800f9c0:	68fb      	ldr	r3, [r7, #12]
 800f9c2:	f8d3 02c8 	ldr.w	r0, [r3, #712]	; 0x2c8
 800f9c6:	7af9      	ldrb	r1, [r7, #11]
 800f9c8:	683b      	ldr	r3, [r7, #0]
 800f9ca:	687a      	ldr	r2, [r7, #4]
 800f9cc:	f7fa fc3e 	bl	800a24c <HAL_PCD_EP_Receive>
 800f9d0:	4603      	mov	r3, r0
 800f9d2:	75fb      	strb	r3, [r7, #23]
 800f9d4:	7dfb      	ldrb	r3, [r7, #23]
 800f9d6:	4618      	mov	r0, r3
 800f9d8:	f000 f832 	bl	800fa40 <USBD_Get_USB_Status>
 800f9dc:	4603      	mov	r3, r0
 800f9de:	75bb      	strb	r3, [r7, #22]
 800f9e0:	7dbb      	ldrb	r3, [r7, #22]
 800f9e2:	4618      	mov	r0, r3
 800f9e4:	3718      	adds	r7, #24
 800f9e6:	46bd      	mov	sp, r7
 800f9e8:	bd80      	pop	{r7, pc}

0800f9ea <USBD_LL_GetRxDataSize>:
 800f9ea:	b580      	push	{r7, lr}
 800f9ec:	b082      	sub	sp, #8
 800f9ee:	af00      	add	r7, sp, #0
 800f9f0:	6078      	str	r0, [r7, #4]
 800f9f2:	460b      	mov	r3, r1
 800f9f4:	70fb      	strb	r3, [r7, #3]
 800f9f6:	687b      	ldr	r3, [r7, #4]
 800f9f8:	f8d3 32c8 	ldr.w	r3, [r3, #712]	; 0x2c8
 800f9fc:	78fa      	ldrb	r2, [r7, #3]
 800f9fe:	4611      	mov	r1, r2
 800fa00:	4618      	mov	r0, r3
 800fa02:	f7fa fc6e 	bl	800a2e2 <HAL_PCD_EP_GetRxCount>
 800fa06:	4603      	mov	r3, r0
 800fa08:	4618      	mov	r0, r3
 800fa0a:	3708      	adds	r7, #8
 800fa0c:	46bd      	mov	sp, r7
 800fa0e:	bd80      	pop	{r7, pc}

0800fa10 <USBD_static_malloc>:
 800fa10:	b480      	push	{r7}
 800fa12:	b083      	sub	sp, #12
 800fa14:	af00      	add	r7, sp, #0
 800fa16:	6078      	str	r0, [r7, #4]
 800fa18:	4b03      	ldr	r3, [pc, #12]	; (800fa28 <USBD_static_malloc+0x18>)
 800fa1a:	4618      	mov	r0, r3
 800fa1c:	370c      	adds	r7, #12
 800fa1e:	46bd      	mov	sp, r7
 800fa20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa24:	4770      	bx	lr
 800fa26:	bf00      	nop
 800fa28:	20002630 	.word	0x20002630

0800fa2c <USBD_static_free>:
 800fa2c:	b480      	push	{r7}
 800fa2e:	b083      	sub	sp, #12
 800fa30:	af00      	add	r7, sp, #0
 800fa32:	6078      	str	r0, [r7, #4]
 800fa34:	bf00      	nop
 800fa36:	370c      	adds	r7, #12
 800fa38:	46bd      	mov	sp, r7
 800fa3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa3e:	4770      	bx	lr

0800fa40 <USBD_Get_USB_Status>:
 800fa40:	b480      	push	{r7}
 800fa42:	b085      	sub	sp, #20
 800fa44:	af00      	add	r7, sp, #0
 800fa46:	4603      	mov	r3, r0
 800fa48:	71fb      	strb	r3, [r7, #7]
 800fa4a:	2300      	movs	r3, #0
 800fa4c:	73fb      	strb	r3, [r7, #15]
 800fa4e:	79fb      	ldrb	r3, [r7, #7]
 800fa50:	2b03      	cmp	r3, #3
 800fa52:	d817      	bhi.n	800fa84 <USBD_Get_USB_Status+0x44>
 800fa54:	a201      	add	r2, pc, #4	; (adr r2, 800fa5c <USBD_Get_USB_Status+0x1c>)
 800fa56:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fa5a:	bf00      	nop
 800fa5c:	0800fa6d 	.word	0x0800fa6d
 800fa60:	0800fa73 	.word	0x0800fa73
 800fa64:	0800fa79 	.word	0x0800fa79
 800fa68:	0800fa7f 	.word	0x0800fa7f
 800fa6c:	2300      	movs	r3, #0
 800fa6e:	73fb      	strb	r3, [r7, #15]
 800fa70:	e00b      	b.n	800fa8a <USBD_Get_USB_Status+0x4a>
 800fa72:	2303      	movs	r3, #3
 800fa74:	73fb      	strb	r3, [r7, #15]
 800fa76:	e008      	b.n	800fa8a <USBD_Get_USB_Status+0x4a>
 800fa78:	2301      	movs	r3, #1
 800fa7a:	73fb      	strb	r3, [r7, #15]
 800fa7c:	e005      	b.n	800fa8a <USBD_Get_USB_Status+0x4a>
 800fa7e:	2303      	movs	r3, #3
 800fa80:	73fb      	strb	r3, [r7, #15]
 800fa82:	e002      	b.n	800fa8a <USBD_Get_USB_Status+0x4a>
 800fa84:	2303      	movs	r3, #3
 800fa86:	73fb      	strb	r3, [r7, #15]
 800fa88:	bf00      	nop
 800fa8a:	7bfb      	ldrb	r3, [r7, #15]
 800fa8c:	4618      	mov	r0, r3
 800fa8e:	3714      	adds	r7, #20
 800fa90:	46bd      	mov	sp, r7
 800fa92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa96:	4770      	bx	lr

0800fa98 <malloc>:
 800fa98:	4b02      	ldr	r3, [pc, #8]	; (800faa4 <malloc+0xc>)
 800fa9a:	4601      	mov	r1, r0
 800fa9c:	6818      	ldr	r0, [r3, #0]
 800fa9e:	f000 b823 	b.w	800fae8 <_malloc_r>
 800faa2:	bf00      	nop
 800faa4:	200002e4 	.word	0x200002e4

0800faa8 <sbrk_aligned>:
 800faa8:	b570      	push	{r4, r5, r6, lr}
 800faaa:	4e0e      	ldr	r6, [pc, #56]	; (800fae4 <sbrk_aligned+0x3c>)
 800faac:	460c      	mov	r4, r1
 800faae:	6831      	ldr	r1, [r6, #0]
 800fab0:	4605      	mov	r5, r0
 800fab2:	b911      	cbnz	r1, 800faba <sbrk_aligned+0x12>
 800fab4:	f001 fec2 	bl	801183c <_sbrk_r>
 800fab8:	6030      	str	r0, [r6, #0]
 800faba:	4621      	mov	r1, r4
 800fabc:	4628      	mov	r0, r5
 800fabe:	f001 febd 	bl	801183c <_sbrk_r>
 800fac2:	1c43      	adds	r3, r0, #1
 800fac4:	d00a      	beq.n	800fadc <sbrk_aligned+0x34>
 800fac6:	1cc4      	adds	r4, r0, #3
 800fac8:	f024 0403 	bic.w	r4, r4, #3
 800facc:	42a0      	cmp	r0, r4
 800face:	d007      	beq.n	800fae0 <sbrk_aligned+0x38>
 800fad0:	1a21      	subs	r1, r4, r0
 800fad2:	4628      	mov	r0, r5
 800fad4:	f001 feb2 	bl	801183c <_sbrk_r>
 800fad8:	3001      	adds	r0, #1
 800fada:	d101      	bne.n	800fae0 <sbrk_aligned+0x38>
 800fadc:	f04f 34ff 	mov.w	r4, #4294967295
 800fae0:	4620      	mov	r0, r4
 800fae2:	bd70      	pop	{r4, r5, r6, pc}
 800fae4:	20002854 	.word	0x20002854

0800fae8 <_malloc_r>:
 800fae8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800faec:	1ccd      	adds	r5, r1, #3
 800faee:	f025 0503 	bic.w	r5, r5, #3
 800faf2:	3508      	adds	r5, #8
 800faf4:	2d0c      	cmp	r5, #12
 800faf6:	bf38      	it	cc
 800faf8:	250c      	movcc	r5, #12
 800fafa:	2d00      	cmp	r5, #0
 800fafc:	4607      	mov	r7, r0
 800fafe:	db01      	blt.n	800fb04 <_malloc_r+0x1c>
 800fb00:	42a9      	cmp	r1, r5
 800fb02:	d905      	bls.n	800fb10 <_malloc_r+0x28>
 800fb04:	230c      	movs	r3, #12
 800fb06:	603b      	str	r3, [r7, #0]
 800fb08:	2600      	movs	r6, #0
 800fb0a:	4630      	mov	r0, r6
 800fb0c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800fb10:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800fbe4 <_malloc_r+0xfc>
 800fb14:	f000 f868 	bl	800fbe8 <__malloc_lock>
 800fb18:	f8d8 3000 	ldr.w	r3, [r8]
 800fb1c:	461c      	mov	r4, r3
 800fb1e:	bb5c      	cbnz	r4, 800fb78 <_malloc_r+0x90>
 800fb20:	4629      	mov	r1, r5
 800fb22:	4638      	mov	r0, r7
 800fb24:	f7ff ffc0 	bl	800faa8 <sbrk_aligned>
 800fb28:	1c43      	adds	r3, r0, #1
 800fb2a:	4604      	mov	r4, r0
 800fb2c:	d155      	bne.n	800fbda <_malloc_r+0xf2>
 800fb2e:	f8d8 4000 	ldr.w	r4, [r8]
 800fb32:	4626      	mov	r6, r4
 800fb34:	2e00      	cmp	r6, #0
 800fb36:	d145      	bne.n	800fbc4 <_malloc_r+0xdc>
 800fb38:	2c00      	cmp	r4, #0
 800fb3a:	d048      	beq.n	800fbce <_malloc_r+0xe6>
 800fb3c:	6823      	ldr	r3, [r4, #0]
 800fb3e:	4631      	mov	r1, r6
 800fb40:	4638      	mov	r0, r7
 800fb42:	eb04 0903 	add.w	r9, r4, r3
 800fb46:	f001 fe79 	bl	801183c <_sbrk_r>
 800fb4a:	4581      	cmp	r9, r0
 800fb4c:	d13f      	bne.n	800fbce <_malloc_r+0xe6>
 800fb4e:	6821      	ldr	r1, [r4, #0]
 800fb50:	1a6d      	subs	r5, r5, r1
 800fb52:	4629      	mov	r1, r5
 800fb54:	4638      	mov	r0, r7
 800fb56:	f7ff ffa7 	bl	800faa8 <sbrk_aligned>
 800fb5a:	3001      	adds	r0, #1
 800fb5c:	d037      	beq.n	800fbce <_malloc_r+0xe6>
 800fb5e:	6823      	ldr	r3, [r4, #0]
 800fb60:	442b      	add	r3, r5
 800fb62:	6023      	str	r3, [r4, #0]
 800fb64:	f8d8 3000 	ldr.w	r3, [r8]
 800fb68:	2b00      	cmp	r3, #0
 800fb6a:	d038      	beq.n	800fbde <_malloc_r+0xf6>
 800fb6c:	685a      	ldr	r2, [r3, #4]
 800fb6e:	42a2      	cmp	r2, r4
 800fb70:	d12b      	bne.n	800fbca <_malloc_r+0xe2>
 800fb72:	2200      	movs	r2, #0
 800fb74:	605a      	str	r2, [r3, #4]
 800fb76:	e00f      	b.n	800fb98 <_malloc_r+0xb0>
 800fb78:	6822      	ldr	r2, [r4, #0]
 800fb7a:	1b52      	subs	r2, r2, r5
 800fb7c:	d41f      	bmi.n	800fbbe <_malloc_r+0xd6>
 800fb7e:	2a0b      	cmp	r2, #11
 800fb80:	d917      	bls.n	800fbb2 <_malloc_r+0xca>
 800fb82:	1961      	adds	r1, r4, r5
 800fb84:	42a3      	cmp	r3, r4
 800fb86:	6025      	str	r5, [r4, #0]
 800fb88:	bf18      	it	ne
 800fb8a:	6059      	strne	r1, [r3, #4]
 800fb8c:	6863      	ldr	r3, [r4, #4]
 800fb8e:	bf08      	it	eq
 800fb90:	f8c8 1000 	streq.w	r1, [r8]
 800fb94:	5162      	str	r2, [r4, r5]
 800fb96:	604b      	str	r3, [r1, #4]
 800fb98:	4638      	mov	r0, r7
 800fb9a:	f104 060b 	add.w	r6, r4, #11
 800fb9e:	f000 f829 	bl	800fbf4 <__malloc_unlock>
 800fba2:	f026 0607 	bic.w	r6, r6, #7
 800fba6:	1d23      	adds	r3, r4, #4
 800fba8:	1af2      	subs	r2, r6, r3
 800fbaa:	d0ae      	beq.n	800fb0a <_malloc_r+0x22>
 800fbac:	1b9b      	subs	r3, r3, r6
 800fbae:	50a3      	str	r3, [r4, r2]
 800fbb0:	e7ab      	b.n	800fb0a <_malloc_r+0x22>
 800fbb2:	42a3      	cmp	r3, r4
 800fbb4:	6862      	ldr	r2, [r4, #4]
 800fbb6:	d1dd      	bne.n	800fb74 <_malloc_r+0x8c>
 800fbb8:	f8c8 2000 	str.w	r2, [r8]
 800fbbc:	e7ec      	b.n	800fb98 <_malloc_r+0xb0>
 800fbbe:	4623      	mov	r3, r4
 800fbc0:	6864      	ldr	r4, [r4, #4]
 800fbc2:	e7ac      	b.n	800fb1e <_malloc_r+0x36>
 800fbc4:	4634      	mov	r4, r6
 800fbc6:	6876      	ldr	r6, [r6, #4]
 800fbc8:	e7b4      	b.n	800fb34 <_malloc_r+0x4c>
 800fbca:	4613      	mov	r3, r2
 800fbcc:	e7cc      	b.n	800fb68 <_malloc_r+0x80>
 800fbce:	230c      	movs	r3, #12
 800fbd0:	603b      	str	r3, [r7, #0]
 800fbd2:	4638      	mov	r0, r7
 800fbd4:	f000 f80e 	bl	800fbf4 <__malloc_unlock>
 800fbd8:	e797      	b.n	800fb0a <_malloc_r+0x22>
 800fbda:	6025      	str	r5, [r4, #0]
 800fbdc:	e7dc      	b.n	800fb98 <_malloc_r+0xb0>
 800fbde:	605b      	str	r3, [r3, #4]
 800fbe0:	deff      	udf	#255	; 0xff
 800fbe2:	bf00      	nop
 800fbe4:	20002850 	.word	0x20002850

0800fbe8 <__malloc_lock>:
 800fbe8:	4801      	ldr	r0, [pc, #4]	; (800fbf0 <__malloc_lock+0x8>)
 800fbea:	f001 be73 	b.w	80118d4 <__retarget_lock_acquire_recursive>
 800fbee:	bf00      	nop
 800fbf0:	20002998 	.word	0x20002998

0800fbf4 <__malloc_unlock>:
 800fbf4:	4801      	ldr	r0, [pc, #4]	; (800fbfc <__malloc_unlock+0x8>)
 800fbf6:	f001 be6e 	b.w	80118d6 <__retarget_lock_release_recursive>
 800fbfa:	bf00      	nop
 800fbfc:	20002998 	.word	0x20002998

0800fc00 <_realloc_r>:
 800fc00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fc04:	4680      	mov	r8, r0
 800fc06:	4614      	mov	r4, r2
 800fc08:	460e      	mov	r6, r1
 800fc0a:	b921      	cbnz	r1, 800fc16 <_realloc_r+0x16>
 800fc0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800fc10:	4611      	mov	r1, r2
 800fc12:	f7ff bf69 	b.w	800fae8 <_malloc_r>
 800fc16:	b92a      	cbnz	r2, 800fc24 <_realloc_r+0x24>
 800fc18:	f002 fcf8 	bl	801260c <_free_r>
 800fc1c:	4625      	mov	r5, r4
 800fc1e:	4628      	mov	r0, r5
 800fc20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc24:	f003 fd55 	bl	80136d2 <_malloc_usable_size_r>
 800fc28:	4284      	cmp	r4, r0
 800fc2a:	4607      	mov	r7, r0
 800fc2c:	d802      	bhi.n	800fc34 <_realloc_r+0x34>
 800fc2e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800fc32:	d812      	bhi.n	800fc5a <_realloc_r+0x5a>
 800fc34:	4621      	mov	r1, r4
 800fc36:	4640      	mov	r0, r8
 800fc38:	f7ff ff56 	bl	800fae8 <_malloc_r>
 800fc3c:	4605      	mov	r5, r0
 800fc3e:	2800      	cmp	r0, #0
 800fc40:	d0ed      	beq.n	800fc1e <_realloc_r+0x1e>
 800fc42:	42bc      	cmp	r4, r7
 800fc44:	4622      	mov	r2, r4
 800fc46:	4631      	mov	r1, r6
 800fc48:	bf28      	it	cs
 800fc4a:	463a      	movcs	r2, r7
 800fc4c:	f001 fe44 	bl	80118d8 <memcpy>
 800fc50:	4631      	mov	r1, r6
 800fc52:	4640      	mov	r0, r8
 800fc54:	f002 fcda 	bl	801260c <_free_r>
 800fc58:	e7e1      	b.n	800fc1e <_realloc_r+0x1e>
 800fc5a:	4635      	mov	r5, r6
 800fc5c:	e7df      	b.n	800fc1e <_realloc_r+0x1e>

0800fc5e <sulp>:
 800fc5e:	b570      	push	{r4, r5, r6, lr}
 800fc60:	4604      	mov	r4, r0
 800fc62:	460d      	mov	r5, r1
 800fc64:	ec45 4b10 	vmov	d0, r4, r5
 800fc68:	4616      	mov	r6, r2
 800fc6a:	f003 fbf1 	bl	8013450 <__ulp>
 800fc6e:	ec51 0b10 	vmov	r0, r1, d0
 800fc72:	b17e      	cbz	r6, 800fc94 <sulp+0x36>
 800fc74:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800fc78:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800fc7c:	2b00      	cmp	r3, #0
 800fc7e:	dd09      	ble.n	800fc94 <sulp+0x36>
 800fc80:	051b      	lsls	r3, r3, #20
 800fc82:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800fc86:	2400      	movs	r4, #0
 800fc88:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800fc8c:	4622      	mov	r2, r4
 800fc8e:	462b      	mov	r3, r5
 800fc90:	f7f0 fcb2 	bl	80005f8 <__aeabi_dmul>
 800fc94:	bd70      	pop	{r4, r5, r6, pc}
	...

0800fc98 <_strtod_l>:
 800fc98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fc9c:	ed2d 8b02 	vpush	{d8}
 800fca0:	b09b      	sub	sp, #108	; 0x6c
 800fca2:	4604      	mov	r4, r0
 800fca4:	9213      	str	r2, [sp, #76]	; 0x4c
 800fca6:	2200      	movs	r2, #0
 800fca8:	9216      	str	r2, [sp, #88]	; 0x58
 800fcaa:	460d      	mov	r5, r1
 800fcac:	f04f 0800 	mov.w	r8, #0
 800fcb0:	f04f 0900 	mov.w	r9, #0
 800fcb4:	460a      	mov	r2, r1
 800fcb6:	9215      	str	r2, [sp, #84]	; 0x54
 800fcb8:	7811      	ldrb	r1, [r2, #0]
 800fcba:	292b      	cmp	r1, #43	; 0x2b
 800fcbc:	d04c      	beq.n	800fd58 <_strtod_l+0xc0>
 800fcbe:	d83a      	bhi.n	800fd36 <_strtod_l+0x9e>
 800fcc0:	290d      	cmp	r1, #13
 800fcc2:	d834      	bhi.n	800fd2e <_strtod_l+0x96>
 800fcc4:	2908      	cmp	r1, #8
 800fcc6:	d834      	bhi.n	800fd32 <_strtod_l+0x9a>
 800fcc8:	2900      	cmp	r1, #0
 800fcca:	d03d      	beq.n	800fd48 <_strtod_l+0xb0>
 800fccc:	2200      	movs	r2, #0
 800fcce:	920a      	str	r2, [sp, #40]	; 0x28
 800fcd0:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800fcd2:	7832      	ldrb	r2, [r6, #0]
 800fcd4:	2a30      	cmp	r2, #48	; 0x30
 800fcd6:	f040 80b4 	bne.w	800fe42 <_strtod_l+0x1aa>
 800fcda:	7872      	ldrb	r2, [r6, #1]
 800fcdc:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 800fce0:	2a58      	cmp	r2, #88	; 0x58
 800fce2:	d170      	bne.n	800fdc6 <_strtod_l+0x12e>
 800fce4:	9302      	str	r3, [sp, #8]
 800fce6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fce8:	9301      	str	r3, [sp, #4]
 800fcea:	ab16      	add	r3, sp, #88	; 0x58
 800fcec:	9300      	str	r3, [sp, #0]
 800fcee:	4a8e      	ldr	r2, [pc, #568]	; (800ff28 <_strtod_l+0x290>)
 800fcf0:	ab17      	add	r3, sp, #92	; 0x5c
 800fcf2:	a915      	add	r1, sp, #84	; 0x54
 800fcf4:	4620      	mov	r0, r4
 800fcf6:	f002 fd3d 	bl	8012774 <__gethex>
 800fcfa:	f010 070f 	ands.w	r7, r0, #15
 800fcfe:	4605      	mov	r5, r0
 800fd00:	d005      	beq.n	800fd0e <_strtod_l+0x76>
 800fd02:	2f06      	cmp	r7, #6
 800fd04:	d12a      	bne.n	800fd5c <_strtod_l+0xc4>
 800fd06:	3601      	adds	r6, #1
 800fd08:	2300      	movs	r3, #0
 800fd0a:	9615      	str	r6, [sp, #84]	; 0x54
 800fd0c:	930a      	str	r3, [sp, #40]	; 0x28
 800fd0e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fd10:	2b00      	cmp	r3, #0
 800fd12:	f040 857f 	bne.w	8010814 <_strtod_l+0xb7c>
 800fd16:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fd18:	b1db      	cbz	r3, 800fd52 <_strtod_l+0xba>
 800fd1a:	4642      	mov	r2, r8
 800fd1c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800fd20:	ec43 2b10 	vmov	d0, r2, r3
 800fd24:	b01b      	add	sp, #108	; 0x6c
 800fd26:	ecbd 8b02 	vpop	{d8}
 800fd2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fd2e:	2920      	cmp	r1, #32
 800fd30:	d1cc      	bne.n	800fccc <_strtod_l+0x34>
 800fd32:	3201      	adds	r2, #1
 800fd34:	e7bf      	b.n	800fcb6 <_strtod_l+0x1e>
 800fd36:	292d      	cmp	r1, #45	; 0x2d
 800fd38:	d1c8      	bne.n	800fccc <_strtod_l+0x34>
 800fd3a:	2101      	movs	r1, #1
 800fd3c:	910a      	str	r1, [sp, #40]	; 0x28
 800fd3e:	1c51      	adds	r1, r2, #1
 800fd40:	9115      	str	r1, [sp, #84]	; 0x54
 800fd42:	7852      	ldrb	r2, [r2, #1]
 800fd44:	2a00      	cmp	r2, #0
 800fd46:	d1c3      	bne.n	800fcd0 <_strtod_l+0x38>
 800fd48:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800fd4a:	9515      	str	r5, [sp, #84]	; 0x54
 800fd4c:	2b00      	cmp	r3, #0
 800fd4e:	f040 855f 	bne.w	8010810 <_strtod_l+0xb78>
 800fd52:	4642      	mov	r2, r8
 800fd54:	464b      	mov	r3, r9
 800fd56:	e7e3      	b.n	800fd20 <_strtod_l+0x88>
 800fd58:	2100      	movs	r1, #0
 800fd5a:	e7ef      	b.n	800fd3c <_strtod_l+0xa4>
 800fd5c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800fd5e:	b13a      	cbz	r2, 800fd70 <_strtod_l+0xd8>
 800fd60:	2135      	movs	r1, #53	; 0x35
 800fd62:	a818      	add	r0, sp, #96	; 0x60
 800fd64:	f003 fc71 	bl	801364a <__copybits>
 800fd68:	9916      	ldr	r1, [sp, #88]	; 0x58
 800fd6a:	4620      	mov	r0, r4
 800fd6c:	f003 f844 	bl	8012df8 <_Bfree>
 800fd70:	3f01      	subs	r7, #1
 800fd72:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800fd74:	2f04      	cmp	r7, #4
 800fd76:	d806      	bhi.n	800fd86 <_strtod_l+0xee>
 800fd78:	e8df f007 	tbb	[pc, r7]
 800fd7c:	201d0314 	.word	0x201d0314
 800fd80:	14          	.byte	0x14
 800fd81:	00          	.byte	0x00
 800fd82:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 800fd86:	05e9      	lsls	r1, r5, #23
 800fd88:	bf48      	it	mi
 800fd8a:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 800fd8e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800fd92:	0d1b      	lsrs	r3, r3, #20
 800fd94:	051b      	lsls	r3, r3, #20
 800fd96:	2b00      	cmp	r3, #0
 800fd98:	d1b9      	bne.n	800fd0e <_strtod_l+0x76>
 800fd9a:	f001 fd71 	bl	8011880 <__errno>
 800fd9e:	2322      	movs	r3, #34	; 0x22
 800fda0:	6003      	str	r3, [r0, #0]
 800fda2:	e7b4      	b.n	800fd0e <_strtod_l+0x76>
 800fda4:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 800fda8:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800fdac:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800fdb0:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800fdb4:	e7e7      	b.n	800fd86 <_strtod_l+0xee>
 800fdb6:	f8df 9178 	ldr.w	r9, [pc, #376]	; 800ff30 <_strtod_l+0x298>
 800fdba:	e7e4      	b.n	800fd86 <_strtod_l+0xee>
 800fdbc:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800fdc0:	f04f 38ff 	mov.w	r8, #4294967295
 800fdc4:	e7df      	b.n	800fd86 <_strtod_l+0xee>
 800fdc6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fdc8:	1c5a      	adds	r2, r3, #1
 800fdca:	9215      	str	r2, [sp, #84]	; 0x54
 800fdcc:	785b      	ldrb	r3, [r3, #1]
 800fdce:	2b30      	cmp	r3, #48	; 0x30
 800fdd0:	d0f9      	beq.n	800fdc6 <_strtod_l+0x12e>
 800fdd2:	2b00      	cmp	r3, #0
 800fdd4:	d09b      	beq.n	800fd0e <_strtod_l+0x76>
 800fdd6:	2301      	movs	r3, #1
 800fdd8:	f04f 0a00 	mov.w	sl, #0
 800fddc:	9304      	str	r3, [sp, #16]
 800fdde:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fde0:	930b      	str	r3, [sp, #44]	; 0x2c
 800fde2:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800fde6:	46d3      	mov	fp, sl
 800fde8:	220a      	movs	r2, #10
 800fdea:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fdec:	7806      	ldrb	r6, [r0, #0]
 800fdee:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800fdf2:	b2d9      	uxtb	r1, r3
 800fdf4:	2909      	cmp	r1, #9
 800fdf6:	d926      	bls.n	800fe46 <_strtod_l+0x1ae>
 800fdf8:	494c      	ldr	r1, [pc, #304]	; (800ff2c <_strtod_l+0x294>)
 800fdfa:	2201      	movs	r2, #1
 800fdfc:	f001 fcd3 	bl	80117a6 <strncmp>
 800fe00:	2800      	cmp	r0, #0
 800fe02:	d030      	beq.n	800fe66 <_strtod_l+0x1ce>
 800fe04:	2000      	movs	r0, #0
 800fe06:	4632      	mov	r2, r6
 800fe08:	9005      	str	r0, [sp, #20]
 800fe0a:	465e      	mov	r6, fp
 800fe0c:	4603      	mov	r3, r0
 800fe0e:	2a65      	cmp	r2, #101	; 0x65
 800fe10:	d001      	beq.n	800fe16 <_strtod_l+0x17e>
 800fe12:	2a45      	cmp	r2, #69	; 0x45
 800fe14:	d113      	bne.n	800fe3e <_strtod_l+0x1a6>
 800fe16:	b91e      	cbnz	r6, 800fe20 <_strtod_l+0x188>
 800fe18:	9a04      	ldr	r2, [sp, #16]
 800fe1a:	4302      	orrs	r2, r0
 800fe1c:	d094      	beq.n	800fd48 <_strtod_l+0xb0>
 800fe1e:	2600      	movs	r6, #0
 800fe20:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800fe22:	1c6a      	adds	r2, r5, #1
 800fe24:	9215      	str	r2, [sp, #84]	; 0x54
 800fe26:	786a      	ldrb	r2, [r5, #1]
 800fe28:	2a2b      	cmp	r2, #43	; 0x2b
 800fe2a:	d074      	beq.n	800ff16 <_strtod_l+0x27e>
 800fe2c:	2a2d      	cmp	r2, #45	; 0x2d
 800fe2e:	d078      	beq.n	800ff22 <_strtod_l+0x28a>
 800fe30:	f04f 0c00 	mov.w	ip, #0
 800fe34:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800fe38:	2909      	cmp	r1, #9
 800fe3a:	d97f      	bls.n	800ff3c <_strtod_l+0x2a4>
 800fe3c:	9515      	str	r5, [sp, #84]	; 0x54
 800fe3e:	2700      	movs	r7, #0
 800fe40:	e09e      	b.n	800ff80 <_strtod_l+0x2e8>
 800fe42:	2300      	movs	r3, #0
 800fe44:	e7c8      	b.n	800fdd8 <_strtod_l+0x140>
 800fe46:	f1bb 0f08 	cmp.w	fp, #8
 800fe4a:	bfd8      	it	le
 800fe4c:	9909      	ldrle	r1, [sp, #36]	; 0x24
 800fe4e:	f100 0001 	add.w	r0, r0, #1
 800fe52:	bfda      	itte	le
 800fe54:	fb02 3301 	mlale	r3, r2, r1, r3
 800fe58:	9309      	strle	r3, [sp, #36]	; 0x24
 800fe5a:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 800fe5e:	f10b 0b01 	add.w	fp, fp, #1
 800fe62:	9015      	str	r0, [sp, #84]	; 0x54
 800fe64:	e7c1      	b.n	800fdea <_strtod_l+0x152>
 800fe66:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fe68:	1c5a      	adds	r2, r3, #1
 800fe6a:	9215      	str	r2, [sp, #84]	; 0x54
 800fe6c:	785a      	ldrb	r2, [r3, #1]
 800fe6e:	f1bb 0f00 	cmp.w	fp, #0
 800fe72:	d037      	beq.n	800fee4 <_strtod_l+0x24c>
 800fe74:	9005      	str	r0, [sp, #20]
 800fe76:	465e      	mov	r6, fp
 800fe78:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800fe7c:	2b09      	cmp	r3, #9
 800fe7e:	d912      	bls.n	800fea6 <_strtod_l+0x20e>
 800fe80:	2301      	movs	r3, #1
 800fe82:	e7c4      	b.n	800fe0e <_strtod_l+0x176>
 800fe84:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fe86:	1c5a      	adds	r2, r3, #1
 800fe88:	9215      	str	r2, [sp, #84]	; 0x54
 800fe8a:	785a      	ldrb	r2, [r3, #1]
 800fe8c:	3001      	adds	r0, #1
 800fe8e:	2a30      	cmp	r2, #48	; 0x30
 800fe90:	d0f8      	beq.n	800fe84 <_strtod_l+0x1ec>
 800fe92:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800fe96:	2b08      	cmp	r3, #8
 800fe98:	f200 84c1 	bhi.w	801081e <_strtod_l+0xb86>
 800fe9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fe9e:	9005      	str	r0, [sp, #20]
 800fea0:	2000      	movs	r0, #0
 800fea2:	930b      	str	r3, [sp, #44]	; 0x2c
 800fea4:	4606      	mov	r6, r0
 800fea6:	3a30      	subs	r2, #48	; 0x30
 800fea8:	f100 0301 	add.w	r3, r0, #1
 800feac:	d014      	beq.n	800fed8 <_strtod_l+0x240>
 800feae:	9905      	ldr	r1, [sp, #20]
 800feb0:	4419      	add	r1, r3
 800feb2:	9105      	str	r1, [sp, #20]
 800feb4:	4633      	mov	r3, r6
 800feb6:	eb00 0c06 	add.w	ip, r0, r6
 800feba:	210a      	movs	r1, #10
 800febc:	4563      	cmp	r3, ip
 800febe:	d113      	bne.n	800fee8 <_strtod_l+0x250>
 800fec0:	1833      	adds	r3, r6, r0
 800fec2:	2b08      	cmp	r3, #8
 800fec4:	f106 0601 	add.w	r6, r6, #1
 800fec8:	4406      	add	r6, r0
 800feca:	dc1a      	bgt.n	800ff02 <_strtod_l+0x26a>
 800fecc:	9909      	ldr	r1, [sp, #36]	; 0x24
 800fece:	230a      	movs	r3, #10
 800fed0:	fb03 2301 	mla	r3, r3, r1, r2
 800fed4:	9309      	str	r3, [sp, #36]	; 0x24
 800fed6:	2300      	movs	r3, #0
 800fed8:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800feda:	1c51      	adds	r1, r2, #1
 800fedc:	9115      	str	r1, [sp, #84]	; 0x54
 800fede:	7852      	ldrb	r2, [r2, #1]
 800fee0:	4618      	mov	r0, r3
 800fee2:	e7c9      	b.n	800fe78 <_strtod_l+0x1e0>
 800fee4:	4658      	mov	r0, fp
 800fee6:	e7d2      	b.n	800fe8e <_strtod_l+0x1f6>
 800fee8:	2b08      	cmp	r3, #8
 800feea:	f103 0301 	add.w	r3, r3, #1
 800feee:	dc03      	bgt.n	800fef8 <_strtod_l+0x260>
 800fef0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800fef2:	434f      	muls	r7, r1
 800fef4:	9709      	str	r7, [sp, #36]	; 0x24
 800fef6:	e7e1      	b.n	800febc <_strtod_l+0x224>
 800fef8:	2b10      	cmp	r3, #16
 800fefa:	bfd8      	it	le
 800fefc:	fb01 fa0a 	mulle.w	sl, r1, sl
 800ff00:	e7dc      	b.n	800febc <_strtod_l+0x224>
 800ff02:	2e10      	cmp	r6, #16
 800ff04:	bfdc      	itt	le
 800ff06:	230a      	movle	r3, #10
 800ff08:	fb03 2a0a 	mlale	sl, r3, sl, r2
 800ff0c:	e7e3      	b.n	800fed6 <_strtod_l+0x23e>
 800ff0e:	2300      	movs	r3, #0
 800ff10:	9305      	str	r3, [sp, #20]
 800ff12:	2301      	movs	r3, #1
 800ff14:	e780      	b.n	800fe18 <_strtod_l+0x180>
 800ff16:	f04f 0c00 	mov.w	ip, #0
 800ff1a:	1caa      	adds	r2, r5, #2
 800ff1c:	9215      	str	r2, [sp, #84]	; 0x54
 800ff1e:	78aa      	ldrb	r2, [r5, #2]
 800ff20:	e788      	b.n	800fe34 <_strtod_l+0x19c>
 800ff22:	f04f 0c01 	mov.w	ip, #1
 800ff26:	e7f8      	b.n	800ff1a <_strtod_l+0x282>
 800ff28:	080142c8 	.word	0x080142c8
 800ff2c:	080142c4 	.word	0x080142c4
 800ff30:	7ff00000 	.word	0x7ff00000
 800ff34:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ff36:	1c51      	adds	r1, r2, #1
 800ff38:	9115      	str	r1, [sp, #84]	; 0x54
 800ff3a:	7852      	ldrb	r2, [r2, #1]
 800ff3c:	2a30      	cmp	r2, #48	; 0x30
 800ff3e:	d0f9      	beq.n	800ff34 <_strtod_l+0x29c>
 800ff40:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800ff44:	2908      	cmp	r1, #8
 800ff46:	f63f af7a 	bhi.w	800fe3e <_strtod_l+0x1a6>
 800ff4a:	3a30      	subs	r2, #48	; 0x30
 800ff4c:	9208      	str	r2, [sp, #32]
 800ff4e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ff50:	920c      	str	r2, [sp, #48]	; 0x30
 800ff52:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800ff54:	1c57      	adds	r7, r2, #1
 800ff56:	9715      	str	r7, [sp, #84]	; 0x54
 800ff58:	7852      	ldrb	r2, [r2, #1]
 800ff5a:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800ff5e:	f1be 0f09 	cmp.w	lr, #9
 800ff62:	d938      	bls.n	800ffd6 <_strtod_l+0x33e>
 800ff64:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ff66:	1a7f      	subs	r7, r7, r1
 800ff68:	2f08      	cmp	r7, #8
 800ff6a:	f644 671f 	movw	r7, #19999	; 0x4e1f
 800ff6e:	dc03      	bgt.n	800ff78 <_strtod_l+0x2e0>
 800ff70:	9908      	ldr	r1, [sp, #32]
 800ff72:	428f      	cmp	r7, r1
 800ff74:	bfa8      	it	ge
 800ff76:	460f      	movge	r7, r1
 800ff78:	f1bc 0f00 	cmp.w	ip, #0
 800ff7c:	d000      	beq.n	800ff80 <_strtod_l+0x2e8>
 800ff7e:	427f      	negs	r7, r7
 800ff80:	2e00      	cmp	r6, #0
 800ff82:	d14f      	bne.n	8010024 <_strtod_l+0x38c>
 800ff84:	9904      	ldr	r1, [sp, #16]
 800ff86:	4301      	orrs	r1, r0
 800ff88:	f47f aec1 	bne.w	800fd0e <_strtod_l+0x76>
 800ff8c:	2b00      	cmp	r3, #0
 800ff8e:	f47f aedb 	bne.w	800fd48 <_strtod_l+0xb0>
 800ff92:	2a69      	cmp	r2, #105	; 0x69
 800ff94:	d029      	beq.n	800ffea <_strtod_l+0x352>
 800ff96:	dc26      	bgt.n	800ffe6 <_strtod_l+0x34e>
 800ff98:	2a49      	cmp	r2, #73	; 0x49
 800ff9a:	d026      	beq.n	800ffea <_strtod_l+0x352>
 800ff9c:	2a4e      	cmp	r2, #78	; 0x4e
 800ff9e:	f47f aed3 	bne.w	800fd48 <_strtod_l+0xb0>
 800ffa2:	499b      	ldr	r1, [pc, #620]	; (8010210 <_strtod_l+0x578>)
 800ffa4:	a815      	add	r0, sp, #84	; 0x54
 800ffa6:	f002 fe25 	bl	8012bf4 <__match>
 800ffaa:	2800      	cmp	r0, #0
 800ffac:	f43f aecc 	beq.w	800fd48 <_strtod_l+0xb0>
 800ffb0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ffb2:	781b      	ldrb	r3, [r3, #0]
 800ffb4:	2b28      	cmp	r3, #40	; 0x28
 800ffb6:	d12f      	bne.n	8010018 <_strtod_l+0x380>
 800ffb8:	4996      	ldr	r1, [pc, #600]	; (8010214 <_strtod_l+0x57c>)
 800ffba:	aa18      	add	r2, sp, #96	; 0x60
 800ffbc:	a815      	add	r0, sp, #84	; 0x54
 800ffbe:	f002 fe2d 	bl	8012c1c <__hexnan>
 800ffc2:	2805      	cmp	r0, #5
 800ffc4:	d128      	bne.n	8010018 <_strtod_l+0x380>
 800ffc6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800ffc8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800ffcc:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800ffd0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800ffd4:	e69b      	b.n	800fd0e <_strtod_l+0x76>
 800ffd6:	9f08      	ldr	r7, [sp, #32]
 800ffd8:	210a      	movs	r1, #10
 800ffda:	fb01 2107 	mla	r1, r1, r7, r2
 800ffde:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 800ffe2:	9208      	str	r2, [sp, #32]
 800ffe4:	e7b5      	b.n	800ff52 <_strtod_l+0x2ba>
 800ffe6:	2a6e      	cmp	r2, #110	; 0x6e
 800ffe8:	e7d9      	b.n	800ff9e <_strtod_l+0x306>
 800ffea:	498b      	ldr	r1, [pc, #556]	; (8010218 <_strtod_l+0x580>)
 800ffec:	a815      	add	r0, sp, #84	; 0x54
 800ffee:	f002 fe01 	bl	8012bf4 <__match>
 800fff2:	2800      	cmp	r0, #0
 800fff4:	f43f aea8 	beq.w	800fd48 <_strtod_l+0xb0>
 800fff8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800fffa:	4988      	ldr	r1, [pc, #544]	; (801021c <_strtod_l+0x584>)
 800fffc:	3b01      	subs	r3, #1
 800fffe:	a815      	add	r0, sp, #84	; 0x54
 8010000:	9315      	str	r3, [sp, #84]	; 0x54
 8010002:	f002 fdf7 	bl	8012bf4 <__match>
 8010006:	b910      	cbnz	r0, 801000e <_strtod_l+0x376>
 8010008:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801000a:	3301      	adds	r3, #1
 801000c:	9315      	str	r3, [sp, #84]	; 0x54
 801000e:	f8df 921c 	ldr.w	r9, [pc, #540]	; 801022c <_strtod_l+0x594>
 8010012:	f04f 0800 	mov.w	r8, #0
 8010016:	e67a      	b.n	800fd0e <_strtod_l+0x76>
 8010018:	4881      	ldr	r0, [pc, #516]	; (8010220 <_strtod_l+0x588>)
 801001a:	f001 fc6d 	bl	80118f8 <nan>
 801001e:	ec59 8b10 	vmov	r8, r9, d0
 8010022:	e674      	b.n	800fd0e <_strtod_l+0x76>
 8010024:	9b05      	ldr	r3, [sp, #20]
 8010026:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010028:	1afb      	subs	r3, r7, r3
 801002a:	f1bb 0f00 	cmp.w	fp, #0
 801002e:	bf08      	it	eq
 8010030:	46b3      	moveq	fp, r6
 8010032:	2e10      	cmp	r6, #16
 8010034:	9308      	str	r3, [sp, #32]
 8010036:	4635      	mov	r5, r6
 8010038:	bfa8      	it	ge
 801003a:	2510      	movge	r5, #16
 801003c:	f7f0 fa62 	bl	8000504 <__aeabi_ui2d>
 8010040:	2e09      	cmp	r6, #9
 8010042:	4680      	mov	r8, r0
 8010044:	4689      	mov	r9, r1
 8010046:	dd13      	ble.n	8010070 <_strtod_l+0x3d8>
 8010048:	4b76      	ldr	r3, [pc, #472]	; (8010224 <_strtod_l+0x58c>)
 801004a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801004e:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8010052:	f7f0 fad1 	bl	80005f8 <__aeabi_dmul>
 8010056:	4680      	mov	r8, r0
 8010058:	4650      	mov	r0, sl
 801005a:	4689      	mov	r9, r1
 801005c:	f7f0 fa52 	bl	8000504 <__aeabi_ui2d>
 8010060:	4602      	mov	r2, r0
 8010062:	460b      	mov	r3, r1
 8010064:	4640      	mov	r0, r8
 8010066:	4649      	mov	r1, r9
 8010068:	f7f0 f910 	bl	800028c <__adddf3>
 801006c:	4680      	mov	r8, r0
 801006e:	4689      	mov	r9, r1
 8010070:	2e0f      	cmp	r6, #15
 8010072:	dc38      	bgt.n	80100e6 <_strtod_l+0x44e>
 8010074:	9b08      	ldr	r3, [sp, #32]
 8010076:	2b00      	cmp	r3, #0
 8010078:	f43f ae49 	beq.w	800fd0e <_strtod_l+0x76>
 801007c:	dd24      	ble.n	80100c8 <_strtod_l+0x430>
 801007e:	2b16      	cmp	r3, #22
 8010080:	dc0b      	bgt.n	801009a <_strtod_l+0x402>
 8010082:	4968      	ldr	r1, [pc, #416]	; (8010224 <_strtod_l+0x58c>)
 8010084:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8010088:	e9d1 0100 	ldrd	r0, r1, [r1]
 801008c:	4642      	mov	r2, r8
 801008e:	464b      	mov	r3, r9
 8010090:	f7f0 fab2 	bl	80005f8 <__aeabi_dmul>
 8010094:	4680      	mov	r8, r0
 8010096:	4689      	mov	r9, r1
 8010098:	e639      	b.n	800fd0e <_strtod_l+0x76>
 801009a:	9a08      	ldr	r2, [sp, #32]
 801009c:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 80100a0:	4293      	cmp	r3, r2
 80100a2:	db20      	blt.n	80100e6 <_strtod_l+0x44e>
 80100a4:	4c5f      	ldr	r4, [pc, #380]	; (8010224 <_strtod_l+0x58c>)
 80100a6:	f1c6 060f 	rsb	r6, r6, #15
 80100aa:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 80100ae:	4642      	mov	r2, r8
 80100b0:	464b      	mov	r3, r9
 80100b2:	e9d1 0100 	ldrd	r0, r1, [r1]
 80100b6:	f7f0 fa9f 	bl	80005f8 <__aeabi_dmul>
 80100ba:	9b08      	ldr	r3, [sp, #32]
 80100bc:	1b9e      	subs	r6, r3, r6
 80100be:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80100c2:	e9d4 2300 	ldrd	r2, r3, [r4]
 80100c6:	e7e3      	b.n	8010090 <_strtod_l+0x3f8>
 80100c8:	9b08      	ldr	r3, [sp, #32]
 80100ca:	3316      	adds	r3, #22
 80100cc:	db0b      	blt.n	80100e6 <_strtod_l+0x44e>
 80100ce:	9b05      	ldr	r3, [sp, #20]
 80100d0:	1bdf      	subs	r7, r3, r7
 80100d2:	4b54      	ldr	r3, [pc, #336]	; (8010224 <_strtod_l+0x58c>)
 80100d4:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80100d8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80100dc:	4640      	mov	r0, r8
 80100de:	4649      	mov	r1, r9
 80100e0:	f7f0 fbb4 	bl	800084c <__aeabi_ddiv>
 80100e4:	e7d6      	b.n	8010094 <_strtod_l+0x3fc>
 80100e6:	9b08      	ldr	r3, [sp, #32]
 80100e8:	1b75      	subs	r5, r6, r5
 80100ea:	441d      	add	r5, r3
 80100ec:	2d00      	cmp	r5, #0
 80100ee:	dd70      	ble.n	80101d2 <_strtod_l+0x53a>
 80100f0:	f015 030f 	ands.w	r3, r5, #15
 80100f4:	d00a      	beq.n	801010c <_strtod_l+0x474>
 80100f6:	494b      	ldr	r1, [pc, #300]	; (8010224 <_strtod_l+0x58c>)
 80100f8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80100fc:	4642      	mov	r2, r8
 80100fe:	464b      	mov	r3, r9
 8010100:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010104:	f7f0 fa78 	bl	80005f8 <__aeabi_dmul>
 8010108:	4680      	mov	r8, r0
 801010a:	4689      	mov	r9, r1
 801010c:	f035 050f 	bics.w	r5, r5, #15
 8010110:	d04d      	beq.n	80101ae <_strtod_l+0x516>
 8010112:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 8010116:	dd22      	ble.n	801015e <_strtod_l+0x4c6>
 8010118:	2500      	movs	r5, #0
 801011a:	46ab      	mov	fp, r5
 801011c:	9509      	str	r5, [sp, #36]	; 0x24
 801011e:	9505      	str	r5, [sp, #20]
 8010120:	2322      	movs	r3, #34	; 0x22
 8010122:	f8df 9108 	ldr.w	r9, [pc, #264]	; 801022c <_strtod_l+0x594>
 8010126:	6023      	str	r3, [r4, #0]
 8010128:	f04f 0800 	mov.w	r8, #0
 801012c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801012e:	2b00      	cmp	r3, #0
 8010130:	f43f aded 	beq.w	800fd0e <_strtod_l+0x76>
 8010134:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010136:	4620      	mov	r0, r4
 8010138:	f002 fe5e 	bl	8012df8 <_Bfree>
 801013c:	9905      	ldr	r1, [sp, #20]
 801013e:	4620      	mov	r0, r4
 8010140:	f002 fe5a 	bl	8012df8 <_Bfree>
 8010144:	4659      	mov	r1, fp
 8010146:	4620      	mov	r0, r4
 8010148:	f002 fe56 	bl	8012df8 <_Bfree>
 801014c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801014e:	4620      	mov	r0, r4
 8010150:	f002 fe52 	bl	8012df8 <_Bfree>
 8010154:	4629      	mov	r1, r5
 8010156:	4620      	mov	r0, r4
 8010158:	f002 fe4e 	bl	8012df8 <_Bfree>
 801015c:	e5d7      	b.n	800fd0e <_strtod_l+0x76>
 801015e:	4b32      	ldr	r3, [pc, #200]	; (8010228 <_strtod_l+0x590>)
 8010160:	9304      	str	r3, [sp, #16]
 8010162:	2300      	movs	r3, #0
 8010164:	112d      	asrs	r5, r5, #4
 8010166:	4640      	mov	r0, r8
 8010168:	4649      	mov	r1, r9
 801016a:	469a      	mov	sl, r3
 801016c:	2d01      	cmp	r5, #1
 801016e:	dc21      	bgt.n	80101b4 <_strtod_l+0x51c>
 8010170:	b10b      	cbz	r3, 8010176 <_strtod_l+0x4de>
 8010172:	4680      	mov	r8, r0
 8010174:	4689      	mov	r9, r1
 8010176:	492c      	ldr	r1, [pc, #176]	; (8010228 <_strtod_l+0x590>)
 8010178:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 801017c:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8010180:	4642      	mov	r2, r8
 8010182:	464b      	mov	r3, r9
 8010184:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010188:	f7f0 fa36 	bl	80005f8 <__aeabi_dmul>
 801018c:	4b27      	ldr	r3, [pc, #156]	; (801022c <_strtod_l+0x594>)
 801018e:	460a      	mov	r2, r1
 8010190:	400b      	ands	r3, r1
 8010192:	4927      	ldr	r1, [pc, #156]	; (8010230 <_strtod_l+0x598>)
 8010194:	428b      	cmp	r3, r1
 8010196:	4680      	mov	r8, r0
 8010198:	d8be      	bhi.n	8010118 <_strtod_l+0x480>
 801019a:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 801019e:	428b      	cmp	r3, r1
 80101a0:	bf86      	itte	hi
 80101a2:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 8010234 <_strtod_l+0x59c>
 80101a6:	f04f 38ff 	movhi.w	r8, #4294967295
 80101aa:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 80101ae:	2300      	movs	r3, #0
 80101b0:	9304      	str	r3, [sp, #16]
 80101b2:	e07b      	b.n	80102ac <_strtod_l+0x614>
 80101b4:	07ea      	lsls	r2, r5, #31
 80101b6:	d505      	bpl.n	80101c4 <_strtod_l+0x52c>
 80101b8:	9b04      	ldr	r3, [sp, #16]
 80101ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101be:	f7f0 fa1b 	bl	80005f8 <__aeabi_dmul>
 80101c2:	2301      	movs	r3, #1
 80101c4:	9a04      	ldr	r2, [sp, #16]
 80101c6:	3208      	adds	r2, #8
 80101c8:	f10a 0a01 	add.w	sl, sl, #1
 80101cc:	106d      	asrs	r5, r5, #1
 80101ce:	9204      	str	r2, [sp, #16]
 80101d0:	e7cc      	b.n	801016c <_strtod_l+0x4d4>
 80101d2:	d0ec      	beq.n	80101ae <_strtod_l+0x516>
 80101d4:	426d      	negs	r5, r5
 80101d6:	f015 020f 	ands.w	r2, r5, #15
 80101da:	d00a      	beq.n	80101f2 <_strtod_l+0x55a>
 80101dc:	4b11      	ldr	r3, [pc, #68]	; (8010224 <_strtod_l+0x58c>)
 80101de:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80101e2:	4640      	mov	r0, r8
 80101e4:	4649      	mov	r1, r9
 80101e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80101ea:	f7f0 fb2f 	bl	800084c <__aeabi_ddiv>
 80101ee:	4680      	mov	r8, r0
 80101f0:	4689      	mov	r9, r1
 80101f2:	112d      	asrs	r5, r5, #4
 80101f4:	d0db      	beq.n	80101ae <_strtod_l+0x516>
 80101f6:	2d1f      	cmp	r5, #31
 80101f8:	dd1e      	ble.n	8010238 <_strtod_l+0x5a0>
 80101fa:	2500      	movs	r5, #0
 80101fc:	46ab      	mov	fp, r5
 80101fe:	9509      	str	r5, [sp, #36]	; 0x24
 8010200:	9505      	str	r5, [sp, #20]
 8010202:	2322      	movs	r3, #34	; 0x22
 8010204:	f04f 0800 	mov.w	r8, #0
 8010208:	f04f 0900 	mov.w	r9, #0
 801020c:	6023      	str	r3, [r4, #0]
 801020e:	e78d      	b.n	801012c <_strtod_l+0x494>
 8010210:	08014426 	.word	0x08014426
 8010214:	080142dc 	.word	0x080142dc
 8010218:	0801441e 	.word	0x0801441e
 801021c:	0801445d 	.word	0x0801445d
 8010220:	080146e8 	.word	0x080146e8
 8010224:	080145c8 	.word	0x080145c8
 8010228:	080145a0 	.word	0x080145a0
 801022c:	7ff00000 	.word	0x7ff00000
 8010230:	7ca00000 	.word	0x7ca00000
 8010234:	7fefffff 	.word	0x7fefffff
 8010238:	f015 0310 	ands.w	r3, r5, #16
 801023c:	bf18      	it	ne
 801023e:	236a      	movne	r3, #106	; 0x6a
 8010240:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 80105e4 <_strtod_l+0x94c>
 8010244:	9304      	str	r3, [sp, #16]
 8010246:	4640      	mov	r0, r8
 8010248:	4649      	mov	r1, r9
 801024a:	2300      	movs	r3, #0
 801024c:	07ea      	lsls	r2, r5, #31
 801024e:	d504      	bpl.n	801025a <_strtod_l+0x5c2>
 8010250:	e9da 2300 	ldrd	r2, r3, [sl]
 8010254:	f7f0 f9d0 	bl	80005f8 <__aeabi_dmul>
 8010258:	2301      	movs	r3, #1
 801025a:	106d      	asrs	r5, r5, #1
 801025c:	f10a 0a08 	add.w	sl, sl, #8
 8010260:	d1f4      	bne.n	801024c <_strtod_l+0x5b4>
 8010262:	b10b      	cbz	r3, 8010268 <_strtod_l+0x5d0>
 8010264:	4680      	mov	r8, r0
 8010266:	4689      	mov	r9, r1
 8010268:	9b04      	ldr	r3, [sp, #16]
 801026a:	b1bb      	cbz	r3, 801029c <_strtod_l+0x604>
 801026c:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8010270:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8010274:	2b00      	cmp	r3, #0
 8010276:	4649      	mov	r1, r9
 8010278:	dd10      	ble.n	801029c <_strtod_l+0x604>
 801027a:	2b1f      	cmp	r3, #31
 801027c:	f340 811e 	ble.w	80104bc <_strtod_l+0x824>
 8010280:	2b34      	cmp	r3, #52	; 0x34
 8010282:	bfde      	ittt	le
 8010284:	f04f 33ff 	movle.w	r3, #4294967295
 8010288:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 801028c:	4093      	lslle	r3, r2
 801028e:	f04f 0800 	mov.w	r8, #0
 8010292:	bfcc      	ite	gt
 8010294:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8010298:	ea03 0901 	andle.w	r9, r3, r1
 801029c:	2200      	movs	r2, #0
 801029e:	2300      	movs	r3, #0
 80102a0:	4640      	mov	r0, r8
 80102a2:	4649      	mov	r1, r9
 80102a4:	f7f0 fc10 	bl	8000ac8 <__aeabi_dcmpeq>
 80102a8:	2800      	cmp	r0, #0
 80102aa:	d1a6      	bne.n	80101fa <_strtod_l+0x562>
 80102ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80102ae:	9300      	str	r3, [sp, #0]
 80102b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80102b2:	4633      	mov	r3, r6
 80102b4:	465a      	mov	r2, fp
 80102b6:	4620      	mov	r0, r4
 80102b8:	f002 fe06 	bl	8012ec8 <__s2b>
 80102bc:	9009      	str	r0, [sp, #36]	; 0x24
 80102be:	2800      	cmp	r0, #0
 80102c0:	f43f af2a 	beq.w	8010118 <_strtod_l+0x480>
 80102c4:	9a08      	ldr	r2, [sp, #32]
 80102c6:	9b05      	ldr	r3, [sp, #20]
 80102c8:	2a00      	cmp	r2, #0
 80102ca:	eba3 0307 	sub.w	r3, r3, r7
 80102ce:	bfa8      	it	ge
 80102d0:	2300      	movge	r3, #0
 80102d2:	930c      	str	r3, [sp, #48]	; 0x30
 80102d4:	2500      	movs	r5, #0
 80102d6:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 80102da:	9312      	str	r3, [sp, #72]	; 0x48
 80102dc:	46ab      	mov	fp, r5
 80102de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80102e0:	4620      	mov	r0, r4
 80102e2:	6859      	ldr	r1, [r3, #4]
 80102e4:	f002 fd48 	bl	8012d78 <_Balloc>
 80102e8:	9005      	str	r0, [sp, #20]
 80102ea:	2800      	cmp	r0, #0
 80102ec:	f43f af18 	beq.w	8010120 <_strtod_l+0x488>
 80102f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80102f2:	691a      	ldr	r2, [r3, #16]
 80102f4:	3202      	adds	r2, #2
 80102f6:	f103 010c 	add.w	r1, r3, #12
 80102fa:	0092      	lsls	r2, r2, #2
 80102fc:	300c      	adds	r0, #12
 80102fe:	f001 faeb 	bl	80118d8 <memcpy>
 8010302:	ec49 8b10 	vmov	d0, r8, r9
 8010306:	aa18      	add	r2, sp, #96	; 0x60
 8010308:	a917      	add	r1, sp, #92	; 0x5c
 801030a:	4620      	mov	r0, r4
 801030c:	f003 f910 	bl	8013530 <__d2b>
 8010310:	ec49 8b18 	vmov	d8, r8, r9
 8010314:	9016      	str	r0, [sp, #88]	; 0x58
 8010316:	2800      	cmp	r0, #0
 8010318:	f43f af02 	beq.w	8010120 <_strtod_l+0x488>
 801031c:	2101      	movs	r1, #1
 801031e:	4620      	mov	r0, r4
 8010320:	f002 fe6a 	bl	8012ff8 <__i2b>
 8010324:	4683      	mov	fp, r0
 8010326:	2800      	cmp	r0, #0
 8010328:	f43f aefa 	beq.w	8010120 <_strtod_l+0x488>
 801032c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801032e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010330:	2e00      	cmp	r6, #0
 8010332:	bfab      	itete	ge
 8010334:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 8010336:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 8010338:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 801033a:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 801033e:	bfac      	ite	ge
 8010340:	eb06 0a03 	addge.w	sl, r6, r3
 8010344:	1b9f      	sublt	r7, r3, r6
 8010346:	9b04      	ldr	r3, [sp, #16]
 8010348:	1af6      	subs	r6, r6, r3
 801034a:	4416      	add	r6, r2
 801034c:	4ba0      	ldr	r3, [pc, #640]	; (80105d0 <_strtod_l+0x938>)
 801034e:	3e01      	subs	r6, #1
 8010350:	429e      	cmp	r6, r3
 8010352:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8010356:	f280 80c4 	bge.w	80104e2 <_strtod_l+0x84a>
 801035a:	1b9b      	subs	r3, r3, r6
 801035c:	2b1f      	cmp	r3, #31
 801035e:	eba2 0203 	sub.w	r2, r2, r3
 8010362:	f04f 0101 	mov.w	r1, #1
 8010366:	f300 80b0 	bgt.w	80104ca <_strtod_l+0x832>
 801036a:	fa01 f303 	lsl.w	r3, r1, r3
 801036e:	930e      	str	r3, [sp, #56]	; 0x38
 8010370:	2300      	movs	r3, #0
 8010372:	930d      	str	r3, [sp, #52]	; 0x34
 8010374:	eb0a 0602 	add.w	r6, sl, r2
 8010378:	9b04      	ldr	r3, [sp, #16]
 801037a:	45b2      	cmp	sl, r6
 801037c:	4417      	add	r7, r2
 801037e:	441f      	add	r7, r3
 8010380:	4653      	mov	r3, sl
 8010382:	bfa8      	it	ge
 8010384:	4633      	movge	r3, r6
 8010386:	42bb      	cmp	r3, r7
 8010388:	bfa8      	it	ge
 801038a:	463b      	movge	r3, r7
 801038c:	2b00      	cmp	r3, #0
 801038e:	bfc2      	ittt	gt
 8010390:	1af6      	subgt	r6, r6, r3
 8010392:	1aff      	subgt	r7, r7, r3
 8010394:	ebaa 0a03 	subgt.w	sl, sl, r3
 8010398:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801039a:	2b00      	cmp	r3, #0
 801039c:	dd17      	ble.n	80103ce <_strtod_l+0x736>
 801039e:	4659      	mov	r1, fp
 80103a0:	461a      	mov	r2, r3
 80103a2:	4620      	mov	r0, r4
 80103a4:	f002 fee8 	bl	8013178 <__pow5mult>
 80103a8:	4683      	mov	fp, r0
 80103aa:	2800      	cmp	r0, #0
 80103ac:	f43f aeb8 	beq.w	8010120 <_strtod_l+0x488>
 80103b0:	4601      	mov	r1, r0
 80103b2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80103b4:	4620      	mov	r0, r4
 80103b6:	f002 fe35 	bl	8013024 <__multiply>
 80103ba:	900b      	str	r0, [sp, #44]	; 0x2c
 80103bc:	2800      	cmp	r0, #0
 80103be:	f43f aeaf 	beq.w	8010120 <_strtod_l+0x488>
 80103c2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80103c4:	4620      	mov	r0, r4
 80103c6:	f002 fd17 	bl	8012df8 <_Bfree>
 80103ca:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80103cc:	9316      	str	r3, [sp, #88]	; 0x58
 80103ce:	2e00      	cmp	r6, #0
 80103d0:	f300 808c 	bgt.w	80104ec <_strtod_l+0x854>
 80103d4:	9b08      	ldr	r3, [sp, #32]
 80103d6:	2b00      	cmp	r3, #0
 80103d8:	dd08      	ble.n	80103ec <_strtod_l+0x754>
 80103da:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80103dc:	9905      	ldr	r1, [sp, #20]
 80103de:	4620      	mov	r0, r4
 80103e0:	f002 feca 	bl	8013178 <__pow5mult>
 80103e4:	9005      	str	r0, [sp, #20]
 80103e6:	2800      	cmp	r0, #0
 80103e8:	f43f ae9a 	beq.w	8010120 <_strtod_l+0x488>
 80103ec:	2f00      	cmp	r7, #0
 80103ee:	dd08      	ble.n	8010402 <_strtod_l+0x76a>
 80103f0:	9905      	ldr	r1, [sp, #20]
 80103f2:	463a      	mov	r2, r7
 80103f4:	4620      	mov	r0, r4
 80103f6:	f002 ff19 	bl	801322c <__lshift>
 80103fa:	9005      	str	r0, [sp, #20]
 80103fc:	2800      	cmp	r0, #0
 80103fe:	f43f ae8f 	beq.w	8010120 <_strtod_l+0x488>
 8010402:	f1ba 0f00 	cmp.w	sl, #0
 8010406:	dd08      	ble.n	801041a <_strtod_l+0x782>
 8010408:	4659      	mov	r1, fp
 801040a:	4652      	mov	r2, sl
 801040c:	4620      	mov	r0, r4
 801040e:	f002 ff0d 	bl	801322c <__lshift>
 8010412:	4683      	mov	fp, r0
 8010414:	2800      	cmp	r0, #0
 8010416:	f43f ae83 	beq.w	8010120 <_strtod_l+0x488>
 801041a:	9a05      	ldr	r2, [sp, #20]
 801041c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801041e:	4620      	mov	r0, r4
 8010420:	f002 ff8c 	bl	801333c <__mdiff>
 8010424:	4605      	mov	r5, r0
 8010426:	2800      	cmp	r0, #0
 8010428:	f43f ae7a 	beq.w	8010120 <_strtod_l+0x488>
 801042c:	68c3      	ldr	r3, [r0, #12]
 801042e:	930b      	str	r3, [sp, #44]	; 0x2c
 8010430:	2300      	movs	r3, #0
 8010432:	60c3      	str	r3, [r0, #12]
 8010434:	4659      	mov	r1, fp
 8010436:	f002 ff65 	bl	8013304 <__mcmp>
 801043a:	2800      	cmp	r0, #0
 801043c:	da60      	bge.n	8010500 <_strtod_l+0x868>
 801043e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010440:	ea53 0308 	orrs.w	r3, r3, r8
 8010444:	f040 8084 	bne.w	8010550 <_strtod_l+0x8b8>
 8010448:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801044c:	2b00      	cmp	r3, #0
 801044e:	d17f      	bne.n	8010550 <_strtod_l+0x8b8>
 8010450:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8010454:	0d1b      	lsrs	r3, r3, #20
 8010456:	051b      	lsls	r3, r3, #20
 8010458:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 801045c:	d978      	bls.n	8010550 <_strtod_l+0x8b8>
 801045e:	696b      	ldr	r3, [r5, #20]
 8010460:	b913      	cbnz	r3, 8010468 <_strtod_l+0x7d0>
 8010462:	692b      	ldr	r3, [r5, #16]
 8010464:	2b01      	cmp	r3, #1
 8010466:	dd73      	ble.n	8010550 <_strtod_l+0x8b8>
 8010468:	4629      	mov	r1, r5
 801046a:	2201      	movs	r2, #1
 801046c:	4620      	mov	r0, r4
 801046e:	f002 fedd 	bl	801322c <__lshift>
 8010472:	4659      	mov	r1, fp
 8010474:	4605      	mov	r5, r0
 8010476:	f002 ff45 	bl	8013304 <__mcmp>
 801047a:	2800      	cmp	r0, #0
 801047c:	dd68      	ble.n	8010550 <_strtod_l+0x8b8>
 801047e:	9904      	ldr	r1, [sp, #16]
 8010480:	4a54      	ldr	r2, [pc, #336]	; (80105d4 <_strtod_l+0x93c>)
 8010482:	464b      	mov	r3, r9
 8010484:	2900      	cmp	r1, #0
 8010486:	f000 8084 	beq.w	8010592 <_strtod_l+0x8fa>
 801048a:	ea02 0109 	and.w	r1, r2, r9
 801048e:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8010492:	dc7e      	bgt.n	8010592 <_strtod_l+0x8fa>
 8010494:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8010498:	f77f aeb3 	ble.w	8010202 <_strtod_l+0x56a>
 801049c:	4b4e      	ldr	r3, [pc, #312]	; (80105d8 <_strtod_l+0x940>)
 801049e:	4640      	mov	r0, r8
 80104a0:	4649      	mov	r1, r9
 80104a2:	2200      	movs	r2, #0
 80104a4:	f7f0 f8a8 	bl	80005f8 <__aeabi_dmul>
 80104a8:	4b4a      	ldr	r3, [pc, #296]	; (80105d4 <_strtod_l+0x93c>)
 80104aa:	400b      	ands	r3, r1
 80104ac:	4680      	mov	r8, r0
 80104ae:	4689      	mov	r9, r1
 80104b0:	2b00      	cmp	r3, #0
 80104b2:	f47f ae3f 	bne.w	8010134 <_strtod_l+0x49c>
 80104b6:	2322      	movs	r3, #34	; 0x22
 80104b8:	6023      	str	r3, [r4, #0]
 80104ba:	e63b      	b.n	8010134 <_strtod_l+0x49c>
 80104bc:	f04f 32ff 	mov.w	r2, #4294967295
 80104c0:	fa02 f303 	lsl.w	r3, r2, r3
 80104c4:	ea03 0808 	and.w	r8, r3, r8
 80104c8:	e6e8      	b.n	801029c <_strtod_l+0x604>
 80104ca:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 80104ce:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 80104d2:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 80104d6:	36e2      	adds	r6, #226	; 0xe2
 80104d8:	fa01 f306 	lsl.w	r3, r1, r6
 80104dc:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 80104e0:	e748      	b.n	8010374 <_strtod_l+0x6dc>
 80104e2:	2100      	movs	r1, #0
 80104e4:	2301      	movs	r3, #1
 80104e6:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 80104ea:	e743      	b.n	8010374 <_strtod_l+0x6dc>
 80104ec:	9916      	ldr	r1, [sp, #88]	; 0x58
 80104ee:	4632      	mov	r2, r6
 80104f0:	4620      	mov	r0, r4
 80104f2:	f002 fe9b 	bl	801322c <__lshift>
 80104f6:	9016      	str	r0, [sp, #88]	; 0x58
 80104f8:	2800      	cmp	r0, #0
 80104fa:	f47f af6b 	bne.w	80103d4 <_strtod_l+0x73c>
 80104fe:	e60f      	b.n	8010120 <_strtod_l+0x488>
 8010500:	46ca      	mov	sl, r9
 8010502:	d171      	bne.n	80105e8 <_strtod_l+0x950>
 8010504:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010506:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801050a:	b352      	cbz	r2, 8010562 <_strtod_l+0x8ca>
 801050c:	4a33      	ldr	r2, [pc, #204]	; (80105dc <_strtod_l+0x944>)
 801050e:	4293      	cmp	r3, r2
 8010510:	d12a      	bne.n	8010568 <_strtod_l+0x8d0>
 8010512:	9b04      	ldr	r3, [sp, #16]
 8010514:	4641      	mov	r1, r8
 8010516:	b1fb      	cbz	r3, 8010558 <_strtod_l+0x8c0>
 8010518:	4b2e      	ldr	r3, [pc, #184]	; (80105d4 <_strtod_l+0x93c>)
 801051a:	ea09 0303 	and.w	r3, r9, r3
 801051e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8010522:	f04f 32ff 	mov.w	r2, #4294967295
 8010526:	d81a      	bhi.n	801055e <_strtod_l+0x8c6>
 8010528:	0d1b      	lsrs	r3, r3, #20
 801052a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 801052e:	fa02 f303 	lsl.w	r3, r2, r3
 8010532:	4299      	cmp	r1, r3
 8010534:	d118      	bne.n	8010568 <_strtod_l+0x8d0>
 8010536:	4b2a      	ldr	r3, [pc, #168]	; (80105e0 <_strtod_l+0x948>)
 8010538:	459a      	cmp	sl, r3
 801053a:	d102      	bne.n	8010542 <_strtod_l+0x8aa>
 801053c:	3101      	adds	r1, #1
 801053e:	f43f adef 	beq.w	8010120 <_strtod_l+0x488>
 8010542:	4b24      	ldr	r3, [pc, #144]	; (80105d4 <_strtod_l+0x93c>)
 8010544:	ea0a 0303 	and.w	r3, sl, r3
 8010548:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 801054c:	f04f 0800 	mov.w	r8, #0
 8010550:	9b04      	ldr	r3, [sp, #16]
 8010552:	2b00      	cmp	r3, #0
 8010554:	d1a2      	bne.n	801049c <_strtod_l+0x804>
 8010556:	e5ed      	b.n	8010134 <_strtod_l+0x49c>
 8010558:	f04f 33ff 	mov.w	r3, #4294967295
 801055c:	e7e9      	b.n	8010532 <_strtod_l+0x89a>
 801055e:	4613      	mov	r3, r2
 8010560:	e7e7      	b.n	8010532 <_strtod_l+0x89a>
 8010562:	ea53 0308 	orrs.w	r3, r3, r8
 8010566:	d08a      	beq.n	801047e <_strtod_l+0x7e6>
 8010568:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801056a:	b1e3      	cbz	r3, 80105a6 <_strtod_l+0x90e>
 801056c:	ea13 0f0a 	tst.w	r3, sl
 8010570:	d0ee      	beq.n	8010550 <_strtod_l+0x8b8>
 8010572:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010574:	9a04      	ldr	r2, [sp, #16]
 8010576:	4640      	mov	r0, r8
 8010578:	4649      	mov	r1, r9
 801057a:	b1c3      	cbz	r3, 80105ae <_strtod_l+0x916>
 801057c:	f7ff fb6f 	bl	800fc5e <sulp>
 8010580:	4602      	mov	r2, r0
 8010582:	460b      	mov	r3, r1
 8010584:	ec51 0b18 	vmov	r0, r1, d8
 8010588:	f7ef fe80 	bl	800028c <__adddf3>
 801058c:	4680      	mov	r8, r0
 801058e:	4689      	mov	r9, r1
 8010590:	e7de      	b.n	8010550 <_strtod_l+0x8b8>
 8010592:	4013      	ands	r3, r2
 8010594:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8010598:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 801059c:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 80105a0:	f04f 38ff 	mov.w	r8, #4294967295
 80105a4:	e7d4      	b.n	8010550 <_strtod_l+0x8b8>
 80105a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80105a8:	ea13 0f08 	tst.w	r3, r8
 80105ac:	e7e0      	b.n	8010570 <_strtod_l+0x8d8>
 80105ae:	f7ff fb56 	bl	800fc5e <sulp>
 80105b2:	4602      	mov	r2, r0
 80105b4:	460b      	mov	r3, r1
 80105b6:	ec51 0b18 	vmov	r0, r1, d8
 80105ba:	f7ef fe65 	bl	8000288 <__aeabi_dsub>
 80105be:	2200      	movs	r2, #0
 80105c0:	2300      	movs	r3, #0
 80105c2:	4680      	mov	r8, r0
 80105c4:	4689      	mov	r9, r1
 80105c6:	f7f0 fa7f 	bl	8000ac8 <__aeabi_dcmpeq>
 80105ca:	2800      	cmp	r0, #0
 80105cc:	d0c0      	beq.n	8010550 <_strtod_l+0x8b8>
 80105ce:	e618      	b.n	8010202 <_strtod_l+0x56a>
 80105d0:	fffffc02 	.word	0xfffffc02
 80105d4:	7ff00000 	.word	0x7ff00000
 80105d8:	39500000 	.word	0x39500000
 80105dc:	000fffff 	.word	0x000fffff
 80105e0:	7fefffff 	.word	0x7fefffff
 80105e4:	080142f0 	.word	0x080142f0
 80105e8:	4659      	mov	r1, fp
 80105ea:	4628      	mov	r0, r5
 80105ec:	f002 fffa 	bl	80135e4 <__ratio>
 80105f0:	ec57 6b10 	vmov	r6, r7, d0
 80105f4:	ee10 0a10 	vmov	r0, s0
 80105f8:	2200      	movs	r2, #0
 80105fa:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80105fe:	4639      	mov	r1, r7
 8010600:	f7f0 fa76 	bl	8000af0 <__aeabi_dcmple>
 8010604:	2800      	cmp	r0, #0
 8010606:	d071      	beq.n	80106ec <_strtod_l+0xa54>
 8010608:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801060a:	2b00      	cmp	r3, #0
 801060c:	d17c      	bne.n	8010708 <_strtod_l+0xa70>
 801060e:	f1b8 0f00 	cmp.w	r8, #0
 8010612:	d15a      	bne.n	80106ca <_strtod_l+0xa32>
 8010614:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8010618:	2b00      	cmp	r3, #0
 801061a:	d15d      	bne.n	80106d8 <_strtod_l+0xa40>
 801061c:	4b90      	ldr	r3, [pc, #576]	; (8010860 <_strtod_l+0xbc8>)
 801061e:	2200      	movs	r2, #0
 8010620:	4630      	mov	r0, r6
 8010622:	4639      	mov	r1, r7
 8010624:	f7f0 fa5a 	bl	8000adc <__aeabi_dcmplt>
 8010628:	2800      	cmp	r0, #0
 801062a:	d15c      	bne.n	80106e6 <_strtod_l+0xa4e>
 801062c:	4630      	mov	r0, r6
 801062e:	4639      	mov	r1, r7
 8010630:	4b8c      	ldr	r3, [pc, #560]	; (8010864 <_strtod_l+0xbcc>)
 8010632:	2200      	movs	r2, #0
 8010634:	f7ef ffe0 	bl	80005f8 <__aeabi_dmul>
 8010638:	4606      	mov	r6, r0
 801063a:	460f      	mov	r7, r1
 801063c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8010640:	9606      	str	r6, [sp, #24]
 8010642:	9307      	str	r3, [sp, #28]
 8010644:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8010648:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 801064c:	4b86      	ldr	r3, [pc, #536]	; (8010868 <_strtod_l+0xbd0>)
 801064e:	ea0a 0303 	and.w	r3, sl, r3
 8010652:	930d      	str	r3, [sp, #52]	; 0x34
 8010654:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010656:	4b85      	ldr	r3, [pc, #532]	; (801086c <_strtod_l+0xbd4>)
 8010658:	429a      	cmp	r2, r3
 801065a:	f040 8090 	bne.w	801077e <_strtod_l+0xae6>
 801065e:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 8010662:	ec49 8b10 	vmov	d0, r8, r9
 8010666:	f002 fef3 	bl	8013450 <__ulp>
 801066a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801066e:	ec51 0b10 	vmov	r0, r1, d0
 8010672:	f7ef ffc1 	bl	80005f8 <__aeabi_dmul>
 8010676:	4642      	mov	r2, r8
 8010678:	464b      	mov	r3, r9
 801067a:	f7ef fe07 	bl	800028c <__adddf3>
 801067e:	460b      	mov	r3, r1
 8010680:	4979      	ldr	r1, [pc, #484]	; (8010868 <_strtod_l+0xbd0>)
 8010682:	4a7b      	ldr	r2, [pc, #492]	; (8010870 <_strtod_l+0xbd8>)
 8010684:	4019      	ands	r1, r3
 8010686:	4291      	cmp	r1, r2
 8010688:	4680      	mov	r8, r0
 801068a:	d944      	bls.n	8010716 <_strtod_l+0xa7e>
 801068c:	ee18 2a90 	vmov	r2, s17
 8010690:	4b78      	ldr	r3, [pc, #480]	; (8010874 <_strtod_l+0xbdc>)
 8010692:	429a      	cmp	r2, r3
 8010694:	d104      	bne.n	80106a0 <_strtod_l+0xa08>
 8010696:	ee18 3a10 	vmov	r3, s16
 801069a:	3301      	adds	r3, #1
 801069c:	f43f ad40 	beq.w	8010120 <_strtod_l+0x488>
 80106a0:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8010874 <_strtod_l+0xbdc>
 80106a4:	f04f 38ff 	mov.w	r8, #4294967295
 80106a8:	9916      	ldr	r1, [sp, #88]	; 0x58
 80106aa:	4620      	mov	r0, r4
 80106ac:	f002 fba4 	bl	8012df8 <_Bfree>
 80106b0:	9905      	ldr	r1, [sp, #20]
 80106b2:	4620      	mov	r0, r4
 80106b4:	f002 fba0 	bl	8012df8 <_Bfree>
 80106b8:	4659      	mov	r1, fp
 80106ba:	4620      	mov	r0, r4
 80106bc:	f002 fb9c 	bl	8012df8 <_Bfree>
 80106c0:	4629      	mov	r1, r5
 80106c2:	4620      	mov	r0, r4
 80106c4:	f002 fb98 	bl	8012df8 <_Bfree>
 80106c8:	e609      	b.n	80102de <_strtod_l+0x646>
 80106ca:	f1b8 0f01 	cmp.w	r8, #1
 80106ce:	d103      	bne.n	80106d8 <_strtod_l+0xa40>
 80106d0:	f1b9 0f00 	cmp.w	r9, #0
 80106d4:	f43f ad95 	beq.w	8010202 <_strtod_l+0x56a>
 80106d8:	ed9f 7b55 	vldr	d7, [pc, #340]	; 8010830 <_strtod_l+0xb98>
 80106dc:	4f60      	ldr	r7, [pc, #384]	; (8010860 <_strtod_l+0xbc8>)
 80106de:	ed8d 7b06 	vstr	d7, [sp, #24]
 80106e2:	2600      	movs	r6, #0
 80106e4:	e7ae      	b.n	8010644 <_strtod_l+0x9ac>
 80106e6:	4f5f      	ldr	r7, [pc, #380]	; (8010864 <_strtod_l+0xbcc>)
 80106e8:	2600      	movs	r6, #0
 80106ea:	e7a7      	b.n	801063c <_strtod_l+0x9a4>
 80106ec:	4b5d      	ldr	r3, [pc, #372]	; (8010864 <_strtod_l+0xbcc>)
 80106ee:	4630      	mov	r0, r6
 80106f0:	4639      	mov	r1, r7
 80106f2:	2200      	movs	r2, #0
 80106f4:	f7ef ff80 	bl	80005f8 <__aeabi_dmul>
 80106f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80106fa:	4606      	mov	r6, r0
 80106fc:	460f      	mov	r7, r1
 80106fe:	2b00      	cmp	r3, #0
 8010700:	d09c      	beq.n	801063c <_strtod_l+0x9a4>
 8010702:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8010706:	e79d      	b.n	8010644 <_strtod_l+0x9ac>
 8010708:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 8010838 <_strtod_l+0xba0>
 801070c:	ed8d 7b06 	vstr	d7, [sp, #24]
 8010710:	ec57 6b17 	vmov	r6, r7, d7
 8010714:	e796      	b.n	8010644 <_strtod_l+0x9ac>
 8010716:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 801071a:	9b04      	ldr	r3, [sp, #16]
 801071c:	46ca      	mov	sl, r9
 801071e:	2b00      	cmp	r3, #0
 8010720:	d1c2      	bne.n	80106a8 <_strtod_l+0xa10>
 8010722:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8010726:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010728:	0d1b      	lsrs	r3, r3, #20
 801072a:	051b      	lsls	r3, r3, #20
 801072c:	429a      	cmp	r2, r3
 801072e:	d1bb      	bne.n	80106a8 <_strtod_l+0xa10>
 8010730:	4630      	mov	r0, r6
 8010732:	4639      	mov	r1, r7
 8010734:	f7f0 fac0 	bl	8000cb8 <__aeabi_d2lz>
 8010738:	f7ef ff30 	bl	800059c <__aeabi_l2d>
 801073c:	4602      	mov	r2, r0
 801073e:	460b      	mov	r3, r1
 8010740:	4630      	mov	r0, r6
 8010742:	4639      	mov	r1, r7
 8010744:	f7ef fda0 	bl	8000288 <__aeabi_dsub>
 8010748:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801074a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801074e:	ea43 0308 	orr.w	r3, r3, r8
 8010752:	4313      	orrs	r3, r2
 8010754:	4606      	mov	r6, r0
 8010756:	460f      	mov	r7, r1
 8010758:	d054      	beq.n	8010804 <_strtod_l+0xb6c>
 801075a:	a339      	add	r3, pc, #228	; (adr r3, 8010840 <_strtod_l+0xba8>)
 801075c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010760:	f7f0 f9bc 	bl	8000adc <__aeabi_dcmplt>
 8010764:	2800      	cmp	r0, #0
 8010766:	f47f ace5 	bne.w	8010134 <_strtod_l+0x49c>
 801076a:	a337      	add	r3, pc, #220	; (adr r3, 8010848 <_strtod_l+0xbb0>)
 801076c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010770:	4630      	mov	r0, r6
 8010772:	4639      	mov	r1, r7
 8010774:	f7f0 f9d0 	bl	8000b18 <__aeabi_dcmpgt>
 8010778:	2800      	cmp	r0, #0
 801077a:	d095      	beq.n	80106a8 <_strtod_l+0xa10>
 801077c:	e4da      	b.n	8010134 <_strtod_l+0x49c>
 801077e:	9b04      	ldr	r3, [sp, #16]
 8010780:	b333      	cbz	r3, 80107d0 <_strtod_l+0xb38>
 8010782:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010784:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8010788:	d822      	bhi.n	80107d0 <_strtod_l+0xb38>
 801078a:	a331      	add	r3, pc, #196	; (adr r3, 8010850 <_strtod_l+0xbb8>)
 801078c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010790:	4630      	mov	r0, r6
 8010792:	4639      	mov	r1, r7
 8010794:	f7f0 f9ac 	bl	8000af0 <__aeabi_dcmple>
 8010798:	b1a0      	cbz	r0, 80107c4 <_strtod_l+0xb2c>
 801079a:	4639      	mov	r1, r7
 801079c:	4630      	mov	r0, r6
 801079e:	f7f0 fa03 	bl	8000ba8 <__aeabi_d2uiz>
 80107a2:	2801      	cmp	r0, #1
 80107a4:	bf38      	it	cc
 80107a6:	2001      	movcc	r0, #1
 80107a8:	f7ef feac 	bl	8000504 <__aeabi_ui2d>
 80107ac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80107ae:	4606      	mov	r6, r0
 80107b0:	460f      	mov	r7, r1
 80107b2:	bb23      	cbnz	r3, 80107fe <_strtod_l+0xb66>
 80107b4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80107b8:	9010      	str	r0, [sp, #64]	; 0x40
 80107ba:	9311      	str	r3, [sp, #68]	; 0x44
 80107bc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80107c0:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 80107c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80107c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80107c8:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 80107cc:	1a9b      	subs	r3, r3, r2
 80107ce:	930f      	str	r3, [sp, #60]	; 0x3c
 80107d0:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80107d4:	eeb0 0a48 	vmov.f32	s0, s16
 80107d8:	eef0 0a68 	vmov.f32	s1, s17
 80107dc:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 80107e0:	f002 fe36 	bl	8013450 <__ulp>
 80107e4:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80107e8:	ec53 2b10 	vmov	r2, r3, d0
 80107ec:	f7ef ff04 	bl	80005f8 <__aeabi_dmul>
 80107f0:	ec53 2b18 	vmov	r2, r3, d8
 80107f4:	f7ef fd4a 	bl	800028c <__adddf3>
 80107f8:	4680      	mov	r8, r0
 80107fa:	4689      	mov	r9, r1
 80107fc:	e78d      	b.n	801071a <_strtod_l+0xa82>
 80107fe:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 8010802:	e7db      	b.n	80107bc <_strtod_l+0xb24>
 8010804:	a314      	add	r3, pc, #80	; (adr r3, 8010858 <_strtod_l+0xbc0>)
 8010806:	e9d3 2300 	ldrd	r2, r3, [r3]
 801080a:	f7f0 f967 	bl	8000adc <__aeabi_dcmplt>
 801080e:	e7b3      	b.n	8010778 <_strtod_l+0xae0>
 8010810:	2300      	movs	r3, #0
 8010812:	930a      	str	r3, [sp, #40]	; 0x28
 8010814:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010816:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010818:	6013      	str	r3, [r2, #0]
 801081a:	f7ff ba7c 	b.w	800fd16 <_strtod_l+0x7e>
 801081e:	2a65      	cmp	r2, #101	; 0x65
 8010820:	f43f ab75 	beq.w	800ff0e <_strtod_l+0x276>
 8010824:	2a45      	cmp	r2, #69	; 0x45
 8010826:	f43f ab72 	beq.w	800ff0e <_strtod_l+0x276>
 801082a:	2301      	movs	r3, #1
 801082c:	f7ff bbaa 	b.w	800ff84 <_strtod_l+0x2ec>
 8010830:	00000000 	.word	0x00000000
 8010834:	bff00000 	.word	0xbff00000
 8010838:	00000000 	.word	0x00000000
 801083c:	3ff00000 	.word	0x3ff00000
 8010840:	94a03595 	.word	0x94a03595
 8010844:	3fdfffff 	.word	0x3fdfffff
 8010848:	35afe535 	.word	0x35afe535
 801084c:	3fe00000 	.word	0x3fe00000
 8010850:	ffc00000 	.word	0xffc00000
 8010854:	41dfffff 	.word	0x41dfffff
 8010858:	94a03595 	.word	0x94a03595
 801085c:	3fcfffff 	.word	0x3fcfffff
 8010860:	3ff00000 	.word	0x3ff00000
 8010864:	3fe00000 	.word	0x3fe00000
 8010868:	7ff00000 	.word	0x7ff00000
 801086c:	7fe00000 	.word	0x7fe00000
 8010870:	7c9fffff 	.word	0x7c9fffff
 8010874:	7fefffff 	.word	0x7fefffff

08010878 <_strtod_r>:
 8010878:	4b01      	ldr	r3, [pc, #4]	; (8010880 <_strtod_r+0x8>)
 801087a:	f7ff ba0d 	b.w	800fc98 <_strtod_l>
 801087e:	bf00      	nop
 8010880:	2000012c 	.word	0x2000012c

08010884 <__cvt>:
 8010884:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010888:	ec55 4b10 	vmov	r4, r5, d0
 801088c:	2d00      	cmp	r5, #0
 801088e:	460e      	mov	r6, r1
 8010890:	4619      	mov	r1, r3
 8010892:	462b      	mov	r3, r5
 8010894:	bfbb      	ittet	lt
 8010896:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 801089a:	461d      	movlt	r5, r3
 801089c:	2300      	movge	r3, #0
 801089e:	232d      	movlt	r3, #45	; 0x2d
 80108a0:	700b      	strb	r3, [r1, #0]
 80108a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80108a4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80108a8:	4691      	mov	r9, r2
 80108aa:	f023 0820 	bic.w	r8, r3, #32
 80108ae:	bfbc      	itt	lt
 80108b0:	4622      	movlt	r2, r4
 80108b2:	4614      	movlt	r4, r2
 80108b4:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80108b8:	d005      	beq.n	80108c6 <__cvt+0x42>
 80108ba:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80108be:	d100      	bne.n	80108c2 <__cvt+0x3e>
 80108c0:	3601      	adds	r6, #1
 80108c2:	2102      	movs	r1, #2
 80108c4:	e000      	b.n	80108c8 <__cvt+0x44>
 80108c6:	2103      	movs	r1, #3
 80108c8:	ab03      	add	r3, sp, #12
 80108ca:	9301      	str	r3, [sp, #4]
 80108cc:	ab02      	add	r3, sp, #8
 80108ce:	9300      	str	r3, [sp, #0]
 80108d0:	ec45 4b10 	vmov	d0, r4, r5
 80108d4:	4653      	mov	r3, sl
 80108d6:	4632      	mov	r2, r6
 80108d8:	f001 f8a6 	bl	8011a28 <_dtoa_r>
 80108dc:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80108e0:	4607      	mov	r7, r0
 80108e2:	d102      	bne.n	80108ea <__cvt+0x66>
 80108e4:	f019 0f01 	tst.w	r9, #1
 80108e8:	d022      	beq.n	8010930 <__cvt+0xac>
 80108ea:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80108ee:	eb07 0906 	add.w	r9, r7, r6
 80108f2:	d110      	bne.n	8010916 <__cvt+0x92>
 80108f4:	783b      	ldrb	r3, [r7, #0]
 80108f6:	2b30      	cmp	r3, #48	; 0x30
 80108f8:	d10a      	bne.n	8010910 <__cvt+0x8c>
 80108fa:	2200      	movs	r2, #0
 80108fc:	2300      	movs	r3, #0
 80108fe:	4620      	mov	r0, r4
 8010900:	4629      	mov	r1, r5
 8010902:	f7f0 f8e1 	bl	8000ac8 <__aeabi_dcmpeq>
 8010906:	b918      	cbnz	r0, 8010910 <__cvt+0x8c>
 8010908:	f1c6 0601 	rsb	r6, r6, #1
 801090c:	f8ca 6000 	str.w	r6, [sl]
 8010910:	f8da 3000 	ldr.w	r3, [sl]
 8010914:	4499      	add	r9, r3
 8010916:	2200      	movs	r2, #0
 8010918:	2300      	movs	r3, #0
 801091a:	4620      	mov	r0, r4
 801091c:	4629      	mov	r1, r5
 801091e:	f7f0 f8d3 	bl	8000ac8 <__aeabi_dcmpeq>
 8010922:	b108      	cbz	r0, 8010928 <__cvt+0xa4>
 8010924:	f8cd 900c 	str.w	r9, [sp, #12]
 8010928:	2230      	movs	r2, #48	; 0x30
 801092a:	9b03      	ldr	r3, [sp, #12]
 801092c:	454b      	cmp	r3, r9
 801092e:	d307      	bcc.n	8010940 <__cvt+0xbc>
 8010930:	9b03      	ldr	r3, [sp, #12]
 8010932:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010934:	1bdb      	subs	r3, r3, r7
 8010936:	4638      	mov	r0, r7
 8010938:	6013      	str	r3, [r2, #0]
 801093a:	b004      	add	sp, #16
 801093c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010940:	1c59      	adds	r1, r3, #1
 8010942:	9103      	str	r1, [sp, #12]
 8010944:	701a      	strb	r2, [r3, #0]
 8010946:	e7f0      	b.n	801092a <__cvt+0xa6>

08010948 <__exponent>:
 8010948:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801094a:	4603      	mov	r3, r0
 801094c:	2900      	cmp	r1, #0
 801094e:	bfb8      	it	lt
 8010950:	4249      	neglt	r1, r1
 8010952:	f803 2b02 	strb.w	r2, [r3], #2
 8010956:	bfb4      	ite	lt
 8010958:	222d      	movlt	r2, #45	; 0x2d
 801095a:	222b      	movge	r2, #43	; 0x2b
 801095c:	2909      	cmp	r1, #9
 801095e:	7042      	strb	r2, [r0, #1]
 8010960:	dd2a      	ble.n	80109b8 <__exponent+0x70>
 8010962:	f10d 0207 	add.w	r2, sp, #7
 8010966:	4617      	mov	r7, r2
 8010968:	260a      	movs	r6, #10
 801096a:	4694      	mov	ip, r2
 801096c:	fb91 f5f6 	sdiv	r5, r1, r6
 8010970:	fb06 1415 	mls	r4, r6, r5, r1
 8010974:	3430      	adds	r4, #48	; 0x30
 8010976:	f80c 4c01 	strb.w	r4, [ip, #-1]
 801097a:	460c      	mov	r4, r1
 801097c:	2c63      	cmp	r4, #99	; 0x63
 801097e:	f102 32ff 	add.w	r2, r2, #4294967295
 8010982:	4629      	mov	r1, r5
 8010984:	dcf1      	bgt.n	801096a <__exponent+0x22>
 8010986:	3130      	adds	r1, #48	; 0x30
 8010988:	f1ac 0402 	sub.w	r4, ip, #2
 801098c:	f802 1c01 	strb.w	r1, [r2, #-1]
 8010990:	1c41      	adds	r1, r0, #1
 8010992:	4622      	mov	r2, r4
 8010994:	42ba      	cmp	r2, r7
 8010996:	d30a      	bcc.n	80109ae <__exponent+0x66>
 8010998:	f10d 0209 	add.w	r2, sp, #9
 801099c:	eba2 020c 	sub.w	r2, r2, ip
 80109a0:	42bc      	cmp	r4, r7
 80109a2:	bf88      	it	hi
 80109a4:	2200      	movhi	r2, #0
 80109a6:	4413      	add	r3, r2
 80109a8:	1a18      	subs	r0, r3, r0
 80109aa:	b003      	add	sp, #12
 80109ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80109ae:	f812 5b01 	ldrb.w	r5, [r2], #1
 80109b2:	f801 5f01 	strb.w	r5, [r1, #1]!
 80109b6:	e7ed      	b.n	8010994 <__exponent+0x4c>
 80109b8:	2330      	movs	r3, #48	; 0x30
 80109ba:	3130      	adds	r1, #48	; 0x30
 80109bc:	7083      	strb	r3, [r0, #2]
 80109be:	70c1      	strb	r1, [r0, #3]
 80109c0:	1d03      	adds	r3, r0, #4
 80109c2:	e7f1      	b.n	80109a8 <__exponent+0x60>

080109c4 <_printf_float>:
 80109c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109c8:	ed2d 8b02 	vpush	{d8}
 80109cc:	b08d      	sub	sp, #52	; 0x34
 80109ce:	460c      	mov	r4, r1
 80109d0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80109d4:	4616      	mov	r6, r2
 80109d6:	461f      	mov	r7, r3
 80109d8:	4605      	mov	r5, r0
 80109da:	f000 fef7 	bl	80117cc <_localeconv_r>
 80109de:	f8d0 a000 	ldr.w	sl, [r0]
 80109e2:	4650      	mov	r0, sl
 80109e4:	f7ef fc44 	bl	8000270 <strlen>
 80109e8:	2300      	movs	r3, #0
 80109ea:	930a      	str	r3, [sp, #40]	; 0x28
 80109ec:	6823      	ldr	r3, [r4, #0]
 80109ee:	9305      	str	r3, [sp, #20]
 80109f0:	f8d8 3000 	ldr.w	r3, [r8]
 80109f4:	f894 b018 	ldrb.w	fp, [r4, #24]
 80109f8:	3307      	adds	r3, #7
 80109fa:	f023 0307 	bic.w	r3, r3, #7
 80109fe:	f103 0208 	add.w	r2, r3, #8
 8010a02:	f8c8 2000 	str.w	r2, [r8]
 8010a06:	e9d3 8900 	ldrd	r8, r9, [r3]
 8010a0a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8010a0e:	9307      	str	r3, [sp, #28]
 8010a10:	f8cd 8018 	str.w	r8, [sp, #24]
 8010a14:	ee08 0a10 	vmov	s16, r0
 8010a18:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8010a1c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010a20:	4b9e      	ldr	r3, [pc, #632]	; (8010c9c <_printf_float+0x2d8>)
 8010a22:	f04f 32ff 	mov.w	r2, #4294967295
 8010a26:	f7f0 f881 	bl	8000b2c <__aeabi_dcmpun>
 8010a2a:	bb88      	cbnz	r0, 8010a90 <_printf_float+0xcc>
 8010a2c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8010a30:	4b9a      	ldr	r3, [pc, #616]	; (8010c9c <_printf_float+0x2d8>)
 8010a32:	f04f 32ff 	mov.w	r2, #4294967295
 8010a36:	f7f0 f85b 	bl	8000af0 <__aeabi_dcmple>
 8010a3a:	bb48      	cbnz	r0, 8010a90 <_printf_float+0xcc>
 8010a3c:	2200      	movs	r2, #0
 8010a3e:	2300      	movs	r3, #0
 8010a40:	4640      	mov	r0, r8
 8010a42:	4649      	mov	r1, r9
 8010a44:	f7f0 f84a 	bl	8000adc <__aeabi_dcmplt>
 8010a48:	b110      	cbz	r0, 8010a50 <_printf_float+0x8c>
 8010a4a:	232d      	movs	r3, #45	; 0x2d
 8010a4c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8010a50:	4a93      	ldr	r2, [pc, #588]	; (8010ca0 <_printf_float+0x2dc>)
 8010a52:	4b94      	ldr	r3, [pc, #592]	; (8010ca4 <_printf_float+0x2e0>)
 8010a54:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8010a58:	bf94      	ite	ls
 8010a5a:	4690      	movls	r8, r2
 8010a5c:	4698      	movhi	r8, r3
 8010a5e:	2303      	movs	r3, #3
 8010a60:	6123      	str	r3, [r4, #16]
 8010a62:	9b05      	ldr	r3, [sp, #20]
 8010a64:	f023 0304 	bic.w	r3, r3, #4
 8010a68:	6023      	str	r3, [r4, #0]
 8010a6a:	f04f 0900 	mov.w	r9, #0
 8010a6e:	9700      	str	r7, [sp, #0]
 8010a70:	4633      	mov	r3, r6
 8010a72:	aa0b      	add	r2, sp, #44	; 0x2c
 8010a74:	4621      	mov	r1, r4
 8010a76:	4628      	mov	r0, r5
 8010a78:	f000 f9da 	bl	8010e30 <_printf_common>
 8010a7c:	3001      	adds	r0, #1
 8010a7e:	f040 8090 	bne.w	8010ba2 <_printf_float+0x1de>
 8010a82:	f04f 30ff 	mov.w	r0, #4294967295
 8010a86:	b00d      	add	sp, #52	; 0x34
 8010a88:	ecbd 8b02 	vpop	{d8}
 8010a8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a90:	4642      	mov	r2, r8
 8010a92:	464b      	mov	r3, r9
 8010a94:	4640      	mov	r0, r8
 8010a96:	4649      	mov	r1, r9
 8010a98:	f7f0 f848 	bl	8000b2c <__aeabi_dcmpun>
 8010a9c:	b140      	cbz	r0, 8010ab0 <_printf_float+0xec>
 8010a9e:	464b      	mov	r3, r9
 8010aa0:	2b00      	cmp	r3, #0
 8010aa2:	bfbc      	itt	lt
 8010aa4:	232d      	movlt	r3, #45	; 0x2d
 8010aa6:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8010aaa:	4a7f      	ldr	r2, [pc, #508]	; (8010ca8 <_printf_float+0x2e4>)
 8010aac:	4b7f      	ldr	r3, [pc, #508]	; (8010cac <_printf_float+0x2e8>)
 8010aae:	e7d1      	b.n	8010a54 <_printf_float+0x90>
 8010ab0:	6863      	ldr	r3, [r4, #4]
 8010ab2:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8010ab6:	9206      	str	r2, [sp, #24]
 8010ab8:	1c5a      	adds	r2, r3, #1
 8010aba:	d13f      	bne.n	8010b3c <_printf_float+0x178>
 8010abc:	2306      	movs	r3, #6
 8010abe:	6063      	str	r3, [r4, #4]
 8010ac0:	9b05      	ldr	r3, [sp, #20]
 8010ac2:	6861      	ldr	r1, [r4, #4]
 8010ac4:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8010ac8:	2300      	movs	r3, #0
 8010aca:	9303      	str	r3, [sp, #12]
 8010acc:	ab0a      	add	r3, sp, #40	; 0x28
 8010ace:	e9cd b301 	strd	fp, r3, [sp, #4]
 8010ad2:	ab09      	add	r3, sp, #36	; 0x24
 8010ad4:	ec49 8b10 	vmov	d0, r8, r9
 8010ad8:	9300      	str	r3, [sp, #0]
 8010ada:	6022      	str	r2, [r4, #0]
 8010adc:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8010ae0:	4628      	mov	r0, r5
 8010ae2:	f7ff fecf 	bl	8010884 <__cvt>
 8010ae6:	9b06      	ldr	r3, [sp, #24]
 8010ae8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8010aea:	2b47      	cmp	r3, #71	; 0x47
 8010aec:	4680      	mov	r8, r0
 8010aee:	d108      	bne.n	8010b02 <_printf_float+0x13e>
 8010af0:	1cc8      	adds	r0, r1, #3
 8010af2:	db02      	blt.n	8010afa <_printf_float+0x136>
 8010af4:	6863      	ldr	r3, [r4, #4]
 8010af6:	4299      	cmp	r1, r3
 8010af8:	dd41      	ble.n	8010b7e <_printf_float+0x1ba>
 8010afa:	f1ab 0302 	sub.w	r3, fp, #2
 8010afe:	fa5f fb83 	uxtb.w	fp, r3
 8010b02:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8010b06:	d820      	bhi.n	8010b4a <_printf_float+0x186>
 8010b08:	3901      	subs	r1, #1
 8010b0a:	465a      	mov	r2, fp
 8010b0c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8010b10:	9109      	str	r1, [sp, #36]	; 0x24
 8010b12:	f7ff ff19 	bl	8010948 <__exponent>
 8010b16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010b18:	1813      	adds	r3, r2, r0
 8010b1a:	2a01      	cmp	r2, #1
 8010b1c:	4681      	mov	r9, r0
 8010b1e:	6123      	str	r3, [r4, #16]
 8010b20:	dc02      	bgt.n	8010b28 <_printf_float+0x164>
 8010b22:	6822      	ldr	r2, [r4, #0]
 8010b24:	07d2      	lsls	r2, r2, #31
 8010b26:	d501      	bpl.n	8010b2c <_printf_float+0x168>
 8010b28:	3301      	adds	r3, #1
 8010b2a:	6123      	str	r3, [r4, #16]
 8010b2c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8010b30:	2b00      	cmp	r3, #0
 8010b32:	d09c      	beq.n	8010a6e <_printf_float+0xaa>
 8010b34:	232d      	movs	r3, #45	; 0x2d
 8010b36:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8010b3a:	e798      	b.n	8010a6e <_printf_float+0xaa>
 8010b3c:	9a06      	ldr	r2, [sp, #24]
 8010b3e:	2a47      	cmp	r2, #71	; 0x47
 8010b40:	d1be      	bne.n	8010ac0 <_printf_float+0xfc>
 8010b42:	2b00      	cmp	r3, #0
 8010b44:	d1bc      	bne.n	8010ac0 <_printf_float+0xfc>
 8010b46:	2301      	movs	r3, #1
 8010b48:	e7b9      	b.n	8010abe <_printf_float+0xfa>
 8010b4a:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8010b4e:	d118      	bne.n	8010b82 <_printf_float+0x1be>
 8010b50:	2900      	cmp	r1, #0
 8010b52:	6863      	ldr	r3, [r4, #4]
 8010b54:	dd0b      	ble.n	8010b6e <_printf_float+0x1aa>
 8010b56:	6121      	str	r1, [r4, #16]
 8010b58:	b913      	cbnz	r3, 8010b60 <_printf_float+0x19c>
 8010b5a:	6822      	ldr	r2, [r4, #0]
 8010b5c:	07d0      	lsls	r0, r2, #31
 8010b5e:	d502      	bpl.n	8010b66 <_printf_float+0x1a2>
 8010b60:	3301      	adds	r3, #1
 8010b62:	440b      	add	r3, r1
 8010b64:	6123      	str	r3, [r4, #16]
 8010b66:	65a1      	str	r1, [r4, #88]	; 0x58
 8010b68:	f04f 0900 	mov.w	r9, #0
 8010b6c:	e7de      	b.n	8010b2c <_printf_float+0x168>
 8010b6e:	b913      	cbnz	r3, 8010b76 <_printf_float+0x1b2>
 8010b70:	6822      	ldr	r2, [r4, #0]
 8010b72:	07d2      	lsls	r2, r2, #31
 8010b74:	d501      	bpl.n	8010b7a <_printf_float+0x1b6>
 8010b76:	3302      	adds	r3, #2
 8010b78:	e7f4      	b.n	8010b64 <_printf_float+0x1a0>
 8010b7a:	2301      	movs	r3, #1
 8010b7c:	e7f2      	b.n	8010b64 <_printf_float+0x1a0>
 8010b7e:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8010b82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010b84:	4299      	cmp	r1, r3
 8010b86:	db05      	blt.n	8010b94 <_printf_float+0x1d0>
 8010b88:	6823      	ldr	r3, [r4, #0]
 8010b8a:	6121      	str	r1, [r4, #16]
 8010b8c:	07d8      	lsls	r0, r3, #31
 8010b8e:	d5ea      	bpl.n	8010b66 <_printf_float+0x1a2>
 8010b90:	1c4b      	adds	r3, r1, #1
 8010b92:	e7e7      	b.n	8010b64 <_printf_float+0x1a0>
 8010b94:	2900      	cmp	r1, #0
 8010b96:	bfd4      	ite	le
 8010b98:	f1c1 0202 	rsble	r2, r1, #2
 8010b9c:	2201      	movgt	r2, #1
 8010b9e:	4413      	add	r3, r2
 8010ba0:	e7e0      	b.n	8010b64 <_printf_float+0x1a0>
 8010ba2:	6823      	ldr	r3, [r4, #0]
 8010ba4:	055a      	lsls	r2, r3, #21
 8010ba6:	d407      	bmi.n	8010bb8 <_printf_float+0x1f4>
 8010ba8:	6923      	ldr	r3, [r4, #16]
 8010baa:	4642      	mov	r2, r8
 8010bac:	4631      	mov	r1, r6
 8010bae:	4628      	mov	r0, r5
 8010bb0:	47b8      	blx	r7
 8010bb2:	3001      	adds	r0, #1
 8010bb4:	d12c      	bne.n	8010c10 <_printf_float+0x24c>
 8010bb6:	e764      	b.n	8010a82 <_printf_float+0xbe>
 8010bb8:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8010bbc:	f240 80e0 	bls.w	8010d80 <_printf_float+0x3bc>
 8010bc0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8010bc4:	2200      	movs	r2, #0
 8010bc6:	2300      	movs	r3, #0
 8010bc8:	f7ef ff7e 	bl	8000ac8 <__aeabi_dcmpeq>
 8010bcc:	2800      	cmp	r0, #0
 8010bce:	d034      	beq.n	8010c3a <_printf_float+0x276>
 8010bd0:	4a37      	ldr	r2, [pc, #220]	; (8010cb0 <_printf_float+0x2ec>)
 8010bd2:	2301      	movs	r3, #1
 8010bd4:	4631      	mov	r1, r6
 8010bd6:	4628      	mov	r0, r5
 8010bd8:	47b8      	blx	r7
 8010bda:	3001      	adds	r0, #1
 8010bdc:	f43f af51 	beq.w	8010a82 <_printf_float+0xbe>
 8010be0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8010be4:	429a      	cmp	r2, r3
 8010be6:	db02      	blt.n	8010bee <_printf_float+0x22a>
 8010be8:	6823      	ldr	r3, [r4, #0]
 8010bea:	07d8      	lsls	r0, r3, #31
 8010bec:	d510      	bpl.n	8010c10 <_printf_float+0x24c>
 8010bee:	ee18 3a10 	vmov	r3, s16
 8010bf2:	4652      	mov	r2, sl
 8010bf4:	4631      	mov	r1, r6
 8010bf6:	4628      	mov	r0, r5
 8010bf8:	47b8      	blx	r7
 8010bfa:	3001      	adds	r0, #1
 8010bfc:	f43f af41 	beq.w	8010a82 <_printf_float+0xbe>
 8010c00:	f04f 0800 	mov.w	r8, #0
 8010c04:	f104 091a 	add.w	r9, r4, #26
 8010c08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010c0a:	3b01      	subs	r3, #1
 8010c0c:	4543      	cmp	r3, r8
 8010c0e:	dc09      	bgt.n	8010c24 <_printf_float+0x260>
 8010c10:	6823      	ldr	r3, [r4, #0]
 8010c12:	079b      	lsls	r3, r3, #30
 8010c14:	f100 8107 	bmi.w	8010e26 <_printf_float+0x462>
 8010c18:	68e0      	ldr	r0, [r4, #12]
 8010c1a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010c1c:	4298      	cmp	r0, r3
 8010c1e:	bfb8      	it	lt
 8010c20:	4618      	movlt	r0, r3
 8010c22:	e730      	b.n	8010a86 <_printf_float+0xc2>
 8010c24:	2301      	movs	r3, #1
 8010c26:	464a      	mov	r2, r9
 8010c28:	4631      	mov	r1, r6
 8010c2a:	4628      	mov	r0, r5
 8010c2c:	47b8      	blx	r7
 8010c2e:	3001      	adds	r0, #1
 8010c30:	f43f af27 	beq.w	8010a82 <_printf_float+0xbe>
 8010c34:	f108 0801 	add.w	r8, r8, #1
 8010c38:	e7e6      	b.n	8010c08 <_printf_float+0x244>
 8010c3a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010c3c:	2b00      	cmp	r3, #0
 8010c3e:	dc39      	bgt.n	8010cb4 <_printf_float+0x2f0>
 8010c40:	4a1b      	ldr	r2, [pc, #108]	; (8010cb0 <_printf_float+0x2ec>)
 8010c42:	2301      	movs	r3, #1
 8010c44:	4631      	mov	r1, r6
 8010c46:	4628      	mov	r0, r5
 8010c48:	47b8      	blx	r7
 8010c4a:	3001      	adds	r0, #1
 8010c4c:	f43f af19 	beq.w	8010a82 <_printf_float+0xbe>
 8010c50:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8010c54:	4313      	orrs	r3, r2
 8010c56:	d102      	bne.n	8010c5e <_printf_float+0x29a>
 8010c58:	6823      	ldr	r3, [r4, #0]
 8010c5a:	07d9      	lsls	r1, r3, #31
 8010c5c:	d5d8      	bpl.n	8010c10 <_printf_float+0x24c>
 8010c5e:	ee18 3a10 	vmov	r3, s16
 8010c62:	4652      	mov	r2, sl
 8010c64:	4631      	mov	r1, r6
 8010c66:	4628      	mov	r0, r5
 8010c68:	47b8      	blx	r7
 8010c6a:	3001      	adds	r0, #1
 8010c6c:	f43f af09 	beq.w	8010a82 <_printf_float+0xbe>
 8010c70:	f04f 0900 	mov.w	r9, #0
 8010c74:	f104 0a1a 	add.w	sl, r4, #26
 8010c78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010c7a:	425b      	negs	r3, r3
 8010c7c:	454b      	cmp	r3, r9
 8010c7e:	dc01      	bgt.n	8010c84 <_printf_float+0x2c0>
 8010c80:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010c82:	e792      	b.n	8010baa <_printf_float+0x1e6>
 8010c84:	2301      	movs	r3, #1
 8010c86:	4652      	mov	r2, sl
 8010c88:	4631      	mov	r1, r6
 8010c8a:	4628      	mov	r0, r5
 8010c8c:	47b8      	blx	r7
 8010c8e:	3001      	adds	r0, #1
 8010c90:	f43f aef7 	beq.w	8010a82 <_printf_float+0xbe>
 8010c94:	f109 0901 	add.w	r9, r9, #1
 8010c98:	e7ee      	b.n	8010c78 <_printf_float+0x2b4>
 8010c9a:	bf00      	nop
 8010c9c:	7fefffff 	.word	0x7fefffff
 8010ca0:	08014419 	.word	0x08014419
 8010ca4:	0801441d 	.word	0x0801441d
 8010ca8:	08014421 	.word	0x08014421
 8010cac:	08014425 	.word	0x08014425
 8010cb0:	08014429 	.word	0x08014429
 8010cb4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010cb6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8010cb8:	429a      	cmp	r2, r3
 8010cba:	bfa8      	it	ge
 8010cbc:	461a      	movge	r2, r3
 8010cbe:	2a00      	cmp	r2, #0
 8010cc0:	4691      	mov	r9, r2
 8010cc2:	dc37      	bgt.n	8010d34 <_printf_float+0x370>
 8010cc4:	f04f 0b00 	mov.w	fp, #0
 8010cc8:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8010ccc:	f104 021a 	add.w	r2, r4, #26
 8010cd0:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8010cd2:	9305      	str	r3, [sp, #20]
 8010cd4:	eba3 0309 	sub.w	r3, r3, r9
 8010cd8:	455b      	cmp	r3, fp
 8010cda:	dc33      	bgt.n	8010d44 <_printf_float+0x380>
 8010cdc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8010ce0:	429a      	cmp	r2, r3
 8010ce2:	db3b      	blt.n	8010d5c <_printf_float+0x398>
 8010ce4:	6823      	ldr	r3, [r4, #0]
 8010ce6:	07da      	lsls	r2, r3, #31
 8010ce8:	d438      	bmi.n	8010d5c <_printf_float+0x398>
 8010cea:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8010cee:	eba2 0903 	sub.w	r9, r2, r3
 8010cf2:	9b05      	ldr	r3, [sp, #20]
 8010cf4:	1ad2      	subs	r2, r2, r3
 8010cf6:	4591      	cmp	r9, r2
 8010cf8:	bfa8      	it	ge
 8010cfa:	4691      	movge	r9, r2
 8010cfc:	f1b9 0f00 	cmp.w	r9, #0
 8010d00:	dc35      	bgt.n	8010d6e <_printf_float+0x3aa>
 8010d02:	f04f 0800 	mov.w	r8, #0
 8010d06:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8010d0a:	f104 0a1a 	add.w	sl, r4, #26
 8010d0e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8010d12:	1a9b      	subs	r3, r3, r2
 8010d14:	eba3 0309 	sub.w	r3, r3, r9
 8010d18:	4543      	cmp	r3, r8
 8010d1a:	f77f af79 	ble.w	8010c10 <_printf_float+0x24c>
 8010d1e:	2301      	movs	r3, #1
 8010d20:	4652      	mov	r2, sl
 8010d22:	4631      	mov	r1, r6
 8010d24:	4628      	mov	r0, r5
 8010d26:	47b8      	blx	r7
 8010d28:	3001      	adds	r0, #1
 8010d2a:	f43f aeaa 	beq.w	8010a82 <_printf_float+0xbe>
 8010d2e:	f108 0801 	add.w	r8, r8, #1
 8010d32:	e7ec      	b.n	8010d0e <_printf_float+0x34a>
 8010d34:	4613      	mov	r3, r2
 8010d36:	4631      	mov	r1, r6
 8010d38:	4642      	mov	r2, r8
 8010d3a:	4628      	mov	r0, r5
 8010d3c:	47b8      	blx	r7
 8010d3e:	3001      	adds	r0, #1
 8010d40:	d1c0      	bne.n	8010cc4 <_printf_float+0x300>
 8010d42:	e69e      	b.n	8010a82 <_printf_float+0xbe>
 8010d44:	2301      	movs	r3, #1
 8010d46:	4631      	mov	r1, r6
 8010d48:	4628      	mov	r0, r5
 8010d4a:	9205      	str	r2, [sp, #20]
 8010d4c:	47b8      	blx	r7
 8010d4e:	3001      	adds	r0, #1
 8010d50:	f43f ae97 	beq.w	8010a82 <_printf_float+0xbe>
 8010d54:	9a05      	ldr	r2, [sp, #20]
 8010d56:	f10b 0b01 	add.w	fp, fp, #1
 8010d5a:	e7b9      	b.n	8010cd0 <_printf_float+0x30c>
 8010d5c:	ee18 3a10 	vmov	r3, s16
 8010d60:	4652      	mov	r2, sl
 8010d62:	4631      	mov	r1, r6
 8010d64:	4628      	mov	r0, r5
 8010d66:	47b8      	blx	r7
 8010d68:	3001      	adds	r0, #1
 8010d6a:	d1be      	bne.n	8010cea <_printf_float+0x326>
 8010d6c:	e689      	b.n	8010a82 <_printf_float+0xbe>
 8010d6e:	9a05      	ldr	r2, [sp, #20]
 8010d70:	464b      	mov	r3, r9
 8010d72:	4442      	add	r2, r8
 8010d74:	4631      	mov	r1, r6
 8010d76:	4628      	mov	r0, r5
 8010d78:	47b8      	blx	r7
 8010d7a:	3001      	adds	r0, #1
 8010d7c:	d1c1      	bne.n	8010d02 <_printf_float+0x33e>
 8010d7e:	e680      	b.n	8010a82 <_printf_float+0xbe>
 8010d80:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010d82:	2a01      	cmp	r2, #1
 8010d84:	dc01      	bgt.n	8010d8a <_printf_float+0x3c6>
 8010d86:	07db      	lsls	r3, r3, #31
 8010d88:	d53a      	bpl.n	8010e00 <_printf_float+0x43c>
 8010d8a:	2301      	movs	r3, #1
 8010d8c:	4642      	mov	r2, r8
 8010d8e:	4631      	mov	r1, r6
 8010d90:	4628      	mov	r0, r5
 8010d92:	47b8      	blx	r7
 8010d94:	3001      	adds	r0, #1
 8010d96:	f43f ae74 	beq.w	8010a82 <_printf_float+0xbe>
 8010d9a:	ee18 3a10 	vmov	r3, s16
 8010d9e:	4652      	mov	r2, sl
 8010da0:	4631      	mov	r1, r6
 8010da2:	4628      	mov	r0, r5
 8010da4:	47b8      	blx	r7
 8010da6:	3001      	adds	r0, #1
 8010da8:	f43f ae6b 	beq.w	8010a82 <_printf_float+0xbe>
 8010dac:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8010db0:	2200      	movs	r2, #0
 8010db2:	2300      	movs	r3, #0
 8010db4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8010db8:	f7ef fe86 	bl	8000ac8 <__aeabi_dcmpeq>
 8010dbc:	b9d8      	cbnz	r0, 8010df6 <_printf_float+0x432>
 8010dbe:	f10a 33ff 	add.w	r3, sl, #4294967295
 8010dc2:	f108 0201 	add.w	r2, r8, #1
 8010dc6:	4631      	mov	r1, r6
 8010dc8:	4628      	mov	r0, r5
 8010dca:	47b8      	blx	r7
 8010dcc:	3001      	adds	r0, #1
 8010dce:	d10e      	bne.n	8010dee <_printf_float+0x42a>
 8010dd0:	e657      	b.n	8010a82 <_printf_float+0xbe>
 8010dd2:	2301      	movs	r3, #1
 8010dd4:	4652      	mov	r2, sl
 8010dd6:	4631      	mov	r1, r6
 8010dd8:	4628      	mov	r0, r5
 8010dda:	47b8      	blx	r7
 8010ddc:	3001      	adds	r0, #1
 8010dde:	f43f ae50 	beq.w	8010a82 <_printf_float+0xbe>
 8010de2:	f108 0801 	add.w	r8, r8, #1
 8010de6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010de8:	3b01      	subs	r3, #1
 8010dea:	4543      	cmp	r3, r8
 8010dec:	dcf1      	bgt.n	8010dd2 <_printf_float+0x40e>
 8010dee:	464b      	mov	r3, r9
 8010df0:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8010df4:	e6da      	b.n	8010bac <_printf_float+0x1e8>
 8010df6:	f04f 0800 	mov.w	r8, #0
 8010dfa:	f104 0a1a 	add.w	sl, r4, #26
 8010dfe:	e7f2      	b.n	8010de6 <_printf_float+0x422>
 8010e00:	2301      	movs	r3, #1
 8010e02:	4642      	mov	r2, r8
 8010e04:	e7df      	b.n	8010dc6 <_printf_float+0x402>
 8010e06:	2301      	movs	r3, #1
 8010e08:	464a      	mov	r2, r9
 8010e0a:	4631      	mov	r1, r6
 8010e0c:	4628      	mov	r0, r5
 8010e0e:	47b8      	blx	r7
 8010e10:	3001      	adds	r0, #1
 8010e12:	f43f ae36 	beq.w	8010a82 <_printf_float+0xbe>
 8010e16:	f108 0801 	add.w	r8, r8, #1
 8010e1a:	68e3      	ldr	r3, [r4, #12]
 8010e1c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8010e1e:	1a5b      	subs	r3, r3, r1
 8010e20:	4543      	cmp	r3, r8
 8010e22:	dcf0      	bgt.n	8010e06 <_printf_float+0x442>
 8010e24:	e6f8      	b.n	8010c18 <_printf_float+0x254>
 8010e26:	f04f 0800 	mov.w	r8, #0
 8010e2a:	f104 0919 	add.w	r9, r4, #25
 8010e2e:	e7f4      	b.n	8010e1a <_printf_float+0x456>

08010e30 <_printf_common>:
 8010e30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8010e34:	4616      	mov	r6, r2
 8010e36:	4699      	mov	r9, r3
 8010e38:	688a      	ldr	r2, [r1, #8]
 8010e3a:	690b      	ldr	r3, [r1, #16]
 8010e3c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8010e40:	4293      	cmp	r3, r2
 8010e42:	bfb8      	it	lt
 8010e44:	4613      	movlt	r3, r2
 8010e46:	6033      	str	r3, [r6, #0]
 8010e48:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8010e4c:	4607      	mov	r7, r0
 8010e4e:	460c      	mov	r4, r1
 8010e50:	b10a      	cbz	r2, 8010e56 <_printf_common+0x26>
 8010e52:	3301      	adds	r3, #1
 8010e54:	6033      	str	r3, [r6, #0]
 8010e56:	6823      	ldr	r3, [r4, #0]
 8010e58:	0699      	lsls	r1, r3, #26
 8010e5a:	bf42      	ittt	mi
 8010e5c:	6833      	ldrmi	r3, [r6, #0]
 8010e5e:	3302      	addmi	r3, #2
 8010e60:	6033      	strmi	r3, [r6, #0]
 8010e62:	6825      	ldr	r5, [r4, #0]
 8010e64:	f015 0506 	ands.w	r5, r5, #6
 8010e68:	d106      	bne.n	8010e78 <_printf_common+0x48>
 8010e6a:	f104 0a19 	add.w	sl, r4, #25
 8010e6e:	68e3      	ldr	r3, [r4, #12]
 8010e70:	6832      	ldr	r2, [r6, #0]
 8010e72:	1a9b      	subs	r3, r3, r2
 8010e74:	42ab      	cmp	r3, r5
 8010e76:	dc26      	bgt.n	8010ec6 <_printf_common+0x96>
 8010e78:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8010e7c:	1e13      	subs	r3, r2, #0
 8010e7e:	6822      	ldr	r2, [r4, #0]
 8010e80:	bf18      	it	ne
 8010e82:	2301      	movne	r3, #1
 8010e84:	0692      	lsls	r2, r2, #26
 8010e86:	d42b      	bmi.n	8010ee0 <_printf_common+0xb0>
 8010e88:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8010e8c:	4649      	mov	r1, r9
 8010e8e:	4638      	mov	r0, r7
 8010e90:	47c0      	blx	r8
 8010e92:	3001      	adds	r0, #1
 8010e94:	d01e      	beq.n	8010ed4 <_printf_common+0xa4>
 8010e96:	6823      	ldr	r3, [r4, #0]
 8010e98:	6922      	ldr	r2, [r4, #16]
 8010e9a:	f003 0306 	and.w	r3, r3, #6
 8010e9e:	2b04      	cmp	r3, #4
 8010ea0:	bf02      	ittt	eq
 8010ea2:	68e5      	ldreq	r5, [r4, #12]
 8010ea4:	6833      	ldreq	r3, [r6, #0]
 8010ea6:	1aed      	subeq	r5, r5, r3
 8010ea8:	68a3      	ldr	r3, [r4, #8]
 8010eaa:	bf0c      	ite	eq
 8010eac:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8010eb0:	2500      	movne	r5, #0
 8010eb2:	4293      	cmp	r3, r2
 8010eb4:	bfc4      	itt	gt
 8010eb6:	1a9b      	subgt	r3, r3, r2
 8010eb8:	18ed      	addgt	r5, r5, r3
 8010eba:	2600      	movs	r6, #0
 8010ebc:	341a      	adds	r4, #26
 8010ebe:	42b5      	cmp	r5, r6
 8010ec0:	d11a      	bne.n	8010ef8 <_printf_common+0xc8>
 8010ec2:	2000      	movs	r0, #0
 8010ec4:	e008      	b.n	8010ed8 <_printf_common+0xa8>
 8010ec6:	2301      	movs	r3, #1
 8010ec8:	4652      	mov	r2, sl
 8010eca:	4649      	mov	r1, r9
 8010ecc:	4638      	mov	r0, r7
 8010ece:	47c0      	blx	r8
 8010ed0:	3001      	adds	r0, #1
 8010ed2:	d103      	bne.n	8010edc <_printf_common+0xac>
 8010ed4:	f04f 30ff 	mov.w	r0, #4294967295
 8010ed8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010edc:	3501      	adds	r5, #1
 8010ede:	e7c6      	b.n	8010e6e <_printf_common+0x3e>
 8010ee0:	18e1      	adds	r1, r4, r3
 8010ee2:	1c5a      	adds	r2, r3, #1
 8010ee4:	2030      	movs	r0, #48	; 0x30
 8010ee6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8010eea:	4422      	add	r2, r4
 8010eec:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8010ef0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8010ef4:	3302      	adds	r3, #2
 8010ef6:	e7c7      	b.n	8010e88 <_printf_common+0x58>
 8010ef8:	2301      	movs	r3, #1
 8010efa:	4622      	mov	r2, r4
 8010efc:	4649      	mov	r1, r9
 8010efe:	4638      	mov	r0, r7
 8010f00:	47c0      	blx	r8
 8010f02:	3001      	adds	r0, #1
 8010f04:	d0e6      	beq.n	8010ed4 <_printf_common+0xa4>
 8010f06:	3601      	adds	r6, #1
 8010f08:	e7d9      	b.n	8010ebe <_printf_common+0x8e>
	...

08010f0c <_printf_i>:
 8010f0c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8010f10:	7e0f      	ldrb	r7, [r1, #24]
 8010f12:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8010f14:	2f78      	cmp	r7, #120	; 0x78
 8010f16:	4691      	mov	r9, r2
 8010f18:	4680      	mov	r8, r0
 8010f1a:	460c      	mov	r4, r1
 8010f1c:	469a      	mov	sl, r3
 8010f1e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8010f22:	d807      	bhi.n	8010f34 <_printf_i+0x28>
 8010f24:	2f62      	cmp	r7, #98	; 0x62
 8010f26:	d80a      	bhi.n	8010f3e <_printf_i+0x32>
 8010f28:	2f00      	cmp	r7, #0
 8010f2a:	f000 80d4 	beq.w	80110d6 <_printf_i+0x1ca>
 8010f2e:	2f58      	cmp	r7, #88	; 0x58
 8010f30:	f000 80c0 	beq.w	80110b4 <_printf_i+0x1a8>
 8010f34:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8010f38:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8010f3c:	e03a      	b.n	8010fb4 <_printf_i+0xa8>
 8010f3e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8010f42:	2b15      	cmp	r3, #21
 8010f44:	d8f6      	bhi.n	8010f34 <_printf_i+0x28>
 8010f46:	a101      	add	r1, pc, #4	; (adr r1, 8010f4c <_printf_i+0x40>)
 8010f48:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8010f4c:	08010fa5 	.word	0x08010fa5
 8010f50:	08010fb9 	.word	0x08010fb9
 8010f54:	08010f35 	.word	0x08010f35
 8010f58:	08010f35 	.word	0x08010f35
 8010f5c:	08010f35 	.word	0x08010f35
 8010f60:	08010f35 	.word	0x08010f35
 8010f64:	08010fb9 	.word	0x08010fb9
 8010f68:	08010f35 	.word	0x08010f35
 8010f6c:	08010f35 	.word	0x08010f35
 8010f70:	08010f35 	.word	0x08010f35
 8010f74:	08010f35 	.word	0x08010f35
 8010f78:	080110bd 	.word	0x080110bd
 8010f7c:	08010fe5 	.word	0x08010fe5
 8010f80:	08011077 	.word	0x08011077
 8010f84:	08010f35 	.word	0x08010f35
 8010f88:	08010f35 	.word	0x08010f35
 8010f8c:	080110df 	.word	0x080110df
 8010f90:	08010f35 	.word	0x08010f35
 8010f94:	08010fe5 	.word	0x08010fe5
 8010f98:	08010f35 	.word	0x08010f35
 8010f9c:	08010f35 	.word	0x08010f35
 8010fa0:	0801107f 	.word	0x0801107f
 8010fa4:	682b      	ldr	r3, [r5, #0]
 8010fa6:	1d1a      	adds	r2, r3, #4
 8010fa8:	681b      	ldr	r3, [r3, #0]
 8010faa:	602a      	str	r2, [r5, #0]
 8010fac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8010fb0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8010fb4:	2301      	movs	r3, #1
 8010fb6:	e09f      	b.n	80110f8 <_printf_i+0x1ec>
 8010fb8:	6820      	ldr	r0, [r4, #0]
 8010fba:	682b      	ldr	r3, [r5, #0]
 8010fbc:	0607      	lsls	r7, r0, #24
 8010fbe:	f103 0104 	add.w	r1, r3, #4
 8010fc2:	6029      	str	r1, [r5, #0]
 8010fc4:	d501      	bpl.n	8010fca <_printf_i+0xbe>
 8010fc6:	681e      	ldr	r6, [r3, #0]
 8010fc8:	e003      	b.n	8010fd2 <_printf_i+0xc6>
 8010fca:	0646      	lsls	r6, r0, #25
 8010fcc:	d5fb      	bpl.n	8010fc6 <_printf_i+0xba>
 8010fce:	f9b3 6000 	ldrsh.w	r6, [r3]
 8010fd2:	2e00      	cmp	r6, #0
 8010fd4:	da03      	bge.n	8010fde <_printf_i+0xd2>
 8010fd6:	232d      	movs	r3, #45	; 0x2d
 8010fd8:	4276      	negs	r6, r6
 8010fda:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8010fde:	485a      	ldr	r0, [pc, #360]	; (8011148 <_printf_i+0x23c>)
 8010fe0:	230a      	movs	r3, #10
 8010fe2:	e012      	b.n	801100a <_printf_i+0xfe>
 8010fe4:	682b      	ldr	r3, [r5, #0]
 8010fe6:	6820      	ldr	r0, [r4, #0]
 8010fe8:	1d19      	adds	r1, r3, #4
 8010fea:	6029      	str	r1, [r5, #0]
 8010fec:	0605      	lsls	r5, r0, #24
 8010fee:	d501      	bpl.n	8010ff4 <_printf_i+0xe8>
 8010ff0:	681e      	ldr	r6, [r3, #0]
 8010ff2:	e002      	b.n	8010ffa <_printf_i+0xee>
 8010ff4:	0641      	lsls	r1, r0, #25
 8010ff6:	d5fb      	bpl.n	8010ff0 <_printf_i+0xe4>
 8010ff8:	881e      	ldrh	r6, [r3, #0]
 8010ffa:	4853      	ldr	r0, [pc, #332]	; (8011148 <_printf_i+0x23c>)
 8010ffc:	2f6f      	cmp	r7, #111	; 0x6f
 8010ffe:	bf0c      	ite	eq
 8011000:	2308      	moveq	r3, #8
 8011002:	230a      	movne	r3, #10
 8011004:	2100      	movs	r1, #0
 8011006:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801100a:	6865      	ldr	r5, [r4, #4]
 801100c:	60a5      	str	r5, [r4, #8]
 801100e:	2d00      	cmp	r5, #0
 8011010:	bfa2      	ittt	ge
 8011012:	6821      	ldrge	r1, [r4, #0]
 8011014:	f021 0104 	bicge.w	r1, r1, #4
 8011018:	6021      	strge	r1, [r4, #0]
 801101a:	b90e      	cbnz	r6, 8011020 <_printf_i+0x114>
 801101c:	2d00      	cmp	r5, #0
 801101e:	d04b      	beq.n	80110b8 <_printf_i+0x1ac>
 8011020:	4615      	mov	r5, r2
 8011022:	fbb6 f1f3 	udiv	r1, r6, r3
 8011026:	fb03 6711 	mls	r7, r3, r1, r6
 801102a:	5dc7      	ldrb	r7, [r0, r7]
 801102c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8011030:	4637      	mov	r7, r6
 8011032:	42bb      	cmp	r3, r7
 8011034:	460e      	mov	r6, r1
 8011036:	d9f4      	bls.n	8011022 <_printf_i+0x116>
 8011038:	2b08      	cmp	r3, #8
 801103a:	d10b      	bne.n	8011054 <_printf_i+0x148>
 801103c:	6823      	ldr	r3, [r4, #0]
 801103e:	07de      	lsls	r6, r3, #31
 8011040:	d508      	bpl.n	8011054 <_printf_i+0x148>
 8011042:	6923      	ldr	r3, [r4, #16]
 8011044:	6861      	ldr	r1, [r4, #4]
 8011046:	4299      	cmp	r1, r3
 8011048:	bfde      	ittt	le
 801104a:	2330      	movle	r3, #48	; 0x30
 801104c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8011050:	f105 35ff 	addle.w	r5, r5, #4294967295
 8011054:	1b52      	subs	r2, r2, r5
 8011056:	6122      	str	r2, [r4, #16]
 8011058:	f8cd a000 	str.w	sl, [sp]
 801105c:	464b      	mov	r3, r9
 801105e:	aa03      	add	r2, sp, #12
 8011060:	4621      	mov	r1, r4
 8011062:	4640      	mov	r0, r8
 8011064:	f7ff fee4 	bl	8010e30 <_printf_common>
 8011068:	3001      	adds	r0, #1
 801106a:	d14a      	bne.n	8011102 <_printf_i+0x1f6>
 801106c:	f04f 30ff 	mov.w	r0, #4294967295
 8011070:	b004      	add	sp, #16
 8011072:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011076:	6823      	ldr	r3, [r4, #0]
 8011078:	f043 0320 	orr.w	r3, r3, #32
 801107c:	6023      	str	r3, [r4, #0]
 801107e:	4833      	ldr	r0, [pc, #204]	; (801114c <_printf_i+0x240>)
 8011080:	2778      	movs	r7, #120	; 0x78
 8011082:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8011086:	6823      	ldr	r3, [r4, #0]
 8011088:	6829      	ldr	r1, [r5, #0]
 801108a:	061f      	lsls	r7, r3, #24
 801108c:	f851 6b04 	ldr.w	r6, [r1], #4
 8011090:	d402      	bmi.n	8011098 <_printf_i+0x18c>
 8011092:	065f      	lsls	r7, r3, #25
 8011094:	bf48      	it	mi
 8011096:	b2b6      	uxthmi	r6, r6
 8011098:	07df      	lsls	r7, r3, #31
 801109a:	bf48      	it	mi
 801109c:	f043 0320 	orrmi.w	r3, r3, #32
 80110a0:	6029      	str	r1, [r5, #0]
 80110a2:	bf48      	it	mi
 80110a4:	6023      	strmi	r3, [r4, #0]
 80110a6:	b91e      	cbnz	r6, 80110b0 <_printf_i+0x1a4>
 80110a8:	6823      	ldr	r3, [r4, #0]
 80110aa:	f023 0320 	bic.w	r3, r3, #32
 80110ae:	6023      	str	r3, [r4, #0]
 80110b0:	2310      	movs	r3, #16
 80110b2:	e7a7      	b.n	8011004 <_printf_i+0xf8>
 80110b4:	4824      	ldr	r0, [pc, #144]	; (8011148 <_printf_i+0x23c>)
 80110b6:	e7e4      	b.n	8011082 <_printf_i+0x176>
 80110b8:	4615      	mov	r5, r2
 80110ba:	e7bd      	b.n	8011038 <_printf_i+0x12c>
 80110bc:	682b      	ldr	r3, [r5, #0]
 80110be:	6826      	ldr	r6, [r4, #0]
 80110c0:	6961      	ldr	r1, [r4, #20]
 80110c2:	1d18      	adds	r0, r3, #4
 80110c4:	6028      	str	r0, [r5, #0]
 80110c6:	0635      	lsls	r5, r6, #24
 80110c8:	681b      	ldr	r3, [r3, #0]
 80110ca:	d501      	bpl.n	80110d0 <_printf_i+0x1c4>
 80110cc:	6019      	str	r1, [r3, #0]
 80110ce:	e002      	b.n	80110d6 <_printf_i+0x1ca>
 80110d0:	0670      	lsls	r0, r6, #25
 80110d2:	d5fb      	bpl.n	80110cc <_printf_i+0x1c0>
 80110d4:	8019      	strh	r1, [r3, #0]
 80110d6:	2300      	movs	r3, #0
 80110d8:	6123      	str	r3, [r4, #16]
 80110da:	4615      	mov	r5, r2
 80110dc:	e7bc      	b.n	8011058 <_printf_i+0x14c>
 80110de:	682b      	ldr	r3, [r5, #0]
 80110e0:	1d1a      	adds	r2, r3, #4
 80110e2:	602a      	str	r2, [r5, #0]
 80110e4:	681d      	ldr	r5, [r3, #0]
 80110e6:	6862      	ldr	r2, [r4, #4]
 80110e8:	2100      	movs	r1, #0
 80110ea:	4628      	mov	r0, r5
 80110ec:	f7ef f870 	bl	80001d0 <memchr>
 80110f0:	b108      	cbz	r0, 80110f6 <_printf_i+0x1ea>
 80110f2:	1b40      	subs	r0, r0, r5
 80110f4:	6060      	str	r0, [r4, #4]
 80110f6:	6863      	ldr	r3, [r4, #4]
 80110f8:	6123      	str	r3, [r4, #16]
 80110fa:	2300      	movs	r3, #0
 80110fc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8011100:	e7aa      	b.n	8011058 <_printf_i+0x14c>
 8011102:	6923      	ldr	r3, [r4, #16]
 8011104:	462a      	mov	r2, r5
 8011106:	4649      	mov	r1, r9
 8011108:	4640      	mov	r0, r8
 801110a:	47d0      	blx	sl
 801110c:	3001      	adds	r0, #1
 801110e:	d0ad      	beq.n	801106c <_printf_i+0x160>
 8011110:	6823      	ldr	r3, [r4, #0]
 8011112:	079b      	lsls	r3, r3, #30
 8011114:	d413      	bmi.n	801113e <_printf_i+0x232>
 8011116:	68e0      	ldr	r0, [r4, #12]
 8011118:	9b03      	ldr	r3, [sp, #12]
 801111a:	4298      	cmp	r0, r3
 801111c:	bfb8      	it	lt
 801111e:	4618      	movlt	r0, r3
 8011120:	e7a6      	b.n	8011070 <_printf_i+0x164>
 8011122:	2301      	movs	r3, #1
 8011124:	4632      	mov	r2, r6
 8011126:	4649      	mov	r1, r9
 8011128:	4640      	mov	r0, r8
 801112a:	47d0      	blx	sl
 801112c:	3001      	adds	r0, #1
 801112e:	d09d      	beq.n	801106c <_printf_i+0x160>
 8011130:	3501      	adds	r5, #1
 8011132:	68e3      	ldr	r3, [r4, #12]
 8011134:	9903      	ldr	r1, [sp, #12]
 8011136:	1a5b      	subs	r3, r3, r1
 8011138:	42ab      	cmp	r3, r5
 801113a:	dcf2      	bgt.n	8011122 <_printf_i+0x216>
 801113c:	e7eb      	b.n	8011116 <_printf_i+0x20a>
 801113e:	2500      	movs	r5, #0
 8011140:	f104 0619 	add.w	r6, r4, #25
 8011144:	e7f5      	b.n	8011132 <_printf_i+0x226>
 8011146:	bf00      	nop
 8011148:	0801442b 	.word	0x0801442b
 801114c:	0801443c 	.word	0x0801443c

08011150 <_scanf_float>:
 8011150:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011154:	b087      	sub	sp, #28
 8011156:	4617      	mov	r7, r2
 8011158:	9303      	str	r3, [sp, #12]
 801115a:	688b      	ldr	r3, [r1, #8]
 801115c:	1e5a      	subs	r2, r3, #1
 801115e:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8011162:	bf83      	ittte	hi
 8011164:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8011168:	195b      	addhi	r3, r3, r5
 801116a:	9302      	strhi	r3, [sp, #8]
 801116c:	2300      	movls	r3, #0
 801116e:	bf86      	itte	hi
 8011170:	f240 135d 	movwhi	r3, #349	; 0x15d
 8011174:	608b      	strhi	r3, [r1, #8]
 8011176:	9302      	strls	r3, [sp, #8]
 8011178:	680b      	ldr	r3, [r1, #0]
 801117a:	468b      	mov	fp, r1
 801117c:	2500      	movs	r5, #0
 801117e:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8011182:	f84b 3b1c 	str.w	r3, [fp], #28
 8011186:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801118a:	4680      	mov	r8, r0
 801118c:	460c      	mov	r4, r1
 801118e:	465e      	mov	r6, fp
 8011190:	46aa      	mov	sl, r5
 8011192:	46a9      	mov	r9, r5
 8011194:	9501      	str	r5, [sp, #4]
 8011196:	68a2      	ldr	r2, [r4, #8]
 8011198:	b152      	cbz	r2, 80111b0 <_scanf_float+0x60>
 801119a:	683b      	ldr	r3, [r7, #0]
 801119c:	781b      	ldrb	r3, [r3, #0]
 801119e:	2b4e      	cmp	r3, #78	; 0x4e
 80111a0:	d864      	bhi.n	801126c <_scanf_float+0x11c>
 80111a2:	2b40      	cmp	r3, #64	; 0x40
 80111a4:	d83c      	bhi.n	8011220 <_scanf_float+0xd0>
 80111a6:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 80111aa:	b2c8      	uxtb	r0, r1
 80111ac:	280e      	cmp	r0, #14
 80111ae:	d93a      	bls.n	8011226 <_scanf_float+0xd6>
 80111b0:	f1b9 0f00 	cmp.w	r9, #0
 80111b4:	d003      	beq.n	80111be <_scanf_float+0x6e>
 80111b6:	6823      	ldr	r3, [r4, #0]
 80111b8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80111bc:	6023      	str	r3, [r4, #0]
 80111be:	f10a 3aff 	add.w	sl, sl, #4294967295
 80111c2:	f1ba 0f01 	cmp.w	sl, #1
 80111c6:	f200 8113 	bhi.w	80113f0 <_scanf_float+0x2a0>
 80111ca:	455e      	cmp	r6, fp
 80111cc:	f200 8105 	bhi.w	80113da <_scanf_float+0x28a>
 80111d0:	2501      	movs	r5, #1
 80111d2:	4628      	mov	r0, r5
 80111d4:	b007      	add	sp, #28
 80111d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80111da:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 80111de:	2a0d      	cmp	r2, #13
 80111e0:	d8e6      	bhi.n	80111b0 <_scanf_float+0x60>
 80111e2:	a101      	add	r1, pc, #4	; (adr r1, 80111e8 <_scanf_float+0x98>)
 80111e4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 80111e8:	08011327 	.word	0x08011327
 80111ec:	080111b1 	.word	0x080111b1
 80111f0:	080111b1 	.word	0x080111b1
 80111f4:	080111b1 	.word	0x080111b1
 80111f8:	08011387 	.word	0x08011387
 80111fc:	0801135f 	.word	0x0801135f
 8011200:	080111b1 	.word	0x080111b1
 8011204:	080111b1 	.word	0x080111b1
 8011208:	08011335 	.word	0x08011335
 801120c:	080111b1 	.word	0x080111b1
 8011210:	080111b1 	.word	0x080111b1
 8011214:	080111b1 	.word	0x080111b1
 8011218:	080111b1 	.word	0x080111b1
 801121c:	080112ed 	.word	0x080112ed
 8011220:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8011224:	e7db      	b.n	80111de <_scanf_float+0x8e>
 8011226:	290e      	cmp	r1, #14
 8011228:	d8c2      	bhi.n	80111b0 <_scanf_float+0x60>
 801122a:	a001      	add	r0, pc, #4	; (adr r0, 8011230 <_scanf_float+0xe0>)
 801122c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8011230:	080112df 	.word	0x080112df
 8011234:	080111b1 	.word	0x080111b1
 8011238:	080112df 	.word	0x080112df
 801123c:	08011373 	.word	0x08011373
 8011240:	080111b1 	.word	0x080111b1
 8011244:	0801128d 	.word	0x0801128d
 8011248:	080112c9 	.word	0x080112c9
 801124c:	080112c9 	.word	0x080112c9
 8011250:	080112c9 	.word	0x080112c9
 8011254:	080112c9 	.word	0x080112c9
 8011258:	080112c9 	.word	0x080112c9
 801125c:	080112c9 	.word	0x080112c9
 8011260:	080112c9 	.word	0x080112c9
 8011264:	080112c9 	.word	0x080112c9
 8011268:	080112c9 	.word	0x080112c9
 801126c:	2b6e      	cmp	r3, #110	; 0x6e
 801126e:	d809      	bhi.n	8011284 <_scanf_float+0x134>
 8011270:	2b60      	cmp	r3, #96	; 0x60
 8011272:	d8b2      	bhi.n	80111da <_scanf_float+0x8a>
 8011274:	2b54      	cmp	r3, #84	; 0x54
 8011276:	d077      	beq.n	8011368 <_scanf_float+0x218>
 8011278:	2b59      	cmp	r3, #89	; 0x59
 801127a:	d199      	bne.n	80111b0 <_scanf_float+0x60>
 801127c:	2d07      	cmp	r5, #7
 801127e:	d197      	bne.n	80111b0 <_scanf_float+0x60>
 8011280:	2508      	movs	r5, #8
 8011282:	e029      	b.n	80112d8 <_scanf_float+0x188>
 8011284:	2b74      	cmp	r3, #116	; 0x74
 8011286:	d06f      	beq.n	8011368 <_scanf_float+0x218>
 8011288:	2b79      	cmp	r3, #121	; 0x79
 801128a:	e7f6      	b.n	801127a <_scanf_float+0x12a>
 801128c:	6821      	ldr	r1, [r4, #0]
 801128e:	05c8      	lsls	r0, r1, #23
 8011290:	d51a      	bpl.n	80112c8 <_scanf_float+0x178>
 8011292:	9b02      	ldr	r3, [sp, #8]
 8011294:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8011298:	6021      	str	r1, [r4, #0]
 801129a:	f109 0901 	add.w	r9, r9, #1
 801129e:	b11b      	cbz	r3, 80112a8 <_scanf_float+0x158>
 80112a0:	3b01      	subs	r3, #1
 80112a2:	3201      	adds	r2, #1
 80112a4:	9302      	str	r3, [sp, #8]
 80112a6:	60a2      	str	r2, [r4, #8]
 80112a8:	68a3      	ldr	r3, [r4, #8]
 80112aa:	3b01      	subs	r3, #1
 80112ac:	60a3      	str	r3, [r4, #8]
 80112ae:	6923      	ldr	r3, [r4, #16]
 80112b0:	3301      	adds	r3, #1
 80112b2:	6123      	str	r3, [r4, #16]
 80112b4:	687b      	ldr	r3, [r7, #4]
 80112b6:	3b01      	subs	r3, #1
 80112b8:	2b00      	cmp	r3, #0
 80112ba:	607b      	str	r3, [r7, #4]
 80112bc:	f340 8084 	ble.w	80113c8 <_scanf_float+0x278>
 80112c0:	683b      	ldr	r3, [r7, #0]
 80112c2:	3301      	adds	r3, #1
 80112c4:	603b      	str	r3, [r7, #0]
 80112c6:	e766      	b.n	8011196 <_scanf_float+0x46>
 80112c8:	eb1a 0f05 	cmn.w	sl, r5
 80112cc:	f47f af70 	bne.w	80111b0 <_scanf_float+0x60>
 80112d0:	6822      	ldr	r2, [r4, #0]
 80112d2:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 80112d6:	6022      	str	r2, [r4, #0]
 80112d8:	f806 3b01 	strb.w	r3, [r6], #1
 80112dc:	e7e4      	b.n	80112a8 <_scanf_float+0x158>
 80112de:	6822      	ldr	r2, [r4, #0]
 80112e0:	0610      	lsls	r0, r2, #24
 80112e2:	f57f af65 	bpl.w	80111b0 <_scanf_float+0x60>
 80112e6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 80112ea:	e7f4      	b.n	80112d6 <_scanf_float+0x186>
 80112ec:	f1ba 0f00 	cmp.w	sl, #0
 80112f0:	d10e      	bne.n	8011310 <_scanf_float+0x1c0>
 80112f2:	f1b9 0f00 	cmp.w	r9, #0
 80112f6:	d10e      	bne.n	8011316 <_scanf_float+0x1c6>
 80112f8:	6822      	ldr	r2, [r4, #0]
 80112fa:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80112fe:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8011302:	d108      	bne.n	8011316 <_scanf_float+0x1c6>
 8011304:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8011308:	6022      	str	r2, [r4, #0]
 801130a:	f04f 0a01 	mov.w	sl, #1
 801130e:	e7e3      	b.n	80112d8 <_scanf_float+0x188>
 8011310:	f1ba 0f02 	cmp.w	sl, #2
 8011314:	d055      	beq.n	80113c2 <_scanf_float+0x272>
 8011316:	2d01      	cmp	r5, #1
 8011318:	d002      	beq.n	8011320 <_scanf_float+0x1d0>
 801131a:	2d04      	cmp	r5, #4
 801131c:	f47f af48 	bne.w	80111b0 <_scanf_float+0x60>
 8011320:	3501      	adds	r5, #1
 8011322:	b2ed      	uxtb	r5, r5
 8011324:	e7d8      	b.n	80112d8 <_scanf_float+0x188>
 8011326:	f1ba 0f01 	cmp.w	sl, #1
 801132a:	f47f af41 	bne.w	80111b0 <_scanf_float+0x60>
 801132e:	f04f 0a02 	mov.w	sl, #2
 8011332:	e7d1      	b.n	80112d8 <_scanf_float+0x188>
 8011334:	b97d      	cbnz	r5, 8011356 <_scanf_float+0x206>
 8011336:	f1b9 0f00 	cmp.w	r9, #0
 801133a:	f47f af3c 	bne.w	80111b6 <_scanf_float+0x66>
 801133e:	6822      	ldr	r2, [r4, #0]
 8011340:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8011344:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8011348:	f47f af39 	bne.w	80111be <_scanf_float+0x6e>
 801134c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8011350:	6022      	str	r2, [r4, #0]
 8011352:	2501      	movs	r5, #1
 8011354:	e7c0      	b.n	80112d8 <_scanf_float+0x188>
 8011356:	2d03      	cmp	r5, #3
 8011358:	d0e2      	beq.n	8011320 <_scanf_float+0x1d0>
 801135a:	2d05      	cmp	r5, #5
 801135c:	e7de      	b.n	801131c <_scanf_float+0x1cc>
 801135e:	2d02      	cmp	r5, #2
 8011360:	f47f af26 	bne.w	80111b0 <_scanf_float+0x60>
 8011364:	2503      	movs	r5, #3
 8011366:	e7b7      	b.n	80112d8 <_scanf_float+0x188>
 8011368:	2d06      	cmp	r5, #6
 801136a:	f47f af21 	bne.w	80111b0 <_scanf_float+0x60>
 801136e:	2507      	movs	r5, #7
 8011370:	e7b2      	b.n	80112d8 <_scanf_float+0x188>
 8011372:	6822      	ldr	r2, [r4, #0]
 8011374:	0591      	lsls	r1, r2, #22
 8011376:	f57f af1b 	bpl.w	80111b0 <_scanf_float+0x60>
 801137a:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 801137e:	6022      	str	r2, [r4, #0]
 8011380:	f8cd 9004 	str.w	r9, [sp, #4]
 8011384:	e7a8      	b.n	80112d8 <_scanf_float+0x188>
 8011386:	6822      	ldr	r2, [r4, #0]
 8011388:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 801138c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8011390:	d006      	beq.n	80113a0 <_scanf_float+0x250>
 8011392:	0550      	lsls	r0, r2, #21
 8011394:	f57f af0c 	bpl.w	80111b0 <_scanf_float+0x60>
 8011398:	f1b9 0f00 	cmp.w	r9, #0
 801139c:	f43f af0f 	beq.w	80111be <_scanf_float+0x6e>
 80113a0:	0591      	lsls	r1, r2, #22
 80113a2:	bf58      	it	pl
 80113a4:	9901      	ldrpl	r1, [sp, #4]
 80113a6:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80113aa:	bf58      	it	pl
 80113ac:	eba9 0101 	subpl.w	r1, r9, r1
 80113b0:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 80113b4:	bf58      	it	pl
 80113b6:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 80113ba:	6022      	str	r2, [r4, #0]
 80113bc:	f04f 0900 	mov.w	r9, #0
 80113c0:	e78a      	b.n	80112d8 <_scanf_float+0x188>
 80113c2:	f04f 0a03 	mov.w	sl, #3
 80113c6:	e787      	b.n	80112d8 <_scanf_float+0x188>
 80113c8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 80113cc:	4639      	mov	r1, r7
 80113ce:	4640      	mov	r0, r8
 80113d0:	4798      	blx	r3
 80113d2:	2800      	cmp	r0, #0
 80113d4:	f43f aedf 	beq.w	8011196 <_scanf_float+0x46>
 80113d8:	e6ea      	b.n	80111b0 <_scanf_float+0x60>
 80113da:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80113de:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80113e2:	463a      	mov	r2, r7
 80113e4:	4640      	mov	r0, r8
 80113e6:	4798      	blx	r3
 80113e8:	6923      	ldr	r3, [r4, #16]
 80113ea:	3b01      	subs	r3, #1
 80113ec:	6123      	str	r3, [r4, #16]
 80113ee:	e6ec      	b.n	80111ca <_scanf_float+0x7a>
 80113f0:	1e6b      	subs	r3, r5, #1
 80113f2:	2b06      	cmp	r3, #6
 80113f4:	d825      	bhi.n	8011442 <_scanf_float+0x2f2>
 80113f6:	2d02      	cmp	r5, #2
 80113f8:	d836      	bhi.n	8011468 <_scanf_float+0x318>
 80113fa:	455e      	cmp	r6, fp
 80113fc:	f67f aee8 	bls.w	80111d0 <_scanf_float+0x80>
 8011400:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8011404:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8011408:	463a      	mov	r2, r7
 801140a:	4640      	mov	r0, r8
 801140c:	4798      	blx	r3
 801140e:	6923      	ldr	r3, [r4, #16]
 8011410:	3b01      	subs	r3, #1
 8011412:	6123      	str	r3, [r4, #16]
 8011414:	e7f1      	b.n	80113fa <_scanf_float+0x2aa>
 8011416:	9802      	ldr	r0, [sp, #8]
 8011418:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 801141c:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8011420:	9002      	str	r0, [sp, #8]
 8011422:	463a      	mov	r2, r7
 8011424:	4640      	mov	r0, r8
 8011426:	4798      	blx	r3
 8011428:	6923      	ldr	r3, [r4, #16]
 801142a:	3b01      	subs	r3, #1
 801142c:	6123      	str	r3, [r4, #16]
 801142e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8011432:	fa5f fa8a 	uxtb.w	sl, sl
 8011436:	f1ba 0f02 	cmp.w	sl, #2
 801143a:	d1ec      	bne.n	8011416 <_scanf_float+0x2c6>
 801143c:	3d03      	subs	r5, #3
 801143e:	b2ed      	uxtb	r5, r5
 8011440:	1b76      	subs	r6, r6, r5
 8011442:	6823      	ldr	r3, [r4, #0]
 8011444:	05da      	lsls	r2, r3, #23
 8011446:	d52f      	bpl.n	80114a8 <_scanf_float+0x358>
 8011448:	055b      	lsls	r3, r3, #21
 801144a:	d510      	bpl.n	801146e <_scanf_float+0x31e>
 801144c:	455e      	cmp	r6, fp
 801144e:	f67f aebf 	bls.w	80111d0 <_scanf_float+0x80>
 8011452:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8011456:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 801145a:	463a      	mov	r2, r7
 801145c:	4640      	mov	r0, r8
 801145e:	4798      	blx	r3
 8011460:	6923      	ldr	r3, [r4, #16]
 8011462:	3b01      	subs	r3, #1
 8011464:	6123      	str	r3, [r4, #16]
 8011466:	e7f1      	b.n	801144c <_scanf_float+0x2fc>
 8011468:	46aa      	mov	sl, r5
 801146a:	9602      	str	r6, [sp, #8]
 801146c:	e7df      	b.n	801142e <_scanf_float+0x2de>
 801146e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8011472:	6923      	ldr	r3, [r4, #16]
 8011474:	2965      	cmp	r1, #101	; 0x65
 8011476:	f103 33ff 	add.w	r3, r3, #4294967295
 801147a:	f106 35ff 	add.w	r5, r6, #4294967295
 801147e:	6123      	str	r3, [r4, #16]
 8011480:	d00c      	beq.n	801149c <_scanf_float+0x34c>
 8011482:	2945      	cmp	r1, #69	; 0x45
 8011484:	d00a      	beq.n	801149c <_scanf_float+0x34c>
 8011486:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 801148a:	463a      	mov	r2, r7
 801148c:	4640      	mov	r0, r8
 801148e:	4798      	blx	r3
 8011490:	6923      	ldr	r3, [r4, #16]
 8011492:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8011496:	3b01      	subs	r3, #1
 8011498:	1eb5      	subs	r5, r6, #2
 801149a:	6123      	str	r3, [r4, #16]
 801149c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80114a0:	463a      	mov	r2, r7
 80114a2:	4640      	mov	r0, r8
 80114a4:	4798      	blx	r3
 80114a6:	462e      	mov	r6, r5
 80114a8:	6825      	ldr	r5, [r4, #0]
 80114aa:	f015 0510 	ands.w	r5, r5, #16
 80114ae:	d158      	bne.n	8011562 <_scanf_float+0x412>
 80114b0:	7035      	strb	r5, [r6, #0]
 80114b2:	6823      	ldr	r3, [r4, #0]
 80114b4:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 80114b8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80114bc:	d11c      	bne.n	80114f8 <_scanf_float+0x3a8>
 80114be:	9b01      	ldr	r3, [sp, #4]
 80114c0:	454b      	cmp	r3, r9
 80114c2:	eba3 0209 	sub.w	r2, r3, r9
 80114c6:	d124      	bne.n	8011512 <_scanf_float+0x3c2>
 80114c8:	2200      	movs	r2, #0
 80114ca:	4659      	mov	r1, fp
 80114cc:	4640      	mov	r0, r8
 80114ce:	f7ff f9d3 	bl	8010878 <_strtod_r>
 80114d2:	9b03      	ldr	r3, [sp, #12]
 80114d4:	6821      	ldr	r1, [r4, #0]
 80114d6:	681b      	ldr	r3, [r3, #0]
 80114d8:	f011 0f02 	tst.w	r1, #2
 80114dc:	ec57 6b10 	vmov	r6, r7, d0
 80114e0:	f103 0204 	add.w	r2, r3, #4
 80114e4:	d020      	beq.n	8011528 <_scanf_float+0x3d8>
 80114e6:	9903      	ldr	r1, [sp, #12]
 80114e8:	600a      	str	r2, [r1, #0]
 80114ea:	681b      	ldr	r3, [r3, #0]
 80114ec:	e9c3 6700 	strd	r6, r7, [r3]
 80114f0:	68e3      	ldr	r3, [r4, #12]
 80114f2:	3301      	adds	r3, #1
 80114f4:	60e3      	str	r3, [r4, #12]
 80114f6:	e66c      	b.n	80111d2 <_scanf_float+0x82>
 80114f8:	9b04      	ldr	r3, [sp, #16]
 80114fa:	2b00      	cmp	r3, #0
 80114fc:	d0e4      	beq.n	80114c8 <_scanf_float+0x378>
 80114fe:	9905      	ldr	r1, [sp, #20]
 8011500:	230a      	movs	r3, #10
 8011502:	462a      	mov	r2, r5
 8011504:	3101      	adds	r1, #1
 8011506:	4640      	mov	r0, r8
 8011508:	f002 f96e 	bl	80137e8 <_strtol_r>
 801150c:	9b04      	ldr	r3, [sp, #16]
 801150e:	9e05      	ldr	r6, [sp, #20]
 8011510:	1ac2      	subs	r2, r0, r3
 8011512:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8011516:	429e      	cmp	r6, r3
 8011518:	bf28      	it	cs
 801151a:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 801151e:	4912      	ldr	r1, [pc, #72]	; (8011568 <_scanf_float+0x418>)
 8011520:	4630      	mov	r0, r6
 8011522:	f000 f8d5 	bl	80116d0 <siprintf>
 8011526:	e7cf      	b.n	80114c8 <_scanf_float+0x378>
 8011528:	f011 0f04 	tst.w	r1, #4
 801152c:	9903      	ldr	r1, [sp, #12]
 801152e:	600a      	str	r2, [r1, #0]
 8011530:	d1db      	bne.n	80114ea <_scanf_float+0x39a>
 8011532:	f8d3 8000 	ldr.w	r8, [r3]
 8011536:	ee10 2a10 	vmov	r2, s0
 801153a:	ee10 0a10 	vmov	r0, s0
 801153e:	463b      	mov	r3, r7
 8011540:	4639      	mov	r1, r7
 8011542:	f7ef faf3 	bl	8000b2c <__aeabi_dcmpun>
 8011546:	b128      	cbz	r0, 8011554 <_scanf_float+0x404>
 8011548:	4808      	ldr	r0, [pc, #32]	; (801156c <_scanf_float+0x41c>)
 801154a:	f000 f9dd 	bl	8011908 <nanf>
 801154e:	ed88 0a00 	vstr	s0, [r8]
 8011552:	e7cd      	b.n	80114f0 <_scanf_float+0x3a0>
 8011554:	4630      	mov	r0, r6
 8011556:	4639      	mov	r1, r7
 8011558:	f7ef fb46 	bl	8000be8 <__aeabi_d2f>
 801155c:	f8c8 0000 	str.w	r0, [r8]
 8011560:	e7c6      	b.n	80114f0 <_scanf_float+0x3a0>
 8011562:	2500      	movs	r5, #0
 8011564:	e635      	b.n	80111d2 <_scanf_float+0x82>
 8011566:	bf00      	nop
 8011568:	0801444d 	.word	0x0801444d
 801156c:	080146e8 	.word	0x080146e8

08011570 <std>:
 8011570:	2300      	movs	r3, #0
 8011572:	b510      	push	{r4, lr}
 8011574:	4604      	mov	r4, r0
 8011576:	e9c0 3300 	strd	r3, r3, [r0]
 801157a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801157e:	6083      	str	r3, [r0, #8]
 8011580:	8181      	strh	r1, [r0, #12]
 8011582:	6643      	str	r3, [r0, #100]	; 0x64
 8011584:	81c2      	strh	r2, [r0, #14]
 8011586:	6183      	str	r3, [r0, #24]
 8011588:	4619      	mov	r1, r3
 801158a:	2208      	movs	r2, #8
 801158c:	305c      	adds	r0, #92	; 0x5c
 801158e:	f000 f902 	bl	8011796 <memset>
 8011592:	4b05      	ldr	r3, [pc, #20]	; (80115a8 <std+0x38>)
 8011594:	6263      	str	r3, [r4, #36]	; 0x24
 8011596:	4b05      	ldr	r3, [pc, #20]	; (80115ac <std+0x3c>)
 8011598:	62a3      	str	r3, [r4, #40]	; 0x28
 801159a:	4b05      	ldr	r3, [pc, #20]	; (80115b0 <std+0x40>)
 801159c:	62e3      	str	r3, [r4, #44]	; 0x2c
 801159e:	4b05      	ldr	r3, [pc, #20]	; (80115b4 <std+0x44>)
 80115a0:	6224      	str	r4, [r4, #32]
 80115a2:	6323      	str	r3, [r4, #48]	; 0x30
 80115a4:	bd10      	pop	{r4, pc}
 80115a6:	bf00      	nop
 80115a8:	08011711 	.word	0x08011711
 80115ac:	08011733 	.word	0x08011733
 80115b0:	0801176b 	.word	0x0801176b
 80115b4:	0801178f 	.word	0x0801178f

080115b8 <stdio_exit_handler>:
 80115b8:	4a02      	ldr	r2, [pc, #8]	; (80115c4 <stdio_exit_handler+0xc>)
 80115ba:	4903      	ldr	r1, [pc, #12]	; (80115c8 <stdio_exit_handler+0x10>)
 80115bc:	4803      	ldr	r0, [pc, #12]	; (80115cc <stdio_exit_handler+0x14>)
 80115be:	f000 b869 	b.w	8011694 <_fwalk_sglue>
 80115c2:	bf00      	nop
 80115c4:	20000120 	.word	0x20000120
 80115c8:	08013bc5 	.word	0x08013bc5
 80115cc:	20000298 	.word	0x20000298

080115d0 <cleanup_stdio>:
 80115d0:	6841      	ldr	r1, [r0, #4]
 80115d2:	4b0c      	ldr	r3, [pc, #48]	; (8011604 <cleanup_stdio+0x34>)
 80115d4:	4299      	cmp	r1, r3
 80115d6:	b510      	push	{r4, lr}
 80115d8:	4604      	mov	r4, r0
 80115da:	d001      	beq.n	80115e0 <cleanup_stdio+0x10>
 80115dc:	f002 faf2 	bl	8013bc4 <_fflush_r>
 80115e0:	68a1      	ldr	r1, [r4, #8]
 80115e2:	4b09      	ldr	r3, [pc, #36]	; (8011608 <cleanup_stdio+0x38>)
 80115e4:	4299      	cmp	r1, r3
 80115e6:	d002      	beq.n	80115ee <cleanup_stdio+0x1e>
 80115e8:	4620      	mov	r0, r4
 80115ea:	f002 faeb 	bl	8013bc4 <_fflush_r>
 80115ee:	68e1      	ldr	r1, [r4, #12]
 80115f0:	4b06      	ldr	r3, [pc, #24]	; (801160c <cleanup_stdio+0x3c>)
 80115f2:	4299      	cmp	r1, r3
 80115f4:	d004      	beq.n	8011600 <cleanup_stdio+0x30>
 80115f6:	4620      	mov	r0, r4
 80115f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80115fc:	f002 bae2 	b.w	8013bc4 <_fflush_r>
 8011600:	bd10      	pop	{r4, pc}
 8011602:	bf00      	nop
 8011604:	20002858 	.word	0x20002858
 8011608:	200028c0 	.word	0x200028c0
 801160c:	20002928 	.word	0x20002928

08011610 <global_stdio_init.part.0>:
 8011610:	b510      	push	{r4, lr}
 8011612:	4b0b      	ldr	r3, [pc, #44]	; (8011640 <global_stdio_init.part.0+0x30>)
 8011614:	4c0b      	ldr	r4, [pc, #44]	; (8011644 <global_stdio_init.part.0+0x34>)
 8011616:	4a0c      	ldr	r2, [pc, #48]	; (8011648 <global_stdio_init.part.0+0x38>)
 8011618:	601a      	str	r2, [r3, #0]
 801161a:	4620      	mov	r0, r4
 801161c:	2200      	movs	r2, #0
 801161e:	2104      	movs	r1, #4
 8011620:	f7ff ffa6 	bl	8011570 <std>
 8011624:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8011628:	2201      	movs	r2, #1
 801162a:	2109      	movs	r1, #9
 801162c:	f7ff ffa0 	bl	8011570 <std>
 8011630:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8011634:	2202      	movs	r2, #2
 8011636:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801163a:	2112      	movs	r1, #18
 801163c:	f7ff bf98 	b.w	8011570 <std>
 8011640:	20002990 	.word	0x20002990
 8011644:	20002858 	.word	0x20002858
 8011648:	080115b9 	.word	0x080115b9

0801164c <__sfp_lock_acquire>:
 801164c:	4801      	ldr	r0, [pc, #4]	; (8011654 <__sfp_lock_acquire+0x8>)
 801164e:	f000 b941 	b.w	80118d4 <__retarget_lock_acquire_recursive>
 8011652:	bf00      	nop
 8011654:	20002999 	.word	0x20002999

08011658 <__sfp_lock_release>:
 8011658:	4801      	ldr	r0, [pc, #4]	; (8011660 <__sfp_lock_release+0x8>)
 801165a:	f000 b93c 	b.w	80118d6 <__retarget_lock_release_recursive>
 801165e:	bf00      	nop
 8011660:	20002999 	.word	0x20002999

08011664 <__sinit>:
 8011664:	b510      	push	{r4, lr}
 8011666:	4604      	mov	r4, r0
 8011668:	f7ff fff0 	bl	801164c <__sfp_lock_acquire>
 801166c:	6a23      	ldr	r3, [r4, #32]
 801166e:	b11b      	cbz	r3, 8011678 <__sinit+0x14>
 8011670:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011674:	f7ff bff0 	b.w	8011658 <__sfp_lock_release>
 8011678:	4b04      	ldr	r3, [pc, #16]	; (801168c <__sinit+0x28>)
 801167a:	6223      	str	r3, [r4, #32]
 801167c:	4b04      	ldr	r3, [pc, #16]	; (8011690 <__sinit+0x2c>)
 801167e:	681b      	ldr	r3, [r3, #0]
 8011680:	2b00      	cmp	r3, #0
 8011682:	d1f5      	bne.n	8011670 <__sinit+0xc>
 8011684:	f7ff ffc4 	bl	8011610 <global_stdio_init.part.0>
 8011688:	e7f2      	b.n	8011670 <__sinit+0xc>
 801168a:	bf00      	nop
 801168c:	080115d1 	.word	0x080115d1
 8011690:	20002990 	.word	0x20002990

08011694 <_fwalk_sglue>:
 8011694:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011698:	4607      	mov	r7, r0
 801169a:	4688      	mov	r8, r1
 801169c:	4614      	mov	r4, r2
 801169e:	2600      	movs	r6, #0
 80116a0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80116a4:	f1b9 0901 	subs.w	r9, r9, #1
 80116a8:	d505      	bpl.n	80116b6 <_fwalk_sglue+0x22>
 80116aa:	6824      	ldr	r4, [r4, #0]
 80116ac:	2c00      	cmp	r4, #0
 80116ae:	d1f7      	bne.n	80116a0 <_fwalk_sglue+0xc>
 80116b0:	4630      	mov	r0, r6
 80116b2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80116b6:	89ab      	ldrh	r3, [r5, #12]
 80116b8:	2b01      	cmp	r3, #1
 80116ba:	d907      	bls.n	80116cc <_fwalk_sglue+0x38>
 80116bc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80116c0:	3301      	adds	r3, #1
 80116c2:	d003      	beq.n	80116cc <_fwalk_sglue+0x38>
 80116c4:	4629      	mov	r1, r5
 80116c6:	4638      	mov	r0, r7
 80116c8:	47c0      	blx	r8
 80116ca:	4306      	orrs	r6, r0
 80116cc:	3568      	adds	r5, #104	; 0x68
 80116ce:	e7e9      	b.n	80116a4 <_fwalk_sglue+0x10>

080116d0 <siprintf>:
 80116d0:	b40e      	push	{r1, r2, r3}
 80116d2:	b500      	push	{lr}
 80116d4:	b09c      	sub	sp, #112	; 0x70
 80116d6:	ab1d      	add	r3, sp, #116	; 0x74
 80116d8:	9002      	str	r0, [sp, #8]
 80116da:	9006      	str	r0, [sp, #24]
 80116dc:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80116e0:	4809      	ldr	r0, [pc, #36]	; (8011708 <siprintf+0x38>)
 80116e2:	9107      	str	r1, [sp, #28]
 80116e4:	9104      	str	r1, [sp, #16]
 80116e6:	4909      	ldr	r1, [pc, #36]	; (801170c <siprintf+0x3c>)
 80116e8:	f853 2b04 	ldr.w	r2, [r3], #4
 80116ec:	9105      	str	r1, [sp, #20]
 80116ee:	6800      	ldr	r0, [r0, #0]
 80116f0:	9301      	str	r3, [sp, #4]
 80116f2:	a902      	add	r1, sp, #8
 80116f4:	f002 f8e2 	bl	80138bc <_svfiprintf_r>
 80116f8:	9b02      	ldr	r3, [sp, #8]
 80116fa:	2200      	movs	r2, #0
 80116fc:	701a      	strb	r2, [r3, #0]
 80116fe:	b01c      	add	sp, #112	; 0x70
 8011700:	f85d eb04 	ldr.w	lr, [sp], #4
 8011704:	b003      	add	sp, #12
 8011706:	4770      	bx	lr
 8011708:	200002e4 	.word	0x200002e4
 801170c:	ffff0208 	.word	0xffff0208

08011710 <__sread>:
 8011710:	b510      	push	{r4, lr}
 8011712:	460c      	mov	r4, r1
 8011714:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011718:	f000 f87e 	bl	8011818 <_read_r>
 801171c:	2800      	cmp	r0, #0
 801171e:	bfab      	itete	ge
 8011720:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8011722:	89a3      	ldrhlt	r3, [r4, #12]
 8011724:	181b      	addge	r3, r3, r0
 8011726:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801172a:	bfac      	ite	ge
 801172c:	6563      	strge	r3, [r4, #84]	; 0x54
 801172e:	81a3      	strhlt	r3, [r4, #12]
 8011730:	bd10      	pop	{r4, pc}

08011732 <__swrite>:
 8011732:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011736:	461f      	mov	r7, r3
 8011738:	898b      	ldrh	r3, [r1, #12]
 801173a:	05db      	lsls	r3, r3, #23
 801173c:	4605      	mov	r5, r0
 801173e:	460c      	mov	r4, r1
 8011740:	4616      	mov	r6, r2
 8011742:	d505      	bpl.n	8011750 <__swrite+0x1e>
 8011744:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011748:	2302      	movs	r3, #2
 801174a:	2200      	movs	r2, #0
 801174c:	f000 f852 	bl	80117f4 <_lseek_r>
 8011750:	89a3      	ldrh	r3, [r4, #12]
 8011752:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8011756:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801175a:	81a3      	strh	r3, [r4, #12]
 801175c:	4632      	mov	r2, r6
 801175e:	463b      	mov	r3, r7
 8011760:	4628      	mov	r0, r5
 8011762:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011766:	f000 b879 	b.w	801185c <_write_r>

0801176a <__sseek>:
 801176a:	b510      	push	{r4, lr}
 801176c:	460c      	mov	r4, r1
 801176e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011772:	f000 f83f 	bl	80117f4 <_lseek_r>
 8011776:	1c43      	adds	r3, r0, #1
 8011778:	89a3      	ldrh	r3, [r4, #12]
 801177a:	bf15      	itete	ne
 801177c:	6560      	strne	r0, [r4, #84]	; 0x54
 801177e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8011782:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8011786:	81a3      	strheq	r3, [r4, #12]
 8011788:	bf18      	it	ne
 801178a:	81a3      	strhne	r3, [r4, #12]
 801178c:	bd10      	pop	{r4, pc}

0801178e <__sclose>:
 801178e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8011792:	f000 b81f 	b.w	80117d4 <_close_r>

08011796 <memset>:
 8011796:	4402      	add	r2, r0
 8011798:	4603      	mov	r3, r0
 801179a:	4293      	cmp	r3, r2
 801179c:	d100      	bne.n	80117a0 <memset+0xa>
 801179e:	4770      	bx	lr
 80117a0:	f803 1b01 	strb.w	r1, [r3], #1
 80117a4:	e7f9      	b.n	801179a <memset+0x4>

080117a6 <strncmp>:
 80117a6:	b510      	push	{r4, lr}
 80117a8:	b16a      	cbz	r2, 80117c6 <strncmp+0x20>
 80117aa:	3901      	subs	r1, #1
 80117ac:	1884      	adds	r4, r0, r2
 80117ae:	f810 2b01 	ldrb.w	r2, [r0], #1
 80117b2:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 80117b6:	429a      	cmp	r2, r3
 80117b8:	d103      	bne.n	80117c2 <strncmp+0x1c>
 80117ba:	42a0      	cmp	r0, r4
 80117bc:	d001      	beq.n	80117c2 <strncmp+0x1c>
 80117be:	2a00      	cmp	r2, #0
 80117c0:	d1f5      	bne.n	80117ae <strncmp+0x8>
 80117c2:	1ad0      	subs	r0, r2, r3
 80117c4:	bd10      	pop	{r4, pc}
 80117c6:	4610      	mov	r0, r2
 80117c8:	e7fc      	b.n	80117c4 <strncmp+0x1e>
	...

080117cc <_localeconv_r>:
 80117cc:	4800      	ldr	r0, [pc, #0]	; (80117d0 <_localeconv_r+0x4>)
 80117ce:	4770      	bx	lr
 80117d0:	2000021c 	.word	0x2000021c

080117d4 <_close_r>:
 80117d4:	b538      	push	{r3, r4, r5, lr}
 80117d6:	4d06      	ldr	r5, [pc, #24]	; (80117f0 <_close_r+0x1c>)
 80117d8:	2300      	movs	r3, #0
 80117da:	4604      	mov	r4, r0
 80117dc:	4608      	mov	r0, r1
 80117de:	602b      	str	r3, [r5, #0]
 80117e0:	f7f5 fc69 	bl	80070b6 <_close>
 80117e4:	1c43      	adds	r3, r0, #1
 80117e6:	d102      	bne.n	80117ee <_close_r+0x1a>
 80117e8:	682b      	ldr	r3, [r5, #0]
 80117ea:	b103      	cbz	r3, 80117ee <_close_r+0x1a>
 80117ec:	6023      	str	r3, [r4, #0]
 80117ee:	bd38      	pop	{r3, r4, r5, pc}
 80117f0:	20002994 	.word	0x20002994

080117f4 <_lseek_r>:
 80117f4:	b538      	push	{r3, r4, r5, lr}
 80117f6:	4d07      	ldr	r5, [pc, #28]	; (8011814 <_lseek_r+0x20>)
 80117f8:	4604      	mov	r4, r0
 80117fa:	4608      	mov	r0, r1
 80117fc:	4611      	mov	r1, r2
 80117fe:	2200      	movs	r2, #0
 8011800:	602a      	str	r2, [r5, #0]
 8011802:	461a      	mov	r2, r3
 8011804:	f7f5 fc7e 	bl	8007104 <_lseek>
 8011808:	1c43      	adds	r3, r0, #1
 801180a:	d102      	bne.n	8011812 <_lseek_r+0x1e>
 801180c:	682b      	ldr	r3, [r5, #0]
 801180e:	b103      	cbz	r3, 8011812 <_lseek_r+0x1e>
 8011810:	6023      	str	r3, [r4, #0]
 8011812:	bd38      	pop	{r3, r4, r5, pc}
 8011814:	20002994 	.word	0x20002994

08011818 <_read_r>:
 8011818:	b538      	push	{r3, r4, r5, lr}
 801181a:	4d07      	ldr	r5, [pc, #28]	; (8011838 <_read_r+0x20>)
 801181c:	4604      	mov	r4, r0
 801181e:	4608      	mov	r0, r1
 8011820:	4611      	mov	r1, r2
 8011822:	2200      	movs	r2, #0
 8011824:	602a      	str	r2, [r5, #0]
 8011826:	461a      	mov	r2, r3
 8011828:	f7f5 fc0c 	bl	8007044 <_read>
 801182c:	1c43      	adds	r3, r0, #1
 801182e:	d102      	bne.n	8011836 <_read_r+0x1e>
 8011830:	682b      	ldr	r3, [r5, #0]
 8011832:	b103      	cbz	r3, 8011836 <_read_r+0x1e>
 8011834:	6023      	str	r3, [r4, #0]
 8011836:	bd38      	pop	{r3, r4, r5, pc}
 8011838:	20002994 	.word	0x20002994

0801183c <_sbrk_r>:
 801183c:	b538      	push	{r3, r4, r5, lr}
 801183e:	4d06      	ldr	r5, [pc, #24]	; (8011858 <_sbrk_r+0x1c>)
 8011840:	2300      	movs	r3, #0
 8011842:	4604      	mov	r4, r0
 8011844:	4608      	mov	r0, r1
 8011846:	602b      	str	r3, [r5, #0]
 8011848:	f7f5 fc6a 	bl	8007120 <_sbrk>
 801184c:	1c43      	adds	r3, r0, #1
 801184e:	d102      	bne.n	8011856 <_sbrk_r+0x1a>
 8011850:	682b      	ldr	r3, [r5, #0]
 8011852:	b103      	cbz	r3, 8011856 <_sbrk_r+0x1a>
 8011854:	6023      	str	r3, [r4, #0]
 8011856:	bd38      	pop	{r3, r4, r5, pc}
 8011858:	20002994 	.word	0x20002994

0801185c <_write_r>:
 801185c:	b538      	push	{r3, r4, r5, lr}
 801185e:	4d07      	ldr	r5, [pc, #28]	; (801187c <_write_r+0x20>)
 8011860:	4604      	mov	r4, r0
 8011862:	4608      	mov	r0, r1
 8011864:	4611      	mov	r1, r2
 8011866:	2200      	movs	r2, #0
 8011868:	602a      	str	r2, [r5, #0]
 801186a:	461a      	mov	r2, r3
 801186c:	f7f5 fc07 	bl	800707e <_write>
 8011870:	1c43      	adds	r3, r0, #1
 8011872:	d102      	bne.n	801187a <_write_r+0x1e>
 8011874:	682b      	ldr	r3, [r5, #0]
 8011876:	b103      	cbz	r3, 801187a <_write_r+0x1e>
 8011878:	6023      	str	r3, [r4, #0]
 801187a:	bd38      	pop	{r3, r4, r5, pc}
 801187c:	20002994 	.word	0x20002994

08011880 <__errno>:
 8011880:	4b01      	ldr	r3, [pc, #4]	; (8011888 <__errno+0x8>)
 8011882:	6818      	ldr	r0, [r3, #0]
 8011884:	4770      	bx	lr
 8011886:	bf00      	nop
 8011888:	200002e4 	.word	0x200002e4

0801188c <__libc_init_array>:
 801188c:	b570      	push	{r4, r5, r6, lr}
 801188e:	4d0d      	ldr	r5, [pc, #52]	; (80118c4 <__libc_init_array+0x38>)
 8011890:	4c0d      	ldr	r4, [pc, #52]	; (80118c8 <__libc_init_array+0x3c>)
 8011892:	1b64      	subs	r4, r4, r5
 8011894:	10a4      	asrs	r4, r4, #2
 8011896:	2600      	movs	r6, #0
 8011898:	42a6      	cmp	r6, r4
 801189a:	d109      	bne.n	80118b0 <__libc_init_array+0x24>
 801189c:	4d0b      	ldr	r5, [pc, #44]	; (80118cc <__libc_init_array+0x40>)
 801189e:	4c0c      	ldr	r4, [pc, #48]	; (80118d0 <__libc_init_array+0x44>)
 80118a0:	f002 fcc0 	bl	8014224 <_init>
 80118a4:	1b64      	subs	r4, r4, r5
 80118a6:	10a4      	asrs	r4, r4, #2
 80118a8:	2600      	movs	r6, #0
 80118aa:	42a6      	cmp	r6, r4
 80118ac:	d105      	bne.n	80118ba <__libc_init_array+0x2e>
 80118ae:	bd70      	pop	{r4, r5, r6, pc}
 80118b0:	f855 3b04 	ldr.w	r3, [r5], #4
 80118b4:	4798      	blx	r3
 80118b6:	3601      	adds	r6, #1
 80118b8:	e7ee      	b.n	8011898 <__libc_init_array+0xc>
 80118ba:	f855 3b04 	ldr.w	r3, [r5], #4
 80118be:	4798      	blx	r3
 80118c0:	3601      	adds	r6, #1
 80118c2:	e7f2      	b.n	80118aa <__libc_init_array+0x1e>
 80118c4:	080146f4 	.word	0x080146f4
 80118c8:	080146f4 	.word	0x080146f4
 80118cc:	080146f4 	.word	0x080146f4
 80118d0:	080146f8 	.word	0x080146f8

080118d4 <__retarget_lock_acquire_recursive>:
 80118d4:	4770      	bx	lr

080118d6 <__retarget_lock_release_recursive>:
 80118d6:	4770      	bx	lr

080118d8 <memcpy>:
 80118d8:	440a      	add	r2, r1
 80118da:	4291      	cmp	r1, r2
 80118dc:	f100 33ff 	add.w	r3, r0, #4294967295
 80118e0:	d100      	bne.n	80118e4 <memcpy+0xc>
 80118e2:	4770      	bx	lr
 80118e4:	b510      	push	{r4, lr}
 80118e6:	f811 4b01 	ldrb.w	r4, [r1], #1
 80118ea:	f803 4f01 	strb.w	r4, [r3, #1]!
 80118ee:	4291      	cmp	r1, r2
 80118f0:	d1f9      	bne.n	80118e6 <memcpy+0xe>
 80118f2:	bd10      	pop	{r4, pc}
 80118f4:	0000      	movs	r0, r0
	...

080118f8 <nan>:
 80118f8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8011900 <nan+0x8>
 80118fc:	4770      	bx	lr
 80118fe:	bf00      	nop
 8011900:	00000000 	.word	0x00000000
 8011904:	7ff80000 	.word	0x7ff80000

08011908 <nanf>:
 8011908:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8011910 <nanf+0x8>
 801190c:	4770      	bx	lr
 801190e:	bf00      	nop
 8011910:	7fc00000 	.word	0x7fc00000

08011914 <quorem>:
 8011914:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011918:	6903      	ldr	r3, [r0, #16]
 801191a:	690c      	ldr	r4, [r1, #16]
 801191c:	42a3      	cmp	r3, r4
 801191e:	4607      	mov	r7, r0
 8011920:	db7e      	blt.n	8011a20 <quorem+0x10c>
 8011922:	3c01      	subs	r4, #1
 8011924:	f101 0814 	add.w	r8, r1, #20
 8011928:	f100 0514 	add.w	r5, r0, #20
 801192c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8011930:	9301      	str	r3, [sp, #4]
 8011932:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8011936:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 801193a:	3301      	adds	r3, #1
 801193c:	429a      	cmp	r2, r3
 801193e:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 8011942:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8011946:	fbb2 f6f3 	udiv	r6, r2, r3
 801194a:	d331      	bcc.n	80119b0 <quorem+0x9c>
 801194c:	f04f 0e00 	mov.w	lr, #0
 8011950:	4640      	mov	r0, r8
 8011952:	46ac      	mov	ip, r5
 8011954:	46f2      	mov	sl, lr
 8011956:	f850 2b04 	ldr.w	r2, [r0], #4
 801195a:	b293      	uxth	r3, r2
 801195c:	fb06 e303 	mla	r3, r6, r3, lr
 8011960:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8011964:	0c1a      	lsrs	r2, r3, #16
 8011966:	b29b      	uxth	r3, r3
 8011968:	ebaa 0303 	sub.w	r3, sl, r3
 801196c:	f8dc a000 	ldr.w	sl, [ip]
 8011970:	fa13 f38a 	uxtah	r3, r3, sl
 8011974:	fb06 220e 	mla	r2, r6, lr, r2
 8011978:	9300      	str	r3, [sp, #0]
 801197a:	9b00      	ldr	r3, [sp, #0]
 801197c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8011980:	b292      	uxth	r2, r2
 8011982:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8011986:	eb02 4223 	add.w	r2, r2, r3, asr #16
 801198a:	f8bd 3000 	ldrh.w	r3, [sp]
 801198e:	4581      	cmp	r9, r0
 8011990:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011994:	f84c 3b04 	str.w	r3, [ip], #4
 8011998:	ea4f 4a22 	mov.w	sl, r2, asr #16
 801199c:	d2db      	bcs.n	8011956 <quorem+0x42>
 801199e:	f855 300b 	ldr.w	r3, [r5, fp]
 80119a2:	b92b      	cbnz	r3, 80119b0 <quorem+0x9c>
 80119a4:	9b01      	ldr	r3, [sp, #4]
 80119a6:	3b04      	subs	r3, #4
 80119a8:	429d      	cmp	r5, r3
 80119aa:	461a      	mov	r2, r3
 80119ac:	d32c      	bcc.n	8011a08 <quorem+0xf4>
 80119ae:	613c      	str	r4, [r7, #16]
 80119b0:	4638      	mov	r0, r7
 80119b2:	f001 fca7 	bl	8013304 <__mcmp>
 80119b6:	2800      	cmp	r0, #0
 80119b8:	db22      	blt.n	8011a00 <quorem+0xec>
 80119ba:	3601      	adds	r6, #1
 80119bc:	4629      	mov	r1, r5
 80119be:	2000      	movs	r0, #0
 80119c0:	f858 2b04 	ldr.w	r2, [r8], #4
 80119c4:	f8d1 c000 	ldr.w	ip, [r1]
 80119c8:	b293      	uxth	r3, r2
 80119ca:	1ac3      	subs	r3, r0, r3
 80119cc:	0c12      	lsrs	r2, r2, #16
 80119ce:	fa13 f38c 	uxtah	r3, r3, ip
 80119d2:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80119d6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80119da:	b29b      	uxth	r3, r3
 80119dc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80119e0:	45c1      	cmp	r9, r8
 80119e2:	f841 3b04 	str.w	r3, [r1], #4
 80119e6:	ea4f 4022 	mov.w	r0, r2, asr #16
 80119ea:	d2e9      	bcs.n	80119c0 <quorem+0xac>
 80119ec:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80119f0:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80119f4:	b922      	cbnz	r2, 8011a00 <quorem+0xec>
 80119f6:	3b04      	subs	r3, #4
 80119f8:	429d      	cmp	r5, r3
 80119fa:	461a      	mov	r2, r3
 80119fc:	d30a      	bcc.n	8011a14 <quorem+0x100>
 80119fe:	613c      	str	r4, [r7, #16]
 8011a00:	4630      	mov	r0, r6
 8011a02:	b003      	add	sp, #12
 8011a04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011a08:	6812      	ldr	r2, [r2, #0]
 8011a0a:	3b04      	subs	r3, #4
 8011a0c:	2a00      	cmp	r2, #0
 8011a0e:	d1ce      	bne.n	80119ae <quorem+0x9a>
 8011a10:	3c01      	subs	r4, #1
 8011a12:	e7c9      	b.n	80119a8 <quorem+0x94>
 8011a14:	6812      	ldr	r2, [r2, #0]
 8011a16:	3b04      	subs	r3, #4
 8011a18:	2a00      	cmp	r2, #0
 8011a1a:	d1f0      	bne.n	80119fe <quorem+0xea>
 8011a1c:	3c01      	subs	r4, #1
 8011a1e:	e7eb      	b.n	80119f8 <quorem+0xe4>
 8011a20:	2000      	movs	r0, #0
 8011a22:	e7ee      	b.n	8011a02 <quorem+0xee>
 8011a24:	0000      	movs	r0, r0
	...

08011a28 <_dtoa_r>:
 8011a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a2c:	ed2d 8b04 	vpush	{d8-d9}
 8011a30:	69c5      	ldr	r5, [r0, #28]
 8011a32:	b093      	sub	sp, #76	; 0x4c
 8011a34:	ed8d 0b02 	vstr	d0, [sp, #8]
 8011a38:	ec57 6b10 	vmov	r6, r7, d0
 8011a3c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8011a40:	9107      	str	r1, [sp, #28]
 8011a42:	4604      	mov	r4, r0
 8011a44:	920a      	str	r2, [sp, #40]	; 0x28
 8011a46:	930d      	str	r3, [sp, #52]	; 0x34
 8011a48:	b975      	cbnz	r5, 8011a68 <_dtoa_r+0x40>
 8011a4a:	2010      	movs	r0, #16
 8011a4c:	f7fe f824 	bl	800fa98 <malloc>
 8011a50:	4602      	mov	r2, r0
 8011a52:	61e0      	str	r0, [r4, #28]
 8011a54:	b920      	cbnz	r0, 8011a60 <_dtoa_r+0x38>
 8011a56:	4bae      	ldr	r3, [pc, #696]	; (8011d10 <_dtoa_r+0x2e8>)
 8011a58:	21ef      	movs	r1, #239	; 0xef
 8011a5a:	48ae      	ldr	r0, [pc, #696]	; (8011d14 <_dtoa_r+0x2ec>)
 8011a5c:	f002 f8f4 	bl	8013c48 <__assert_func>
 8011a60:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8011a64:	6005      	str	r5, [r0, #0]
 8011a66:	60c5      	str	r5, [r0, #12]
 8011a68:	69e3      	ldr	r3, [r4, #28]
 8011a6a:	6819      	ldr	r1, [r3, #0]
 8011a6c:	b151      	cbz	r1, 8011a84 <_dtoa_r+0x5c>
 8011a6e:	685a      	ldr	r2, [r3, #4]
 8011a70:	604a      	str	r2, [r1, #4]
 8011a72:	2301      	movs	r3, #1
 8011a74:	4093      	lsls	r3, r2
 8011a76:	608b      	str	r3, [r1, #8]
 8011a78:	4620      	mov	r0, r4
 8011a7a:	f001 f9bd 	bl	8012df8 <_Bfree>
 8011a7e:	69e3      	ldr	r3, [r4, #28]
 8011a80:	2200      	movs	r2, #0
 8011a82:	601a      	str	r2, [r3, #0]
 8011a84:	1e3b      	subs	r3, r7, #0
 8011a86:	bfbb      	ittet	lt
 8011a88:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8011a8c:	9303      	strlt	r3, [sp, #12]
 8011a8e:	2300      	movge	r3, #0
 8011a90:	2201      	movlt	r2, #1
 8011a92:	bfac      	ite	ge
 8011a94:	f8c8 3000 	strge.w	r3, [r8]
 8011a98:	f8c8 2000 	strlt.w	r2, [r8]
 8011a9c:	4b9e      	ldr	r3, [pc, #632]	; (8011d18 <_dtoa_r+0x2f0>)
 8011a9e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 8011aa2:	ea33 0308 	bics.w	r3, r3, r8
 8011aa6:	d11b      	bne.n	8011ae0 <_dtoa_r+0xb8>
 8011aa8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011aaa:	f242 730f 	movw	r3, #9999	; 0x270f
 8011aae:	6013      	str	r3, [r2, #0]
 8011ab0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8011ab4:	4333      	orrs	r3, r6
 8011ab6:	f000 8593 	beq.w	80125e0 <_dtoa_r+0xbb8>
 8011aba:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8011abc:	b963      	cbnz	r3, 8011ad8 <_dtoa_r+0xb0>
 8011abe:	4b97      	ldr	r3, [pc, #604]	; (8011d1c <_dtoa_r+0x2f4>)
 8011ac0:	e027      	b.n	8011b12 <_dtoa_r+0xea>
 8011ac2:	4b97      	ldr	r3, [pc, #604]	; (8011d20 <_dtoa_r+0x2f8>)
 8011ac4:	9300      	str	r3, [sp, #0]
 8011ac6:	3308      	adds	r3, #8
 8011ac8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8011aca:	6013      	str	r3, [r2, #0]
 8011acc:	9800      	ldr	r0, [sp, #0]
 8011ace:	b013      	add	sp, #76	; 0x4c
 8011ad0:	ecbd 8b04 	vpop	{d8-d9}
 8011ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ad8:	4b90      	ldr	r3, [pc, #576]	; (8011d1c <_dtoa_r+0x2f4>)
 8011ada:	9300      	str	r3, [sp, #0]
 8011adc:	3303      	adds	r3, #3
 8011ade:	e7f3      	b.n	8011ac8 <_dtoa_r+0xa0>
 8011ae0:	ed9d 7b02 	vldr	d7, [sp, #8]
 8011ae4:	2200      	movs	r2, #0
 8011ae6:	ec51 0b17 	vmov	r0, r1, d7
 8011aea:	eeb0 8a47 	vmov.f32	s16, s14
 8011aee:	eef0 8a67 	vmov.f32	s17, s15
 8011af2:	2300      	movs	r3, #0
 8011af4:	f7ee ffe8 	bl	8000ac8 <__aeabi_dcmpeq>
 8011af8:	4681      	mov	r9, r0
 8011afa:	b160      	cbz	r0, 8011b16 <_dtoa_r+0xee>
 8011afc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8011afe:	2301      	movs	r3, #1
 8011b00:	6013      	str	r3, [r2, #0]
 8011b02:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8011b04:	2b00      	cmp	r3, #0
 8011b06:	f000 8568 	beq.w	80125da <_dtoa_r+0xbb2>
 8011b0a:	4b86      	ldr	r3, [pc, #536]	; (8011d24 <_dtoa_r+0x2fc>)
 8011b0c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8011b0e:	6013      	str	r3, [r2, #0]
 8011b10:	3b01      	subs	r3, #1
 8011b12:	9300      	str	r3, [sp, #0]
 8011b14:	e7da      	b.n	8011acc <_dtoa_r+0xa4>
 8011b16:	aa10      	add	r2, sp, #64	; 0x40
 8011b18:	a911      	add	r1, sp, #68	; 0x44
 8011b1a:	4620      	mov	r0, r4
 8011b1c:	eeb0 0a48 	vmov.f32	s0, s16
 8011b20:	eef0 0a68 	vmov.f32	s1, s17
 8011b24:	f001 fd04 	bl	8013530 <__d2b>
 8011b28:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8011b2c:	4682      	mov	sl, r0
 8011b2e:	2d00      	cmp	r5, #0
 8011b30:	d07f      	beq.n	8011c32 <_dtoa_r+0x20a>
 8011b32:	ee18 3a90 	vmov	r3, s17
 8011b36:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8011b3a:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8011b3e:	ec51 0b18 	vmov	r0, r1, d8
 8011b42:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8011b46:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8011b4a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8011b4e:	4619      	mov	r1, r3
 8011b50:	2200      	movs	r2, #0
 8011b52:	4b75      	ldr	r3, [pc, #468]	; (8011d28 <_dtoa_r+0x300>)
 8011b54:	f7ee fb98 	bl	8000288 <__aeabi_dsub>
 8011b58:	a367      	add	r3, pc, #412	; (adr r3, 8011cf8 <_dtoa_r+0x2d0>)
 8011b5a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011b5e:	f7ee fd4b 	bl	80005f8 <__aeabi_dmul>
 8011b62:	a367      	add	r3, pc, #412	; (adr r3, 8011d00 <_dtoa_r+0x2d8>)
 8011b64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011b68:	f7ee fb90 	bl	800028c <__adddf3>
 8011b6c:	4606      	mov	r6, r0
 8011b6e:	4628      	mov	r0, r5
 8011b70:	460f      	mov	r7, r1
 8011b72:	f7ee fcd7 	bl	8000524 <__aeabi_i2d>
 8011b76:	a364      	add	r3, pc, #400	; (adr r3, 8011d08 <_dtoa_r+0x2e0>)
 8011b78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011b7c:	f7ee fd3c 	bl	80005f8 <__aeabi_dmul>
 8011b80:	4602      	mov	r2, r0
 8011b82:	460b      	mov	r3, r1
 8011b84:	4630      	mov	r0, r6
 8011b86:	4639      	mov	r1, r7
 8011b88:	f7ee fb80 	bl	800028c <__adddf3>
 8011b8c:	4606      	mov	r6, r0
 8011b8e:	460f      	mov	r7, r1
 8011b90:	f7ee ffe2 	bl	8000b58 <__aeabi_d2iz>
 8011b94:	2200      	movs	r2, #0
 8011b96:	4683      	mov	fp, r0
 8011b98:	2300      	movs	r3, #0
 8011b9a:	4630      	mov	r0, r6
 8011b9c:	4639      	mov	r1, r7
 8011b9e:	f7ee ff9d 	bl	8000adc <__aeabi_dcmplt>
 8011ba2:	b148      	cbz	r0, 8011bb8 <_dtoa_r+0x190>
 8011ba4:	4658      	mov	r0, fp
 8011ba6:	f7ee fcbd 	bl	8000524 <__aeabi_i2d>
 8011baa:	4632      	mov	r2, r6
 8011bac:	463b      	mov	r3, r7
 8011bae:	f7ee ff8b 	bl	8000ac8 <__aeabi_dcmpeq>
 8011bb2:	b908      	cbnz	r0, 8011bb8 <_dtoa_r+0x190>
 8011bb4:	f10b 3bff 	add.w	fp, fp, #4294967295
 8011bb8:	f1bb 0f16 	cmp.w	fp, #22
 8011bbc:	d857      	bhi.n	8011c6e <_dtoa_r+0x246>
 8011bbe:	4b5b      	ldr	r3, [pc, #364]	; (8011d2c <_dtoa_r+0x304>)
 8011bc0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8011bc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011bc8:	ec51 0b18 	vmov	r0, r1, d8
 8011bcc:	f7ee ff86 	bl	8000adc <__aeabi_dcmplt>
 8011bd0:	2800      	cmp	r0, #0
 8011bd2:	d04e      	beq.n	8011c72 <_dtoa_r+0x24a>
 8011bd4:	f10b 3bff 	add.w	fp, fp, #4294967295
 8011bd8:	2300      	movs	r3, #0
 8011bda:	930c      	str	r3, [sp, #48]	; 0x30
 8011bdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011bde:	1b5b      	subs	r3, r3, r5
 8011be0:	1e5a      	subs	r2, r3, #1
 8011be2:	bf45      	ittet	mi
 8011be4:	f1c3 0301 	rsbmi	r3, r3, #1
 8011be8:	9305      	strmi	r3, [sp, #20]
 8011bea:	2300      	movpl	r3, #0
 8011bec:	2300      	movmi	r3, #0
 8011bee:	9206      	str	r2, [sp, #24]
 8011bf0:	bf54      	ite	pl
 8011bf2:	9305      	strpl	r3, [sp, #20]
 8011bf4:	9306      	strmi	r3, [sp, #24]
 8011bf6:	f1bb 0f00 	cmp.w	fp, #0
 8011bfa:	db3c      	blt.n	8011c76 <_dtoa_r+0x24e>
 8011bfc:	9b06      	ldr	r3, [sp, #24]
 8011bfe:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 8011c02:	445b      	add	r3, fp
 8011c04:	9306      	str	r3, [sp, #24]
 8011c06:	2300      	movs	r3, #0
 8011c08:	9308      	str	r3, [sp, #32]
 8011c0a:	9b07      	ldr	r3, [sp, #28]
 8011c0c:	2b09      	cmp	r3, #9
 8011c0e:	d868      	bhi.n	8011ce2 <_dtoa_r+0x2ba>
 8011c10:	2b05      	cmp	r3, #5
 8011c12:	bfc4      	itt	gt
 8011c14:	3b04      	subgt	r3, #4
 8011c16:	9307      	strgt	r3, [sp, #28]
 8011c18:	9b07      	ldr	r3, [sp, #28]
 8011c1a:	f1a3 0302 	sub.w	r3, r3, #2
 8011c1e:	bfcc      	ite	gt
 8011c20:	2500      	movgt	r5, #0
 8011c22:	2501      	movle	r5, #1
 8011c24:	2b03      	cmp	r3, #3
 8011c26:	f200 8085 	bhi.w	8011d34 <_dtoa_r+0x30c>
 8011c2a:	e8df f003 	tbb	[pc, r3]
 8011c2e:	3b2e      	.short	0x3b2e
 8011c30:	5839      	.short	0x5839
 8011c32:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8011c36:	441d      	add	r5, r3
 8011c38:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8011c3c:	2b20      	cmp	r3, #32
 8011c3e:	bfc1      	itttt	gt
 8011c40:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 8011c44:	fa08 f803 	lslgt.w	r8, r8, r3
 8011c48:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8011c4c:	fa26 f303 	lsrgt.w	r3, r6, r3
 8011c50:	bfd6      	itet	le
 8011c52:	f1c3 0320 	rsble	r3, r3, #32
 8011c56:	ea48 0003 	orrgt.w	r0, r8, r3
 8011c5a:	fa06 f003 	lslle.w	r0, r6, r3
 8011c5e:	f7ee fc51 	bl	8000504 <__aeabi_ui2d>
 8011c62:	2201      	movs	r2, #1
 8011c64:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8011c68:	3d01      	subs	r5, #1
 8011c6a:	920e      	str	r2, [sp, #56]	; 0x38
 8011c6c:	e76f      	b.n	8011b4e <_dtoa_r+0x126>
 8011c6e:	2301      	movs	r3, #1
 8011c70:	e7b3      	b.n	8011bda <_dtoa_r+0x1b2>
 8011c72:	900c      	str	r0, [sp, #48]	; 0x30
 8011c74:	e7b2      	b.n	8011bdc <_dtoa_r+0x1b4>
 8011c76:	9b05      	ldr	r3, [sp, #20]
 8011c78:	eba3 030b 	sub.w	r3, r3, fp
 8011c7c:	9305      	str	r3, [sp, #20]
 8011c7e:	f1cb 0300 	rsb	r3, fp, #0
 8011c82:	9308      	str	r3, [sp, #32]
 8011c84:	2300      	movs	r3, #0
 8011c86:	930b      	str	r3, [sp, #44]	; 0x2c
 8011c88:	e7bf      	b.n	8011c0a <_dtoa_r+0x1e2>
 8011c8a:	2300      	movs	r3, #0
 8011c8c:	9309      	str	r3, [sp, #36]	; 0x24
 8011c8e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011c90:	2b00      	cmp	r3, #0
 8011c92:	dc52      	bgt.n	8011d3a <_dtoa_r+0x312>
 8011c94:	2301      	movs	r3, #1
 8011c96:	9301      	str	r3, [sp, #4]
 8011c98:	9304      	str	r3, [sp, #16]
 8011c9a:	461a      	mov	r2, r3
 8011c9c:	920a      	str	r2, [sp, #40]	; 0x28
 8011c9e:	e00b      	b.n	8011cb8 <_dtoa_r+0x290>
 8011ca0:	2301      	movs	r3, #1
 8011ca2:	e7f3      	b.n	8011c8c <_dtoa_r+0x264>
 8011ca4:	2300      	movs	r3, #0
 8011ca6:	9309      	str	r3, [sp, #36]	; 0x24
 8011ca8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011caa:	445b      	add	r3, fp
 8011cac:	9301      	str	r3, [sp, #4]
 8011cae:	3301      	adds	r3, #1
 8011cb0:	2b01      	cmp	r3, #1
 8011cb2:	9304      	str	r3, [sp, #16]
 8011cb4:	bfb8      	it	lt
 8011cb6:	2301      	movlt	r3, #1
 8011cb8:	69e0      	ldr	r0, [r4, #28]
 8011cba:	2100      	movs	r1, #0
 8011cbc:	2204      	movs	r2, #4
 8011cbe:	f102 0614 	add.w	r6, r2, #20
 8011cc2:	429e      	cmp	r6, r3
 8011cc4:	d93d      	bls.n	8011d42 <_dtoa_r+0x31a>
 8011cc6:	6041      	str	r1, [r0, #4]
 8011cc8:	4620      	mov	r0, r4
 8011cca:	f001 f855 	bl	8012d78 <_Balloc>
 8011cce:	9000      	str	r0, [sp, #0]
 8011cd0:	2800      	cmp	r0, #0
 8011cd2:	d139      	bne.n	8011d48 <_dtoa_r+0x320>
 8011cd4:	4b16      	ldr	r3, [pc, #88]	; (8011d30 <_dtoa_r+0x308>)
 8011cd6:	4602      	mov	r2, r0
 8011cd8:	f240 11af 	movw	r1, #431	; 0x1af
 8011cdc:	e6bd      	b.n	8011a5a <_dtoa_r+0x32>
 8011cde:	2301      	movs	r3, #1
 8011ce0:	e7e1      	b.n	8011ca6 <_dtoa_r+0x27e>
 8011ce2:	2501      	movs	r5, #1
 8011ce4:	2300      	movs	r3, #0
 8011ce6:	9307      	str	r3, [sp, #28]
 8011ce8:	9509      	str	r5, [sp, #36]	; 0x24
 8011cea:	f04f 33ff 	mov.w	r3, #4294967295
 8011cee:	9301      	str	r3, [sp, #4]
 8011cf0:	9304      	str	r3, [sp, #16]
 8011cf2:	2200      	movs	r2, #0
 8011cf4:	2312      	movs	r3, #18
 8011cf6:	e7d1      	b.n	8011c9c <_dtoa_r+0x274>
 8011cf8:	636f4361 	.word	0x636f4361
 8011cfc:	3fd287a7 	.word	0x3fd287a7
 8011d00:	8b60c8b3 	.word	0x8b60c8b3
 8011d04:	3fc68a28 	.word	0x3fc68a28
 8011d08:	509f79fb 	.word	0x509f79fb
 8011d0c:	3fd34413 	.word	0x3fd34413
 8011d10:	08014467 	.word	0x08014467
 8011d14:	0801447e 	.word	0x0801447e
 8011d18:	7ff00000 	.word	0x7ff00000
 8011d1c:	08014463 	.word	0x08014463
 8011d20:	0801445a 	.word	0x0801445a
 8011d24:	0801442a 	.word	0x0801442a
 8011d28:	3ff80000 	.word	0x3ff80000
 8011d2c:	080145c8 	.word	0x080145c8
 8011d30:	080144d6 	.word	0x080144d6
 8011d34:	2301      	movs	r3, #1
 8011d36:	9309      	str	r3, [sp, #36]	; 0x24
 8011d38:	e7d7      	b.n	8011cea <_dtoa_r+0x2c2>
 8011d3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011d3c:	9301      	str	r3, [sp, #4]
 8011d3e:	9304      	str	r3, [sp, #16]
 8011d40:	e7ba      	b.n	8011cb8 <_dtoa_r+0x290>
 8011d42:	3101      	adds	r1, #1
 8011d44:	0052      	lsls	r2, r2, #1
 8011d46:	e7ba      	b.n	8011cbe <_dtoa_r+0x296>
 8011d48:	69e3      	ldr	r3, [r4, #28]
 8011d4a:	9a00      	ldr	r2, [sp, #0]
 8011d4c:	601a      	str	r2, [r3, #0]
 8011d4e:	9b04      	ldr	r3, [sp, #16]
 8011d50:	2b0e      	cmp	r3, #14
 8011d52:	f200 80a8 	bhi.w	8011ea6 <_dtoa_r+0x47e>
 8011d56:	2d00      	cmp	r5, #0
 8011d58:	f000 80a5 	beq.w	8011ea6 <_dtoa_r+0x47e>
 8011d5c:	f1bb 0f00 	cmp.w	fp, #0
 8011d60:	dd38      	ble.n	8011dd4 <_dtoa_r+0x3ac>
 8011d62:	4bc0      	ldr	r3, [pc, #768]	; (8012064 <_dtoa_r+0x63c>)
 8011d64:	f00b 020f 	and.w	r2, fp, #15
 8011d68:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011d6c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8011d70:	e9d3 6700 	ldrd	r6, r7, [r3]
 8011d74:	ea4f 182b 	mov.w	r8, fp, asr #4
 8011d78:	d019      	beq.n	8011dae <_dtoa_r+0x386>
 8011d7a:	4bbb      	ldr	r3, [pc, #748]	; (8012068 <_dtoa_r+0x640>)
 8011d7c:	ec51 0b18 	vmov	r0, r1, d8
 8011d80:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8011d84:	f7ee fd62 	bl	800084c <__aeabi_ddiv>
 8011d88:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011d8c:	f008 080f 	and.w	r8, r8, #15
 8011d90:	2503      	movs	r5, #3
 8011d92:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8012068 <_dtoa_r+0x640>
 8011d96:	f1b8 0f00 	cmp.w	r8, #0
 8011d9a:	d10a      	bne.n	8011db2 <_dtoa_r+0x38a>
 8011d9c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8011da0:	4632      	mov	r2, r6
 8011da2:	463b      	mov	r3, r7
 8011da4:	f7ee fd52 	bl	800084c <__aeabi_ddiv>
 8011da8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011dac:	e02b      	b.n	8011e06 <_dtoa_r+0x3de>
 8011dae:	2502      	movs	r5, #2
 8011db0:	e7ef      	b.n	8011d92 <_dtoa_r+0x36a>
 8011db2:	f018 0f01 	tst.w	r8, #1
 8011db6:	d008      	beq.n	8011dca <_dtoa_r+0x3a2>
 8011db8:	4630      	mov	r0, r6
 8011dba:	4639      	mov	r1, r7
 8011dbc:	e9d9 2300 	ldrd	r2, r3, [r9]
 8011dc0:	f7ee fc1a 	bl	80005f8 <__aeabi_dmul>
 8011dc4:	3501      	adds	r5, #1
 8011dc6:	4606      	mov	r6, r0
 8011dc8:	460f      	mov	r7, r1
 8011dca:	ea4f 0868 	mov.w	r8, r8, asr #1
 8011dce:	f109 0908 	add.w	r9, r9, #8
 8011dd2:	e7e0      	b.n	8011d96 <_dtoa_r+0x36e>
 8011dd4:	f000 809f 	beq.w	8011f16 <_dtoa_r+0x4ee>
 8011dd8:	f1cb 0600 	rsb	r6, fp, #0
 8011ddc:	4ba1      	ldr	r3, [pc, #644]	; (8012064 <_dtoa_r+0x63c>)
 8011dde:	4fa2      	ldr	r7, [pc, #648]	; (8012068 <_dtoa_r+0x640>)
 8011de0:	f006 020f 	and.w	r2, r6, #15
 8011de4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8011de8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011dec:	ec51 0b18 	vmov	r0, r1, d8
 8011df0:	f7ee fc02 	bl	80005f8 <__aeabi_dmul>
 8011df4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011df8:	1136      	asrs	r6, r6, #4
 8011dfa:	2300      	movs	r3, #0
 8011dfc:	2502      	movs	r5, #2
 8011dfe:	2e00      	cmp	r6, #0
 8011e00:	d17e      	bne.n	8011f00 <_dtoa_r+0x4d8>
 8011e02:	2b00      	cmp	r3, #0
 8011e04:	d1d0      	bne.n	8011da8 <_dtoa_r+0x380>
 8011e06:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011e08:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8011e0c:	2b00      	cmp	r3, #0
 8011e0e:	f000 8084 	beq.w	8011f1a <_dtoa_r+0x4f2>
 8011e12:	4b96      	ldr	r3, [pc, #600]	; (801206c <_dtoa_r+0x644>)
 8011e14:	2200      	movs	r2, #0
 8011e16:	4640      	mov	r0, r8
 8011e18:	4649      	mov	r1, r9
 8011e1a:	f7ee fe5f 	bl	8000adc <__aeabi_dcmplt>
 8011e1e:	2800      	cmp	r0, #0
 8011e20:	d07b      	beq.n	8011f1a <_dtoa_r+0x4f2>
 8011e22:	9b04      	ldr	r3, [sp, #16]
 8011e24:	2b00      	cmp	r3, #0
 8011e26:	d078      	beq.n	8011f1a <_dtoa_r+0x4f2>
 8011e28:	9b01      	ldr	r3, [sp, #4]
 8011e2a:	2b00      	cmp	r3, #0
 8011e2c:	dd39      	ble.n	8011ea2 <_dtoa_r+0x47a>
 8011e2e:	4b90      	ldr	r3, [pc, #576]	; (8012070 <_dtoa_r+0x648>)
 8011e30:	2200      	movs	r2, #0
 8011e32:	4640      	mov	r0, r8
 8011e34:	4649      	mov	r1, r9
 8011e36:	f7ee fbdf 	bl	80005f8 <__aeabi_dmul>
 8011e3a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011e3e:	9e01      	ldr	r6, [sp, #4]
 8011e40:	f10b 37ff 	add.w	r7, fp, #4294967295
 8011e44:	3501      	adds	r5, #1
 8011e46:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8011e4a:	4628      	mov	r0, r5
 8011e4c:	f7ee fb6a 	bl	8000524 <__aeabi_i2d>
 8011e50:	4642      	mov	r2, r8
 8011e52:	464b      	mov	r3, r9
 8011e54:	f7ee fbd0 	bl	80005f8 <__aeabi_dmul>
 8011e58:	4b86      	ldr	r3, [pc, #536]	; (8012074 <_dtoa_r+0x64c>)
 8011e5a:	2200      	movs	r2, #0
 8011e5c:	f7ee fa16 	bl	800028c <__adddf3>
 8011e60:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8011e64:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8011e68:	9303      	str	r3, [sp, #12]
 8011e6a:	2e00      	cmp	r6, #0
 8011e6c:	d158      	bne.n	8011f20 <_dtoa_r+0x4f8>
 8011e6e:	4b82      	ldr	r3, [pc, #520]	; (8012078 <_dtoa_r+0x650>)
 8011e70:	2200      	movs	r2, #0
 8011e72:	4640      	mov	r0, r8
 8011e74:	4649      	mov	r1, r9
 8011e76:	f7ee fa07 	bl	8000288 <__aeabi_dsub>
 8011e7a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8011e7e:	4680      	mov	r8, r0
 8011e80:	4689      	mov	r9, r1
 8011e82:	f7ee fe49 	bl	8000b18 <__aeabi_dcmpgt>
 8011e86:	2800      	cmp	r0, #0
 8011e88:	f040 8296 	bne.w	80123b8 <_dtoa_r+0x990>
 8011e8c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8011e90:	4640      	mov	r0, r8
 8011e92:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8011e96:	4649      	mov	r1, r9
 8011e98:	f7ee fe20 	bl	8000adc <__aeabi_dcmplt>
 8011e9c:	2800      	cmp	r0, #0
 8011e9e:	f040 8289 	bne.w	80123b4 <_dtoa_r+0x98c>
 8011ea2:	ed8d 8b02 	vstr	d8, [sp, #8]
 8011ea6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011ea8:	2b00      	cmp	r3, #0
 8011eaa:	f2c0 814e 	blt.w	801214a <_dtoa_r+0x722>
 8011eae:	f1bb 0f0e 	cmp.w	fp, #14
 8011eb2:	f300 814a 	bgt.w	801214a <_dtoa_r+0x722>
 8011eb6:	4b6b      	ldr	r3, [pc, #428]	; (8012064 <_dtoa_r+0x63c>)
 8011eb8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8011ebc:	e9d3 8900 	ldrd	r8, r9, [r3]
 8011ec0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011ec2:	2b00      	cmp	r3, #0
 8011ec4:	f280 80dc 	bge.w	8012080 <_dtoa_r+0x658>
 8011ec8:	9b04      	ldr	r3, [sp, #16]
 8011eca:	2b00      	cmp	r3, #0
 8011ecc:	f300 80d8 	bgt.w	8012080 <_dtoa_r+0x658>
 8011ed0:	f040 826f 	bne.w	80123b2 <_dtoa_r+0x98a>
 8011ed4:	4b68      	ldr	r3, [pc, #416]	; (8012078 <_dtoa_r+0x650>)
 8011ed6:	2200      	movs	r2, #0
 8011ed8:	4640      	mov	r0, r8
 8011eda:	4649      	mov	r1, r9
 8011edc:	f7ee fb8c 	bl	80005f8 <__aeabi_dmul>
 8011ee0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8011ee4:	f7ee fe0e 	bl	8000b04 <__aeabi_dcmpge>
 8011ee8:	9e04      	ldr	r6, [sp, #16]
 8011eea:	4637      	mov	r7, r6
 8011eec:	2800      	cmp	r0, #0
 8011eee:	f040 8245 	bne.w	801237c <_dtoa_r+0x954>
 8011ef2:	9d00      	ldr	r5, [sp, #0]
 8011ef4:	2331      	movs	r3, #49	; 0x31
 8011ef6:	f805 3b01 	strb.w	r3, [r5], #1
 8011efa:	f10b 0b01 	add.w	fp, fp, #1
 8011efe:	e241      	b.n	8012384 <_dtoa_r+0x95c>
 8011f00:	07f2      	lsls	r2, r6, #31
 8011f02:	d505      	bpl.n	8011f10 <_dtoa_r+0x4e8>
 8011f04:	e9d7 2300 	ldrd	r2, r3, [r7]
 8011f08:	f7ee fb76 	bl	80005f8 <__aeabi_dmul>
 8011f0c:	3501      	adds	r5, #1
 8011f0e:	2301      	movs	r3, #1
 8011f10:	1076      	asrs	r6, r6, #1
 8011f12:	3708      	adds	r7, #8
 8011f14:	e773      	b.n	8011dfe <_dtoa_r+0x3d6>
 8011f16:	2502      	movs	r5, #2
 8011f18:	e775      	b.n	8011e06 <_dtoa_r+0x3de>
 8011f1a:	9e04      	ldr	r6, [sp, #16]
 8011f1c:	465f      	mov	r7, fp
 8011f1e:	e792      	b.n	8011e46 <_dtoa_r+0x41e>
 8011f20:	9900      	ldr	r1, [sp, #0]
 8011f22:	4b50      	ldr	r3, [pc, #320]	; (8012064 <_dtoa_r+0x63c>)
 8011f24:	ed9d 7b02 	vldr	d7, [sp, #8]
 8011f28:	4431      	add	r1, r6
 8011f2a:	9102      	str	r1, [sp, #8]
 8011f2c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8011f2e:	eeb0 9a47 	vmov.f32	s18, s14
 8011f32:	eef0 9a67 	vmov.f32	s19, s15
 8011f36:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8011f3a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8011f3e:	2900      	cmp	r1, #0
 8011f40:	d044      	beq.n	8011fcc <_dtoa_r+0x5a4>
 8011f42:	494e      	ldr	r1, [pc, #312]	; (801207c <_dtoa_r+0x654>)
 8011f44:	2000      	movs	r0, #0
 8011f46:	f7ee fc81 	bl	800084c <__aeabi_ddiv>
 8011f4a:	ec53 2b19 	vmov	r2, r3, d9
 8011f4e:	f7ee f99b 	bl	8000288 <__aeabi_dsub>
 8011f52:	9d00      	ldr	r5, [sp, #0]
 8011f54:	ec41 0b19 	vmov	d9, r0, r1
 8011f58:	4649      	mov	r1, r9
 8011f5a:	4640      	mov	r0, r8
 8011f5c:	f7ee fdfc 	bl	8000b58 <__aeabi_d2iz>
 8011f60:	4606      	mov	r6, r0
 8011f62:	f7ee fadf 	bl	8000524 <__aeabi_i2d>
 8011f66:	4602      	mov	r2, r0
 8011f68:	460b      	mov	r3, r1
 8011f6a:	4640      	mov	r0, r8
 8011f6c:	4649      	mov	r1, r9
 8011f6e:	f7ee f98b 	bl	8000288 <__aeabi_dsub>
 8011f72:	3630      	adds	r6, #48	; 0x30
 8011f74:	f805 6b01 	strb.w	r6, [r5], #1
 8011f78:	ec53 2b19 	vmov	r2, r3, d9
 8011f7c:	4680      	mov	r8, r0
 8011f7e:	4689      	mov	r9, r1
 8011f80:	f7ee fdac 	bl	8000adc <__aeabi_dcmplt>
 8011f84:	2800      	cmp	r0, #0
 8011f86:	d164      	bne.n	8012052 <_dtoa_r+0x62a>
 8011f88:	4642      	mov	r2, r8
 8011f8a:	464b      	mov	r3, r9
 8011f8c:	4937      	ldr	r1, [pc, #220]	; (801206c <_dtoa_r+0x644>)
 8011f8e:	2000      	movs	r0, #0
 8011f90:	f7ee f97a 	bl	8000288 <__aeabi_dsub>
 8011f94:	ec53 2b19 	vmov	r2, r3, d9
 8011f98:	f7ee fda0 	bl	8000adc <__aeabi_dcmplt>
 8011f9c:	2800      	cmp	r0, #0
 8011f9e:	f040 80b6 	bne.w	801210e <_dtoa_r+0x6e6>
 8011fa2:	9b02      	ldr	r3, [sp, #8]
 8011fa4:	429d      	cmp	r5, r3
 8011fa6:	f43f af7c 	beq.w	8011ea2 <_dtoa_r+0x47a>
 8011faa:	4b31      	ldr	r3, [pc, #196]	; (8012070 <_dtoa_r+0x648>)
 8011fac:	ec51 0b19 	vmov	r0, r1, d9
 8011fb0:	2200      	movs	r2, #0
 8011fb2:	f7ee fb21 	bl	80005f8 <__aeabi_dmul>
 8011fb6:	4b2e      	ldr	r3, [pc, #184]	; (8012070 <_dtoa_r+0x648>)
 8011fb8:	ec41 0b19 	vmov	d9, r0, r1
 8011fbc:	2200      	movs	r2, #0
 8011fbe:	4640      	mov	r0, r8
 8011fc0:	4649      	mov	r1, r9
 8011fc2:	f7ee fb19 	bl	80005f8 <__aeabi_dmul>
 8011fc6:	4680      	mov	r8, r0
 8011fc8:	4689      	mov	r9, r1
 8011fca:	e7c5      	b.n	8011f58 <_dtoa_r+0x530>
 8011fcc:	ec51 0b17 	vmov	r0, r1, d7
 8011fd0:	f7ee fb12 	bl	80005f8 <__aeabi_dmul>
 8011fd4:	9b02      	ldr	r3, [sp, #8]
 8011fd6:	9d00      	ldr	r5, [sp, #0]
 8011fd8:	930f      	str	r3, [sp, #60]	; 0x3c
 8011fda:	ec41 0b19 	vmov	d9, r0, r1
 8011fde:	4649      	mov	r1, r9
 8011fe0:	4640      	mov	r0, r8
 8011fe2:	f7ee fdb9 	bl	8000b58 <__aeabi_d2iz>
 8011fe6:	4606      	mov	r6, r0
 8011fe8:	f7ee fa9c 	bl	8000524 <__aeabi_i2d>
 8011fec:	3630      	adds	r6, #48	; 0x30
 8011fee:	4602      	mov	r2, r0
 8011ff0:	460b      	mov	r3, r1
 8011ff2:	4640      	mov	r0, r8
 8011ff4:	4649      	mov	r1, r9
 8011ff6:	f7ee f947 	bl	8000288 <__aeabi_dsub>
 8011ffa:	f805 6b01 	strb.w	r6, [r5], #1
 8011ffe:	9b02      	ldr	r3, [sp, #8]
 8012000:	429d      	cmp	r5, r3
 8012002:	4680      	mov	r8, r0
 8012004:	4689      	mov	r9, r1
 8012006:	f04f 0200 	mov.w	r2, #0
 801200a:	d124      	bne.n	8012056 <_dtoa_r+0x62e>
 801200c:	4b1b      	ldr	r3, [pc, #108]	; (801207c <_dtoa_r+0x654>)
 801200e:	ec51 0b19 	vmov	r0, r1, d9
 8012012:	f7ee f93b 	bl	800028c <__adddf3>
 8012016:	4602      	mov	r2, r0
 8012018:	460b      	mov	r3, r1
 801201a:	4640      	mov	r0, r8
 801201c:	4649      	mov	r1, r9
 801201e:	f7ee fd7b 	bl	8000b18 <__aeabi_dcmpgt>
 8012022:	2800      	cmp	r0, #0
 8012024:	d173      	bne.n	801210e <_dtoa_r+0x6e6>
 8012026:	ec53 2b19 	vmov	r2, r3, d9
 801202a:	4914      	ldr	r1, [pc, #80]	; (801207c <_dtoa_r+0x654>)
 801202c:	2000      	movs	r0, #0
 801202e:	f7ee f92b 	bl	8000288 <__aeabi_dsub>
 8012032:	4602      	mov	r2, r0
 8012034:	460b      	mov	r3, r1
 8012036:	4640      	mov	r0, r8
 8012038:	4649      	mov	r1, r9
 801203a:	f7ee fd4f 	bl	8000adc <__aeabi_dcmplt>
 801203e:	2800      	cmp	r0, #0
 8012040:	f43f af2f 	beq.w	8011ea2 <_dtoa_r+0x47a>
 8012044:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8012046:	1e6b      	subs	r3, r5, #1
 8012048:	930f      	str	r3, [sp, #60]	; 0x3c
 801204a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 801204e:	2b30      	cmp	r3, #48	; 0x30
 8012050:	d0f8      	beq.n	8012044 <_dtoa_r+0x61c>
 8012052:	46bb      	mov	fp, r7
 8012054:	e04a      	b.n	80120ec <_dtoa_r+0x6c4>
 8012056:	4b06      	ldr	r3, [pc, #24]	; (8012070 <_dtoa_r+0x648>)
 8012058:	f7ee face 	bl	80005f8 <__aeabi_dmul>
 801205c:	4680      	mov	r8, r0
 801205e:	4689      	mov	r9, r1
 8012060:	e7bd      	b.n	8011fde <_dtoa_r+0x5b6>
 8012062:	bf00      	nop
 8012064:	080145c8 	.word	0x080145c8
 8012068:	080145a0 	.word	0x080145a0
 801206c:	3ff00000 	.word	0x3ff00000
 8012070:	40240000 	.word	0x40240000
 8012074:	401c0000 	.word	0x401c0000
 8012078:	40140000 	.word	0x40140000
 801207c:	3fe00000 	.word	0x3fe00000
 8012080:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8012084:	9d00      	ldr	r5, [sp, #0]
 8012086:	4642      	mov	r2, r8
 8012088:	464b      	mov	r3, r9
 801208a:	4630      	mov	r0, r6
 801208c:	4639      	mov	r1, r7
 801208e:	f7ee fbdd 	bl	800084c <__aeabi_ddiv>
 8012092:	f7ee fd61 	bl	8000b58 <__aeabi_d2iz>
 8012096:	9001      	str	r0, [sp, #4]
 8012098:	f7ee fa44 	bl	8000524 <__aeabi_i2d>
 801209c:	4642      	mov	r2, r8
 801209e:	464b      	mov	r3, r9
 80120a0:	f7ee faaa 	bl	80005f8 <__aeabi_dmul>
 80120a4:	4602      	mov	r2, r0
 80120a6:	460b      	mov	r3, r1
 80120a8:	4630      	mov	r0, r6
 80120aa:	4639      	mov	r1, r7
 80120ac:	f7ee f8ec 	bl	8000288 <__aeabi_dsub>
 80120b0:	9e01      	ldr	r6, [sp, #4]
 80120b2:	9f04      	ldr	r7, [sp, #16]
 80120b4:	3630      	adds	r6, #48	; 0x30
 80120b6:	f805 6b01 	strb.w	r6, [r5], #1
 80120ba:	9e00      	ldr	r6, [sp, #0]
 80120bc:	1bae      	subs	r6, r5, r6
 80120be:	42b7      	cmp	r7, r6
 80120c0:	4602      	mov	r2, r0
 80120c2:	460b      	mov	r3, r1
 80120c4:	d134      	bne.n	8012130 <_dtoa_r+0x708>
 80120c6:	f7ee f8e1 	bl	800028c <__adddf3>
 80120ca:	4642      	mov	r2, r8
 80120cc:	464b      	mov	r3, r9
 80120ce:	4606      	mov	r6, r0
 80120d0:	460f      	mov	r7, r1
 80120d2:	f7ee fd21 	bl	8000b18 <__aeabi_dcmpgt>
 80120d6:	b9c8      	cbnz	r0, 801210c <_dtoa_r+0x6e4>
 80120d8:	4642      	mov	r2, r8
 80120da:	464b      	mov	r3, r9
 80120dc:	4630      	mov	r0, r6
 80120de:	4639      	mov	r1, r7
 80120e0:	f7ee fcf2 	bl	8000ac8 <__aeabi_dcmpeq>
 80120e4:	b110      	cbz	r0, 80120ec <_dtoa_r+0x6c4>
 80120e6:	9b01      	ldr	r3, [sp, #4]
 80120e8:	07db      	lsls	r3, r3, #31
 80120ea:	d40f      	bmi.n	801210c <_dtoa_r+0x6e4>
 80120ec:	4651      	mov	r1, sl
 80120ee:	4620      	mov	r0, r4
 80120f0:	f000 fe82 	bl	8012df8 <_Bfree>
 80120f4:	2300      	movs	r3, #0
 80120f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80120f8:	702b      	strb	r3, [r5, #0]
 80120fa:	f10b 0301 	add.w	r3, fp, #1
 80120fe:	6013      	str	r3, [r2, #0]
 8012100:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8012102:	2b00      	cmp	r3, #0
 8012104:	f43f ace2 	beq.w	8011acc <_dtoa_r+0xa4>
 8012108:	601d      	str	r5, [r3, #0]
 801210a:	e4df      	b.n	8011acc <_dtoa_r+0xa4>
 801210c:	465f      	mov	r7, fp
 801210e:	462b      	mov	r3, r5
 8012110:	461d      	mov	r5, r3
 8012112:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8012116:	2a39      	cmp	r2, #57	; 0x39
 8012118:	d106      	bne.n	8012128 <_dtoa_r+0x700>
 801211a:	9a00      	ldr	r2, [sp, #0]
 801211c:	429a      	cmp	r2, r3
 801211e:	d1f7      	bne.n	8012110 <_dtoa_r+0x6e8>
 8012120:	9900      	ldr	r1, [sp, #0]
 8012122:	2230      	movs	r2, #48	; 0x30
 8012124:	3701      	adds	r7, #1
 8012126:	700a      	strb	r2, [r1, #0]
 8012128:	781a      	ldrb	r2, [r3, #0]
 801212a:	3201      	adds	r2, #1
 801212c:	701a      	strb	r2, [r3, #0]
 801212e:	e790      	b.n	8012052 <_dtoa_r+0x62a>
 8012130:	4ba3      	ldr	r3, [pc, #652]	; (80123c0 <_dtoa_r+0x998>)
 8012132:	2200      	movs	r2, #0
 8012134:	f7ee fa60 	bl	80005f8 <__aeabi_dmul>
 8012138:	2200      	movs	r2, #0
 801213a:	2300      	movs	r3, #0
 801213c:	4606      	mov	r6, r0
 801213e:	460f      	mov	r7, r1
 8012140:	f7ee fcc2 	bl	8000ac8 <__aeabi_dcmpeq>
 8012144:	2800      	cmp	r0, #0
 8012146:	d09e      	beq.n	8012086 <_dtoa_r+0x65e>
 8012148:	e7d0      	b.n	80120ec <_dtoa_r+0x6c4>
 801214a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801214c:	2a00      	cmp	r2, #0
 801214e:	f000 80ca 	beq.w	80122e6 <_dtoa_r+0x8be>
 8012152:	9a07      	ldr	r2, [sp, #28]
 8012154:	2a01      	cmp	r2, #1
 8012156:	f300 80ad 	bgt.w	80122b4 <_dtoa_r+0x88c>
 801215a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801215c:	2a00      	cmp	r2, #0
 801215e:	f000 80a5 	beq.w	80122ac <_dtoa_r+0x884>
 8012162:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8012166:	9e08      	ldr	r6, [sp, #32]
 8012168:	9d05      	ldr	r5, [sp, #20]
 801216a:	9a05      	ldr	r2, [sp, #20]
 801216c:	441a      	add	r2, r3
 801216e:	9205      	str	r2, [sp, #20]
 8012170:	9a06      	ldr	r2, [sp, #24]
 8012172:	2101      	movs	r1, #1
 8012174:	441a      	add	r2, r3
 8012176:	4620      	mov	r0, r4
 8012178:	9206      	str	r2, [sp, #24]
 801217a:	f000 ff3d 	bl	8012ff8 <__i2b>
 801217e:	4607      	mov	r7, r0
 8012180:	b165      	cbz	r5, 801219c <_dtoa_r+0x774>
 8012182:	9b06      	ldr	r3, [sp, #24]
 8012184:	2b00      	cmp	r3, #0
 8012186:	dd09      	ble.n	801219c <_dtoa_r+0x774>
 8012188:	42ab      	cmp	r3, r5
 801218a:	9a05      	ldr	r2, [sp, #20]
 801218c:	bfa8      	it	ge
 801218e:	462b      	movge	r3, r5
 8012190:	1ad2      	subs	r2, r2, r3
 8012192:	9205      	str	r2, [sp, #20]
 8012194:	9a06      	ldr	r2, [sp, #24]
 8012196:	1aed      	subs	r5, r5, r3
 8012198:	1ad3      	subs	r3, r2, r3
 801219a:	9306      	str	r3, [sp, #24]
 801219c:	9b08      	ldr	r3, [sp, #32]
 801219e:	b1f3      	cbz	r3, 80121de <_dtoa_r+0x7b6>
 80121a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80121a2:	2b00      	cmp	r3, #0
 80121a4:	f000 80a3 	beq.w	80122ee <_dtoa_r+0x8c6>
 80121a8:	2e00      	cmp	r6, #0
 80121aa:	dd10      	ble.n	80121ce <_dtoa_r+0x7a6>
 80121ac:	4639      	mov	r1, r7
 80121ae:	4632      	mov	r2, r6
 80121b0:	4620      	mov	r0, r4
 80121b2:	f000 ffe1 	bl	8013178 <__pow5mult>
 80121b6:	4652      	mov	r2, sl
 80121b8:	4601      	mov	r1, r0
 80121ba:	4607      	mov	r7, r0
 80121bc:	4620      	mov	r0, r4
 80121be:	f000 ff31 	bl	8013024 <__multiply>
 80121c2:	4651      	mov	r1, sl
 80121c4:	4680      	mov	r8, r0
 80121c6:	4620      	mov	r0, r4
 80121c8:	f000 fe16 	bl	8012df8 <_Bfree>
 80121cc:	46c2      	mov	sl, r8
 80121ce:	9b08      	ldr	r3, [sp, #32]
 80121d0:	1b9a      	subs	r2, r3, r6
 80121d2:	d004      	beq.n	80121de <_dtoa_r+0x7b6>
 80121d4:	4651      	mov	r1, sl
 80121d6:	4620      	mov	r0, r4
 80121d8:	f000 ffce 	bl	8013178 <__pow5mult>
 80121dc:	4682      	mov	sl, r0
 80121de:	2101      	movs	r1, #1
 80121e0:	4620      	mov	r0, r4
 80121e2:	f000 ff09 	bl	8012ff8 <__i2b>
 80121e6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80121e8:	2b00      	cmp	r3, #0
 80121ea:	4606      	mov	r6, r0
 80121ec:	f340 8081 	ble.w	80122f2 <_dtoa_r+0x8ca>
 80121f0:	461a      	mov	r2, r3
 80121f2:	4601      	mov	r1, r0
 80121f4:	4620      	mov	r0, r4
 80121f6:	f000 ffbf 	bl	8013178 <__pow5mult>
 80121fa:	9b07      	ldr	r3, [sp, #28]
 80121fc:	2b01      	cmp	r3, #1
 80121fe:	4606      	mov	r6, r0
 8012200:	dd7a      	ble.n	80122f8 <_dtoa_r+0x8d0>
 8012202:	f04f 0800 	mov.w	r8, #0
 8012206:	6933      	ldr	r3, [r6, #16]
 8012208:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 801220c:	6918      	ldr	r0, [r3, #16]
 801220e:	f000 fea5 	bl	8012f5c <__hi0bits>
 8012212:	f1c0 0020 	rsb	r0, r0, #32
 8012216:	9b06      	ldr	r3, [sp, #24]
 8012218:	4418      	add	r0, r3
 801221a:	f010 001f 	ands.w	r0, r0, #31
 801221e:	f000 8094 	beq.w	801234a <_dtoa_r+0x922>
 8012222:	f1c0 0320 	rsb	r3, r0, #32
 8012226:	2b04      	cmp	r3, #4
 8012228:	f340 8085 	ble.w	8012336 <_dtoa_r+0x90e>
 801222c:	9b05      	ldr	r3, [sp, #20]
 801222e:	f1c0 001c 	rsb	r0, r0, #28
 8012232:	4403      	add	r3, r0
 8012234:	9305      	str	r3, [sp, #20]
 8012236:	9b06      	ldr	r3, [sp, #24]
 8012238:	4403      	add	r3, r0
 801223a:	4405      	add	r5, r0
 801223c:	9306      	str	r3, [sp, #24]
 801223e:	9b05      	ldr	r3, [sp, #20]
 8012240:	2b00      	cmp	r3, #0
 8012242:	dd05      	ble.n	8012250 <_dtoa_r+0x828>
 8012244:	4651      	mov	r1, sl
 8012246:	461a      	mov	r2, r3
 8012248:	4620      	mov	r0, r4
 801224a:	f000 ffef 	bl	801322c <__lshift>
 801224e:	4682      	mov	sl, r0
 8012250:	9b06      	ldr	r3, [sp, #24]
 8012252:	2b00      	cmp	r3, #0
 8012254:	dd05      	ble.n	8012262 <_dtoa_r+0x83a>
 8012256:	4631      	mov	r1, r6
 8012258:	461a      	mov	r2, r3
 801225a:	4620      	mov	r0, r4
 801225c:	f000 ffe6 	bl	801322c <__lshift>
 8012260:	4606      	mov	r6, r0
 8012262:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012264:	2b00      	cmp	r3, #0
 8012266:	d072      	beq.n	801234e <_dtoa_r+0x926>
 8012268:	4631      	mov	r1, r6
 801226a:	4650      	mov	r0, sl
 801226c:	f001 f84a 	bl	8013304 <__mcmp>
 8012270:	2800      	cmp	r0, #0
 8012272:	da6c      	bge.n	801234e <_dtoa_r+0x926>
 8012274:	2300      	movs	r3, #0
 8012276:	4651      	mov	r1, sl
 8012278:	220a      	movs	r2, #10
 801227a:	4620      	mov	r0, r4
 801227c:	f000 fdde 	bl	8012e3c <__multadd>
 8012280:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012282:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012286:	4682      	mov	sl, r0
 8012288:	2b00      	cmp	r3, #0
 801228a:	f000 81b0 	beq.w	80125ee <_dtoa_r+0xbc6>
 801228e:	2300      	movs	r3, #0
 8012290:	4639      	mov	r1, r7
 8012292:	220a      	movs	r2, #10
 8012294:	4620      	mov	r0, r4
 8012296:	f000 fdd1 	bl	8012e3c <__multadd>
 801229a:	9b01      	ldr	r3, [sp, #4]
 801229c:	2b00      	cmp	r3, #0
 801229e:	4607      	mov	r7, r0
 80122a0:	f300 8096 	bgt.w	80123d0 <_dtoa_r+0x9a8>
 80122a4:	9b07      	ldr	r3, [sp, #28]
 80122a6:	2b02      	cmp	r3, #2
 80122a8:	dc59      	bgt.n	801235e <_dtoa_r+0x936>
 80122aa:	e091      	b.n	80123d0 <_dtoa_r+0x9a8>
 80122ac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80122ae:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80122b2:	e758      	b.n	8012166 <_dtoa_r+0x73e>
 80122b4:	9b04      	ldr	r3, [sp, #16]
 80122b6:	1e5e      	subs	r6, r3, #1
 80122b8:	9b08      	ldr	r3, [sp, #32]
 80122ba:	42b3      	cmp	r3, r6
 80122bc:	bfbf      	itttt	lt
 80122be:	9b08      	ldrlt	r3, [sp, #32]
 80122c0:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 80122c2:	9608      	strlt	r6, [sp, #32]
 80122c4:	1af3      	sublt	r3, r6, r3
 80122c6:	bfb4      	ite	lt
 80122c8:	18d2      	addlt	r2, r2, r3
 80122ca:	1b9e      	subge	r6, r3, r6
 80122cc:	9b04      	ldr	r3, [sp, #16]
 80122ce:	bfbc      	itt	lt
 80122d0:	920b      	strlt	r2, [sp, #44]	; 0x2c
 80122d2:	2600      	movlt	r6, #0
 80122d4:	2b00      	cmp	r3, #0
 80122d6:	bfb7      	itett	lt
 80122d8:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 80122dc:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 80122e0:	1a9d      	sublt	r5, r3, r2
 80122e2:	2300      	movlt	r3, #0
 80122e4:	e741      	b.n	801216a <_dtoa_r+0x742>
 80122e6:	9e08      	ldr	r6, [sp, #32]
 80122e8:	9d05      	ldr	r5, [sp, #20]
 80122ea:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80122ec:	e748      	b.n	8012180 <_dtoa_r+0x758>
 80122ee:	9a08      	ldr	r2, [sp, #32]
 80122f0:	e770      	b.n	80121d4 <_dtoa_r+0x7ac>
 80122f2:	9b07      	ldr	r3, [sp, #28]
 80122f4:	2b01      	cmp	r3, #1
 80122f6:	dc19      	bgt.n	801232c <_dtoa_r+0x904>
 80122f8:	9b02      	ldr	r3, [sp, #8]
 80122fa:	b9bb      	cbnz	r3, 801232c <_dtoa_r+0x904>
 80122fc:	9b03      	ldr	r3, [sp, #12]
 80122fe:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8012302:	b99b      	cbnz	r3, 801232c <_dtoa_r+0x904>
 8012304:	9b03      	ldr	r3, [sp, #12]
 8012306:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801230a:	0d1b      	lsrs	r3, r3, #20
 801230c:	051b      	lsls	r3, r3, #20
 801230e:	b183      	cbz	r3, 8012332 <_dtoa_r+0x90a>
 8012310:	9b05      	ldr	r3, [sp, #20]
 8012312:	3301      	adds	r3, #1
 8012314:	9305      	str	r3, [sp, #20]
 8012316:	9b06      	ldr	r3, [sp, #24]
 8012318:	3301      	adds	r3, #1
 801231a:	9306      	str	r3, [sp, #24]
 801231c:	f04f 0801 	mov.w	r8, #1
 8012320:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012322:	2b00      	cmp	r3, #0
 8012324:	f47f af6f 	bne.w	8012206 <_dtoa_r+0x7de>
 8012328:	2001      	movs	r0, #1
 801232a:	e774      	b.n	8012216 <_dtoa_r+0x7ee>
 801232c:	f04f 0800 	mov.w	r8, #0
 8012330:	e7f6      	b.n	8012320 <_dtoa_r+0x8f8>
 8012332:	4698      	mov	r8, r3
 8012334:	e7f4      	b.n	8012320 <_dtoa_r+0x8f8>
 8012336:	d082      	beq.n	801223e <_dtoa_r+0x816>
 8012338:	9a05      	ldr	r2, [sp, #20]
 801233a:	331c      	adds	r3, #28
 801233c:	441a      	add	r2, r3
 801233e:	9205      	str	r2, [sp, #20]
 8012340:	9a06      	ldr	r2, [sp, #24]
 8012342:	441a      	add	r2, r3
 8012344:	441d      	add	r5, r3
 8012346:	9206      	str	r2, [sp, #24]
 8012348:	e779      	b.n	801223e <_dtoa_r+0x816>
 801234a:	4603      	mov	r3, r0
 801234c:	e7f4      	b.n	8012338 <_dtoa_r+0x910>
 801234e:	9b04      	ldr	r3, [sp, #16]
 8012350:	2b00      	cmp	r3, #0
 8012352:	dc37      	bgt.n	80123c4 <_dtoa_r+0x99c>
 8012354:	9b07      	ldr	r3, [sp, #28]
 8012356:	2b02      	cmp	r3, #2
 8012358:	dd34      	ble.n	80123c4 <_dtoa_r+0x99c>
 801235a:	9b04      	ldr	r3, [sp, #16]
 801235c:	9301      	str	r3, [sp, #4]
 801235e:	9b01      	ldr	r3, [sp, #4]
 8012360:	b963      	cbnz	r3, 801237c <_dtoa_r+0x954>
 8012362:	4631      	mov	r1, r6
 8012364:	2205      	movs	r2, #5
 8012366:	4620      	mov	r0, r4
 8012368:	f000 fd68 	bl	8012e3c <__multadd>
 801236c:	4601      	mov	r1, r0
 801236e:	4606      	mov	r6, r0
 8012370:	4650      	mov	r0, sl
 8012372:	f000 ffc7 	bl	8013304 <__mcmp>
 8012376:	2800      	cmp	r0, #0
 8012378:	f73f adbb 	bgt.w	8011ef2 <_dtoa_r+0x4ca>
 801237c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801237e:	9d00      	ldr	r5, [sp, #0]
 8012380:	ea6f 0b03 	mvn.w	fp, r3
 8012384:	f04f 0800 	mov.w	r8, #0
 8012388:	4631      	mov	r1, r6
 801238a:	4620      	mov	r0, r4
 801238c:	f000 fd34 	bl	8012df8 <_Bfree>
 8012390:	2f00      	cmp	r7, #0
 8012392:	f43f aeab 	beq.w	80120ec <_dtoa_r+0x6c4>
 8012396:	f1b8 0f00 	cmp.w	r8, #0
 801239a:	d005      	beq.n	80123a8 <_dtoa_r+0x980>
 801239c:	45b8      	cmp	r8, r7
 801239e:	d003      	beq.n	80123a8 <_dtoa_r+0x980>
 80123a0:	4641      	mov	r1, r8
 80123a2:	4620      	mov	r0, r4
 80123a4:	f000 fd28 	bl	8012df8 <_Bfree>
 80123a8:	4639      	mov	r1, r7
 80123aa:	4620      	mov	r0, r4
 80123ac:	f000 fd24 	bl	8012df8 <_Bfree>
 80123b0:	e69c      	b.n	80120ec <_dtoa_r+0x6c4>
 80123b2:	2600      	movs	r6, #0
 80123b4:	4637      	mov	r7, r6
 80123b6:	e7e1      	b.n	801237c <_dtoa_r+0x954>
 80123b8:	46bb      	mov	fp, r7
 80123ba:	4637      	mov	r7, r6
 80123bc:	e599      	b.n	8011ef2 <_dtoa_r+0x4ca>
 80123be:	bf00      	nop
 80123c0:	40240000 	.word	0x40240000
 80123c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80123c6:	2b00      	cmp	r3, #0
 80123c8:	f000 80c8 	beq.w	801255c <_dtoa_r+0xb34>
 80123cc:	9b04      	ldr	r3, [sp, #16]
 80123ce:	9301      	str	r3, [sp, #4]
 80123d0:	2d00      	cmp	r5, #0
 80123d2:	dd05      	ble.n	80123e0 <_dtoa_r+0x9b8>
 80123d4:	4639      	mov	r1, r7
 80123d6:	462a      	mov	r2, r5
 80123d8:	4620      	mov	r0, r4
 80123da:	f000 ff27 	bl	801322c <__lshift>
 80123de:	4607      	mov	r7, r0
 80123e0:	f1b8 0f00 	cmp.w	r8, #0
 80123e4:	d05b      	beq.n	801249e <_dtoa_r+0xa76>
 80123e6:	6879      	ldr	r1, [r7, #4]
 80123e8:	4620      	mov	r0, r4
 80123ea:	f000 fcc5 	bl	8012d78 <_Balloc>
 80123ee:	4605      	mov	r5, r0
 80123f0:	b928      	cbnz	r0, 80123fe <_dtoa_r+0x9d6>
 80123f2:	4b83      	ldr	r3, [pc, #524]	; (8012600 <_dtoa_r+0xbd8>)
 80123f4:	4602      	mov	r2, r0
 80123f6:	f240 21ef 	movw	r1, #751	; 0x2ef
 80123fa:	f7ff bb2e 	b.w	8011a5a <_dtoa_r+0x32>
 80123fe:	693a      	ldr	r2, [r7, #16]
 8012400:	3202      	adds	r2, #2
 8012402:	0092      	lsls	r2, r2, #2
 8012404:	f107 010c 	add.w	r1, r7, #12
 8012408:	300c      	adds	r0, #12
 801240a:	f7ff fa65 	bl	80118d8 <memcpy>
 801240e:	2201      	movs	r2, #1
 8012410:	4629      	mov	r1, r5
 8012412:	4620      	mov	r0, r4
 8012414:	f000 ff0a 	bl	801322c <__lshift>
 8012418:	9b00      	ldr	r3, [sp, #0]
 801241a:	3301      	adds	r3, #1
 801241c:	9304      	str	r3, [sp, #16]
 801241e:	e9dd 2300 	ldrd	r2, r3, [sp]
 8012422:	4413      	add	r3, r2
 8012424:	9308      	str	r3, [sp, #32]
 8012426:	9b02      	ldr	r3, [sp, #8]
 8012428:	f003 0301 	and.w	r3, r3, #1
 801242c:	46b8      	mov	r8, r7
 801242e:	9306      	str	r3, [sp, #24]
 8012430:	4607      	mov	r7, r0
 8012432:	9b04      	ldr	r3, [sp, #16]
 8012434:	4631      	mov	r1, r6
 8012436:	3b01      	subs	r3, #1
 8012438:	4650      	mov	r0, sl
 801243a:	9301      	str	r3, [sp, #4]
 801243c:	f7ff fa6a 	bl	8011914 <quorem>
 8012440:	4641      	mov	r1, r8
 8012442:	9002      	str	r0, [sp, #8]
 8012444:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8012448:	4650      	mov	r0, sl
 801244a:	f000 ff5b 	bl	8013304 <__mcmp>
 801244e:	463a      	mov	r2, r7
 8012450:	9005      	str	r0, [sp, #20]
 8012452:	4631      	mov	r1, r6
 8012454:	4620      	mov	r0, r4
 8012456:	f000 ff71 	bl	801333c <__mdiff>
 801245a:	68c2      	ldr	r2, [r0, #12]
 801245c:	4605      	mov	r5, r0
 801245e:	bb02      	cbnz	r2, 80124a2 <_dtoa_r+0xa7a>
 8012460:	4601      	mov	r1, r0
 8012462:	4650      	mov	r0, sl
 8012464:	f000 ff4e 	bl	8013304 <__mcmp>
 8012468:	4602      	mov	r2, r0
 801246a:	4629      	mov	r1, r5
 801246c:	4620      	mov	r0, r4
 801246e:	9209      	str	r2, [sp, #36]	; 0x24
 8012470:	f000 fcc2 	bl	8012df8 <_Bfree>
 8012474:	9b07      	ldr	r3, [sp, #28]
 8012476:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012478:	9d04      	ldr	r5, [sp, #16]
 801247a:	ea43 0102 	orr.w	r1, r3, r2
 801247e:	9b06      	ldr	r3, [sp, #24]
 8012480:	4319      	orrs	r1, r3
 8012482:	d110      	bne.n	80124a6 <_dtoa_r+0xa7e>
 8012484:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8012488:	d029      	beq.n	80124de <_dtoa_r+0xab6>
 801248a:	9b05      	ldr	r3, [sp, #20]
 801248c:	2b00      	cmp	r3, #0
 801248e:	dd02      	ble.n	8012496 <_dtoa_r+0xa6e>
 8012490:	9b02      	ldr	r3, [sp, #8]
 8012492:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8012496:	9b01      	ldr	r3, [sp, #4]
 8012498:	f883 9000 	strb.w	r9, [r3]
 801249c:	e774      	b.n	8012388 <_dtoa_r+0x960>
 801249e:	4638      	mov	r0, r7
 80124a0:	e7ba      	b.n	8012418 <_dtoa_r+0x9f0>
 80124a2:	2201      	movs	r2, #1
 80124a4:	e7e1      	b.n	801246a <_dtoa_r+0xa42>
 80124a6:	9b05      	ldr	r3, [sp, #20]
 80124a8:	2b00      	cmp	r3, #0
 80124aa:	db04      	blt.n	80124b6 <_dtoa_r+0xa8e>
 80124ac:	9907      	ldr	r1, [sp, #28]
 80124ae:	430b      	orrs	r3, r1
 80124b0:	9906      	ldr	r1, [sp, #24]
 80124b2:	430b      	orrs	r3, r1
 80124b4:	d120      	bne.n	80124f8 <_dtoa_r+0xad0>
 80124b6:	2a00      	cmp	r2, #0
 80124b8:	dded      	ble.n	8012496 <_dtoa_r+0xa6e>
 80124ba:	4651      	mov	r1, sl
 80124bc:	2201      	movs	r2, #1
 80124be:	4620      	mov	r0, r4
 80124c0:	f000 feb4 	bl	801322c <__lshift>
 80124c4:	4631      	mov	r1, r6
 80124c6:	4682      	mov	sl, r0
 80124c8:	f000 ff1c 	bl	8013304 <__mcmp>
 80124cc:	2800      	cmp	r0, #0
 80124ce:	dc03      	bgt.n	80124d8 <_dtoa_r+0xab0>
 80124d0:	d1e1      	bne.n	8012496 <_dtoa_r+0xa6e>
 80124d2:	f019 0f01 	tst.w	r9, #1
 80124d6:	d0de      	beq.n	8012496 <_dtoa_r+0xa6e>
 80124d8:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80124dc:	d1d8      	bne.n	8012490 <_dtoa_r+0xa68>
 80124de:	9a01      	ldr	r2, [sp, #4]
 80124e0:	2339      	movs	r3, #57	; 0x39
 80124e2:	7013      	strb	r3, [r2, #0]
 80124e4:	462b      	mov	r3, r5
 80124e6:	461d      	mov	r5, r3
 80124e8:	3b01      	subs	r3, #1
 80124ea:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 80124ee:	2a39      	cmp	r2, #57	; 0x39
 80124f0:	d06c      	beq.n	80125cc <_dtoa_r+0xba4>
 80124f2:	3201      	adds	r2, #1
 80124f4:	701a      	strb	r2, [r3, #0]
 80124f6:	e747      	b.n	8012388 <_dtoa_r+0x960>
 80124f8:	2a00      	cmp	r2, #0
 80124fa:	dd07      	ble.n	801250c <_dtoa_r+0xae4>
 80124fc:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8012500:	d0ed      	beq.n	80124de <_dtoa_r+0xab6>
 8012502:	9a01      	ldr	r2, [sp, #4]
 8012504:	f109 0301 	add.w	r3, r9, #1
 8012508:	7013      	strb	r3, [r2, #0]
 801250a:	e73d      	b.n	8012388 <_dtoa_r+0x960>
 801250c:	9b04      	ldr	r3, [sp, #16]
 801250e:	9a08      	ldr	r2, [sp, #32]
 8012510:	f803 9c01 	strb.w	r9, [r3, #-1]
 8012514:	4293      	cmp	r3, r2
 8012516:	d043      	beq.n	80125a0 <_dtoa_r+0xb78>
 8012518:	4651      	mov	r1, sl
 801251a:	2300      	movs	r3, #0
 801251c:	220a      	movs	r2, #10
 801251e:	4620      	mov	r0, r4
 8012520:	f000 fc8c 	bl	8012e3c <__multadd>
 8012524:	45b8      	cmp	r8, r7
 8012526:	4682      	mov	sl, r0
 8012528:	f04f 0300 	mov.w	r3, #0
 801252c:	f04f 020a 	mov.w	r2, #10
 8012530:	4641      	mov	r1, r8
 8012532:	4620      	mov	r0, r4
 8012534:	d107      	bne.n	8012546 <_dtoa_r+0xb1e>
 8012536:	f000 fc81 	bl	8012e3c <__multadd>
 801253a:	4680      	mov	r8, r0
 801253c:	4607      	mov	r7, r0
 801253e:	9b04      	ldr	r3, [sp, #16]
 8012540:	3301      	adds	r3, #1
 8012542:	9304      	str	r3, [sp, #16]
 8012544:	e775      	b.n	8012432 <_dtoa_r+0xa0a>
 8012546:	f000 fc79 	bl	8012e3c <__multadd>
 801254a:	4639      	mov	r1, r7
 801254c:	4680      	mov	r8, r0
 801254e:	2300      	movs	r3, #0
 8012550:	220a      	movs	r2, #10
 8012552:	4620      	mov	r0, r4
 8012554:	f000 fc72 	bl	8012e3c <__multadd>
 8012558:	4607      	mov	r7, r0
 801255a:	e7f0      	b.n	801253e <_dtoa_r+0xb16>
 801255c:	9b04      	ldr	r3, [sp, #16]
 801255e:	9301      	str	r3, [sp, #4]
 8012560:	9d00      	ldr	r5, [sp, #0]
 8012562:	4631      	mov	r1, r6
 8012564:	4650      	mov	r0, sl
 8012566:	f7ff f9d5 	bl	8011914 <quorem>
 801256a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 801256e:	9b00      	ldr	r3, [sp, #0]
 8012570:	f805 9b01 	strb.w	r9, [r5], #1
 8012574:	1aea      	subs	r2, r5, r3
 8012576:	9b01      	ldr	r3, [sp, #4]
 8012578:	4293      	cmp	r3, r2
 801257a:	dd07      	ble.n	801258c <_dtoa_r+0xb64>
 801257c:	4651      	mov	r1, sl
 801257e:	2300      	movs	r3, #0
 8012580:	220a      	movs	r2, #10
 8012582:	4620      	mov	r0, r4
 8012584:	f000 fc5a 	bl	8012e3c <__multadd>
 8012588:	4682      	mov	sl, r0
 801258a:	e7ea      	b.n	8012562 <_dtoa_r+0xb3a>
 801258c:	9b01      	ldr	r3, [sp, #4]
 801258e:	2b00      	cmp	r3, #0
 8012590:	bfc8      	it	gt
 8012592:	461d      	movgt	r5, r3
 8012594:	9b00      	ldr	r3, [sp, #0]
 8012596:	bfd8      	it	le
 8012598:	2501      	movle	r5, #1
 801259a:	441d      	add	r5, r3
 801259c:	f04f 0800 	mov.w	r8, #0
 80125a0:	4651      	mov	r1, sl
 80125a2:	2201      	movs	r2, #1
 80125a4:	4620      	mov	r0, r4
 80125a6:	f000 fe41 	bl	801322c <__lshift>
 80125aa:	4631      	mov	r1, r6
 80125ac:	4682      	mov	sl, r0
 80125ae:	f000 fea9 	bl	8013304 <__mcmp>
 80125b2:	2800      	cmp	r0, #0
 80125b4:	dc96      	bgt.n	80124e4 <_dtoa_r+0xabc>
 80125b6:	d102      	bne.n	80125be <_dtoa_r+0xb96>
 80125b8:	f019 0f01 	tst.w	r9, #1
 80125bc:	d192      	bne.n	80124e4 <_dtoa_r+0xabc>
 80125be:	462b      	mov	r3, r5
 80125c0:	461d      	mov	r5, r3
 80125c2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80125c6:	2a30      	cmp	r2, #48	; 0x30
 80125c8:	d0fa      	beq.n	80125c0 <_dtoa_r+0xb98>
 80125ca:	e6dd      	b.n	8012388 <_dtoa_r+0x960>
 80125cc:	9a00      	ldr	r2, [sp, #0]
 80125ce:	429a      	cmp	r2, r3
 80125d0:	d189      	bne.n	80124e6 <_dtoa_r+0xabe>
 80125d2:	f10b 0b01 	add.w	fp, fp, #1
 80125d6:	2331      	movs	r3, #49	; 0x31
 80125d8:	e796      	b.n	8012508 <_dtoa_r+0xae0>
 80125da:	4b0a      	ldr	r3, [pc, #40]	; (8012604 <_dtoa_r+0xbdc>)
 80125dc:	f7ff ba99 	b.w	8011b12 <_dtoa_r+0xea>
 80125e0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80125e2:	2b00      	cmp	r3, #0
 80125e4:	f47f aa6d 	bne.w	8011ac2 <_dtoa_r+0x9a>
 80125e8:	4b07      	ldr	r3, [pc, #28]	; (8012608 <_dtoa_r+0xbe0>)
 80125ea:	f7ff ba92 	b.w	8011b12 <_dtoa_r+0xea>
 80125ee:	9b01      	ldr	r3, [sp, #4]
 80125f0:	2b00      	cmp	r3, #0
 80125f2:	dcb5      	bgt.n	8012560 <_dtoa_r+0xb38>
 80125f4:	9b07      	ldr	r3, [sp, #28]
 80125f6:	2b02      	cmp	r3, #2
 80125f8:	f73f aeb1 	bgt.w	801235e <_dtoa_r+0x936>
 80125fc:	e7b0      	b.n	8012560 <_dtoa_r+0xb38>
 80125fe:	bf00      	nop
 8012600:	080144d6 	.word	0x080144d6
 8012604:	08014429 	.word	0x08014429
 8012608:	0801445a 	.word	0x0801445a

0801260c <_free_r>:
 801260c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801260e:	2900      	cmp	r1, #0
 8012610:	d044      	beq.n	801269c <_free_r+0x90>
 8012612:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8012616:	9001      	str	r0, [sp, #4]
 8012618:	2b00      	cmp	r3, #0
 801261a:	f1a1 0404 	sub.w	r4, r1, #4
 801261e:	bfb8      	it	lt
 8012620:	18e4      	addlt	r4, r4, r3
 8012622:	f7fd fae1 	bl	800fbe8 <__malloc_lock>
 8012626:	4a1e      	ldr	r2, [pc, #120]	; (80126a0 <_free_r+0x94>)
 8012628:	9801      	ldr	r0, [sp, #4]
 801262a:	6813      	ldr	r3, [r2, #0]
 801262c:	b933      	cbnz	r3, 801263c <_free_r+0x30>
 801262e:	6063      	str	r3, [r4, #4]
 8012630:	6014      	str	r4, [r2, #0]
 8012632:	b003      	add	sp, #12
 8012634:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8012638:	f7fd badc 	b.w	800fbf4 <__malloc_unlock>
 801263c:	42a3      	cmp	r3, r4
 801263e:	d908      	bls.n	8012652 <_free_r+0x46>
 8012640:	6825      	ldr	r5, [r4, #0]
 8012642:	1961      	adds	r1, r4, r5
 8012644:	428b      	cmp	r3, r1
 8012646:	bf01      	itttt	eq
 8012648:	6819      	ldreq	r1, [r3, #0]
 801264a:	685b      	ldreq	r3, [r3, #4]
 801264c:	1949      	addeq	r1, r1, r5
 801264e:	6021      	streq	r1, [r4, #0]
 8012650:	e7ed      	b.n	801262e <_free_r+0x22>
 8012652:	461a      	mov	r2, r3
 8012654:	685b      	ldr	r3, [r3, #4]
 8012656:	b10b      	cbz	r3, 801265c <_free_r+0x50>
 8012658:	42a3      	cmp	r3, r4
 801265a:	d9fa      	bls.n	8012652 <_free_r+0x46>
 801265c:	6811      	ldr	r1, [r2, #0]
 801265e:	1855      	adds	r5, r2, r1
 8012660:	42a5      	cmp	r5, r4
 8012662:	d10b      	bne.n	801267c <_free_r+0x70>
 8012664:	6824      	ldr	r4, [r4, #0]
 8012666:	4421      	add	r1, r4
 8012668:	1854      	adds	r4, r2, r1
 801266a:	42a3      	cmp	r3, r4
 801266c:	6011      	str	r1, [r2, #0]
 801266e:	d1e0      	bne.n	8012632 <_free_r+0x26>
 8012670:	681c      	ldr	r4, [r3, #0]
 8012672:	685b      	ldr	r3, [r3, #4]
 8012674:	6053      	str	r3, [r2, #4]
 8012676:	440c      	add	r4, r1
 8012678:	6014      	str	r4, [r2, #0]
 801267a:	e7da      	b.n	8012632 <_free_r+0x26>
 801267c:	d902      	bls.n	8012684 <_free_r+0x78>
 801267e:	230c      	movs	r3, #12
 8012680:	6003      	str	r3, [r0, #0]
 8012682:	e7d6      	b.n	8012632 <_free_r+0x26>
 8012684:	6825      	ldr	r5, [r4, #0]
 8012686:	1961      	adds	r1, r4, r5
 8012688:	428b      	cmp	r3, r1
 801268a:	bf04      	itt	eq
 801268c:	6819      	ldreq	r1, [r3, #0]
 801268e:	685b      	ldreq	r3, [r3, #4]
 8012690:	6063      	str	r3, [r4, #4]
 8012692:	bf04      	itt	eq
 8012694:	1949      	addeq	r1, r1, r5
 8012696:	6021      	streq	r1, [r4, #0]
 8012698:	6054      	str	r4, [r2, #4]
 801269a:	e7ca      	b.n	8012632 <_free_r+0x26>
 801269c:	b003      	add	sp, #12
 801269e:	bd30      	pop	{r4, r5, pc}
 80126a0:	20002850 	.word	0x20002850

080126a4 <rshift>:
 80126a4:	6903      	ldr	r3, [r0, #16]
 80126a6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 80126aa:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80126ae:	ea4f 1261 	mov.w	r2, r1, asr #5
 80126b2:	f100 0414 	add.w	r4, r0, #20
 80126b6:	dd45      	ble.n	8012744 <rshift+0xa0>
 80126b8:	f011 011f 	ands.w	r1, r1, #31
 80126bc:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80126c0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80126c4:	d10c      	bne.n	80126e0 <rshift+0x3c>
 80126c6:	f100 0710 	add.w	r7, r0, #16
 80126ca:	4629      	mov	r1, r5
 80126cc:	42b1      	cmp	r1, r6
 80126ce:	d334      	bcc.n	801273a <rshift+0x96>
 80126d0:	1a9b      	subs	r3, r3, r2
 80126d2:	009b      	lsls	r3, r3, #2
 80126d4:	1eea      	subs	r2, r5, #3
 80126d6:	4296      	cmp	r6, r2
 80126d8:	bf38      	it	cc
 80126da:	2300      	movcc	r3, #0
 80126dc:	4423      	add	r3, r4
 80126de:	e015      	b.n	801270c <rshift+0x68>
 80126e0:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80126e4:	f1c1 0820 	rsb	r8, r1, #32
 80126e8:	40cf      	lsrs	r7, r1
 80126ea:	f105 0e04 	add.w	lr, r5, #4
 80126ee:	46a1      	mov	r9, r4
 80126f0:	4576      	cmp	r6, lr
 80126f2:	46f4      	mov	ip, lr
 80126f4:	d815      	bhi.n	8012722 <rshift+0x7e>
 80126f6:	1a9a      	subs	r2, r3, r2
 80126f8:	0092      	lsls	r2, r2, #2
 80126fa:	3a04      	subs	r2, #4
 80126fc:	3501      	adds	r5, #1
 80126fe:	42ae      	cmp	r6, r5
 8012700:	bf38      	it	cc
 8012702:	2200      	movcc	r2, #0
 8012704:	18a3      	adds	r3, r4, r2
 8012706:	50a7      	str	r7, [r4, r2]
 8012708:	b107      	cbz	r7, 801270c <rshift+0x68>
 801270a:	3304      	adds	r3, #4
 801270c:	1b1a      	subs	r2, r3, r4
 801270e:	42a3      	cmp	r3, r4
 8012710:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8012714:	bf08      	it	eq
 8012716:	2300      	moveq	r3, #0
 8012718:	6102      	str	r2, [r0, #16]
 801271a:	bf08      	it	eq
 801271c:	6143      	streq	r3, [r0, #20]
 801271e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012722:	f8dc c000 	ldr.w	ip, [ip]
 8012726:	fa0c fc08 	lsl.w	ip, ip, r8
 801272a:	ea4c 0707 	orr.w	r7, ip, r7
 801272e:	f849 7b04 	str.w	r7, [r9], #4
 8012732:	f85e 7b04 	ldr.w	r7, [lr], #4
 8012736:	40cf      	lsrs	r7, r1
 8012738:	e7da      	b.n	80126f0 <rshift+0x4c>
 801273a:	f851 cb04 	ldr.w	ip, [r1], #4
 801273e:	f847 cf04 	str.w	ip, [r7, #4]!
 8012742:	e7c3      	b.n	80126cc <rshift+0x28>
 8012744:	4623      	mov	r3, r4
 8012746:	e7e1      	b.n	801270c <rshift+0x68>

08012748 <__hexdig_fun>:
 8012748:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 801274c:	2b09      	cmp	r3, #9
 801274e:	d802      	bhi.n	8012756 <__hexdig_fun+0xe>
 8012750:	3820      	subs	r0, #32
 8012752:	b2c0      	uxtb	r0, r0
 8012754:	4770      	bx	lr
 8012756:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 801275a:	2b05      	cmp	r3, #5
 801275c:	d801      	bhi.n	8012762 <__hexdig_fun+0x1a>
 801275e:	3847      	subs	r0, #71	; 0x47
 8012760:	e7f7      	b.n	8012752 <__hexdig_fun+0xa>
 8012762:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8012766:	2b05      	cmp	r3, #5
 8012768:	d801      	bhi.n	801276e <__hexdig_fun+0x26>
 801276a:	3827      	subs	r0, #39	; 0x27
 801276c:	e7f1      	b.n	8012752 <__hexdig_fun+0xa>
 801276e:	2000      	movs	r0, #0
 8012770:	4770      	bx	lr
	...

08012774 <__gethex>:
 8012774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012778:	4617      	mov	r7, r2
 801277a:	680a      	ldr	r2, [r1, #0]
 801277c:	b085      	sub	sp, #20
 801277e:	f102 0b02 	add.w	fp, r2, #2
 8012782:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8012786:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 801278a:	4681      	mov	r9, r0
 801278c:	468a      	mov	sl, r1
 801278e:	9302      	str	r3, [sp, #8]
 8012790:	32fe      	adds	r2, #254	; 0xfe
 8012792:	eb02 030b 	add.w	r3, r2, fp
 8012796:	46d8      	mov	r8, fp
 8012798:	f81b 0b01 	ldrb.w	r0, [fp], #1
 801279c:	9301      	str	r3, [sp, #4]
 801279e:	2830      	cmp	r0, #48	; 0x30
 80127a0:	d0f7      	beq.n	8012792 <__gethex+0x1e>
 80127a2:	f7ff ffd1 	bl	8012748 <__hexdig_fun>
 80127a6:	4604      	mov	r4, r0
 80127a8:	2800      	cmp	r0, #0
 80127aa:	d138      	bne.n	801281e <__gethex+0xaa>
 80127ac:	49a7      	ldr	r1, [pc, #668]	; (8012a4c <__gethex+0x2d8>)
 80127ae:	2201      	movs	r2, #1
 80127b0:	4640      	mov	r0, r8
 80127b2:	f7fe fff8 	bl	80117a6 <strncmp>
 80127b6:	4606      	mov	r6, r0
 80127b8:	2800      	cmp	r0, #0
 80127ba:	d169      	bne.n	8012890 <__gethex+0x11c>
 80127bc:	f898 0001 	ldrb.w	r0, [r8, #1]
 80127c0:	465d      	mov	r5, fp
 80127c2:	f7ff ffc1 	bl	8012748 <__hexdig_fun>
 80127c6:	2800      	cmp	r0, #0
 80127c8:	d064      	beq.n	8012894 <__gethex+0x120>
 80127ca:	465a      	mov	r2, fp
 80127cc:	7810      	ldrb	r0, [r2, #0]
 80127ce:	2830      	cmp	r0, #48	; 0x30
 80127d0:	4690      	mov	r8, r2
 80127d2:	f102 0201 	add.w	r2, r2, #1
 80127d6:	d0f9      	beq.n	80127cc <__gethex+0x58>
 80127d8:	f7ff ffb6 	bl	8012748 <__hexdig_fun>
 80127dc:	2301      	movs	r3, #1
 80127de:	fab0 f480 	clz	r4, r0
 80127e2:	0964      	lsrs	r4, r4, #5
 80127e4:	465e      	mov	r6, fp
 80127e6:	9301      	str	r3, [sp, #4]
 80127e8:	4642      	mov	r2, r8
 80127ea:	4615      	mov	r5, r2
 80127ec:	3201      	adds	r2, #1
 80127ee:	7828      	ldrb	r0, [r5, #0]
 80127f0:	f7ff ffaa 	bl	8012748 <__hexdig_fun>
 80127f4:	2800      	cmp	r0, #0
 80127f6:	d1f8      	bne.n	80127ea <__gethex+0x76>
 80127f8:	4994      	ldr	r1, [pc, #592]	; (8012a4c <__gethex+0x2d8>)
 80127fa:	2201      	movs	r2, #1
 80127fc:	4628      	mov	r0, r5
 80127fe:	f7fe ffd2 	bl	80117a6 <strncmp>
 8012802:	b978      	cbnz	r0, 8012824 <__gethex+0xb0>
 8012804:	b946      	cbnz	r6, 8012818 <__gethex+0xa4>
 8012806:	1c6e      	adds	r6, r5, #1
 8012808:	4632      	mov	r2, r6
 801280a:	4615      	mov	r5, r2
 801280c:	3201      	adds	r2, #1
 801280e:	7828      	ldrb	r0, [r5, #0]
 8012810:	f7ff ff9a 	bl	8012748 <__hexdig_fun>
 8012814:	2800      	cmp	r0, #0
 8012816:	d1f8      	bne.n	801280a <__gethex+0x96>
 8012818:	1b73      	subs	r3, r6, r5
 801281a:	009e      	lsls	r6, r3, #2
 801281c:	e004      	b.n	8012828 <__gethex+0xb4>
 801281e:	2400      	movs	r4, #0
 8012820:	4626      	mov	r6, r4
 8012822:	e7e1      	b.n	80127e8 <__gethex+0x74>
 8012824:	2e00      	cmp	r6, #0
 8012826:	d1f7      	bne.n	8012818 <__gethex+0xa4>
 8012828:	782b      	ldrb	r3, [r5, #0]
 801282a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 801282e:	2b50      	cmp	r3, #80	; 0x50
 8012830:	d13d      	bne.n	80128ae <__gethex+0x13a>
 8012832:	786b      	ldrb	r3, [r5, #1]
 8012834:	2b2b      	cmp	r3, #43	; 0x2b
 8012836:	d02f      	beq.n	8012898 <__gethex+0x124>
 8012838:	2b2d      	cmp	r3, #45	; 0x2d
 801283a:	d031      	beq.n	80128a0 <__gethex+0x12c>
 801283c:	1c69      	adds	r1, r5, #1
 801283e:	f04f 0b00 	mov.w	fp, #0
 8012842:	7808      	ldrb	r0, [r1, #0]
 8012844:	f7ff ff80 	bl	8012748 <__hexdig_fun>
 8012848:	1e42      	subs	r2, r0, #1
 801284a:	b2d2      	uxtb	r2, r2
 801284c:	2a18      	cmp	r2, #24
 801284e:	d82e      	bhi.n	80128ae <__gethex+0x13a>
 8012850:	f1a0 0210 	sub.w	r2, r0, #16
 8012854:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8012858:	f7ff ff76 	bl	8012748 <__hexdig_fun>
 801285c:	f100 3cff 	add.w	ip, r0, #4294967295
 8012860:	fa5f fc8c 	uxtb.w	ip, ip
 8012864:	f1bc 0f18 	cmp.w	ip, #24
 8012868:	d91d      	bls.n	80128a6 <__gethex+0x132>
 801286a:	f1bb 0f00 	cmp.w	fp, #0
 801286e:	d000      	beq.n	8012872 <__gethex+0xfe>
 8012870:	4252      	negs	r2, r2
 8012872:	4416      	add	r6, r2
 8012874:	f8ca 1000 	str.w	r1, [sl]
 8012878:	b1dc      	cbz	r4, 80128b2 <__gethex+0x13e>
 801287a:	9b01      	ldr	r3, [sp, #4]
 801287c:	2b00      	cmp	r3, #0
 801287e:	bf14      	ite	ne
 8012880:	f04f 0800 	movne.w	r8, #0
 8012884:	f04f 0806 	moveq.w	r8, #6
 8012888:	4640      	mov	r0, r8
 801288a:	b005      	add	sp, #20
 801288c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012890:	4645      	mov	r5, r8
 8012892:	4626      	mov	r6, r4
 8012894:	2401      	movs	r4, #1
 8012896:	e7c7      	b.n	8012828 <__gethex+0xb4>
 8012898:	f04f 0b00 	mov.w	fp, #0
 801289c:	1ca9      	adds	r1, r5, #2
 801289e:	e7d0      	b.n	8012842 <__gethex+0xce>
 80128a0:	f04f 0b01 	mov.w	fp, #1
 80128a4:	e7fa      	b.n	801289c <__gethex+0x128>
 80128a6:	230a      	movs	r3, #10
 80128a8:	fb03 0002 	mla	r0, r3, r2, r0
 80128ac:	e7d0      	b.n	8012850 <__gethex+0xdc>
 80128ae:	4629      	mov	r1, r5
 80128b0:	e7e0      	b.n	8012874 <__gethex+0x100>
 80128b2:	eba5 0308 	sub.w	r3, r5, r8
 80128b6:	3b01      	subs	r3, #1
 80128b8:	4621      	mov	r1, r4
 80128ba:	2b07      	cmp	r3, #7
 80128bc:	dc0a      	bgt.n	80128d4 <__gethex+0x160>
 80128be:	4648      	mov	r0, r9
 80128c0:	f000 fa5a 	bl	8012d78 <_Balloc>
 80128c4:	4604      	mov	r4, r0
 80128c6:	b940      	cbnz	r0, 80128da <__gethex+0x166>
 80128c8:	4b61      	ldr	r3, [pc, #388]	; (8012a50 <__gethex+0x2dc>)
 80128ca:	4602      	mov	r2, r0
 80128cc:	21e4      	movs	r1, #228	; 0xe4
 80128ce:	4861      	ldr	r0, [pc, #388]	; (8012a54 <__gethex+0x2e0>)
 80128d0:	f001 f9ba 	bl	8013c48 <__assert_func>
 80128d4:	3101      	adds	r1, #1
 80128d6:	105b      	asrs	r3, r3, #1
 80128d8:	e7ef      	b.n	80128ba <__gethex+0x146>
 80128da:	f100 0a14 	add.w	sl, r0, #20
 80128de:	2300      	movs	r3, #0
 80128e0:	495a      	ldr	r1, [pc, #360]	; (8012a4c <__gethex+0x2d8>)
 80128e2:	f8cd a004 	str.w	sl, [sp, #4]
 80128e6:	469b      	mov	fp, r3
 80128e8:	45a8      	cmp	r8, r5
 80128ea:	d342      	bcc.n	8012972 <__gethex+0x1fe>
 80128ec:	9801      	ldr	r0, [sp, #4]
 80128ee:	f840 bb04 	str.w	fp, [r0], #4
 80128f2:	eba0 000a 	sub.w	r0, r0, sl
 80128f6:	1080      	asrs	r0, r0, #2
 80128f8:	6120      	str	r0, [r4, #16]
 80128fa:	ea4f 1840 	mov.w	r8, r0, lsl #5
 80128fe:	4658      	mov	r0, fp
 8012900:	f000 fb2c 	bl	8012f5c <__hi0bits>
 8012904:	683d      	ldr	r5, [r7, #0]
 8012906:	eba8 0000 	sub.w	r0, r8, r0
 801290a:	42a8      	cmp	r0, r5
 801290c:	dd59      	ble.n	80129c2 <__gethex+0x24e>
 801290e:	eba0 0805 	sub.w	r8, r0, r5
 8012912:	4641      	mov	r1, r8
 8012914:	4620      	mov	r0, r4
 8012916:	f000 febb 	bl	8013690 <__any_on>
 801291a:	4683      	mov	fp, r0
 801291c:	b1b8      	cbz	r0, 801294e <__gethex+0x1da>
 801291e:	f108 33ff 	add.w	r3, r8, #4294967295
 8012922:	1159      	asrs	r1, r3, #5
 8012924:	f003 021f 	and.w	r2, r3, #31
 8012928:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 801292c:	f04f 0b01 	mov.w	fp, #1
 8012930:	fa0b f202 	lsl.w	r2, fp, r2
 8012934:	420a      	tst	r2, r1
 8012936:	d00a      	beq.n	801294e <__gethex+0x1da>
 8012938:	455b      	cmp	r3, fp
 801293a:	dd06      	ble.n	801294a <__gethex+0x1d6>
 801293c:	f1a8 0102 	sub.w	r1, r8, #2
 8012940:	4620      	mov	r0, r4
 8012942:	f000 fea5 	bl	8013690 <__any_on>
 8012946:	2800      	cmp	r0, #0
 8012948:	d138      	bne.n	80129bc <__gethex+0x248>
 801294a:	f04f 0b02 	mov.w	fp, #2
 801294e:	4641      	mov	r1, r8
 8012950:	4620      	mov	r0, r4
 8012952:	f7ff fea7 	bl	80126a4 <rshift>
 8012956:	4446      	add	r6, r8
 8012958:	68bb      	ldr	r3, [r7, #8]
 801295a:	42b3      	cmp	r3, r6
 801295c:	da41      	bge.n	80129e2 <__gethex+0x26e>
 801295e:	4621      	mov	r1, r4
 8012960:	4648      	mov	r0, r9
 8012962:	f000 fa49 	bl	8012df8 <_Bfree>
 8012966:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012968:	2300      	movs	r3, #0
 801296a:	6013      	str	r3, [r2, #0]
 801296c:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 8012970:	e78a      	b.n	8012888 <__gethex+0x114>
 8012972:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 8012976:	2a2e      	cmp	r2, #46	; 0x2e
 8012978:	d014      	beq.n	80129a4 <__gethex+0x230>
 801297a:	2b20      	cmp	r3, #32
 801297c:	d106      	bne.n	801298c <__gethex+0x218>
 801297e:	9b01      	ldr	r3, [sp, #4]
 8012980:	f843 bb04 	str.w	fp, [r3], #4
 8012984:	f04f 0b00 	mov.w	fp, #0
 8012988:	9301      	str	r3, [sp, #4]
 801298a:	465b      	mov	r3, fp
 801298c:	7828      	ldrb	r0, [r5, #0]
 801298e:	9303      	str	r3, [sp, #12]
 8012990:	f7ff feda 	bl	8012748 <__hexdig_fun>
 8012994:	9b03      	ldr	r3, [sp, #12]
 8012996:	f000 000f 	and.w	r0, r0, #15
 801299a:	4098      	lsls	r0, r3
 801299c:	ea4b 0b00 	orr.w	fp, fp, r0
 80129a0:	3304      	adds	r3, #4
 80129a2:	e7a1      	b.n	80128e8 <__gethex+0x174>
 80129a4:	45a8      	cmp	r8, r5
 80129a6:	d8e8      	bhi.n	801297a <__gethex+0x206>
 80129a8:	2201      	movs	r2, #1
 80129aa:	4628      	mov	r0, r5
 80129ac:	9303      	str	r3, [sp, #12]
 80129ae:	f7fe fefa 	bl	80117a6 <strncmp>
 80129b2:	4926      	ldr	r1, [pc, #152]	; (8012a4c <__gethex+0x2d8>)
 80129b4:	9b03      	ldr	r3, [sp, #12]
 80129b6:	2800      	cmp	r0, #0
 80129b8:	d1df      	bne.n	801297a <__gethex+0x206>
 80129ba:	e795      	b.n	80128e8 <__gethex+0x174>
 80129bc:	f04f 0b03 	mov.w	fp, #3
 80129c0:	e7c5      	b.n	801294e <__gethex+0x1da>
 80129c2:	da0b      	bge.n	80129dc <__gethex+0x268>
 80129c4:	eba5 0800 	sub.w	r8, r5, r0
 80129c8:	4621      	mov	r1, r4
 80129ca:	4642      	mov	r2, r8
 80129cc:	4648      	mov	r0, r9
 80129ce:	f000 fc2d 	bl	801322c <__lshift>
 80129d2:	eba6 0608 	sub.w	r6, r6, r8
 80129d6:	4604      	mov	r4, r0
 80129d8:	f100 0a14 	add.w	sl, r0, #20
 80129dc:	f04f 0b00 	mov.w	fp, #0
 80129e0:	e7ba      	b.n	8012958 <__gethex+0x1e4>
 80129e2:	687b      	ldr	r3, [r7, #4]
 80129e4:	42b3      	cmp	r3, r6
 80129e6:	dd73      	ble.n	8012ad0 <__gethex+0x35c>
 80129e8:	1b9e      	subs	r6, r3, r6
 80129ea:	42b5      	cmp	r5, r6
 80129ec:	dc34      	bgt.n	8012a58 <__gethex+0x2e4>
 80129ee:	68fb      	ldr	r3, [r7, #12]
 80129f0:	2b02      	cmp	r3, #2
 80129f2:	d023      	beq.n	8012a3c <__gethex+0x2c8>
 80129f4:	2b03      	cmp	r3, #3
 80129f6:	d025      	beq.n	8012a44 <__gethex+0x2d0>
 80129f8:	2b01      	cmp	r3, #1
 80129fa:	d115      	bne.n	8012a28 <__gethex+0x2b4>
 80129fc:	42b5      	cmp	r5, r6
 80129fe:	d113      	bne.n	8012a28 <__gethex+0x2b4>
 8012a00:	2d01      	cmp	r5, #1
 8012a02:	d10b      	bne.n	8012a1c <__gethex+0x2a8>
 8012a04:	9a02      	ldr	r2, [sp, #8]
 8012a06:	687b      	ldr	r3, [r7, #4]
 8012a08:	6013      	str	r3, [r2, #0]
 8012a0a:	2301      	movs	r3, #1
 8012a0c:	6123      	str	r3, [r4, #16]
 8012a0e:	f8ca 3000 	str.w	r3, [sl]
 8012a12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012a14:	f04f 0862 	mov.w	r8, #98	; 0x62
 8012a18:	601c      	str	r4, [r3, #0]
 8012a1a:	e735      	b.n	8012888 <__gethex+0x114>
 8012a1c:	1e69      	subs	r1, r5, #1
 8012a1e:	4620      	mov	r0, r4
 8012a20:	f000 fe36 	bl	8013690 <__any_on>
 8012a24:	2800      	cmp	r0, #0
 8012a26:	d1ed      	bne.n	8012a04 <__gethex+0x290>
 8012a28:	4621      	mov	r1, r4
 8012a2a:	4648      	mov	r0, r9
 8012a2c:	f000 f9e4 	bl	8012df8 <_Bfree>
 8012a30:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8012a32:	2300      	movs	r3, #0
 8012a34:	6013      	str	r3, [r2, #0]
 8012a36:	f04f 0850 	mov.w	r8, #80	; 0x50
 8012a3a:	e725      	b.n	8012888 <__gethex+0x114>
 8012a3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012a3e:	2b00      	cmp	r3, #0
 8012a40:	d1f2      	bne.n	8012a28 <__gethex+0x2b4>
 8012a42:	e7df      	b.n	8012a04 <__gethex+0x290>
 8012a44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012a46:	2b00      	cmp	r3, #0
 8012a48:	d1dc      	bne.n	8012a04 <__gethex+0x290>
 8012a4a:	e7ed      	b.n	8012a28 <__gethex+0x2b4>
 8012a4c:	080142c4 	.word	0x080142c4
 8012a50:	080144d6 	.word	0x080144d6
 8012a54:	080144e7 	.word	0x080144e7
 8012a58:	f106 38ff 	add.w	r8, r6, #4294967295
 8012a5c:	f1bb 0f00 	cmp.w	fp, #0
 8012a60:	d133      	bne.n	8012aca <__gethex+0x356>
 8012a62:	f1b8 0f00 	cmp.w	r8, #0
 8012a66:	d004      	beq.n	8012a72 <__gethex+0x2fe>
 8012a68:	4641      	mov	r1, r8
 8012a6a:	4620      	mov	r0, r4
 8012a6c:	f000 fe10 	bl	8013690 <__any_on>
 8012a70:	4683      	mov	fp, r0
 8012a72:	ea4f 1268 	mov.w	r2, r8, asr #5
 8012a76:	2301      	movs	r3, #1
 8012a78:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 8012a7c:	f008 081f 	and.w	r8, r8, #31
 8012a80:	fa03 f308 	lsl.w	r3, r3, r8
 8012a84:	4213      	tst	r3, r2
 8012a86:	4631      	mov	r1, r6
 8012a88:	4620      	mov	r0, r4
 8012a8a:	bf18      	it	ne
 8012a8c:	f04b 0b02 	orrne.w	fp, fp, #2
 8012a90:	1bad      	subs	r5, r5, r6
 8012a92:	f7ff fe07 	bl	80126a4 <rshift>
 8012a96:	687e      	ldr	r6, [r7, #4]
 8012a98:	f04f 0802 	mov.w	r8, #2
 8012a9c:	f1bb 0f00 	cmp.w	fp, #0
 8012aa0:	d04a      	beq.n	8012b38 <__gethex+0x3c4>
 8012aa2:	68fb      	ldr	r3, [r7, #12]
 8012aa4:	2b02      	cmp	r3, #2
 8012aa6:	d016      	beq.n	8012ad6 <__gethex+0x362>
 8012aa8:	2b03      	cmp	r3, #3
 8012aaa:	d018      	beq.n	8012ade <__gethex+0x36a>
 8012aac:	2b01      	cmp	r3, #1
 8012aae:	d109      	bne.n	8012ac4 <__gethex+0x350>
 8012ab0:	f01b 0f02 	tst.w	fp, #2
 8012ab4:	d006      	beq.n	8012ac4 <__gethex+0x350>
 8012ab6:	f8da 3000 	ldr.w	r3, [sl]
 8012aba:	ea4b 0b03 	orr.w	fp, fp, r3
 8012abe:	f01b 0f01 	tst.w	fp, #1
 8012ac2:	d10f      	bne.n	8012ae4 <__gethex+0x370>
 8012ac4:	f048 0810 	orr.w	r8, r8, #16
 8012ac8:	e036      	b.n	8012b38 <__gethex+0x3c4>
 8012aca:	f04f 0b01 	mov.w	fp, #1
 8012ace:	e7d0      	b.n	8012a72 <__gethex+0x2fe>
 8012ad0:	f04f 0801 	mov.w	r8, #1
 8012ad4:	e7e2      	b.n	8012a9c <__gethex+0x328>
 8012ad6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012ad8:	f1c3 0301 	rsb	r3, r3, #1
 8012adc:	930f      	str	r3, [sp, #60]	; 0x3c
 8012ade:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012ae0:	2b00      	cmp	r3, #0
 8012ae2:	d0ef      	beq.n	8012ac4 <__gethex+0x350>
 8012ae4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8012ae8:	f104 0214 	add.w	r2, r4, #20
 8012aec:	ea4f 038b 	mov.w	r3, fp, lsl #2
 8012af0:	9301      	str	r3, [sp, #4]
 8012af2:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 8012af6:	2300      	movs	r3, #0
 8012af8:	4694      	mov	ip, r2
 8012afa:	f852 1b04 	ldr.w	r1, [r2], #4
 8012afe:	f1b1 3fff 	cmp.w	r1, #4294967295
 8012b02:	d01e      	beq.n	8012b42 <__gethex+0x3ce>
 8012b04:	3101      	adds	r1, #1
 8012b06:	f8cc 1000 	str.w	r1, [ip]
 8012b0a:	f1b8 0f02 	cmp.w	r8, #2
 8012b0e:	f104 0214 	add.w	r2, r4, #20
 8012b12:	d13d      	bne.n	8012b90 <__gethex+0x41c>
 8012b14:	683b      	ldr	r3, [r7, #0]
 8012b16:	3b01      	subs	r3, #1
 8012b18:	42ab      	cmp	r3, r5
 8012b1a:	d10b      	bne.n	8012b34 <__gethex+0x3c0>
 8012b1c:	1169      	asrs	r1, r5, #5
 8012b1e:	2301      	movs	r3, #1
 8012b20:	f005 051f 	and.w	r5, r5, #31
 8012b24:	fa03 f505 	lsl.w	r5, r3, r5
 8012b28:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8012b2c:	421d      	tst	r5, r3
 8012b2e:	bf18      	it	ne
 8012b30:	f04f 0801 	movne.w	r8, #1
 8012b34:	f048 0820 	orr.w	r8, r8, #32
 8012b38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012b3a:	601c      	str	r4, [r3, #0]
 8012b3c:	9b02      	ldr	r3, [sp, #8]
 8012b3e:	601e      	str	r6, [r3, #0]
 8012b40:	e6a2      	b.n	8012888 <__gethex+0x114>
 8012b42:	4290      	cmp	r0, r2
 8012b44:	f842 3c04 	str.w	r3, [r2, #-4]
 8012b48:	d8d6      	bhi.n	8012af8 <__gethex+0x384>
 8012b4a:	68a2      	ldr	r2, [r4, #8]
 8012b4c:	4593      	cmp	fp, r2
 8012b4e:	db17      	blt.n	8012b80 <__gethex+0x40c>
 8012b50:	6861      	ldr	r1, [r4, #4]
 8012b52:	4648      	mov	r0, r9
 8012b54:	3101      	adds	r1, #1
 8012b56:	f000 f90f 	bl	8012d78 <_Balloc>
 8012b5a:	4682      	mov	sl, r0
 8012b5c:	b918      	cbnz	r0, 8012b66 <__gethex+0x3f2>
 8012b5e:	4b1b      	ldr	r3, [pc, #108]	; (8012bcc <__gethex+0x458>)
 8012b60:	4602      	mov	r2, r0
 8012b62:	2184      	movs	r1, #132	; 0x84
 8012b64:	e6b3      	b.n	80128ce <__gethex+0x15a>
 8012b66:	6922      	ldr	r2, [r4, #16]
 8012b68:	3202      	adds	r2, #2
 8012b6a:	f104 010c 	add.w	r1, r4, #12
 8012b6e:	0092      	lsls	r2, r2, #2
 8012b70:	300c      	adds	r0, #12
 8012b72:	f7fe feb1 	bl	80118d8 <memcpy>
 8012b76:	4621      	mov	r1, r4
 8012b78:	4648      	mov	r0, r9
 8012b7a:	f000 f93d 	bl	8012df8 <_Bfree>
 8012b7e:	4654      	mov	r4, sl
 8012b80:	6922      	ldr	r2, [r4, #16]
 8012b82:	1c51      	adds	r1, r2, #1
 8012b84:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8012b88:	6121      	str	r1, [r4, #16]
 8012b8a:	2101      	movs	r1, #1
 8012b8c:	6151      	str	r1, [r2, #20]
 8012b8e:	e7bc      	b.n	8012b0a <__gethex+0x396>
 8012b90:	6921      	ldr	r1, [r4, #16]
 8012b92:	4559      	cmp	r1, fp
 8012b94:	dd0b      	ble.n	8012bae <__gethex+0x43a>
 8012b96:	2101      	movs	r1, #1
 8012b98:	4620      	mov	r0, r4
 8012b9a:	f7ff fd83 	bl	80126a4 <rshift>
 8012b9e:	68bb      	ldr	r3, [r7, #8]
 8012ba0:	3601      	adds	r6, #1
 8012ba2:	42b3      	cmp	r3, r6
 8012ba4:	f6ff aedb 	blt.w	801295e <__gethex+0x1ea>
 8012ba8:	f04f 0801 	mov.w	r8, #1
 8012bac:	e7c2      	b.n	8012b34 <__gethex+0x3c0>
 8012bae:	f015 051f 	ands.w	r5, r5, #31
 8012bb2:	d0f9      	beq.n	8012ba8 <__gethex+0x434>
 8012bb4:	9b01      	ldr	r3, [sp, #4]
 8012bb6:	441a      	add	r2, r3
 8012bb8:	f1c5 0520 	rsb	r5, r5, #32
 8012bbc:	f852 0c04 	ldr.w	r0, [r2, #-4]
 8012bc0:	f000 f9cc 	bl	8012f5c <__hi0bits>
 8012bc4:	42a8      	cmp	r0, r5
 8012bc6:	dbe6      	blt.n	8012b96 <__gethex+0x422>
 8012bc8:	e7ee      	b.n	8012ba8 <__gethex+0x434>
 8012bca:	bf00      	nop
 8012bcc:	080144d6 	.word	0x080144d6

08012bd0 <L_shift>:
 8012bd0:	f1c2 0208 	rsb	r2, r2, #8
 8012bd4:	0092      	lsls	r2, r2, #2
 8012bd6:	b570      	push	{r4, r5, r6, lr}
 8012bd8:	f1c2 0620 	rsb	r6, r2, #32
 8012bdc:	6843      	ldr	r3, [r0, #4]
 8012bde:	6804      	ldr	r4, [r0, #0]
 8012be0:	fa03 f506 	lsl.w	r5, r3, r6
 8012be4:	432c      	orrs	r4, r5
 8012be6:	40d3      	lsrs	r3, r2
 8012be8:	6004      	str	r4, [r0, #0]
 8012bea:	f840 3f04 	str.w	r3, [r0, #4]!
 8012bee:	4288      	cmp	r0, r1
 8012bf0:	d3f4      	bcc.n	8012bdc <L_shift+0xc>
 8012bf2:	bd70      	pop	{r4, r5, r6, pc}

08012bf4 <__match>:
 8012bf4:	b530      	push	{r4, r5, lr}
 8012bf6:	6803      	ldr	r3, [r0, #0]
 8012bf8:	3301      	adds	r3, #1
 8012bfa:	f811 4b01 	ldrb.w	r4, [r1], #1
 8012bfe:	b914      	cbnz	r4, 8012c06 <__match+0x12>
 8012c00:	6003      	str	r3, [r0, #0]
 8012c02:	2001      	movs	r0, #1
 8012c04:	bd30      	pop	{r4, r5, pc}
 8012c06:	f813 2b01 	ldrb.w	r2, [r3], #1
 8012c0a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8012c0e:	2d19      	cmp	r5, #25
 8012c10:	bf98      	it	ls
 8012c12:	3220      	addls	r2, #32
 8012c14:	42a2      	cmp	r2, r4
 8012c16:	d0f0      	beq.n	8012bfa <__match+0x6>
 8012c18:	2000      	movs	r0, #0
 8012c1a:	e7f3      	b.n	8012c04 <__match+0x10>

08012c1c <__hexnan>:
 8012c1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c20:	680b      	ldr	r3, [r1, #0]
 8012c22:	6801      	ldr	r1, [r0, #0]
 8012c24:	115e      	asrs	r6, r3, #5
 8012c26:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8012c2a:	f013 031f 	ands.w	r3, r3, #31
 8012c2e:	b087      	sub	sp, #28
 8012c30:	bf18      	it	ne
 8012c32:	3604      	addne	r6, #4
 8012c34:	2500      	movs	r5, #0
 8012c36:	1f37      	subs	r7, r6, #4
 8012c38:	4682      	mov	sl, r0
 8012c3a:	4690      	mov	r8, r2
 8012c3c:	9301      	str	r3, [sp, #4]
 8012c3e:	f846 5c04 	str.w	r5, [r6, #-4]
 8012c42:	46b9      	mov	r9, r7
 8012c44:	463c      	mov	r4, r7
 8012c46:	9502      	str	r5, [sp, #8]
 8012c48:	46ab      	mov	fp, r5
 8012c4a:	784a      	ldrb	r2, [r1, #1]
 8012c4c:	1c4b      	adds	r3, r1, #1
 8012c4e:	9303      	str	r3, [sp, #12]
 8012c50:	b342      	cbz	r2, 8012ca4 <__hexnan+0x88>
 8012c52:	4610      	mov	r0, r2
 8012c54:	9105      	str	r1, [sp, #20]
 8012c56:	9204      	str	r2, [sp, #16]
 8012c58:	f7ff fd76 	bl	8012748 <__hexdig_fun>
 8012c5c:	2800      	cmp	r0, #0
 8012c5e:	d14f      	bne.n	8012d00 <__hexnan+0xe4>
 8012c60:	9a04      	ldr	r2, [sp, #16]
 8012c62:	9905      	ldr	r1, [sp, #20]
 8012c64:	2a20      	cmp	r2, #32
 8012c66:	d818      	bhi.n	8012c9a <__hexnan+0x7e>
 8012c68:	9b02      	ldr	r3, [sp, #8]
 8012c6a:	459b      	cmp	fp, r3
 8012c6c:	dd13      	ble.n	8012c96 <__hexnan+0x7a>
 8012c6e:	454c      	cmp	r4, r9
 8012c70:	d206      	bcs.n	8012c80 <__hexnan+0x64>
 8012c72:	2d07      	cmp	r5, #7
 8012c74:	dc04      	bgt.n	8012c80 <__hexnan+0x64>
 8012c76:	462a      	mov	r2, r5
 8012c78:	4649      	mov	r1, r9
 8012c7a:	4620      	mov	r0, r4
 8012c7c:	f7ff ffa8 	bl	8012bd0 <L_shift>
 8012c80:	4544      	cmp	r4, r8
 8012c82:	d950      	bls.n	8012d26 <__hexnan+0x10a>
 8012c84:	2300      	movs	r3, #0
 8012c86:	f1a4 0904 	sub.w	r9, r4, #4
 8012c8a:	f844 3c04 	str.w	r3, [r4, #-4]
 8012c8e:	f8cd b008 	str.w	fp, [sp, #8]
 8012c92:	464c      	mov	r4, r9
 8012c94:	461d      	mov	r5, r3
 8012c96:	9903      	ldr	r1, [sp, #12]
 8012c98:	e7d7      	b.n	8012c4a <__hexnan+0x2e>
 8012c9a:	2a29      	cmp	r2, #41	; 0x29
 8012c9c:	d155      	bne.n	8012d4a <__hexnan+0x12e>
 8012c9e:	3102      	adds	r1, #2
 8012ca0:	f8ca 1000 	str.w	r1, [sl]
 8012ca4:	f1bb 0f00 	cmp.w	fp, #0
 8012ca8:	d04f      	beq.n	8012d4a <__hexnan+0x12e>
 8012caa:	454c      	cmp	r4, r9
 8012cac:	d206      	bcs.n	8012cbc <__hexnan+0xa0>
 8012cae:	2d07      	cmp	r5, #7
 8012cb0:	dc04      	bgt.n	8012cbc <__hexnan+0xa0>
 8012cb2:	462a      	mov	r2, r5
 8012cb4:	4649      	mov	r1, r9
 8012cb6:	4620      	mov	r0, r4
 8012cb8:	f7ff ff8a 	bl	8012bd0 <L_shift>
 8012cbc:	4544      	cmp	r4, r8
 8012cbe:	d934      	bls.n	8012d2a <__hexnan+0x10e>
 8012cc0:	f1a8 0204 	sub.w	r2, r8, #4
 8012cc4:	4623      	mov	r3, r4
 8012cc6:	f853 1b04 	ldr.w	r1, [r3], #4
 8012cca:	f842 1f04 	str.w	r1, [r2, #4]!
 8012cce:	429f      	cmp	r7, r3
 8012cd0:	d2f9      	bcs.n	8012cc6 <__hexnan+0xaa>
 8012cd2:	1b3b      	subs	r3, r7, r4
 8012cd4:	f023 0303 	bic.w	r3, r3, #3
 8012cd8:	3304      	adds	r3, #4
 8012cda:	3e03      	subs	r6, #3
 8012cdc:	3401      	adds	r4, #1
 8012cde:	42a6      	cmp	r6, r4
 8012ce0:	bf38      	it	cc
 8012ce2:	2304      	movcc	r3, #4
 8012ce4:	4443      	add	r3, r8
 8012ce6:	2200      	movs	r2, #0
 8012ce8:	f843 2b04 	str.w	r2, [r3], #4
 8012cec:	429f      	cmp	r7, r3
 8012cee:	d2fb      	bcs.n	8012ce8 <__hexnan+0xcc>
 8012cf0:	683b      	ldr	r3, [r7, #0]
 8012cf2:	b91b      	cbnz	r3, 8012cfc <__hexnan+0xe0>
 8012cf4:	4547      	cmp	r7, r8
 8012cf6:	d126      	bne.n	8012d46 <__hexnan+0x12a>
 8012cf8:	2301      	movs	r3, #1
 8012cfa:	603b      	str	r3, [r7, #0]
 8012cfc:	2005      	movs	r0, #5
 8012cfe:	e025      	b.n	8012d4c <__hexnan+0x130>
 8012d00:	3501      	adds	r5, #1
 8012d02:	2d08      	cmp	r5, #8
 8012d04:	f10b 0b01 	add.w	fp, fp, #1
 8012d08:	dd06      	ble.n	8012d18 <__hexnan+0xfc>
 8012d0a:	4544      	cmp	r4, r8
 8012d0c:	d9c3      	bls.n	8012c96 <__hexnan+0x7a>
 8012d0e:	2300      	movs	r3, #0
 8012d10:	f844 3c04 	str.w	r3, [r4, #-4]
 8012d14:	2501      	movs	r5, #1
 8012d16:	3c04      	subs	r4, #4
 8012d18:	6822      	ldr	r2, [r4, #0]
 8012d1a:	f000 000f 	and.w	r0, r0, #15
 8012d1e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8012d22:	6020      	str	r0, [r4, #0]
 8012d24:	e7b7      	b.n	8012c96 <__hexnan+0x7a>
 8012d26:	2508      	movs	r5, #8
 8012d28:	e7b5      	b.n	8012c96 <__hexnan+0x7a>
 8012d2a:	9b01      	ldr	r3, [sp, #4]
 8012d2c:	2b00      	cmp	r3, #0
 8012d2e:	d0df      	beq.n	8012cf0 <__hexnan+0xd4>
 8012d30:	f1c3 0320 	rsb	r3, r3, #32
 8012d34:	f04f 32ff 	mov.w	r2, #4294967295
 8012d38:	40da      	lsrs	r2, r3
 8012d3a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 8012d3e:	4013      	ands	r3, r2
 8012d40:	f846 3c04 	str.w	r3, [r6, #-4]
 8012d44:	e7d4      	b.n	8012cf0 <__hexnan+0xd4>
 8012d46:	3f04      	subs	r7, #4
 8012d48:	e7d2      	b.n	8012cf0 <__hexnan+0xd4>
 8012d4a:	2004      	movs	r0, #4
 8012d4c:	b007      	add	sp, #28
 8012d4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012d52 <__ascii_mbtowc>:
 8012d52:	b082      	sub	sp, #8
 8012d54:	b901      	cbnz	r1, 8012d58 <__ascii_mbtowc+0x6>
 8012d56:	a901      	add	r1, sp, #4
 8012d58:	b142      	cbz	r2, 8012d6c <__ascii_mbtowc+0x1a>
 8012d5a:	b14b      	cbz	r3, 8012d70 <__ascii_mbtowc+0x1e>
 8012d5c:	7813      	ldrb	r3, [r2, #0]
 8012d5e:	600b      	str	r3, [r1, #0]
 8012d60:	7812      	ldrb	r2, [r2, #0]
 8012d62:	1e10      	subs	r0, r2, #0
 8012d64:	bf18      	it	ne
 8012d66:	2001      	movne	r0, #1
 8012d68:	b002      	add	sp, #8
 8012d6a:	4770      	bx	lr
 8012d6c:	4610      	mov	r0, r2
 8012d6e:	e7fb      	b.n	8012d68 <__ascii_mbtowc+0x16>
 8012d70:	f06f 0001 	mvn.w	r0, #1
 8012d74:	e7f8      	b.n	8012d68 <__ascii_mbtowc+0x16>
	...

08012d78 <_Balloc>:
 8012d78:	b570      	push	{r4, r5, r6, lr}
 8012d7a:	69c6      	ldr	r6, [r0, #28]
 8012d7c:	4604      	mov	r4, r0
 8012d7e:	460d      	mov	r5, r1
 8012d80:	b976      	cbnz	r6, 8012da0 <_Balloc+0x28>
 8012d82:	2010      	movs	r0, #16
 8012d84:	f7fc fe88 	bl	800fa98 <malloc>
 8012d88:	4602      	mov	r2, r0
 8012d8a:	61e0      	str	r0, [r4, #28]
 8012d8c:	b920      	cbnz	r0, 8012d98 <_Balloc+0x20>
 8012d8e:	4b18      	ldr	r3, [pc, #96]	; (8012df0 <_Balloc+0x78>)
 8012d90:	4818      	ldr	r0, [pc, #96]	; (8012df4 <_Balloc+0x7c>)
 8012d92:	216b      	movs	r1, #107	; 0x6b
 8012d94:	f000 ff58 	bl	8013c48 <__assert_func>
 8012d98:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8012d9c:	6006      	str	r6, [r0, #0]
 8012d9e:	60c6      	str	r6, [r0, #12]
 8012da0:	69e6      	ldr	r6, [r4, #28]
 8012da2:	68f3      	ldr	r3, [r6, #12]
 8012da4:	b183      	cbz	r3, 8012dc8 <_Balloc+0x50>
 8012da6:	69e3      	ldr	r3, [r4, #28]
 8012da8:	68db      	ldr	r3, [r3, #12]
 8012daa:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8012dae:	b9b8      	cbnz	r0, 8012de0 <_Balloc+0x68>
 8012db0:	2101      	movs	r1, #1
 8012db2:	fa01 f605 	lsl.w	r6, r1, r5
 8012db6:	1d72      	adds	r2, r6, #5
 8012db8:	0092      	lsls	r2, r2, #2
 8012dba:	4620      	mov	r0, r4
 8012dbc:	f000 ff62 	bl	8013c84 <_calloc_r>
 8012dc0:	b160      	cbz	r0, 8012ddc <_Balloc+0x64>
 8012dc2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8012dc6:	e00e      	b.n	8012de6 <_Balloc+0x6e>
 8012dc8:	2221      	movs	r2, #33	; 0x21
 8012dca:	2104      	movs	r1, #4
 8012dcc:	4620      	mov	r0, r4
 8012dce:	f000 ff59 	bl	8013c84 <_calloc_r>
 8012dd2:	69e3      	ldr	r3, [r4, #28]
 8012dd4:	60f0      	str	r0, [r6, #12]
 8012dd6:	68db      	ldr	r3, [r3, #12]
 8012dd8:	2b00      	cmp	r3, #0
 8012dda:	d1e4      	bne.n	8012da6 <_Balloc+0x2e>
 8012ddc:	2000      	movs	r0, #0
 8012dde:	bd70      	pop	{r4, r5, r6, pc}
 8012de0:	6802      	ldr	r2, [r0, #0]
 8012de2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8012de6:	2300      	movs	r3, #0
 8012de8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8012dec:	e7f7      	b.n	8012dde <_Balloc+0x66>
 8012dee:	bf00      	nop
 8012df0:	08014467 	.word	0x08014467
 8012df4:	08014547 	.word	0x08014547

08012df8 <_Bfree>:
 8012df8:	b570      	push	{r4, r5, r6, lr}
 8012dfa:	69c6      	ldr	r6, [r0, #28]
 8012dfc:	4605      	mov	r5, r0
 8012dfe:	460c      	mov	r4, r1
 8012e00:	b976      	cbnz	r6, 8012e20 <_Bfree+0x28>
 8012e02:	2010      	movs	r0, #16
 8012e04:	f7fc fe48 	bl	800fa98 <malloc>
 8012e08:	4602      	mov	r2, r0
 8012e0a:	61e8      	str	r0, [r5, #28]
 8012e0c:	b920      	cbnz	r0, 8012e18 <_Bfree+0x20>
 8012e0e:	4b09      	ldr	r3, [pc, #36]	; (8012e34 <_Bfree+0x3c>)
 8012e10:	4809      	ldr	r0, [pc, #36]	; (8012e38 <_Bfree+0x40>)
 8012e12:	218f      	movs	r1, #143	; 0x8f
 8012e14:	f000 ff18 	bl	8013c48 <__assert_func>
 8012e18:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8012e1c:	6006      	str	r6, [r0, #0]
 8012e1e:	60c6      	str	r6, [r0, #12]
 8012e20:	b13c      	cbz	r4, 8012e32 <_Bfree+0x3a>
 8012e22:	69eb      	ldr	r3, [r5, #28]
 8012e24:	6862      	ldr	r2, [r4, #4]
 8012e26:	68db      	ldr	r3, [r3, #12]
 8012e28:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8012e2c:	6021      	str	r1, [r4, #0]
 8012e2e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8012e32:	bd70      	pop	{r4, r5, r6, pc}
 8012e34:	08014467 	.word	0x08014467
 8012e38:	08014547 	.word	0x08014547

08012e3c <__multadd>:
 8012e3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e40:	690d      	ldr	r5, [r1, #16]
 8012e42:	4607      	mov	r7, r0
 8012e44:	460c      	mov	r4, r1
 8012e46:	461e      	mov	r6, r3
 8012e48:	f101 0c14 	add.w	ip, r1, #20
 8012e4c:	2000      	movs	r0, #0
 8012e4e:	f8dc 3000 	ldr.w	r3, [ip]
 8012e52:	b299      	uxth	r1, r3
 8012e54:	fb02 6101 	mla	r1, r2, r1, r6
 8012e58:	0c1e      	lsrs	r6, r3, #16
 8012e5a:	0c0b      	lsrs	r3, r1, #16
 8012e5c:	fb02 3306 	mla	r3, r2, r6, r3
 8012e60:	b289      	uxth	r1, r1
 8012e62:	3001      	adds	r0, #1
 8012e64:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8012e68:	4285      	cmp	r5, r0
 8012e6a:	f84c 1b04 	str.w	r1, [ip], #4
 8012e6e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8012e72:	dcec      	bgt.n	8012e4e <__multadd+0x12>
 8012e74:	b30e      	cbz	r6, 8012eba <__multadd+0x7e>
 8012e76:	68a3      	ldr	r3, [r4, #8]
 8012e78:	42ab      	cmp	r3, r5
 8012e7a:	dc19      	bgt.n	8012eb0 <__multadd+0x74>
 8012e7c:	6861      	ldr	r1, [r4, #4]
 8012e7e:	4638      	mov	r0, r7
 8012e80:	3101      	adds	r1, #1
 8012e82:	f7ff ff79 	bl	8012d78 <_Balloc>
 8012e86:	4680      	mov	r8, r0
 8012e88:	b928      	cbnz	r0, 8012e96 <__multadd+0x5a>
 8012e8a:	4602      	mov	r2, r0
 8012e8c:	4b0c      	ldr	r3, [pc, #48]	; (8012ec0 <__multadd+0x84>)
 8012e8e:	480d      	ldr	r0, [pc, #52]	; (8012ec4 <__multadd+0x88>)
 8012e90:	21ba      	movs	r1, #186	; 0xba
 8012e92:	f000 fed9 	bl	8013c48 <__assert_func>
 8012e96:	6922      	ldr	r2, [r4, #16]
 8012e98:	3202      	adds	r2, #2
 8012e9a:	f104 010c 	add.w	r1, r4, #12
 8012e9e:	0092      	lsls	r2, r2, #2
 8012ea0:	300c      	adds	r0, #12
 8012ea2:	f7fe fd19 	bl	80118d8 <memcpy>
 8012ea6:	4621      	mov	r1, r4
 8012ea8:	4638      	mov	r0, r7
 8012eaa:	f7ff ffa5 	bl	8012df8 <_Bfree>
 8012eae:	4644      	mov	r4, r8
 8012eb0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8012eb4:	3501      	adds	r5, #1
 8012eb6:	615e      	str	r6, [r3, #20]
 8012eb8:	6125      	str	r5, [r4, #16]
 8012eba:	4620      	mov	r0, r4
 8012ebc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ec0:	080144d6 	.word	0x080144d6
 8012ec4:	08014547 	.word	0x08014547

08012ec8 <__s2b>:
 8012ec8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012ecc:	460c      	mov	r4, r1
 8012ece:	4615      	mov	r5, r2
 8012ed0:	461f      	mov	r7, r3
 8012ed2:	2209      	movs	r2, #9
 8012ed4:	3308      	adds	r3, #8
 8012ed6:	4606      	mov	r6, r0
 8012ed8:	fb93 f3f2 	sdiv	r3, r3, r2
 8012edc:	2100      	movs	r1, #0
 8012ede:	2201      	movs	r2, #1
 8012ee0:	429a      	cmp	r2, r3
 8012ee2:	db09      	blt.n	8012ef8 <__s2b+0x30>
 8012ee4:	4630      	mov	r0, r6
 8012ee6:	f7ff ff47 	bl	8012d78 <_Balloc>
 8012eea:	b940      	cbnz	r0, 8012efe <__s2b+0x36>
 8012eec:	4602      	mov	r2, r0
 8012eee:	4b19      	ldr	r3, [pc, #100]	; (8012f54 <__s2b+0x8c>)
 8012ef0:	4819      	ldr	r0, [pc, #100]	; (8012f58 <__s2b+0x90>)
 8012ef2:	21d3      	movs	r1, #211	; 0xd3
 8012ef4:	f000 fea8 	bl	8013c48 <__assert_func>
 8012ef8:	0052      	lsls	r2, r2, #1
 8012efa:	3101      	adds	r1, #1
 8012efc:	e7f0      	b.n	8012ee0 <__s2b+0x18>
 8012efe:	9b08      	ldr	r3, [sp, #32]
 8012f00:	6143      	str	r3, [r0, #20]
 8012f02:	2d09      	cmp	r5, #9
 8012f04:	f04f 0301 	mov.w	r3, #1
 8012f08:	6103      	str	r3, [r0, #16]
 8012f0a:	dd16      	ble.n	8012f3a <__s2b+0x72>
 8012f0c:	f104 0909 	add.w	r9, r4, #9
 8012f10:	46c8      	mov	r8, r9
 8012f12:	442c      	add	r4, r5
 8012f14:	f818 3b01 	ldrb.w	r3, [r8], #1
 8012f18:	4601      	mov	r1, r0
 8012f1a:	3b30      	subs	r3, #48	; 0x30
 8012f1c:	220a      	movs	r2, #10
 8012f1e:	4630      	mov	r0, r6
 8012f20:	f7ff ff8c 	bl	8012e3c <__multadd>
 8012f24:	45a0      	cmp	r8, r4
 8012f26:	d1f5      	bne.n	8012f14 <__s2b+0x4c>
 8012f28:	f1a5 0408 	sub.w	r4, r5, #8
 8012f2c:	444c      	add	r4, r9
 8012f2e:	1b2d      	subs	r5, r5, r4
 8012f30:	1963      	adds	r3, r4, r5
 8012f32:	42bb      	cmp	r3, r7
 8012f34:	db04      	blt.n	8012f40 <__s2b+0x78>
 8012f36:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8012f3a:	340a      	adds	r4, #10
 8012f3c:	2509      	movs	r5, #9
 8012f3e:	e7f6      	b.n	8012f2e <__s2b+0x66>
 8012f40:	f814 3b01 	ldrb.w	r3, [r4], #1
 8012f44:	4601      	mov	r1, r0
 8012f46:	3b30      	subs	r3, #48	; 0x30
 8012f48:	220a      	movs	r2, #10
 8012f4a:	4630      	mov	r0, r6
 8012f4c:	f7ff ff76 	bl	8012e3c <__multadd>
 8012f50:	e7ee      	b.n	8012f30 <__s2b+0x68>
 8012f52:	bf00      	nop
 8012f54:	080144d6 	.word	0x080144d6
 8012f58:	08014547 	.word	0x08014547

08012f5c <__hi0bits>:
 8012f5c:	0c03      	lsrs	r3, r0, #16
 8012f5e:	041b      	lsls	r3, r3, #16
 8012f60:	b9d3      	cbnz	r3, 8012f98 <__hi0bits+0x3c>
 8012f62:	0400      	lsls	r0, r0, #16
 8012f64:	2310      	movs	r3, #16
 8012f66:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8012f6a:	bf04      	itt	eq
 8012f6c:	0200      	lsleq	r0, r0, #8
 8012f6e:	3308      	addeq	r3, #8
 8012f70:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8012f74:	bf04      	itt	eq
 8012f76:	0100      	lsleq	r0, r0, #4
 8012f78:	3304      	addeq	r3, #4
 8012f7a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8012f7e:	bf04      	itt	eq
 8012f80:	0080      	lsleq	r0, r0, #2
 8012f82:	3302      	addeq	r3, #2
 8012f84:	2800      	cmp	r0, #0
 8012f86:	db05      	blt.n	8012f94 <__hi0bits+0x38>
 8012f88:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8012f8c:	f103 0301 	add.w	r3, r3, #1
 8012f90:	bf08      	it	eq
 8012f92:	2320      	moveq	r3, #32
 8012f94:	4618      	mov	r0, r3
 8012f96:	4770      	bx	lr
 8012f98:	2300      	movs	r3, #0
 8012f9a:	e7e4      	b.n	8012f66 <__hi0bits+0xa>

08012f9c <__lo0bits>:
 8012f9c:	6803      	ldr	r3, [r0, #0]
 8012f9e:	f013 0207 	ands.w	r2, r3, #7
 8012fa2:	d00c      	beq.n	8012fbe <__lo0bits+0x22>
 8012fa4:	07d9      	lsls	r1, r3, #31
 8012fa6:	d422      	bmi.n	8012fee <__lo0bits+0x52>
 8012fa8:	079a      	lsls	r2, r3, #30
 8012faa:	bf49      	itett	mi
 8012fac:	085b      	lsrmi	r3, r3, #1
 8012fae:	089b      	lsrpl	r3, r3, #2
 8012fb0:	6003      	strmi	r3, [r0, #0]
 8012fb2:	2201      	movmi	r2, #1
 8012fb4:	bf5c      	itt	pl
 8012fb6:	6003      	strpl	r3, [r0, #0]
 8012fb8:	2202      	movpl	r2, #2
 8012fba:	4610      	mov	r0, r2
 8012fbc:	4770      	bx	lr
 8012fbe:	b299      	uxth	r1, r3
 8012fc0:	b909      	cbnz	r1, 8012fc6 <__lo0bits+0x2a>
 8012fc2:	0c1b      	lsrs	r3, r3, #16
 8012fc4:	2210      	movs	r2, #16
 8012fc6:	b2d9      	uxtb	r1, r3
 8012fc8:	b909      	cbnz	r1, 8012fce <__lo0bits+0x32>
 8012fca:	3208      	adds	r2, #8
 8012fcc:	0a1b      	lsrs	r3, r3, #8
 8012fce:	0719      	lsls	r1, r3, #28
 8012fd0:	bf04      	itt	eq
 8012fd2:	091b      	lsreq	r3, r3, #4
 8012fd4:	3204      	addeq	r2, #4
 8012fd6:	0799      	lsls	r1, r3, #30
 8012fd8:	bf04      	itt	eq
 8012fda:	089b      	lsreq	r3, r3, #2
 8012fdc:	3202      	addeq	r2, #2
 8012fde:	07d9      	lsls	r1, r3, #31
 8012fe0:	d403      	bmi.n	8012fea <__lo0bits+0x4e>
 8012fe2:	085b      	lsrs	r3, r3, #1
 8012fe4:	f102 0201 	add.w	r2, r2, #1
 8012fe8:	d003      	beq.n	8012ff2 <__lo0bits+0x56>
 8012fea:	6003      	str	r3, [r0, #0]
 8012fec:	e7e5      	b.n	8012fba <__lo0bits+0x1e>
 8012fee:	2200      	movs	r2, #0
 8012ff0:	e7e3      	b.n	8012fba <__lo0bits+0x1e>
 8012ff2:	2220      	movs	r2, #32
 8012ff4:	e7e1      	b.n	8012fba <__lo0bits+0x1e>
	...

08012ff8 <__i2b>:
 8012ff8:	b510      	push	{r4, lr}
 8012ffa:	460c      	mov	r4, r1
 8012ffc:	2101      	movs	r1, #1
 8012ffe:	f7ff febb 	bl	8012d78 <_Balloc>
 8013002:	4602      	mov	r2, r0
 8013004:	b928      	cbnz	r0, 8013012 <__i2b+0x1a>
 8013006:	4b05      	ldr	r3, [pc, #20]	; (801301c <__i2b+0x24>)
 8013008:	4805      	ldr	r0, [pc, #20]	; (8013020 <__i2b+0x28>)
 801300a:	f240 1145 	movw	r1, #325	; 0x145
 801300e:	f000 fe1b 	bl	8013c48 <__assert_func>
 8013012:	2301      	movs	r3, #1
 8013014:	6144      	str	r4, [r0, #20]
 8013016:	6103      	str	r3, [r0, #16]
 8013018:	bd10      	pop	{r4, pc}
 801301a:	bf00      	nop
 801301c:	080144d6 	.word	0x080144d6
 8013020:	08014547 	.word	0x08014547

08013024 <__multiply>:
 8013024:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013028:	4691      	mov	r9, r2
 801302a:	690a      	ldr	r2, [r1, #16]
 801302c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8013030:	429a      	cmp	r2, r3
 8013032:	bfb8      	it	lt
 8013034:	460b      	movlt	r3, r1
 8013036:	460c      	mov	r4, r1
 8013038:	bfbc      	itt	lt
 801303a:	464c      	movlt	r4, r9
 801303c:	4699      	movlt	r9, r3
 801303e:	6927      	ldr	r7, [r4, #16]
 8013040:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8013044:	68a3      	ldr	r3, [r4, #8]
 8013046:	6861      	ldr	r1, [r4, #4]
 8013048:	eb07 060a 	add.w	r6, r7, sl
 801304c:	42b3      	cmp	r3, r6
 801304e:	b085      	sub	sp, #20
 8013050:	bfb8      	it	lt
 8013052:	3101      	addlt	r1, #1
 8013054:	f7ff fe90 	bl	8012d78 <_Balloc>
 8013058:	b930      	cbnz	r0, 8013068 <__multiply+0x44>
 801305a:	4602      	mov	r2, r0
 801305c:	4b44      	ldr	r3, [pc, #272]	; (8013170 <__multiply+0x14c>)
 801305e:	4845      	ldr	r0, [pc, #276]	; (8013174 <__multiply+0x150>)
 8013060:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8013064:	f000 fdf0 	bl	8013c48 <__assert_func>
 8013068:	f100 0514 	add.w	r5, r0, #20
 801306c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8013070:	462b      	mov	r3, r5
 8013072:	2200      	movs	r2, #0
 8013074:	4543      	cmp	r3, r8
 8013076:	d321      	bcc.n	80130bc <__multiply+0x98>
 8013078:	f104 0314 	add.w	r3, r4, #20
 801307c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8013080:	f109 0314 	add.w	r3, r9, #20
 8013084:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8013088:	9202      	str	r2, [sp, #8]
 801308a:	1b3a      	subs	r2, r7, r4
 801308c:	3a15      	subs	r2, #21
 801308e:	f022 0203 	bic.w	r2, r2, #3
 8013092:	3204      	adds	r2, #4
 8013094:	f104 0115 	add.w	r1, r4, #21
 8013098:	428f      	cmp	r7, r1
 801309a:	bf38      	it	cc
 801309c:	2204      	movcc	r2, #4
 801309e:	9201      	str	r2, [sp, #4]
 80130a0:	9a02      	ldr	r2, [sp, #8]
 80130a2:	9303      	str	r3, [sp, #12]
 80130a4:	429a      	cmp	r2, r3
 80130a6:	d80c      	bhi.n	80130c2 <__multiply+0x9e>
 80130a8:	2e00      	cmp	r6, #0
 80130aa:	dd03      	ble.n	80130b4 <__multiply+0x90>
 80130ac:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80130b0:	2b00      	cmp	r3, #0
 80130b2:	d05b      	beq.n	801316c <__multiply+0x148>
 80130b4:	6106      	str	r6, [r0, #16]
 80130b6:	b005      	add	sp, #20
 80130b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80130bc:	f843 2b04 	str.w	r2, [r3], #4
 80130c0:	e7d8      	b.n	8013074 <__multiply+0x50>
 80130c2:	f8b3 a000 	ldrh.w	sl, [r3]
 80130c6:	f1ba 0f00 	cmp.w	sl, #0
 80130ca:	d024      	beq.n	8013116 <__multiply+0xf2>
 80130cc:	f104 0e14 	add.w	lr, r4, #20
 80130d0:	46a9      	mov	r9, r5
 80130d2:	f04f 0c00 	mov.w	ip, #0
 80130d6:	f85e 2b04 	ldr.w	r2, [lr], #4
 80130da:	f8d9 1000 	ldr.w	r1, [r9]
 80130de:	fa1f fb82 	uxth.w	fp, r2
 80130e2:	b289      	uxth	r1, r1
 80130e4:	fb0a 110b 	mla	r1, sl, fp, r1
 80130e8:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80130ec:	f8d9 2000 	ldr.w	r2, [r9]
 80130f0:	4461      	add	r1, ip
 80130f2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80130f6:	fb0a c20b 	mla	r2, sl, fp, ip
 80130fa:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80130fe:	b289      	uxth	r1, r1
 8013100:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8013104:	4577      	cmp	r7, lr
 8013106:	f849 1b04 	str.w	r1, [r9], #4
 801310a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 801310e:	d8e2      	bhi.n	80130d6 <__multiply+0xb2>
 8013110:	9a01      	ldr	r2, [sp, #4]
 8013112:	f845 c002 	str.w	ip, [r5, r2]
 8013116:	9a03      	ldr	r2, [sp, #12]
 8013118:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 801311c:	3304      	adds	r3, #4
 801311e:	f1b9 0f00 	cmp.w	r9, #0
 8013122:	d021      	beq.n	8013168 <__multiply+0x144>
 8013124:	6829      	ldr	r1, [r5, #0]
 8013126:	f104 0c14 	add.w	ip, r4, #20
 801312a:	46ae      	mov	lr, r5
 801312c:	f04f 0a00 	mov.w	sl, #0
 8013130:	f8bc b000 	ldrh.w	fp, [ip]
 8013134:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8013138:	fb09 220b 	mla	r2, r9, fp, r2
 801313c:	4452      	add	r2, sl
 801313e:	b289      	uxth	r1, r1
 8013140:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8013144:	f84e 1b04 	str.w	r1, [lr], #4
 8013148:	f85c 1b04 	ldr.w	r1, [ip], #4
 801314c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8013150:	f8be 1000 	ldrh.w	r1, [lr]
 8013154:	fb09 110a 	mla	r1, r9, sl, r1
 8013158:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 801315c:	4567      	cmp	r7, ip
 801315e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8013162:	d8e5      	bhi.n	8013130 <__multiply+0x10c>
 8013164:	9a01      	ldr	r2, [sp, #4]
 8013166:	50a9      	str	r1, [r5, r2]
 8013168:	3504      	adds	r5, #4
 801316a:	e799      	b.n	80130a0 <__multiply+0x7c>
 801316c:	3e01      	subs	r6, #1
 801316e:	e79b      	b.n	80130a8 <__multiply+0x84>
 8013170:	080144d6 	.word	0x080144d6
 8013174:	08014547 	.word	0x08014547

08013178 <__pow5mult>:
 8013178:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801317c:	4615      	mov	r5, r2
 801317e:	f012 0203 	ands.w	r2, r2, #3
 8013182:	4606      	mov	r6, r0
 8013184:	460f      	mov	r7, r1
 8013186:	d007      	beq.n	8013198 <__pow5mult+0x20>
 8013188:	4c25      	ldr	r4, [pc, #148]	; (8013220 <__pow5mult+0xa8>)
 801318a:	3a01      	subs	r2, #1
 801318c:	2300      	movs	r3, #0
 801318e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8013192:	f7ff fe53 	bl	8012e3c <__multadd>
 8013196:	4607      	mov	r7, r0
 8013198:	10ad      	asrs	r5, r5, #2
 801319a:	d03d      	beq.n	8013218 <__pow5mult+0xa0>
 801319c:	69f4      	ldr	r4, [r6, #28]
 801319e:	b97c      	cbnz	r4, 80131c0 <__pow5mult+0x48>
 80131a0:	2010      	movs	r0, #16
 80131a2:	f7fc fc79 	bl	800fa98 <malloc>
 80131a6:	4602      	mov	r2, r0
 80131a8:	61f0      	str	r0, [r6, #28]
 80131aa:	b928      	cbnz	r0, 80131b8 <__pow5mult+0x40>
 80131ac:	4b1d      	ldr	r3, [pc, #116]	; (8013224 <__pow5mult+0xac>)
 80131ae:	481e      	ldr	r0, [pc, #120]	; (8013228 <__pow5mult+0xb0>)
 80131b0:	f240 11b3 	movw	r1, #435	; 0x1b3
 80131b4:	f000 fd48 	bl	8013c48 <__assert_func>
 80131b8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80131bc:	6004      	str	r4, [r0, #0]
 80131be:	60c4      	str	r4, [r0, #12]
 80131c0:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80131c4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80131c8:	b94c      	cbnz	r4, 80131de <__pow5mult+0x66>
 80131ca:	f240 2171 	movw	r1, #625	; 0x271
 80131ce:	4630      	mov	r0, r6
 80131d0:	f7ff ff12 	bl	8012ff8 <__i2b>
 80131d4:	2300      	movs	r3, #0
 80131d6:	f8c8 0008 	str.w	r0, [r8, #8]
 80131da:	4604      	mov	r4, r0
 80131dc:	6003      	str	r3, [r0, #0]
 80131de:	f04f 0900 	mov.w	r9, #0
 80131e2:	07eb      	lsls	r3, r5, #31
 80131e4:	d50a      	bpl.n	80131fc <__pow5mult+0x84>
 80131e6:	4639      	mov	r1, r7
 80131e8:	4622      	mov	r2, r4
 80131ea:	4630      	mov	r0, r6
 80131ec:	f7ff ff1a 	bl	8013024 <__multiply>
 80131f0:	4639      	mov	r1, r7
 80131f2:	4680      	mov	r8, r0
 80131f4:	4630      	mov	r0, r6
 80131f6:	f7ff fdff 	bl	8012df8 <_Bfree>
 80131fa:	4647      	mov	r7, r8
 80131fc:	106d      	asrs	r5, r5, #1
 80131fe:	d00b      	beq.n	8013218 <__pow5mult+0xa0>
 8013200:	6820      	ldr	r0, [r4, #0]
 8013202:	b938      	cbnz	r0, 8013214 <__pow5mult+0x9c>
 8013204:	4622      	mov	r2, r4
 8013206:	4621      	mov	r1, r4
 8013208:	4630      	mov	r0, r6
 801320a:	f7ff ff0b 	bl	8013024 <__multiply>
 801320e:	6020      	str	r0, [r4, #0]
 8013210:	f8c0 9000 	str.w	r9, [r0]
 8013214:	4604      	mov	r4, r0
 8013216:	e7e4      	b.n	80131e2 <__pow5mult+0x6a>
 8013218:	4638      	mov	r0, r7
 801321a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801321e:	bf00      	nop
 8013220:	08014690 	.word	0x08014690
 8013224:	08014467 	.word	0x08014467
 8013228:	08014547 	.word	0x08014547

0801322c <__lshift>:
 801322c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013230:	460c      	mov	r4, r1
 8013232:	6849      	ldr	r1, [r1, #4]
 8013234:	6923      	ldr	r3, [r4, #16]
 8013236:	eb03 1862 	add.w	r8, r3, r2, asr #5
 801323a:	68a3      	ldr	r3, [r4, #8]
 801323c:	4607      	mov	r7, r0
 801323e:	4691      	mov	r9, r2
 8013240:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8013244:	f108 0601 	add.w	r6, r8, #1
 8013248:	42b3      	cmp	r3, r6
 801324a:	db0b      	blt.n	8013264 <__lshift+0x38>
 801324c:	4638      	mov	r0, r7
 801324e:	f7ff fd93 	bl	8012d78 <_Balloc>
 8013252:	4605      	mov	r5, r0
 8013254:	b948      	cbnz	r0, 801326a <__lshift+0x3e>
 8013256:	4602      	mov	r2, r0
 8013258:	4b28      	ldr	r3, [pc, #160]	; (80132fc <__lshift+0xd0>)
 801325a:	4829      	ldr	r0, [pc, #164]	; (8013300 <__lshift+0xd4>)
 801325c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8013260:	f000 fcf2 	bl	8013c48 <__assert_func>
 8013264:	3101      	adds	r1, #1
 8013266:	005b      	lsls	r3, r3, #1
 8013268:	e7ee      	b.n	8013248 <__lshift+0x1c>
 801326a:	2300      	movs	r3, #0
 801326c:	f100 0114 	add.w	r1, r0, #20
 8013270:	f100 0210 	add.w	r2, r0, #16
 8013274:	4618      	mov	r0, r3
 8013276:	4553      	cmp	r3, sl
 8013278:	db33      	blt.n	80132e2 <__lshift+0xb6>
 801327a:	6920      	ldr	r0, [r4, #16]
 801327c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8013280:	f104 0314 	add.w	r3, r4, #20
 8013284:	f019 091f 	ands.w	r9, r9, #31
 8013288:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 801328c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8013290:	d02b      	beq.n	80132ea <__lshift+0xbe>
 8013292:	f1c9 0e20 	rsb	lr, r9, #32
 8013296:	468a      	mov	sl, r1
 8013298:	2200      	movs	r2, #0
 801329a:	6818      	ldr	r0, [r3, #0]
 801329c:	fa00 f009 	lsl.w	r0, r0, r9
 80132a0:	4310      	orrs	r0, r2
 80132a2:	f84a 0b04 	str.w	r0, [sl], #4
 80132a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80132aa:	459c      	cmp	ip, r3
 80132ac:	fa22 f20e 	lsr.w	r2, r2, lr
 80132b0:	d8f3      	bhi.n	801329a <__lshift+0x6e>
 80132b2:	ebac 0304 	sub.w	r3, ip, r4
 80132b6:	3b15      	subs	r3, #21
 80132b8:	f023 0303 	bic.w	r3, r3, #3
 80132bc:	3304      	adds	r3, #4
 80132be:	f104 0015 	add.w	r0, r4, #21
 80132c2:	4584      	cmp	ip, r0
 80132c4:	bf38      	it	cc
 80132c6:	2304      	movcc	r3, #4
 80132c8:	50ca      	str	r2, [r1, r3]
 80132ca:	b10a      	cbz	r2, 80132d0 <__lshift+0xa4>
 80132cc:	f108 0602 	add.w	r6, r8, #2
 80132d0:	3e01      	subs	r6, #1
 80132d2:	4638      	mov	r0, r7
 80132d4:	612e      	str	r6, [r5, #16]
 80132d6:	4621      	mov	r1, r4
 80132d8:	f7ff fd8e 	bl	8012df8 <_Bfree>
 80132dc:	4628      	mov	r0, r5
 80132de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80132e2:	f842 0f04 	str.w	r0, [r2, #4]!
 80132e6:	3301      	adds	r3, #1
 80132e8:	e7c5      	b.n	8013276 <__lshift+0x4a>
 80132ea:	3904      	subs	r1, #4
 80132ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80132f0:	f841 2f04 	str.w	r2, [r1, #4]!
 80132f4:	459c      	cmp	ip, r3
 80132f6:	d8f9      	bhi.n	80132ec <__lshift+0xc0>
 80132f8:	e7ea      	b.n	80132d0 <__lshift+0xa4>
 80132fa:	bf00      	nop
 80132fc:	080144d6 	.word	0x080144d6
 8013300:	08014547 	.word	0x08014547

08013304 <__mcmp>:
 8013304:	b530      	push	{r4, r5, lr}
 8013306:	6902      	ldr	r2, [r0, #16]
 8013308:	690c      	ldr	r4, [r1, #16]
 801330a:	1b12      	subs	r2, r2, r4
 801330c:	d10e      	bne.n	801332c <__mcmp+0x28>
 801330e:	f100 0314 	add.w	r3, r0, #20
 8013312:	3114      	adds	r1, #20
 8013314:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8013318:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 801331c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8013320:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8013324:	42a5      	cmp	r5, r4
 8013326:	d003      	beq.n	8013330 <__mcmp+0x2c>
 8013328:	d305      	bcc.n	8013336 <__mcmp+0x32>
 801332a:	2201      	movs	r2, #1
 801332c:	4610      	mov	r0, r2
 801332e:	bd30      	pop	{r4, r5, pc}
 8013330:	4283      	cmp	r3, r0
 8013332:	d3f3      	bcc.n	801331c <__mcmp+0x18>
 8013334:	e7fa      	b.n	801332c <__mcmp+0x28>
 8013336:	f04f 32ff 	mov.w	r2, #4294967295
 801333a:	e7f7      	b.n	801332c <__mcmp+0x28>

0801333c <__mdiff>:
 801333c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013340:	460c      	mov	r4, r1
 8013342:	4606      	mov	r6, r0
 8013344:	4611      	mov	r1, r2
 8013346:	4620      	mov	r0, r4
 8013348:	4690      	mov	r8, r2
 801334a:	f7ff ffdb 	bl	8013304 <__mcmp>
 801334e:	1e05      	subs	r5, r0, #0
 8013350:	d110      	bne.n	8013374 <__mdiff+0x38>
 8013352:	4629      	mov	r1, r5
 8013354:	4630      	mov	r0, r6
 8013356:	f7ff fd0f 	bl	8012d78 <_Balloc>
 801335a:	b930      	cbnz	r0, 801336a <__mdiff+0x2e>
 801335c:	4b3a      	ldr	r3, [pc, #232]	; (8013448 <__mdiff+0x10c>)
 801335e:	4602      	mov	r2, r0
 8013360:	f240 2137 	movw	r1, #567	; 0x237
 8013364:	4839      	ldr	r0, [pc, #228]	; (801344c <__mdiff+0x110>)
 8013366:	f000 fc6f 	bl	8013c48 <__assert_func>
 801336a:	2301      	movs	r3, #1
 801336c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8013370:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013374:	bfa4      	itt	ge
 8013376:	4643      	movge	r3, r8
 8013378:	46a0      	movge	r8, r4
 801337a:	4630      	mov	r0, r6
 801337c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8013380:	bfa6      	itte	ge
 8013382:	461c      	movge	r4, r3
 8013384:	2500      	movge	r5, #0
 8013386:	2501      	movlt	r5, #1
 8013388:	f7ff fcf6 	bl	8012d78 <_Balloc>
 801338c:	b920      	cbnz	r0, 8013398 <__mdiff+0x5c>
 801338e:	4b2e      	ldr	r3, [pc, #184]	; (8013448 <__mdiff+0x10c>)
 8013390:	4602      	mov	r2, r0
 8013392:	f240 2145 	movw	r1, #581	; 0x245
 8013396:	e7e5      	b.n	8013364 <__mdiff+0x28>
 8013398:	f8d8 7010 	ldr.w	r7, [r8, #16]
 801339c:	6926      	ldr	r6, [r4, #16]
 801339e:	60c5      	str	r5, [r0, #12]
 80133a0:	f104 0914 	add.w	r9, r4, #20
 80133a4:	f108 0514 	add.w	r5, r8, #20
 80133a8:	f100 0e14 	add.w	lr, r0, #20
 80133ac:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 80133b0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80133b4:	f108 0210 	add.w	r2, r8, #16
 80133b8:	46f2      	mov	sl, lr
 80133ba:	2100      	movs	r1, #0
 80133bc:	f859 3b04 	ldr.w	r3, [r9], #4
 80133c0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80133c4:	fa11 f88b 	uxtah	r8, r1, fp
 80133c8:	b299      	uxth	r1, r3
 80133ca:	0c1b      	lsrs	r3, r3, #16
 80133cc:	eba8 0801 	sub.w	r8, r8, r1
 80133d0:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80133d4:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80133d8:	fa1f f888 	uxth.w	r8, r8
 80133dc:	1419      	asrs	r1, r3, #16
 80133de:	454e      	cmp	r6, r9
 80133e0:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80133e4:	f84a 3b04 	str.w	r3, [sl], #4
 80133e8:	d8e8      	bhi.n	80133bc <__mdiff+0x80>
 80133ea:	1b33      	subs	r3, r6, r4
 80133ec:	3b15      	subs	r3, #21
 80133ee:	f023 0303 	bic.w	r3, r3, #3
 80133f2:	3304      	adds	r3, #4
 80133f4:	3415      	adds	r4, #21
 80133f6:	42a6      	cmp	r6, r4
 80133f8:	bf38      	it	cc
 80133fa:	2304      	movcc	r3, #4
 80133fc:	441d      	add	r5, r3
 80133fe:	4473      	add	r3, lr
 8013400:	469e      	mov	lr, r3
 8013402:	462e      	mov	r6, r5
 8013404:	4566      	cmp	r6, ip
 8013406:	d30e      	bcc.n	8013426 <__mdiff+0xea>
 8013408:	f10c 0203 	add.w	r2, ip, #3
 801340c:	1b52      	subs	r2, r2, r5
 801340e:	f022 0203 	bic.w	r2, r2, #3
 8013412:	3d03      	subs	r5, #3
 8013414:	45ac      	cmp	ip, r5
 8013416:	bf38      	it	cc
 8013418:	2200      	movcc	r2, #0
 801341a:	4413      	add	r3, r2
 801341c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8013420:	b17a      	cbz	r2, 8013442 <__mdiff+0x106>
 8013422:	6107      	str	r7, [r0, #16]
 8013424:	e7a4      	b.n	8013370 <__mdiff+0x34>
 8013426:	f856 8b04 	ldr.w	r8, [r6], #4
 801342a:	fa11 f288 	uxtah	r2, r1, r8
 801342e:	1414      	asrs	r4, r2, #16
 8013430:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8013434:	b292      	uxth	r2, r2
 8013436:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 801343a:	f84e 2b04 	str.w	r2, [lr], #4
 801343e:	1421      	asrs	r1, r4, #16
 8013440:	e7e0      	b.n	8013404 <__mdiff+0xc8>
 8013442:	3f01      	subs	r7, #1
 8013444:	e7ea      	b.n	801341c <__mdiff+0xe0>
 8013446:	bf00      	nop
 8013448:	080144d6 	.word	0x080144d6
 801344c:	08014547 	.word	0x08014547

08013450 <__ulp>:
 8013450:	b082      	sub	sp, #8
 8013452:	ed8d 0b00 	vstr	d0, [sp]
 8013456:	9a01      	ldr	r2, [sp, #4]
 8013458:	4b0f      	ldr	r3, [pc, #60]	; (8013498 <__ulp+0x48>)
 801345a:	4013      	ands	r3, r2
 801345c:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8013460:	2b00      	cmp	r3, #0
 8013462:	dc08      	bgt.n	8013476 <__ulp+0x26>
 8013464:	425b      	negs	r3, r3
 8013466:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 801346a:	ea4f 5223 	mov.w	r2, r3, asr #20
 801346e:	da04      	bge.n	801347a <__ulp+0x2a>
 8013470:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8013474:	4113      	asrs	r3, r2
 8013476:	2200      	movs	r2, #0
 8013478:	e008      	b.n	801348c <__ulp+0x3c>
 801347a:	f1a2 0314 	sub.w	r3, r2, #20
 801347e:	2b1e      	cmp	r3, #30
 8013480:	bfda      	itte	le
 8013482:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8013486:	40da      	lsrle	r2, r3
 8013488:	2201      	movgt	r2, #1
 801348a:	2300      	movs	r3, #0
 801348c:	4619      	mov	r1, r3
 801348e:	4610      	mov	r0, r2
 8013490:	ec41 0b10 	vmov	d0, r0, r1
 8013494:	b002      	add	sp, #8
 8013496:	4770      	bx	lr
 8013498:	7ff00000 	.word	0x7ff00000

0801349c <__b2d>:
 801349c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80134a0:	6906      	ldr	r6, [r0, #16]
 80134a2:	f100 0814 	add.w	r8, r0, #20
 80134a6:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 80134aa:	1f37      	subs	r7, r6, #4
 80134ac:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80134b0:	4610      	mov	r0, r2
 80134b2:	f7ff fd53 	bl	8012f5c <__hi0bits>
 80134b6:	f1c0 0320 	rsb	r3, r0, #32
 80134ba:	280a      	cmp	r0, #10
 80134bc:	600b      	str	r3, [r1, #0]
 80134be:	491b      	ldr	r1, [pc, #108]	; (801352c <__b2d+0x90>)
 80134c0:	dc15      	bgt.n	80134ee <__b2d+0x52>
 80134c2:	f1c0 0c0b 	rsb	ip, r0, #11
 80134c6:	fa22 f30c 	lsr.w	r3, r2, ip
 80134ca:	45b8      	cmp	r8, r7
 80134cc:	ea43 0501 	orr.w	r5, r3, r1
 80134d0:	bf34      	ite	cc
 80134d2:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 80134d6:	2300      	movcs	r3, #0
 80134d8:	3015      	adds	r0, #21
 80134da:	fa02 f000 	lsl.w	r0, r2, r0
 80134de:	fa23 f30c 	lsr.w	r3, r3, ip
 80134e2:	4303      	orrs	r3, r0
 80134e4:	461c      	mov	r4, r3
 80134e6:	ec45 4b10 	vmov	d0, r4, r5
 80134ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80134ee:	45b8      	cmp	r8, r7
 80134f0:	bf3a      	itte	cc
 80134f2:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 80134f6:	f1a6 0708 	subcc.w	r7, r6, #8
 80134fa:	2300      	movcs	r3, #0
 80134fc:	380b      	subs	r0, #11
 80134fe:	d012      	beq.n	8013526 <__b2d+0x8a>
 8013500:	f1c0 0120 	rsb	r1, r0, #32
 8013504:	fa23 f401 	lsr.w	r4, r3, r1
 8013508:	4082      	lsls	r2, r0
 801350a:	4322      	orrs	r2, r4
 801350c:	4547      	cmp	r7, r8
 801350e:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 8013512:	bf8c      	ite	hi
 8013514:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 8013518:	2200      	movls	r2, #0
 801351a:	4083      	lsls	r3, r0
 801351c:	40ca      	lsrs	r2, r1
 801351e:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8013522:	4313      	orrs	r3, r2
 8013524:	e7de      	b.n	80134e4 <__b2d+0x48>
 8013526:	ea42 0501 	orr.w	r5, r2, r1
 801352a:	e7db      	b.n	80134e4 <__b2d+0x48>
 801352c:	3ff00000 	.word	0x3ff00000

08013530 <__d2b>:
 8013530:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8013534:	460f      	mov	r7, r1
 8013536:	2101      	movs	r1, #1
 8013538:	ec59 8b10 	vmov	r8, r9, d0
 801353c:	4616      	mov	r6, r2
 801353e:	f7ff fc1b 	bl	8012d78 <_Balloc>
 8013542:	4604      	mov	r4, r0
 8013544:	b930      	cbnz	r0, 8013554 <__d2b+0x24>
 8013546:	4602      	mov	r2, r0
 8013548:	4b24      	ldr	r3, [pc, #144]	; (80135dc <__d2b+0xac>)
 801354a:	4825      	ldr	r0, [pc, #148]	; (80135e0 <__d2b+0xb0>)
 801354c:	f240 310f 	movw	r1, #783	; 0x30f
 8013550:	f000 fb7a 	bl	8013c48 <__assert_func>
 8013554:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8013558:	f3c9 0313 	ubfx	r3, r9, #0, #20
 801355c:	bb2d      	cbnz	r5, 80135aa <__d2b+0x7a>
 801355e:	9301      	str	r3, [sp, #4]
 8013560:	f1b8 0300 	subs.w	r3, r8, #0
 8013564:	d026      	beq.n	80135b4 <__d2b+0x84>
 8013566:	4668      	mov	r0, sp
 8013568:	9300      	str	r3, [sp, #0]
 801356a:	f7ff fd17 	bl	8012f9c <__lo0bits>
 801356e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8013572:	b1e8      	cbz	r0, 80135b0 <__d2b+0x80>
 8013574:	f1c0 0320 	rsb	r3, r0, #32
 8013578:	fa02 f303 	lsl.w	r3, r2, r3
 801357c:	430b      	orrs	r3, r1
 801357e:	40c2      	lsrs	r2, r0
 8013580:	6163      	str	r3, [r4, #20]
 8013582:	9201      	str	r2, [sp, #4]
 8013584:	9b01      	ldr	r3, [sp, #4]
 8013586:	61a3      	str	r3, [r4, #24]
 8013588:	2b00      	cmp	r3, #0
 801358a:	bf14      	ite	ne
 801358c:	2202      	movne	r2, #2
 801358e:	2201      	moveq	r2, #1
 8013590:	6122      	str	r2, [r4, #16]
 8013592:	b1bd      	cbz	r5, 80135c4 <__d2b+0x94>
 8013594:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8013598:	4405      	add	r5, r0
 801359a:	603d      	str	r5, [r7, #0]
 801359c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80135a0:	6030      	str	r0, [r6, #0]
 80135a2:	4620      	mov	r0, r4
 80135a4:	b003      	add	sp, #12
 80135a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80135aa:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80135ae:	e7d6      	b.n	801355e <__d2b+0x2e>
 80135b0:	6161      	str	r1, [r4, #20]
 80135b2:	e7e7      	b.n	8013584 <__d2b+0x54>
 80135b4:	a801      	add	r0, sp, #4
 80135b6:	f7ff fcf1 	bl	8012f9c <__lo0bits>
 80135ba:	9b01      	ldr	r3, [sp, #4]
 80135bc:	6163      	str	r3, [r4, #20]
 80135be:	3020      	adds	r0, #32
 80135c0:	2201      	movs	r2, #1
 80135c2:	e7e5      	b.n	8013590 <__d2b+0x60>
 80135c4:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80135c8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80135cc:	6038      	str	r0, [r7, #0]
 80135ce:	6918      	ldr	r0, [r3, #16]
 80135d0:	f7ff fcc4 	bl	8012f5c <__hi0bits>
 80135d4:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80135d8:	e7e2      	b.n	80135a0 <__d2b+0x70>
 80135da:	bf00      	nop
 80135dc:	080144d6 	.word	0x080144d6
 80135e0:	08014547 	.word	0x08014547

080135e4 <__ratio>:
 80135e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135e8:	4688      	mov	r8, r1
 80135ea:	4669      	mov	r1, sp
 80135ec:	4681      	mov	r9, r0
 80135ee:	f7ff ff55 	bl	801349c <__b2d>
 80135f2:	a901      	add	r1, sp, #4
 80135f4:	4640      	mov	r0, r8
 80135f6:	ec55 4b10 	vmov	r4, r5, d0
 80135fa:	f7ff ff4f 	bl	801349c <__b2d>
 80135fe:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8013602:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8013606:	eba3 0c02 	sub.w	ip, r3, r2
 801360a:	e9dd 3200 	ldrd	r3, r2, [sp]
 801360e:	1a9b      	subs	r3, r3, r2
 8013610:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8013614:	ec51 0b10 	vmov	r0, r1, d0
 8013618:	2b00      	cmp	r3, #0
 801361a:	bfd6      	itet	le
 801361c:	460a      	movle	r2, r1
 801361e:	462a      	movgt	r2, r5
 8013620:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8013624:	468b      	mov	fp, r1
 8013626:	462f      	mov	r7, r5
 8013628:	bfd4      	ite	le
 801362a:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 801362e:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 8013632:	4620      	mov	r0, r4
 8013634:	ee10 2a10 	vmov	r2, s0
 8013638:	465b      	mov	r3, fp
 801363a:	4639      	mov	r1, r7
 801363c:	f7ed f906 	bl	800084c <__aeabi_ddiv>
 8013640:	ec41 0b10 	vmov	d0, r0, r1
 8013644:	b003      	add	sp, #12
 8013646:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801364a <__copybits>:
 801364a:	3901      	subs	r1, #1
 801364c:	b570      	push	{r4, r5, r6, lr}
 801364e:	1149      	asrs	r1, r1, #5
 8013650:	6914      	ldr	r4, [r2, #16]
 8013652:	3101      	adds	r1, #1
 8013654:	f102 0314 	add.w	r3, r2, #20
 8013658:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 801365c:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8013660:	1f05      	subs	r5, r0, #4
 8013662:	42a3      	cmp	r3, r4
 8013664:	d30c      	bcc.n	8013680 <__copybits+0x36>
 8013666:	1aa3      	subs	r3, r4, r2
 8013668:	3b11      	subs	r3, #17
 801366a:	f023 0303 	bic.w	r3, r3, #3
 801366e:	3211      	adds	r2, #17
 8013670:	42a2      	cmp	r2, r4
 8013672:	bf88      	it	hi
 8013674:	2300      	movhi	r3, #0
 8013676:	4418      	add	r0, r3
 8013678:	2300      	movs	r3, #0
 801367a:	4288      	cmp	r0, r1
 801367c:	d305      	bcc.n	801368a <__copybits+0x40>
 801367e:	bd70      	pop	{r4, r5, r6, pc}
 8013680:	f853 6b04 	ldr.w	r6, [r3], #4
 8013684:	f845 6f04 	str.w	r6, [r5, #4]!
 8013688:	e7eb      	b.n	8013662 <__copybits+0x18>
 801368a:	f840 3b04 	str.w	r3, [r0], #4
 801368e:	e7f4      	b.n	801367a <__copybits+0x30>

08013690 <__any_on>:
 8013690:	f100 0214 	add.w	r2, r0, #20
 8013694:	6900      	ldr	r0, [r0, #16]
 8013696:	114b      	asrs	r3, r1, #5
 8013698:	4298      	cmp	r0, r3
 801369a:	b510      	push	{r4, lr}
 801369c:	db11      	blt.n	80136c2 <__any_on+0x32>
 801369e:	dd0a      	ble.n	80136b6 <__any_on+0x26>
 80136a0:	f011 011f 	ands.w	r1, r1, #31
 80136a4:	d007      	beq.n	80136b6 <__any_on+0x26>
 80136a6:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80136aa:	fa24 f001 	lsr.w	r0, r4, r1
 80136ae:	fa00 f101 	lsl.w	r1, r0, r1
 80136b2:	428c      	cmp	r4, r1
 80136b4:	d10b      	bne.n	80136ce <__any_on+0x3e>
 80136b6:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80136ba:	4293      	cmp	r3, r2
 80136bc:	d803      	bhi.n	80136c6 <__any_on+0x36>
 80136be:	2000      	movs	r0, #0
 80136c0:	bd10      	pop	{r4, pc}
 80136c2:	4603      	mov	r3, r0
 80136c4:	e7f7      	b.n	80136b6 <__any_on+0x26>
 80136c6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80136ca:	2900      	cmp	r1, #0
 80136cc:	d0f5      	beq.n	80136ba <__any_on+0x2a>
 80136ce:	2001      	movs	r0, #1
 80136d0:	e7f6      	b.n	80136c0 <__any_on+0x30>

080136d2 <_malloc_usable_size_r>:
 80136d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80136d6:	1f18      	subs	r0, r3, #4
 80136d8:	2b00      	cmp	r3, #0
 80136da:	bfbc      	itt	lt
 80136dc:	580b      	ldrlt	r3, [r1, r0]
 80136de:	18c0      	addlt	r0, r0, r3
 80136e0:	4770      	bx	lr
	...

080136e4 <_strtol_l.constprop.0>:
 80136e4:	2b01      	cmp	r3, #1
 80136e6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80136ea:	d001      	beq.n	80136f0 <_strtol_l.constprop.0+0xc>
 80136ec:	2b24      	cmp	r3, #36	; 0x24
 80136ee:	d906      	bls.n	80136fe <_strtol_l.constprop.0+0x1a>
 80136f0:	f7fe f8c6 	bl	8011880 <__errno>
 80136f4:	2316      	movs	r3, #22
 80136f6:	6003      	str	r3, [r0, #0]
 80136f8:	2000      	movs	r0, #0
 80136fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80136fe:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 80137e4 <_strtol_l.constprop.0+0x100>
 8013702:	460d      	mov	r5, r1
 8013704:	462e      	mov	r6, r5
 8013706:	f815 4b01 	ldrb.w	r4, [r5], #1
 801370a:	f81c 7004 	ldrb.w	r7, [ip, r4]
 801370e:	f017 0708 	ands.w	r7, r7, #8
 8013712:	d1f7      	bne.n	8013704 <_strtol_l.constprop.0+0x20>
 8013714:	2c2d      	cmp	r4, #45	; 0x2d
 8013716:	d132      	bne.n	801377e <_strtol_l.constprop.0+0x9a>
 8013718:	782c      	ldrb	r4, [r5, #0]
 801371a:	2701      	movs	r7, #1
 801371c:	1cb5      	adds	r5, r6, #2
 801371e:	2b00      	cmp	r3, #0
 8013720:	d05b      	beq.n	80137da <_strtol_l.constprop.0+0xf6>
 8013722:	2b10      	cmp	r3, #16
 8013724:	d109      	bne.n	801373a <_strtol_l.constprop.0+0x56>
 8013726:	2c30      	cmp	r4, #48	; 0x30
 8013728:	d107      	bne.n	801373a <_strtol_l.constprop.0+0x56>
 801372a:	782c      	ldrb	r4, [r5, #0]
 801372c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8013730:	2c58      	cmp	r4, #88	; 0x58
 8013732:	d14d      	bne.n	80137d0 <_strtol_l.constprop.0+0xec>
 8013734:	786c      	ldrb	r4, [r5, #1]
 8013736:	2310      	movs	r3, #16
 8013738:	3502      	adds	r5, #2
 801373a:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 801373e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013742:	f04f 0e00 	mov.w	lr, #0
 8013746:	fbb8 f9f3 	udiv	r9, r8, r3
 801374a:	4676      	mov	r6, lr
 801374c:	fb03 8a19 	mls	sl, r3, r9, r8
 8013750:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013754:	f1bc 0f09 	cmp.w	ip, #9
 8013758:	d816      	bhi.n	8013788 <_strtol_l.constprop.0+0xa4>
 801375a:	4664      	mov	r4, ip
 801375c:	42a3      	cmp	r3, r4
 801375e:	dd24      	ble.n	80137aa <_strtol_l.constprop.0+0xc6>
 8013760:	f1be 3fff 	cmp.w	lr, #4294967295
 8013764:	d008      	beq.n	8013778 <_strtol_l.constprop.0+0x94>
 8013766:	45b1      	cmp	r9, r6
 8013768:	d31c      	bcc.n	80137a4 <_strtol_l.constprop.0+0xc0>
 801376a:	d101      	bne.n	8013770 <_strtol_l.constprop.0+0x8c>
 801376c:	45a2      	cmp	sl, r4
 801376e:	db19      	blt.n	80137a4 <_strtol_l.constprop.0+0xc0>
 8013770:	fb06 4603 	mla	r6, r6, r3, r4
 8013774:	f04f 0e01 	mov.w	lr, #1
 8013778:	f815 4b01 	ldrb.w	r4, [r5], #1
 801377c:	e7e8      	b.n	8013750 <_strtol_l.constprop.0+0x6c>
 801377e:	2c2b      	cmp	r4, #43	; 0x2b
 8013780:	bf04      	itt	eq
 8013782:	782c      	ldrbeq	r4, [r5, #0]
 8013784:	1cb5      	addeq	r5, r6, #2
 8013786:	e7ca      	b.n	801371e <_strtol_l.constprop.0+0x3a>
 8013788:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 801378c:	f1bc 0f19 	cmp.w	ip, #25
 8013790:	d801      	bhi.n	8013796 <_strtol_l.constprop.0+0xb2>
 8013792:	3c37      	subs	r4, #55	; 0x37
 8013794:	e7e2      	b.n	801375c <_strtol_l.constprop.0+0x78>
 8013796:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 801379a:	f1bc 0f19 	cmp.w	ip, #25
 801379e:	d804      	bhi.n	80137aa <_strtol_l.constprop.0+0xc6>
 80137a0:	3c57      	subs	r4, #87	; 0x57
 80137a2:	e7db      	b.n	801375c <_strtol_l.constprop.0+0x78>
 80137a4:	f04f 3eff 	mov.w	lr, #4294967295
 80137a8:	e7e6      	b.n	8013778 <_strtol_l.constprop.0+0x94>
 80137aa:	f1be 3fff 	cmp.w	lr, #4294967295
 80137ae:	d105      	bne.n	80137bc <_strtol_l.constprop.0+0xd8>
 80137b0:	2322      	movs	r3, #34	; 0x22
 80137b2:	6003      	str	r3, [r0, #0]
 80137b4:	4646      	mov	r6, r8
 80137b6:	b942      	cbnz	r2, 80137ca <_strtol_l.constprop.0+0xe6>
 80137b8:	4630      	mov	r0, r6
 80137ba:	e79e      	b.n	80136fa <_strtol_l.constprop.0+0x16>
 80137bc:	b107      	cbz	r7, 80137c0 <_strtol_l.constprop.0+0xdc>
 80137be:	4276      	negs	r6, r6
 80137c0:	2a00      	cmp	r2, #0
 80137c2:	d0f9      	beq.n	80137b8 <_strtol_l.constprop.0+0xd4>
 80137c4:	f1be 0f00 	cmp.w	lr, #0
 80137c8:	d000      	beq.n	80137cc <_strtol_l.constprop.0+0xe8>
 80137ca:	1e69      	subs	r1, r5, #1
 80137cc:	6011      	str	r1, [r2, #0]
 80137ce:	e7f3      	b.n	80137b8 <_strtol_l.constprop.0+0xd4>
 80137d0:	2430      	movs	r4, #48	; 0x30
 80137d2:	2b00      	cmp	r3, #0
 80137d4:	d1b1      	bne.n	801373a <_strtol_l.constprop.0+0x56>
 80137d6:	2308      	movs	r3, #8
 80137d8:	e7af      	b.n	801373a <_strtol_l.constprop.0+0x56>
 80137da:	2c30      	cmp	r4, #48	; 0x30
 80137dc:	d0a5      	beq.n	801372a <_strtol_l.constprop.0+0x46>
 80137de:	230a      	movs	r3, #10
 80137e0:	e7ab      	b.n	801373a <_strtol_l.constprop.0+0x56>
 80137e2:	bf00      	nop
 80137e4:	08014319 	.word	0x08014319

080137e8 <_strtol_r>:
 80137e8:	f7ff bf7c 	b.w	80136e4 <_strtol_l.constprop.0>

080137ec <__ascii_wctomb>:
 80137ec:	b149      	cbz	r1, 8013802 <__ascii_wctomb+0x16>
 80137ee:	2aff      	cmp	r2, #255	; 0xff
 80137f0:	bf85      	ittet	hi
 80137f2:	238a      	movhi	r3, #138	; 0x8a
 80137f4:	6003      	strhi	r3, [r0, #0]
 80137f6:	700a      	strbls	r2, [r1, #0]
 80137f8:	f04f 30ff 	movhi.w	r0, #4294967295
 80137fc:	bf98      	it	ls
 80137fe:	2001      	movls	r0, #1
 8013800:	4770      	bx	lr
 8013802:	4608      	mov	r0, r1
 8013804:	4770      	bx	lr

08013806 <__ssputs_r>:
 8013806:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801380a:	688e      	ldr	r6, [r1, #8]
 801380c:	461f      	mov	r7, r3
 801380e:	42be      	cmp	r6, r7
 8013810:	680b      	ldr	r3, [r1, #0]
 8013812:	4682      	mov	sl, r0
 8013814:	460c      	mov	r4, r1
 8013816:	4690      	mov	r8, r2
 8013818:	d82c      	bhi.n	8013874 <__ssputs_r+0x6e>
 801381a:	898a      	ldrh	r2, [r1, #12]
 801381c:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8013820:	d026      	beq.n	8013870 <__ssputs_r+0x6a>
 8013822:	6965      	ldr	r5, [r4, #20]
 8013824:	6909      	ldr	r1, [r1, #16]
 8013826:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801382a:	eba3 0901 	sub.w	r9, r3, r1
 801382e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8013832:	1c7b      	adds	r3, r7, #1
 8013834:	444b      	add	r3, r9
 8013836:	106d      	asrs	r5, r5, #1
 8013838:	429d      	cmp	r5, r3
 801383a:	bf38      	it	cc
 801383c:	461d      	movcc	r5, r3
 801383e:	0553      	lsls	r3, r2, #21
 8013840:	d527      	bpl.n	8013892 <__ssputs_r+0x8c>
 8013842:	4629      	mov	r1, r5
 8013844:	f7fc f950 	bl	800fae8 <_malloc_r>
 8013848:	4606      	mov	r6, r0
 801384a:	b360      	cbz	r0, 80138a6 <__ssputs_r+0xa0>
 801384c:	6921      	ldr	r1, [r4, #16]
 801384e:	464a      	mov	r2, r9
 8013850:	f7fe f842 	bl	80118d8 <memcpy>
 8013854:	89a3      	ldrh	r3, [r4, #12]
 8013856:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801385a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801385e:	81a3      	strh	r3, [r4, #12]
 8013860:	6126      	str	r6, [r4, #16]
 8013862:	6165      	str	r5, [r4, #20]
 8013864:	444e      	add	r6, r9
 8013866:	eba5 0509 	sub.w	r5, r5, r9
 801386a:	6026      	str	r6, [r4, #0]
 801386c:	60a5      	str	r5, [r4, #8]
 801386e:	463e      	mov	r6, r7
 8013870:	42be      	cmp	r6, r7
 8013872:	d900      	bls.n	8013876 <__ssputs_r+0x70>
 8013874:	463e      	mov	r6, r7
 8013876:	6820      	ldr	r0, [r4, #0]
 8013878:	4632      	mov	r2, r6
 801387a:	4641      	mov	r1, r8
 801387c:	f000 f9ca 	bl	8013c14 <memmove>
 8013880:	68a3      	ldr	r3, [r4, #8]
 8013882:	1b9b      	subs	r3, r3, r6
 8013884:	60a3      	str	r3, [r4, #8]
 8013886:	6823      	ldr	r3, [r4, #0]
 8013888:	4433      	add	r3, r6
 801388a:	6023      	str	r3, [r4, #0]
 801388c:	2000      	movs	r0, #0
 801388e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013892:	462a      	mov	r2, r5
 8013894:	f7fc f9b4 	bl	800fc00 <_realloc_r>
 8013898:	4606      	mov	r6, r0
 801389a:	2800      	cmp	r0, #0
 801389c:	d1e0      	bne.n	8013860 <__ssputs_r+0x5a>
 801389e:	6921      	ldr	r1, [r4, #16]
 80138a0:	4650      	mov	r0, sl
 80138a2:	f7fe feb3 	bl	801260c <_free_r>
 80138a6:	230c      	movs	r3, #12
 80138a8:	f8ca 3000 	str.w	r3, [sl]
 80138ac:	89a3      	ldrh	r3, [r4, #12]
 80138ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80138b2:	81a3      	strh	r3, [r4, #12]
 80138b4:	f04f 30ff 	mov.w	r0, #4294967295
 80138b8:	e7e9      	b.n	801388e <__ssputs_r+0x88>
	...

080138bc <_svfiprintf_r>:
 80138bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80138c0:	4698      	mov	r8, r3
 80138c2:	898b      	ldrh	r3, [r1, #12]
 80138c4:	061b      	lsls	r3, r3, #24
 80138c6:	b09d      	sub	sp, #116	; 0x74
 80138c8:	4607      	mov	r7, r0
 80138ca:	460d      	mov	r5, r1
 80138cc:	4614      	mov	r4, r2
 80138ce:	d50e      	bpl.n	80138ee <_svfiprintf_r+0x32>
 80138d0:	690b      	ldr	r3, [r1, #16]
 80138d2:	b963      	cbnz	r3, 80138ee <_svfiprintf_r+0x32>
 80138d4:	2140      	movs	r1, #64	; 0x40
 80138d6:	f7fc f907 	bl	800fae8 <_malloc_r>
 80138da:	6028      	str	r0, [r5, #0]
 80138dc:	6128      	str	r0, [r5, #16]
 80138de:	b920      	cbnz	r0, 80138ea <_svfiprintf_r+0x2e>
 80138e0:	230c      	movs	r3, #12
 80138e2:	603b      	str	r3, [r7, #0]
 80138e4:	f04f 30ff 	mov.w	r0, #4294967295
 80138e8:	e0d0      	b.n	8013a8c <_svfiprintf_r+0x1d0>
 80138ea:	2340      	movs	r3, #64	; 0x40
 80138ec:	616b      	str	r3, [r5, #20]
 80138ee:	2300      	movs	r3, #0
 80138f0:	9309      	str	r3, [sp, #36]	; 0x24
 80138f2:	2320      	movs	r3, #32
 80138f4:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80138f8:	f8cd 800c 	str.w	r8, [sp, #12]
 80138fc:	2330      	movs	r3, #48	; 0x30
 80138fe:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8013aa4 <_svfiprintf_r+0x1e8>
 8013902:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8013906:	f04f 0901 	mov.w	r9, #1
 801390a:	4623      	mov	r3, r4
 801390c:	469a      	mov	sl, r3
 801390e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013912:	b10a      	cbz	r2, 8013918 <_svfiprintf_r+0x5c>
 8013914:	2a25      	cmp	r2, #37	; 0x25
 8013916:	d1f9      	bne.n	801390c <_svfiprintf_r+0x50>
 8013918:	ebba 0b04 	subs.w	fp, sl, r4
 801391c:	d00b      	beq.n	8013936 <_svfiprintf_r+0x7a>
 801391e:	465b      	mov	r3, fp
 8013920:	4622      	mov	r2, r4
 8013922:	4629      	mov	r1, r5
 8013924:	4638      	mov	r0, r7
 8013926:	f7ff ff6e 	bl	8013806 <__ssputs_r>
 801392a:	3001      	adds	r0, #1
 801392c:	f000 80a9 	beq.w	8013a82 <_svfiprintf_r+0x1c6>
 8013930:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013932:	445a      	add	r2, fp
 8013934:	9209      	str	r2, [sp, #36]	; 0x24
 8013936:	f89a 3000 	ldrb.w	r3, [sl]
 801393a:	2b00      	cmp	r3, #0
 801393c:	f000 80a1 	beq.w	8013a82 <_svfiprintf_r+0x1c6>
 8013940:	2300      	movs	r3, #0
 8013942:	f04f 32ff 	mov.w	r2, #4294967295
 8013946:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801394a:	f10a 0a01 	add.w	sl, sl, #1
 801394e:	9304      	str	r3, [sp, #16]
 8013950:	9307      	str	r3, [sp, #28]
 8013952:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8013956:	931a      	str	r3, [sp, #104]	; 0x68
 8013958:	4654      	mov	r4, sl
 801395a:	2205      	movs	r2, #5
 801395c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013960:	4850      	ldr	r0, [pc, #320]	; (8013aa4 <_svfiprintf_r+0x1e8>)
 8013962:	f7ec fc35 	bl	80001d0 <memchr>
 8013966:	9a04      	ldr	r2, [sp, #16]
 8013968:	b9d8      	cbnz	r0, 80139a2 <_svfiprintf_r+0xe6>
 801396a:	06d0      	lsls	r0, r2, #27
 801396c:	bf44      	itt	mi
 801396e:	2320      	movmi	r3, #32
 8013970:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8013974:	0711      	lsls	r1, r2, #28
 8013976:	bf44      	itt	mi
 8013978:	232b      	movmi	r3, #43	; 0x2b
 801397a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 801397e:	f89a 3000 	ldrb.w	r3, [sl]
 8013982:	2b2a      	cmp	r3, #42	; 0x2a
 8013984:	d015      	beq.n	80139b2 <_svfiprintf_r+0xf6>
 8013986:	9a07      	ldr	r2, [sp, #28]
 8013988:	4654      	mov	r4, sl
 801398a:	2000      	movs	r0, #0
 801398c:	f04f 0c0a 	mov.w	ip, #10
 8013990:	4621      	mov	r1, r4
 8013992:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013996:	3b30      	subs	r3, #48	; 0x30
 8013998:	2b09      	cmp	r3, #9
 801399a:	d94d      	bls.n	8013a38 <_svfiprintf_r+0x17c>
 801399c:	b1b0      	cbz	r0, 80139cc <_svfiprintf_r+0x110>
 801399e:	9207      	str	r2, [sp, #28]
 80139a0:	e014      	b.n	80139cc <_svfiprintf_r+0x110>
 80139a2:	eba0 0308 	sub.w	r3, r0, r8
 80139a6:	fa09 f303 	lsl.w	r3, r9, r3
 80139aa:	4313      	orrs	r3, r2
 80139ac:	9304      	str	r3, [sp, #16]
 80139ae:	46a2      	mov	sl, r4
 80139b0:	e7d2      	b.n	8013958 <_svfiprintf_r+0x9c>
 80139b2:	9b03      	ldr	r3, [sp, #12]
 80139b4:	1d19      	adds	r1, r3, #4
 80139b6:	681b      	ldr	r3, [r3, #0]
 80139b8:	9103      	str	r1, [sp, #12]
 80139ba:	2b00      	cmp	r3, #0
 80139bc:	bfbb      	ittet	lt
 80139be:	425b      	neglt	r3, r3
 80139c0:	f042 0202 	orrlt.w	r2, r2, #2
 80139c4:	9307      	strge	r3, [sp, #28]
 80139c6:	9307      	strlt	r3, [sp, #28]
 80139c8:	bfb8      	it	lt
 80139ca:	9204      	strlt	r2, [sp, #16]
 80139cc:	7823      	ldrb	r3, [r4, #0]
 80139ce:	2b2e      	cmp	r3, #46	; 0x2e
 80139d0:	d10c      	bne.n	80139ec <_svfiprintf_r+0x130>
 80139d2:	7863      	ldrb	r3, [r4, #1]
 80139d4:	2b2a      	cmp	r3, #42	; 0x2a
 80139d6:	d134      	bne.n	8013a42 <_svfiprintf_r+0x186>
 80139d8:	9b03      	ldr	r3, [sp, #12]
 80139da:	1d1a      	adds	r2, r3, #4
 80139dc:	681b      	ldr	r3, [r3, #0]
 80139de:	9203      	str	r2, [sp, #12]
 80139e0:	2b00      	cmp	r3, #0
 80139e2:	bfb8      	it	lt
 80139e4:	f04f 33ff 	movlt.w	r3, #4294967295
 80139e8:	3402      	adds	r4, #2
 80139ea:	9305      	str	r3, [sp, #20]
 80139ec:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8013ab4 <_svfiprintf_r+0x1f8>
 80139f0:	7821      	ldrb	r1, [r4, #0]
 80139f2:	2203      	movs	r2, #3
 80139f4:	4650      	mov	r0, sl
 80139f6:	f7ec fbeb 	bl	80001d0 <memchr>
 80139fa:	b138      	cbz	r0, 8013a0c <_svfiprintf_r+0x150>
 80139fc:	9b04      	ldr	r3, [sp, #16]
 80139fe:	eba0 000a 	sub.w	r0, r0, sl
 8013a02:	2240      	movs	r2, #64	; 0x40
 8013a04:	4082      	lsls	r2, r0
 8013a06:	4313      	orrs	r3, r2
 8013a08:	3401      	adds	r4, #1
 8013a0a:	9304      	str	r3, [sp, #16]
 8013a0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013a10:	4825      	ldr	r0, [pc, #148]	; (8013aa8 <_svfiprintf_r+0x1ec>)
 8013a12:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8013a16:	2206      	movs	r2, #6
 8013a18:	f7ec fbda 	bl	80001d0 <memchr>
 8013a1c:	2800      	cmp	r0, #0
 8013a1e:	d038      	beq.n	8013a92 <_svfiprintf_r+0x1d6>
 8013a20:	4b22      	ldr	r3, [pc, #136]	; (8013aac <_svfiprintf_r+0x1f0>)
 8013a22:	bb1b      	cbnz	r3, 8013a6c <_svfiprintf_r+0x1b0>
 8013a24:	9b03      	ldr	r3, [sp, #12]
 8013a26:	3307      	adds	r3, #7
 8013a28:	f023 0307 	bic.w	r3, r3, #7
 8013a2c:	3308      	adds	r3, #8
 8013a2e:	9303      	str	r3, [sp, #12]
 8013a30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013a32:	4433      	add	r3, r6
 8013a34:	9309      	str	r3, [sp, #36]	; 0x24
 8013a36:	e768      	b.n	801390a <_svfiprintf_r+0x4e>
 8013a38:	fb0c 3202 	mla	r2, ip, r2, r3
 8013a3c:	460c      	mov	r4, r1
 8013a3e:	2001      	movs	r0, #1
 8013a40:	e7a6      	b.n	8013990 <_svfiprintf_r+0xd4>
 8013a42:	2300      	movs	r3, #0
 8013a44:	3401      	adds	r4, #1
 8013a46:	9305      	str	r3, [sp, #20]
 8013a48:	4619      	mov	r1, r3
 8013a4a:	f04f 0c0a 	mov.w	ip, #10
 8013a4e:	4620      	mov	r0, r4
 8013a50:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013a54:	3a30      	subs	r2, #48	; 0x30
 8013a56:	2a09      	cmp	r2, #9
 8013a58:	d903      	bls.n	8013a62 <_svfiprintf_r+0x1a6>
 8013a5a:	2b00      	cmp	r3, #0
 8013a5c:	d0c6      	beq.n	80139ec <_svfiprintf_r+0x130>
 8013a5e:	9105      	str	r1, [sp, #20]
 8013a60:	e7c4      	b.n	80139ec <_svfiprintf_r+0x130>
 8013a62:	fb0c 2101 	mla	r1, ip, r1, r2
 8013a66:	4604      	mov	r4, r0
 8013a68:	2301      	movs	r3, #1
 8013a6a:	e7f0      	b.n	8013a4e <_svfiprintf_r+0x192>
 8013a6c:	ab03      	add	r3, sp, #12
 8013a6e:	9300      	str	r3, [sp, #0]
 8013a70:	462a      	mov	r2, r5
 8013a72:	4b0f      	ldr	r3, [pc, #60]	; (8013ab0 <_svfiprintf_r+0x1f4>)
 8013a74:	a904      	add	r1, sp, #16
 8013a76:	4638      	mov	r0, r7
 8013a78:	f7fc ffa4 	bl	80109c4 <_printf_float>
 8013a7c:	1c42      	adds	r2, r0, #1
 8013a7e:	4606      	mov	r6, r0
 8013a80:	d1d6      	bne.n	8013a30 <_svfiprintf_r+0x174>
 8013a82:	89ab      	ldrh	r3, [r5, #12]
 8013a84:	065b      	lsls	r3, r3, #25
 8013a86:	f53f af2d 	bmi.w	80138e4 <_svfiprintf_r+0x28>
 8013a8a:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013a8c:	b01d      	add	sp, #116	; 0x74
 8013a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a92:	ab03      	add	r3, sp, #12
 8013a94:	9300      	str	r3, [sp, #0]
 8013a96:	462a      	mov	r2, r5
 8013a98:	4b05      	ldr	r3, [pc, #20]	; (8013ab0 <_svfiprintf_r+0x1f4>)
 8013a9a:	a904      	add	r1, sp, #16
 8013a9c:	4638      	mov	r0, r7
 8013a9e:	f7fd fa35 	bl	8010f0c <_printf_i>
 8013aa2:	e7eb      	b.n	8013a7c <_svfiprintf_r+0x1c0>
 8013aa4:	0801469c 	.word	0x0801469c
 8013aa8:	080146a6 	.word	0x080146a6
 8013aac:	080109c5 	.word	0x080109c5
 8013ab0:	08013807 	.word	0x08013807
 8013ab4:	080146a2 	.word	0x080146a2

08013ab8 <__sflush_r>:
 8013ab8:	898a      	ldrh	r2, [r1, #12]
 8013aba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013abe:	4605      	mov	r5, r0
 8013ac0:	0710      	lsls	r0, r2, #28
 8013ac2:	460c      	mov	r4, r1
 8013ac4:	d458      	bmi.n	8013b78 <__sflush_r+0xc0>
 8013ac6:	684b      	ldr	r3, [r1, #4]
 8013ac8:	2b00      	cmp	r3, #0
 8013aca:	dc05      	bgt.n	8013ad8 <__sflush_r+0x20>
 8013acc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8013ace:	2b00      	cmp	r3, #0
 8013ad0:	dc02      	bgt.n	8013ad8 <__sflush_r+0x20>
 8013ad2:	2000      	movs	r0, #0
 8013ad4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013ad8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8013ada:	2e00      	cmp	r6, #0
 8013adc:	d0f9      	beq.n	8013ad2 <__sflush_r+0x1a>
 8013ade:	2300      	movs	r3, #0
 8013ae0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8013ae4:	682f      	ldr	r7, [r5, #0]
 8013ae6:	6a21      	ldr	r1, [r4, #32]
 8013ae8:	602b      	str	r3, [r5, #0]
 8013aea:	d032      	beq.n	8013b52 <__sflush_r+0x9a>
 8013aec:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8013aee:	89a3      	ldrh	r3, [r4, #12]
 8013af0:	075a      	lsls	r2, r3, #29
 8013af2:	d505      	bpl.n	8013b00 <__sflush_r+0x48>
 8013af4:	6863      	ldr	r3, [r4, #4]
 8013af6:	1ac0      	subs	r0, r0, r3
 8013af8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8013afa:	b10b      	cbz	r3, 8013b00 <__sflush_r+0x48>
 8013afc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8013afe:	1ac0      	subs	r0, r0, r3
 8013b00:	2300      	movs	r3, #0
 8013b02:	4602      	mov	r2, r0
 8013b04:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8013b06:	6a21      	ldr	r1, [r4, #32]
 8013b08:	4628      	mov	r0, r5
 8013b0a:	47b0      	blx	r6
 8013b0c:	1c43      	adds	r3, r0, #1
 8013b0e:	89a3      	ldrh	r3, [r4, #12]
 8013b10:	d106      	bne.n	8013b20 <__sflush_r+0x68>
 8013b12:	6829      	ldr	r1, [r5, #0]
 8013b14:	291d      	cmp	r1, #29
 8013b16:	d82b      	bhi.n	8013b70 <__sflush_r+0xb8>
 8013b18:	4a29      	ldr	r2, [pc, #164]	; (8013bc0 <__sflush_r+0x108>)
 8013b1a:	410a      	asrs	r2, r1
 8013b1c:	07d6      	lsls	r6, r2, #31
 8013b1e:	d427      	bmi.n	8013b70 <__sflush_r+0xb8>
 8013b20:	2200      	movs	r2, #0
 8013b22:	6062      	str	r2, [r4, #4]
 8013b24:	04d9      	lsls	r1, r3, #19
 8013b26:	6922      	ldr	r2, [r4, #16]
 8013b28:	6022      	str	r2, [r4, #0]
 8013b2a:	d504      	bpl.n	8013b36 <__sflush_r+0x7e>
 8013b2c:	1c42      	adds	r2, r0, #1
 8013b2e:	d101      	bne.n	8013b34 <__sflush_r+0x7c>
 8013b30:	682b      	ldr	r3, [r5, #0]
 8013b32:	b903      	cbnz	r3, 8013b36 <__sflush_r+0x7e>
 8013b34:	6560      	str	r0, [r4, #84]	; 0x54
 8013b36:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8013b38:	602f      	str	r7, [r5, #0]
 8013b3a:	2900      	cmp	r1, #0
 8013b3c:	d0c9      	beq.n	8013ad2 <__sflush_r+0x1a>
 8013b3e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8013b42:	4299      	cmp	r1, r3
 8013b44:	d002      	beq.n	8013b4c <__sflush_r+0x94>
 8013b46:	4628      	mov	r0, r5
 8013b48:	f7fe fd60 	bl	801260c <_free_r>
 8013b4c:	2000      	movs	r0, #0
 8013b4e:	6360      	str	r0, [r4, #52]	; 0x34
 8013b50:	e7c0      	b.n	8013ad4 <__sflush_r+0x1c>
 8013b52:	2301      	movs	r3, #1
 8013b54:	4628      	mov	r0, r5
 8013b56:	47b0      	blx	r6
 8013b58:	1c41      	adds	r1, r0, #1
 8013b5a:	d1c8      	bne.n	8013aee <__sflush_r+0x36>
 8013b5c:	682b      	ldr	r3, [r5, #0]
 8013b5e:	2b00      	cmp	r3, #0
 8013b60:	d0c5      	beq.n	8013aee <__sflush_r+0x36>
 8013b62:	2b1d      	cmp	r3, #29
 8013b64:	d001      	beq.n	8013b6a <__sflush_r+0xb2>
 8013b66:	2b16      	cmp	r3, #22
 8013b68:	d101      	bne.n	8013b6e <__sflush_r+0xb6>
 8013b6a:	602f      	str	r7, [r5, #0]
 8013b6c:	e7b1      	b.n	8013ad2 <__sflush_r+0x1a>
 8013b6e:	89a3      	ldrh	r3, [r4, #12]
 8013b70:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8013b74:	81a3      	strh	r3, [r4, #12]
 8013b76:	e7ad      	b.n	8013ad4 <__sflush_r+0x1c>
 8013b78:	690f      	ldr	r7, [r1, #16]
 8013b7a:	2f00      	cmp	r7, #0
 8013b7c:	d0a9      	beq.n	8013ad2 <__sflush_r+0x1a>
 8013b7e:	0793      	lsls	r3, r2, #30
 8013b80:	680e      	ldr	r6, [r1, #0]
 8013b82:	bf08      	it	eq
 8013b84:	694b      	ldreq	r3, [r1, #20]
 8013b86:	600f      	str	r7, [r1, #0]
 8013b88:	bf18      	it	ne
 8013b8a:	2300      	movne	r3, #0
 8013b8c:	eba6 0807 	sub.w	r8, r6, r7
 8013b90:	608b      	str	r3, [r1, #8]
 8013b92:	f1b8 0f00 	cmp.w	r8, #0
 8013b96:	dd9c      	ble.n	8013ad2 <__sflush_r+0x1a>
 8013b98:	6a21      	ldr	r1, [r4, #32]
 8013b9a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8013b9c:	4643      	mov	r3, r8
 8013b9e:	463a      	mov	r2, r7
 8013ba0:	4628      	mov	r0, r5
 8013ba2:	47b0      	blx	r6
 8013ba4:	2800      	cmp	r0, #0
 8013ba6:	dc06      	bgt.n	8013bb6 <__sflush_r+0xfe>
 8013ba8:	89a3      	ldrh	r3, [r4, #12]
 8013baa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8013bae:	81a3      	strh	r3, [r4, #12]
 8013bb0:	f04f 30ff 	mov.w	r0, #4294967295
 8013bb4:	e78e      	b.n	8013ad4 <__sflush_r+0x1c>
 8013bb6:	4407      	add	r7, r0
 8013bb8:	eba8 0800 	sub.w	r8, r8, r0
 8013bbc:	e7e9      	b.n	8013b92 <__sflush_r+0xda>
 8013bbe:	bf00      	nop
 8013bc0:	dfbffffe 	.word	0xdfbffffe

08013bc4 <_fflush_r>:
 8013bc4:	b538      	push	{r3, r4, r5, lr}
 8013bc6:	690b      	ldr	r3, [r1, #16]
 8013bc8:	4605      	mov	r5, r0
 8013bca:	460c      	mov	r4, r1
 8013bcc:	b913      	cbnz	r3, 8013bd4 <_fflush_r+0x10>
 8013bce:	2500      	movs	r5, #0
 8013bd0:	4628      	mov	r0, r5
 8013bd2:	bd38      	pop	{r3, r4, r5, pc}
 8013bd4:	b118      	cbz	r0, 8013bde <_fflush_r+0x1a>
 8013bd6:	6a03      	ldr	r3, [r0, #32]
 8013bd8:	b90b      	cbnz	r3, 8013bde <_fflush_r+0x1a>
 8013bda:	f7fd fd43 	bl	8011664 <__sinit>
 8013bde:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8013be2:	2b00      	cmp	r3, #0
 8013be4:	d0f3      	beq.n	8013bce <_fflush_r+0xa>
 8013be6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8013be8:	07d0      	lsls	r0, r2, #31
 8013bea:	d404      	bmi.n	8013bf6 <_fflush_r+0x32>
 8013bec:	0599      	lsls	r1, r3, #22
 8013bee:	d402      	bmi.n	8013bf6 <_fflush_r+0x32>
 8013bf0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8013bf2:	f7fd fe6f 	bl	80118d4 <__retarget_lock_acquire_recursive>
 8013bf6:	4628      	mov	r0, r5
 8013bf8:	4621      	mov	r1, r4
 8013bfa:	f7ff ff5d 	bl	8013ab8 <__sflush_r>
 8013bfe:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8013c00:	07da      	lsls	r2, r3, #31
 8013c02:	4605      	mov	r5, r0
 8013c04:	d4e4      	bmi.n	8013bd0 <_fflush_r+0xc>
 8013c06:	89a3      	ldrh	r3, [r4, #12]
 8013c08:	059b      	lsls	r3, r3, #22
 8013c0a:	d4e1      	bmi.n	8013bd0 <_fflush_r+0xc>
 8013c0c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8013c0e:	f7fd fe62 	bl	80118d6 <__retarget_lock_release_recursive>
 8013c12:	e7dd      	b.n	8013bd0 <_fflush_r+0xc>

08013c14 <memmove>:
 8013c14:	4288      	cmp	r0, r1
 8013c16:	b510      	push	{r4, lr}
 8013c18:	eb01 0402 	add.w	r4, r1, r2
 8013c1c:	d902      	bls.n	8013c24 <memmove+0x10>
 8013c1e:	4284      	cmp	r4, r0
 8013c20:	4623      	mov	r3, r4
 8013c22:	d807      	bhi.n	8013c34 <memmove+0x20>
 8013c24:	1e43      	subs	r3, r0, #1
 8013c26:	42a1      	cmp	r1, r4
 8013c28:	d008      	beq.n	8013c3c <memmove+0x28>
 8013c2a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8013c2e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8013c32:	e7f8      	b.n	8013c26 <memmove+0x12>
 8013c34:	4402      	add	r2, r0
 8013c36:	4601      	mov	r1, r0
 8013c38:	428a      	cmp	r2, r1
 8013c3a:	d100      	bne.n	8013c3e <memmove+0x2a>
 8013c3c:	bd10      	pop	{r4, pc}
 8013c3e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8013c42:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8013c46:	e7f7      	b.n	8013c38 <memmove+0x24>

08013c48 <__assert_func>:
 8013c48:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013c4a:	4614      	mov	r4, r2
 8013c4c:	461a      	mov	r2, r3
 8013c4e:	4b09      	ldr	r3, [pc, #36]	; (8013c74 <__assert_func+0x2c>)
 8013c50:	681b      	ldr	r3, [r3, #0]
 8013c52:	4605      	mov	r5, r0
 8013c54:	68d8      	ldr	r0, [r3, #12]
 8013c56:	b14c      	cbz	r4, 8013c6c <__assert_func+0x24>
 8013c58:	4b07      	ldr	r3, [pc, #28]	; (8013c78 <__assert_func+0x30>)
 8013c5a:	9100      	str	r1, [sp, #0]
 8013c5c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8013c60:	4906      	ldr	r1, [pc, #24]	; (8013c7c <__assert_func+0x34>)
 8013c62:	462b      	mov	r3, r5
 8013c64:	f000 f824 	bl	8013cb0 <fiprintf>
 8013c68:	f000 f834 	bl	8013cd4 <abort>
 8013c6c:	4b04      	ldr	r3, [pc, #16]	; (8013c80 <__assert_func+0x38>)
 8013c6e:	461c      	mov	r4, r3
 8013c70:	e7f3      	b.n	8013c5a <__assert_func+0x12>
 8013c72:	bf00      	nop
 8013c74:	200002e4 	.word	0x200002e4
 8013c78:	080146ad 	.word	0x080146ad
 8013c7c:	080146ba 	.word	0x080146ba
 8013c80:	080146e8 	.word	0x080146e8

08013c84 <_calloc_r>:
 8013c84:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013c86:	fba1 2402 	umull	r2, r4, r1, r2
 8013c8a:	b94c      	cbnz	r4, 8013ca0 <_calloc_r+0x1c>
 8013c8c:	4611      	mov	r1, r2
 8013c8e:	9201      	str	r2, [sp, #4]
 8013c90:	f7fb ff2a 	bl	800fae8 <_malloc_r>
 8013c94:	9a01      	ldr	r2, [sp, #4]
 8013c96:	4605      	mov	r5, r0
 8013c98:	b930      	cbnz	r0, 8013ca8 <_calloc_r+0x24>
 8013c9a:	4628      	mov	r0, r5
 8013c9c:	b003      	add	sp, #12
 8013c9e:	bd30      	pop	{r4, r5, pc}
 8013ca0:	220c      	movs	r2, #12
 8013ca2:	6002      	str	r2, [r0, #0]
 8013ca4:	2500      	movs	r5, #0
 8013ca6:	e7f8      	b.n	8013c9a <_calloc_r+0x16>
 8013ca8:	4621      	mov	r1, r4
 8013caa:	f7fd fd74 	bl	8011796 <memset>
 8013cae:	e7f4      	b.n	8013c9a <_calloc_r+0x16>

08013cb0 <fiprintf>:
 8013cb0:	b40e      	push	{r1, r2, r3}
 8013cb2:	b503      	push	{r0, r1, lr}
 8013cb4:	4601      	mov	r1, r0
 8013cb6:	ab03      	add	r3, sp, #12
 8013cb8:	4805      	ldr	r0, [pc, #20]	; (8013cd0 <fiprintf+0x20>)
 8013cba:	f853 2b04 	ldr.w	r2, [r3], #4
 8013cbe:	6800      	ldr	r0, [r0, #0]
 8013cc0:	9301      	str	r3, [sp, #4]
 8013cc2:	f000 f837 	bl	8013d34 <_vfiprintf_r>
 8013cc6:	b002      	add	sp, #8
 8013cc8:	f85d eb04 	ldr.w	lr, [sp], #4
 8013ccc:	b003      	add	sp, #12
 8013cce:	4770      	bx	lr
 8013cd0:	200002e4 	.word	0x200002e4

08013cd4 <abort>:
 8013cd4:	b508      	push	{r3, lr}
 8013cd6:	2006      	movs	r0, #6
 8013cd8:	f000 fa04 	bl	80140e4 <raise>
 8013cdc:	2001      	movs	r0, #1
 8013cde:	f7f3 f9a7 	bl	8007030 <_exit>

08013ce2 <__sfputc_r>:
 8013ce2:	6893      	ldr	r3, [r2, #8]
 8013ce4:	3b01      	subs	r3, #1
 8013ce6:	2b00      	cmp	r3, #0
 8013ce8:	b410      	push	{r4}
 8013cea:	6093      	str	r3, [r2, #8]
 8013cec:	da08      	bge.n	8013d00 <__sfputc_r+0x1e>
 8013cee:	6994      	ldr	r4, [r2, #24]
 8013cf0:	42a3      	cmp	r3, r4
 8013cf2:	db01      	blt.n	8013cf8 <__sfputc_r+0x16>
 8013cf4:	290a      	cmp	r1, #10
 8013cf6:	d103      	bne.n	8013d00 <__sfputc_r+0x1e>
 8013cf8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013cfc:	f000 b934 	b.w	8013f68 <__swbuf_r>
 8013d00:	6813      	ldr	r3, [r2, #0]
 8013d02:	1c58      	adds	r0, r3, #1
 8013d04:	6010      	str	r0, [r2, #0]
 8013d06:	7019      	strb	r1, [r3, #0]
 8013d08:	4608      	mov	r0, r1
 8013d0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8013d0e:	4770      	bx	lr

08013d10 <__sfputs_r>:
 8013d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013d12:	4606      	mov	r6, r0
 8013d14:	460f      	mov	r7, r1
 8013d16:	4614      	mov	r4, r2
 8013d18:	18d5      	adds	r5, r2, r3
 8013d1a:	42ac      	cmp	r4, r5
 8013d1c:	d101      	bne.n	8013d22 <__sfputs_r+0x12>
 8013d1e:	2000      	movs	r0, #0
 8013d20:	e007      	b.n	8013d32 <__sfputs_r+0x22>
 8013d22:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013d26:	463a      	mov	r2, r7
 8013d28:	4630      	mov	r0, r6
 8013d2a:	f7ff ffda 	bl	8013ce2 <__sfputc_r>
 8013d2e:	1c43      	adds	r3, r0, #1
 8013d30:	d1f3      	bne.n	8013d1a <__sfputs_r+0xa>
 8013d32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08013d34 <_vfiprintf_r>:
 8013d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d38:	460d      	mov	r5, r1
 8013d3a:	b09d      	sub	sp, #116	; 0x74
 8013d3c:	4614      	mov	r4, r2
 8013d3e:	4698      	mov	r8, r3
 8013d40:	4606      	mov	r6, r0
 8013d42:	b118      	cbz	r0, 8013d4c <_vfiprintf_r+0x18>
 8013d44:	6a03      	ldr	r3, [r0, #32]
 8013d46:	b90b      	cbnz	r3, 8013d4c <_vfiprintf_r+0x18>
 8013d48:	f7fd fc8c 	bl	8011664 <__sinit>
 8013d4c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8013d4e:	07d9      	lsls	r1, r3, #31
 8013d50:	d405      	bmi.n	8013d5e <_vfiprintf_r+0x2a>
 8013d52:	89ab      	ldrh	r3, [r5, #12]
 8013d54:	059a      	lsls	r2, r3, #22
 8013d56:	d402      	bmi.n	8013d5e <_vfiprintf_r+0x2a>
 8013d58:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8013d5a:	f7fd fdbb 	bl	80118d4 <__retarget_lock_acquire_recursive>
 8013d5e:	89ab      	ldrh	r3, [r5, #12]
 8013d60:	071b      	lsls	r3, r3, #28
 8013d62:	d501      	bpl.n	8013d68 <_vfiprintf_r+0x34>
 8013d64:	692b      	ldr	r3, [r5, #16]
 8013d66:	b99b      	cbnz	r3, 8013d90 <_vfiprintf_r+0x5c>
 8013d68:	4629      	mov	r1, r5
 8013d6a:	4630      	mov	r0, r6
 8013d6c:	f000 f93a 	bl	8013fe4 <__swsetup_r>
 8013d70:	b170      	cbz	r0, 8013d90 <_vfiprintf_r+0x5c>
 8013d72:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8013d74:	07dc      	lsls	r4, r3, #31
 8013d76:	d504      	bpl.n	8013d82 <_vfiprintf_r+0x4e>
 8013d78:	f04f 30ff 	mov.w	r0, #4294967295
 8013d7c:	b01d      	add	sp, #116	; 0x74
 8013d7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d82:	89ab      	ldrh	r3, [r5, #12]
 8013d84:	0598      	lsls	r0, r3, #22
 8013d86:	d4f7      	bmi.n	8013d78 <_vfiprintf_r+0x44>
 8013d88:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8013d8a:	f7fd fda4 	bl	80118d6 <__retarget_lock_release_recursive>
 8013d8e:	e7f3      	b.n	8013d78 <_vfiprintf_r+0x44>
 8013d90:	2300      	movs	r3, #0
 8013d92:	9309      	str	r3, [sp, #36]	; 0x24
 8013d94:	2320      	movs	r3, #32
 8013d96:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8013d9a:	f8cd 800c 	str.w	r8, [sp, #12]
 8013d9e:	2330      	movs	r3, #48	; 0x30
 8013da0:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8013f54 <_vfiprintf_r+0x220>
 8013da4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8013da8:	f04f 0901 	mov.w	r9, #1
 8013dac:	4623      	mov	r3, r4
 8013dae:	469a      	mov	sl, r3
 8013db0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8013db4:	b10a      	cbz	r2, 8013dba <_vfiprintf_r+0x86>
 8013db6:	2a25      	cmp	r2, #37	; 0x25
 8013db8:	d1f9      	bne.n	8013dae <_vfiprintf_r+0x7a>
 8013dba:	ebba 0b04 	subs.w	fp, sl, r4
 8013dbe:	d00b      	beq.n	8013dd8 <_vfiprintf_r+0xa4>
 8013dc0:	465b      	mov	r3, fp
 8013dc2:	4622      	mov	r2, r4
 8013dc4:	4629      	mov	r1, r5
 8013dc6:	4630      	mov	r0, r6
 8013dc8:	f7ff ffa2 	bl	8013d10 <__sfputs_r>
 8013dcc:	3001      	adds	r0, #1
 8013dce:	f000 80a9 	beq.w	8013f24 <_vfiprintf_r+0x1f0>
 8013dd2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013dd4:	445a      	add	r2, fp
 8013dd6:	9209      	str	r2, [sp, #36]	; 0x24
 8013dd8:	f89a 3000 	ldrb.w	r3, [sl]
 8013ddc:	2b00      	cmp	r3, #0
 8013dde:	f000 80a1 	beq.w	8013f24 <_vfiprintf_r+0x1f0>
 8013de2:	2300      	movs	r3, #0
 8013de4:	f04f 32ff 	mov.w	r2, #4294967295
 8013de8:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8013dec:	f10a 0a01 	add.w	sl, sl, #1
 8013df0:	9304      	str	r3, [sp, #16]
 8013df2:	9307      	str	r3, [sp, #28]
 8013df4:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8013df8:	931a      	str	r3, [sp, #104]	; 0x68
 8013dfa:	4654      	mov	r4, sl
 8013dfc:	2205      	movs	r2, #5
 8013dfe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013e02:	4854      	ldr	r0, [pc, #336]	; (8013f54 <_vfiprintf_r+0x220>)
 8013e04:	f7ec f9e4 	bl	80001d0 <memchr>
 8013e08:	9a04      	ldr	r2, [sp, #16]
 8013e0a:	b9d8      	cbnz	r0, 8013e44 <_vfiprintf_r+0x110>
 8013e0c:	06d1      	lsls	r1, r2, #27
 8013e0e:	bf44      	itt	mi
 8013e10:	2320      	movmi	r3, #32
 8013e12:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8013e16:	0713      	lsls	r3, r2, #28
 8013e18:	bf44      	itt	mi
 8013e1a:	232b      	movmi	r3, #43	; 0x2b
 8013e1c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8013e20:	f89a 3000 	ldrb.w	r3, [sl]
 8013e24:	2b2a      	cmp	r3, #42	; 0x2a
 8013e26:	d015      	beq.n	8013e54 <_vfiprintf_r+0x120>
 8013e28:	9a07      	ldr	r2, [sp, #28]
 8013e2a:	4654      	mov	r4, sl
 8013e2c:	2000      	movs	r0, #0
 8013e2e:	f04f 0c0a 	mov.w	ip, #10
 8013e32:	4621      	mov	r1, r4
 8013e34:	f811 3b01 	ldrb.w	r3, [r1], #1
 8013e38:	3b30      	subs	r3, #48	; 0x30
 8013e3a:	2b09      	cmp	r3, #9
 8013e3c:	d94d      	bls.n	8013eda <_vfiprintf_r+0x1a6>
 8013e3e:	b1b0      	cbz	r0, 8013e6e <_vfiprintf_r+0x13a>
 8013e40:	9207      	str	r2, [sp, #28]
 8013e42:	e014      	b.n	8013e6e <_vfiprintf_r+0x13a>
 8013e44:	eba0 0308 	sub.w	r3, r0, r8
 8013e48:	fa09 f303 	lsl.w	r3, r9, r3
 8013e4c:	4313      	orrs	r3, r2
 8013e4e:	9304      	str	r3, [sp, #16]
 8013e50:	46a2      	mov	sl, r4
 8013e52:	e7d2      	b.n	8013dfa <_vfiprintf_r+0xc6>
 8013e54:	9b03      	ldr	r3, [sp, #12]
 8013e56:	1d19      	adds	r1, r3, #4
 8013e58:	681b      	ldr	r3, [r3, #0]
 8013e5a:	9103      	str	r1, [sp, #12]
 8013e5c:	2b00      	cmp	r3, #0
 8013e5e:	bfbb      	ittet	lt
 8013e60:	425b      	neglt	r3, r3
 8013e62:	f042 0202 	orrlt.w	r2, r2, #2
 8013e66:	9307      	strge	r3, [sp, #28]
 8013e68:	9307      	strlt	r3, [sp, #28]
 8013e6a:	bfb8      	it	lt
 8013e6c:	9204      	strlt	r2, [sp, #16]
 8013e6e:	7823      	ldrb	r3, [r4, #0]
 8013e70:	2b2e      	cmp	r3, #46	; 0x2e
 8013e72:	d10c      	bne.n	8013e8e <_vfiprintf_r+0x15a>
 8013e74:	7863      	ldrb	r3, [r4, #1]
 8013e76:	2b2a      	cmp	r3, #42	; 0x2a
 8013e78:	d134      	bne.n	8013ee4 <_vfiprintf_r+0x1b0>
 8013e7a:	9b03      	ldr	r3, [sp, #12]
 8013e7c:	1d1a      	adds	r2, r3, #4
 8013e7e:	681b      	ldr	r3, [r3, #0]
 8013e80:	9203      	str	r2, [sp, #12]
 8013e82:	2b00      	cmp	r3, #0
 8013e84:	bfb8      	it	lt
 8013e86:	f04f 33ff 	movlt.w	r3, #4294967295
 8013e8a:	3402      	adds	r4, #2
 8013e8c:	9305      	str	r3, [sp, #20]
 8013e8e:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8013f64 <_vfiprintf_r+0x230>
 8013e92:	7821      	ldrb	r1, [r4, #0]
 8013e94:	2203      	movs	r2, #3
 8013e96:	4650      	mov	r0, sl
 8013e98:	f7ec f99a 	bl	80001d0 <memchr>
 8013e9c:	b138      	cbz	r0, 8013eae <_vfiprintf_r+0x17a>
 8013e9e:	9b04      	ldr	r3, [sp, #16]
 8013ea0:	eba0 000a 	sub.w	r0, r0, sl
 8013ea4:	2240      	movs	r2, #64	; 0x40
 8013ea6:	4082      	lsls	r2, r0
 8013ea8:	4313      	orrs	r3, r2
 8013eaa:	3401      	adds	r4, #1
 8013eac:	9304      	str	r3, [sp, #16]
 8013eae:	f814 1b01 	ldrb.w	r1, [r4], #1
 8013eb2:	4829      	ldr	r0, [pc, #164]	; (8013f58 <_vfiprintf_r+0x224>)
 8013eb4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8013eb8:	2206      	movs	r2, #6
 8013eba:	f7ec f989 	bl	80001d0 <memchr>
 8013ebe:	2800      	cmp	r0, #0
 8013ec0:	d03f      	beq.n	8013f42 <_vfiprintf_r+0x20e>
 8013ec2:	4b26      	ldr	r3, [pc, #152]	; (8013f5c <_vfiprintf_r+0x228>)
 8013ec4:	bb1b      	cbnz	r3, 8013f0e <_vfiprintf_r+0x1da>
 8013ec6:	9b03      	ldr	r3, [sp, #12]
 8013ec8:	3307      	adds	r3, #7
 8013eca:	f023 0307 	bic.w	r3, r3, #7
 8013ece:	3308      	adds	r3, #8
 8013ed0:	9303      	str	r3, [sp, #12]
 8013ed2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013ed4:	443b      	add	r3, r7
 8013ed6:	9309      	str	r3, [sp, #36]	; 0x24
 8013ed8:	e768      	b.n	8013dac <_vfiprintf_r+0x78>
 8013eda:	fb0c 3202 	mla	r2, ip, r2, r3
 8013ede:	460c      	mov	r4, r1
 8013ee0:	2001      	movs	r0, #1
 8013ee2:	e7a6      	b.n	8013e32 <_vfiprintf_r+0xfe>
 8013ee4:	2300      	movs	r3, #0
 8013ee6:	3401      	adds	r4, #1
 8013ee8:	9305      	str	r3, [sp, #20]
 8013eea:	4619      	mov	r1, r3
 8013eec:	f04f 0c0a 	mov.w	ip, #10
 8013ef0:	4620      	mov	r0, r4
 8013ef2:	f810 2b01 	ldrb.w	r2, [r0], #1
 8013ef6:	3a30      	subs	r2, #48	; 0x30
 8013ef8:	2a09      	cmp	r2, #9
 8013efa:	d903      	bls.n	8013f04 <_vfiprintf_r+0x1d0>
 8013efc:	2b00      	cmp	r3, #0
 8013efe:	d0c6      	beq.n	8013e8e <_vfiprintf_r+0x15a>
 8013f00:	9105      	str	r1, [sp, #20]
 8013f02:	e7c4      	b.n	8013e8e <_vfiprintf_r+0x15a>
 8013f04:	fb0c 2101 	mla	r1, ip, r1, r2
 8013f08:	4604      	mov	r4, r0
 8013f0a:	2301      	movs	r3, #1
 8013f0c:	e7f0      	b.n	8013ef0 <_vfiprintf_r+0x1bc>
 8013f0e:	ab03      	add	r3, sp, #12
 8013f10:	9300      	str	r3, [sp, #0]
 8013f12:	462a      	mov	r2, r5
 8013f14:	4b12      	ldr	r3, [pc, #72]	; (8013f60 <_vfiprintf_r+0x22c>)
 8013f16:	a904      	add	r1, sp, #16
 8013f18:	4630      	mov	r0, r6
 8013f1a:	f7fc fd53 	bl	80109c4 <_printf_float>
 8013f1e:	4607      	mov	r7, r0
 8013f20:	1c78      	adds	r0, r7, #1
 8013f22:	d1d6      	bne.n	8013ed2 <_vfiprintf_r+0x19e>
 8013f24:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8013f26:	07d9      	lsls	r1, r3, #31
 8013f28:	d405      	bmi.n	8013f36 <_vfiprintf_r+0x202>
 8013f2a:	89ab      	ldrh	r3, [r5, #12]
 8013f2c:	059a      	lsls	r2, r3, #22
 8013f2e:	d402      	bmi.n	8013f36 <_vfiprintf_r+0x202>
 8013f30:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8013f32:	f7fd fcd0 	bl	80118d6 <__retarget_lock_release_recursive>
 8013f36:	89ab      	ldrh	r3, [r5, #12]
 8013f38:	065b      	lsls	r3, r3, #25
 8013f3a:	f53f af1d 	bmi.w	8013d78 <_vfiprintf_r+0x44>
 8013f3e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013f40:	e71c      	b.n	8013d7c <_vfiprintf_r+0x48>
 8013f42:	ab03      	add	r3, sp, #12
 8013f44:	9300      	str	r3, [sp, #0]
 8013f46:	462a      	mov	r2, r5
 8013f48:	4b05      	ldr	r3, [pc, #20]	; (8013f60 <_vfiprintf_r+0x22c>)
 8013f4a:	a904      	add	r1, sp, #16
 8013f4c:	4630      	mov	r0, r6
 8013f4e:	f7fc ffdd 	bl	8010f0c <_printf_i>
 8013f52:	e7e4      	b.n	8013f1e <_vfiprintf_r+0x1ea>
 8013f54:	0801469c 	.word	0x0801469c
 8013f58:	080146a6 	.word	0x080146a6
 8013f5c:	080109c5 	.word	0x080109c5
 8013f60:	08013d11 	.word	0x08013d11
 8013f64:	080146a2 	.word	0x080146a2

08013f68 <__swbuf_r>:
 8013f68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013f6a:	460e      	mov	r6, r1
 8013f6c:	4614      	mov	r4, r2
 8013f6e:	4605      	mov	r5, r0
 8013f70:	b118      	cbz	r0, 8013f7a <__swbuf_r+0x12>
 8013f72:	6a03      	ldr	r3, [r0, #32]
 8013f74:	b90b      	cbnz	r3, 8013f7a <__swbuf_r+0x12>
 8013f76:	f7fd fb75 	bl	8011664 <__sinit>
 8013f7a:	69a3      	ldr	r3, [r4, #24]
 8013f7c:	60a3      	str	r3, [r4, #8]
 8013f7e:	89a3      	ldrh	r3, [r4, #12]
 8013f80:	071a      	lsls	r2, r3, #28
 8013f82:	d525      	bpl.n	8013fd0 <__swbuf_r+0x68>
 8013f84:	6923      	ldr	r3, [r4, #16]
 8013f86:	b31b      	cbz	r3, 8013fd0 <__swbuf_r+0x68>
 8013f88:	6823      	ldr	r3, [r4, #0]
 8013f8a:	6922      	ldr	r2, [r4, #16]
 8013f8c:	1a98      	subs	r0, r3, r2
 8013f8e:	6963      	ldr	r3, [r4, #20]
 8013f90:	b2f6      	uxtb	r6, r6
 8013f92:	4283      	cmp	r3, r0
 8013f94:	4637      	mov	r7, r6
 8013f96:	dc04      	bgt.n	8013fa2 <__swbuf_r+0x3a>
 8013f98:	4621      	mov	r1, r4
 8013f9a:	4628      	mov	r0, r5
 8013f9c:	f7ff fe12 	bl	8013bc4 <_fflush_r>
 8013fa0:	b9e0      	cbnz	r0, 8013fdc <__swbuf_r+0x74>
 8013fa2:	68a3      	ldr	r3, [r4, #8]
 8013fa4:	3b01      	subs	r3, #1
 8013fa6:	60a3      	str	r3, [r4, #8]
 8013fa8:	6823      	ldr	r3, [r4, #0]
 8013faa:	1c5a      	adds	r2, r3, #1
 8013fac:	6022      	str	r2, [r4, #0]
 8013fae:	701e      	strb	r6, [r3, #0]
 8013fb0:	6962      	ldr	r2, [r4, #20]
 8013fb2:	1c43      	adds	r3, r0, #1
 8013fb4:	429a      	cmp	r2, r3
 8013fb6:	d004      	beq.n	8013fc2 <__swbuf_r+0x5a>
 8013fb8:	89a3      	ldrh	r3, [r4, #12]
 8013fba:	07db      	lsls	r3, r3, #31
 8013fbc:	d506      	bpl.n	8013fcc <__swbuf_r+0x64>
 8013fbe:	2e0a      	cmp	r6, #10
 8013fc0:	d104      	bne.n	8013fcc <__swbuf_r+0x64>
 8013fc2:	4621      	mov	r1, r4
 8013fc4:	4628      	mov	r0, r5
 8013fc6:	f7ff fdfd 	bl	8013bc4 <_fflush_r>
 8013fca:	b938      	cbnz	r0, 8013fdc <__swbuf_r+0x74>
 8013fcc:	4638      	mov	r0, r7
 8013fce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013fd0:	4621      	mov	r1, r4
 8013fd2:	4628      	mov	r0, r5
 8013fd4:	f000 f806 	bl	8013fe4 <__swsetup_r>
 8013fd8:	2800      	cmp	r0, #0
 8013fda:	d0d5      	beq.n	8013f88 <__swbuf_r+0x20>
 8013fdc:	f04f 37ff 	mov.w	r7, #4294967295
 8013fe0:	e7f4      	b.n	8013fcc <__swbuf_r+0x64>
	...

08013fe4 <__swsetup_r>:
 8013fe4:	b538      	push	{r3, r4, r5, lr}
 8013fe6:	4b2a      	ldr	r3, [pc, #168]	; (8014090 <__swsetup_r+0xac>)
 8013fe8:	4605      	mov	r5, r0
 8013fea:	6818      	ldr	r0, [r3, #0]
 8013fec:	460c      	mov	r4, r1
 8013fee:	b118      	cbz	r0, 8013ff8 <__swsetup_r+0x14>
 8013ff0:	6a03      	ldr	r3, [r0, #32]
 8013ff2:	b90b      	cbnz	r3, 8013ff8 <__swsetup_r+0x14>
 8013ff4:	f7fd fb36 	bl	8011664 <__sinit>
 8013ff8:	89a3      	ldrh	r3, [r4, #12]
 8013ffa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8013ffe:	0718      	lsls	r0, r3, #28
 8014000:	d422      	bmi.n	8014048 <__swsetup_r+0x64>
 8014002:	06d9      	lsls	r1, r3, #27
 8014004:	d407      	bmi.n	8014016 <__swsetup_r+0x32>
 8014006:	2309      	movs	r3, #9
 8014008:	602b      	str	r3, [r5, #0]
 801400a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801400e:	81a3      	strh	r3, [r4, #12]
 8014010:	f04f 30ff 	mov.w	r0, #4294967295
 8014014:	e034      	b.n	8014080 <__swsetup_r+0x9c>
 8014016:	0758      	lsls	r0, r3, #29
 8014018:	d512      	bpl.n	8014040 <__swsetup_r+0x5c>
 801401a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801401c:	b141      	cbz	r1, 8014030 <__swsetup_r+0x4c>
 801401e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8014022:	4299      	cmp	r1, r3
 8014024:	d002      	beq.n	801402c <__swsetup_r+0x48>
 8014026:	4628      	mov	r0, r5
 8014028:	f7fe faf0 	bl	801260c <_free_r>
 801402c:	2300      	movs	r3, #0
 801402e:	6363      	str	r3, [r4, #52]	; 0x34
 8014030:	89a3      	ldrh	r3, [r4, #12]
 8014032:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8014036:	81a3      	strh	r3, [r4, #12]
 8014038:	2300      	movs	r3, #0
 801403a:	6063      	str	r3, [r4, #4]
 801403c:	6923      	ldr	r3, [r4, #16]
 801403e:	6023      	str	r3, [r4, #0]
 8014040:	89a3      	ldrh	r3, [r4, #12]
 8014042:	f043 0308 	orr.w	r3, r3, #8
 8014046:	81a3      	strh	r3, [r4, #12]
 8014048:	6923      	ldr	r3, [r4, #16]
 801404a:	b94b      	cbnz	r3, 8014060 <__swsetup_r+0x7c>
 801404c:	89a3      	ldrh	r3, [r4, #12]
 801404e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8014052:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8014056:	d003      	beq.n	8014060 <__swsetup_r+0x7c>
 8014058:	4621      	mov	r1, r4
 801405a:	4628      	mov	r0, r5
 801405c:	f000 f884 	bl	8014168 <__smakebuf_r>
 8014060:	89a0      	ldrh	r0, [r4, #12]
 8014062:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8014066:	f010 0301 	ands.w	r3, r0, #1
 801406a:	d00a      	beq.n	8014082 <__swsetup_r+0x9e>
 801406c:	2300      	movs	r3, #0
 801406e:	60a3      	str	r3, [r4, #8]
 8014070:	6963      	ldr	r3, [r4, #20]
 8014072:	425b      	negs	r3, r3
 8014074:	61a3      	str	r3, [r4, #24]
 8014076:	6923      	ldr	r3, [r4, #16]
 8014078:	b943      	cbnz	r3, 801408c <__swsetup_r+0xa8>
 801407a:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801407e:	d1c4      	bne.n	801400a <__swsetup_r+0x26>
 8014080:	bd38      	pop	{r3, r4, r5, pc}
 8014082:	0781      	lsls	r1, r0, #30
 8014084:	bf58      	it	pl
 8014086:	6963      	ldrpl	r3, [r4, #20]
 8014088:	60a3      	str	r3, [r4, #8]
 801408a:	e7f4      	b.n	8014076 <__swsetup_r+0x92>
 801408c:	2000      	movs	r0, #0
 801408e:	e7f7      	b.n	8014080 <__swsetup_r+0x9c>
 8014090:	200002e4 	.word	0x200002e4

08014094 <_raise_r>:
 8014094:	291f      	cmp	r1, #31
 8014096:	b538      	push	{r3, r4, r5, lr}
 8014098:	4604      	mov	r4, r0
 801409a:	460d      	mov	r5, r1
 801409c:	d904      	bls.n	80140a8 <_raise_r+0x14>
 801409e:	2316      	movs	r3, #22
 80140a0:	6003      	str	r3, [r0, #0]
 80140a2:	f04f 30ff 	mov.w	r0, #4294967295
 80140a6:	bd38      	pop	{r3, r4, r5, pc}
 80140a8:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80140aa:	b112      	cbz	r2, 80140b2 <_raise_r+0x1e>
 80140ac:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80140b0:	b94b      	cbnz	r3, 80140c6 <_raise_r+0x32>
 80140b2:	4620      	mov	r0, r4
 80140b4:	f000 f830 	bl	8014118 <_getpid_r>
 80140b8:	462a      	mov	r2, r5
 80140ba:	4601      	mov	r1, r0
 80140bc:	4620      	mov	r0, r4
 80140be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80140c2:	f000 b817 	b.w	80140f4 <_kill_r>
 80140c6:	2b01      	cmp	r3, #1
 80140c8:	d00a      	beq.n	80140e0 <_raise_r+0x4c>
 80140ca:	1c59      	adds	r1, r3, #1
 80140cc:	d103      	bne.n	80140d6 <_raise_r+0x42>
 80140ce:	2316      	movs	r3, #22
 80140d0:	6003      	str	r3, [r0, #0]
 80140d2:	2001      	movs	r0, #1
 80140d4:	e7e7      	b.n	80140a6 <_raise_r+0x12>
 80140d6:	2400      	movs	r4, #0
 80140d8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80140dc:	4628      	mov	r0, r5
 80140de:	4798      	blx	r3
 80140e0:	2000      	movs	r0, #0
 80140e2:	e7e0      	b.n	80140a6 <_raise_r+0x12>

080140e4 <raise>:
 80140e4:	4b02      	ldr	r3, [pc, #8]	; (80140f0 <raise+0xc>)
 80140e6:	4601      	mov	r1, r0
 80140e8:	6818      	ldr	r0, [r3, #0]
 80140ea:	f7ff bfd3 	b.w	8014094 <_raise_r>
 80140ee:	bf00      	nop
 80140f0:	200002e4 	.word	0x200002e4

080140f4 <_kill_r>:
 80140f4:	b538      	push	{r3, r4, r5, lr}
 80140f6:	4d07      	ldr	r5, [pc, #28]	; (8014114 <_kill_r+0x20>)
 80140f8:	2300      	movs	r3, #0
 80140fa:	4604      	mov	r4, r0
 80140fc:	4608      	mov	r0, r1
 80140fe:	4611      	mov	r1, r2
 8014100:	602b      	str	r3, [r5, #0]
 8014102:	f7f2 ff85 	bl	8007010 <_kill>
 8014106:	1c43      	adds	r3, r0, #1
 8014108:	d102      	bne.n	8014110 <_kill_r+0x1c>
 801410a:	682b      	ldr	r3, [r5, #0]
 801410c:	b103      	cbz	r3, 8014110 <_kill_r+0x1c>
 801410e:	6023      	str	r3, [r4, #0]
 8014110:	bd38      	pop	{r3, r4, r5, pc}
 8014112:	bf00      	nop
 8014114:	20002994 	.word	0x20002994

08014118 <_getpid_r>:
 8014118:	f7f2 bf72 	b.w	8007000 <_getpid>

0801411c <__swhatbuf_r>:
 801411c:	b570      	push	{r4, r5, r6, lr}
 801411e:	460c      	mov	r4, r1
 8014120:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8014124:	2900      	cmp	r1, #0
 8014126:	b096      	sub	sp, #88	; 0x58
 8014128:	4615      	mov	r5, r2
 801412a:	461e      	mov	r6, r3
 801412c:	da0d      	bge.n	801414a <__swhatbuf_r+0x2e>
 801412e:	89a3      	ldrh	r3, [r4, #12]
 8014130:	f013 0f80 	tst.w	r3, #128	; 0x80
 8014134:	f04f 0100 	mov.w	r1, #0
 8014138:	bf0c      	ite	eq
 801413a:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 801413e:	2340      	movne	r3, #64	; 0x40
 8014140:	2000      	movs	r0, #0
 8014142:	6031      	str	r1, [r6, #0]
 8014144:	602b      	str	r3, [r5, #0]
 8014146:	b016      	add	sp, #88	; 0x58
 8014148:	bd70      	pop	{r4, r5, r6, pc}
 801414a:	466a      	mov	r2, sp
 801414c:	f000 f848 	bl	80141e0 <_fstat_r>
 8014150:	2800      	cmp	r0, #0
 8014152:	dbec      	blt.n	801412e <__swhatbuf_r+0x12>
 8014154:	9901      	ldr	r1, [sp, #4]
 8014156:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 801415a:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 801415e:	4259      	negs	r1, r3
 8014160:	4159      	adcs	r1, r3
 8014162:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8014166:	e7eb      	b.n	8014140 <__swhatbuf_r+0x24>

08014168 <__smakebuf_r>:
 8014168:	898b      	ldrh	r3, [r1, #12]
 801416a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801416c:	079d      	lsls	r5, r3, #30
 801416e:	4606      	mov	r6, r0
 8014170:	460c      	mov	r4, r1
 8014172:	d507      	bpl.n	8014184 <__smakebuf_r+0x1c>
 8014174:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8014178:	6023      	str	r3, [r4, #0]
 801417a:	6123      	str	r3, [r4, #16]
 801417c:	2301      	movs	r3, #1
 801417e:	6163      	str	r3, [r4, #20]
 8014180:	b002      	add	sp, #8
 8014182:	bd70      	pop	{r4, r5, r6, pc}
 8014184:	ab01      	add	r3, sp, #4
 8014186:	466a      	mov	r2, sp
 8014188:	f7ff ffc8 	bl	801411c <__swhatbuf_r>
 801418c:	9900      	ldr	r1, [sp, #0]
 801418e:	4605      	mov	r5, r0
 8014190:	4630      	mov	r0, r6
 8014192:	f7fb fca9 	bl	800fae8 <_malloc_r>
 8014196:	b948      	cbnz	r0, 80141ac <__smakebuf_r+0x44>
 8014198:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801419c:	059a      	lsls	r2, r3, #22
 801419e:	d4ef      	bmi.n	8014180 <__smakebuf_r+0x18>
 80141a0:	f023 0303 	bic.w	r3, r3, #3
 80141a4:	f043 0302 	orr.w	r3, r3, #2
 80141a8:	81a3      	strh	r3, [r4, #12]
 80141aa:	e7e3      	b.n	8014174 <__smakebuf_r+0xc>
 80141ac:	89a3      	ldrh	r3, [r4, #12]
 80141ae:	6020      	str	r0, [r4, #0]
 80141b0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80141b4:	81a3      	strh	r3, [r4, #12]
 80141b6:	9b00      	ldr	r3, [sp, #0]
 80141b8:	6163      	str	r3, [r4, #20]
 80141ba:	9b01      	ldr	r3, [sp, #4]
 80141bc:	6120      	str	r0, [r4, #16]
 80141be:	b15b      	cbz	r3, 80141d8 <__smakebuf_r+0x70>
 80141c0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80141c4:	4630      	mov	r0, r6
 80141c6:	f000 f81d 	bl	8014204 <_isatty_r>
 80141ca:	b128      	cbz	r0, 80141d8 <__smakebuf_r+0x70>
 80141cc:	89a3      	ldrh	r3, [r4, #12]
 80141ce:	f023 0303 	bic.w	r3, r3, #3
 80141d2:	f043 0301 	orr.w	r3, r3, #1
 80141d6:	81a3      	strh	r3, [r4, #12]
 80141d8:	89a3      	ldrh	r3, [r4, #12]
 80141da:	431d      	orrs	r5, r3
 80141dc:	81a5      	strh	r5, [r4, #12]
 80141de:	e7cf      	b.n	8014180 <__smakebuf_r+0x18>

080141e0 <_fstat_r>:
 80141e0:	b538      	push	{r3, r4, r5, lr}
 80141e2:	4d07      	ldr	r5, [pc, #28]	; (8014200 <_fstat_r+0x20>)
 80141e4:	2300      	movs	r3, #0
 80141e6:	4604      	mov	r4, r0
 80141e8:	4608      	mov	r0, r1
 80141ea:	4611      	mov	r1, r2
 80141ec:	602b      	str	r3, [r5, #0]
 80141ee:	f7f2 ff6e 	bl	80070ce <_fstat>
 80141f2:	1c43      	adds	r3, r0, #1
 80141f4:	d102      	bne.n	80141fc <_fstat_r+0x1c>
 80141f6:	682b      	ldr	r3, [r5, #0]
 80141f8:	b103      	cbz	r3, 80141fc <_fstat_r+0x1c>
 80141fa:	6023      	str	r3, [r4, #0]
 80141fc:	bd38      	pop	{r3, r4, r5, pc}
 80141fe:	bf00      	nop
 8014200:	20002994 	.word	0x20002994

08014204 <_isatty_r>:
 8014204:	b538      	push	{r3, r4, r5, lr}
 8014206:	4d06      	ldr	r5, [pc, #24]	; (8014220 <_isatty_r+0x1c>)
 8014208:	2300      	movs	r3, #0
 801420a:	4604      	mov	r4, r0
 801420c:	4608      	mov	r0, r1
 801420e:	602b      	str	r3, [r5, #0]
 8014210:	f7f2 ff6d 	bl	80070ee <_isatty>
 8014214:	1c43      	adds	r3, r0, #1
 8014216:	d102      	bne.n	801421e <_isatty_r+0x1a>
 8014218:	682b      	ldr	r3, [r5, #0]
 801421a:	b103      	cbz	r3, 801421e <_isatty_r+0x1a>
 801421c:	6023      	str	r3, [r4, #0]
 801421e:	bd38      	pop	{r3, r4, r5, pc}
 8014220:	20002994 	.word	0x20002994

08014224 <_init>:
 8014224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014226:	bf00      	nop
 8014228:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801422a:	bc08      	pop	{r3}
 801422c:	469e      	mov	lr, r3
 801422e:	4770      	bx	lr

08014230 <_fini>:
 8014230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014232:	bf00      	nop
 8014234:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8014236:	bc08      	pop	{r3}
 8014238:	469e      	mov	lr, r3
 801423a:	4770      	bx	lr
